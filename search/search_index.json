{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DAOstack Arc.js DAOstack Arc.js sits just above DAOstack Arc on the DAOstack stack. It is a library that facilitates javascript application access to the DAOstack Arc ethereum smart contracts. For more information about Arc contracts and the entire DAOstack ecosystem, please refer to the Arc documentation . Installation Ensure that NodeJS , v9.4.0 or greater, is installed. Install the npm package into your project: 1 npm install @daostack/arc.js --save Now you can proceed with migrating contracts to a running testnet and configuring Arc.js in your application and environment. API Reference You can find a detailed reference for the entire Arc.js API here . Read on here for step-by-step examples on how to get started with Arc.js. Getting Started The following sections describe the basic steps for setting up Arc.js in your application. These steps basically involve: optionally running a blockchain node. We will use the Ganache testnet as an example. optionally migrating the Arc contracts to the testnet, necessary for Ganache but not for Kovan or MainNet. using the Arc.js code in your application We'll continue by assuming you want to run your application against Ganache. Set up Ganache with Arc Contracts Arc.js runs against an Ethereum network where it assumes that the Arc contracts have been migrated. Out of the box, Arc.js gives you the Arc contracts already-migrated to the MainNet and to Kovan, so your web application may use MetaMask to connect to these networks and Arc.js will automatically find the migrated contracts. For any other testnet, particularly Ganache, or to re-migrate for any reason, you will need to fire up your testnet and tell Arc.js to migrate the Arc contracts to it. Arc.js provides a migration script that you can run from the context of your own application. Please Review First Please review Running Arc.js Scripts before proceeding. To deploy contracts to a Ganache testnet, in a separate shell window start up Ganache: 1 npm explore @daostack/arc.js -- npm start Ganache And migrate the Arc contracts to Ganache: 1 npm explore @daostack/arc.js -- npm start migrateContracts Now when your app uses Arc.js, it will by default be running against Ganache and the Arc contracts you just migrated. Since Ganache is running, you don't need MetaMask, though you could point MetaMask to this Ganache instance if you wanted. Related Information Find related information at Migrations , Network Configuration and Running against a Ganache Db . Wrong Nonce? Arc.js always starts Ganache with the same network id and set of accounts, and with a fake GEN token. If you ever find MetaMask complaining about the nonce when generating a transaction, take the following steps: In the MetaMask home window, click the properties icon in the upper right. Select \"Settings\" in the dropdown menu Scroll to the bottom and select \"Reset Account\" Use the Arc.js Library in your Code Language Arc.js itself is written using Typescript. The Arc.js library includes Typescript type definitions defined in index.d.ts. The javascript included in the Arc.js library is ES6 in a commonjs module format. Your application may thus be written in any language that knows how to work with JavaScript coming from an NPM module in ES6 commonjs module format. Import Arc.js In your code, import everything from Arc.js as follows: 1 import * as ArcJs from @daostack/arc.js ; Or import specific bits like this: 1 import { WrapperService } from @daostack/arc.js ; Configure Arc.js You may optionally reconfigure certain default aspects of Arc.js functionality. For more information, refer to Configuring Arc.js . Initialize Arc.js To take advantage of the full functionality of Arc.js, your application must invoke InitializeArcJs once at runtime. 1 2 3 import { InitializeArcJs } from @daostack/arc.js ; await InitializeArcJs (); Options InitializeArcJs takes optional arguments allowing you to configure certain aspects of Arc.js, including optimized contract loading , network settings and Account Changes . Work with Arc Contracts Now that you've got Arc.js plugged into your application and contracts migrated to a running testnet, you are ready to start coding against DAOs and Arc contracts. You may start by creating or referencing one or more DAOs. Arc.js provides a class called DAO that facilitates creating and working with DAOs. For more information, refer to Working With DAOs . Once you have a DAO or set of DAOs, you can work with proposals, schemes and other entities such as events, global constraints and voting machines using the contract \"wrapper\" classes provided by Arc.js. For more information, refer to Arc Contract Wrappers . Work with Events A significant aspect of working with Arc contracts, and the Ethereum blockchain in general, involves working with the events that they emit. Arc.js provides plenty of support for working with events. For more information, refer to Working with Events . Logging Arc.js can emit console messages that can be helpful in understanding what is going on under the hood. There are various or-able \"LogLevels\". The default is to emit \"info\" and \"error\" information. For more information, see the LoggingService . Custom Loggers You can plugin custom loggers to send output elsewhere besides the javascript console. Service Classes Arc.js provides a variety of helpful \"service\" classes, including: Service Description AccountService for working with accounts, such as being notified when the default account changes (see Account Changes ) AvatarService handy functions for getting information about an avatar (DAO) ConfigService for working with Arc.js configuration settings. Read more here ControllerService handy functions for getting information about an avatar's controller. LoggingService for logging. See also the logLevel configuration setting ProposalService helper functions relating to proposals. Read more here PubSubEventService helper functions relating to PubSub Events. Read more here TransactionService helper functions relating to transactions. Read more here Utils miscellaneous helper function for working with Arc.js, Truffle contracts and Web3. Web3EventService helper functions relating to Web3 events. Read more here","title":"Overview"},{"location":"#daostack-arcjs","text":"DAOstack Arc.js sits just above DAOstack Arc on the DAOstack stack. It is a library that facilitates javascript application access to the DAOstack Arc ethereum smart contracts. For more information about Arc contracts and the entire DAOstack ecosystem, please refer to the Arc documentation .","title":"DAOstack Arc.js"},{"location":"#installation","text":"Ensure that NodeJS , v9.4.0 or greater, is installed. Install the npm package into your project: 1 npm install @daostack/arc.js --save Now you can proceed with migrating contracts to a running testnet and configuring Arc.js in your application and environment.","title":"Installation"},{"location":"#api-reference","text":"You can find a detailed reference for the entire Arc.js API here . Read on here for step-by-step examples on how to get started with Arc.js.","title":"API Reference"},{"location":"#getting-started","text":"The following sections describe the basic steps for setting up Arc.js in your application. These steps basically involve: optionally running a blockchain node. We will use the Ganache testnet as an example. optionally migrating the Arc contracts to the testnet, necessary for Ganache but not for Kovan or MainNet. using the Arc.js code in your application We'll continue by assuming you want to run your application against Ganache.","title":"Getting Started"},{"location":"#set-up-ganache-with-arc-contracts","text":"Arc.js runs against an Ethereum network where it assumes that the Arc contracts have been migrated. Out of the box, Arc.js gives you the Arc contracts already-migrated to the MainNet and to Kovan, so your web application may use MetaMask to connect to these networks and Arc.js will automatically find the migrated contracts. For any other testnet, particularly Ganache, or to re-migrate for any reason, you will need to fire up your testnet and tell Arc.js to migrate the Arc contracts to it. Arc.js provides a migration script that you can run from the context of your own application. Please Review First Please review Running Arc.js Scripts before proceeding. To deploy contracts to a Ganache testnet, in a separate shell window start up Ganache: 1 npm explore @daostack/arc.js -- npm start Ganache And migrate the Arc contracts to Ganache: 1 npm explore @daostack/arc.js -- npm start migrateContracts Now when your app uses Arc.js, it will by default be running against Ganache and the Arc contracts you just migrated. Since Ganache is running, you don't need MetaMask, though you could point MetaMask to this Ganache instance if you wanted. Related Information Find related information at Migrations , Network Configuration and Running against a Ganache Db . Wrong Nonce? Arc.js always starts Ganache with the same network id and set of accounts, and with a fake GEN token. If you ever find MetaMask complaining about the nonce when generating a transaction, take the following steps: In the MetaMask home window, click the properties icon in the upper right. Select \"Settings\" in the dropdown menu Scroll to the bottom and select \"Reset Account\"","title":"Set up Ganache with Arc Contracts"},{"location":"#use-the-arcjs-library-in-your-code","text":"","title":"Use the Arc.js Library in your Code"},{"location":"#language","text":"Arc.js itself is written using Typescript. The Arc.js library includes Typescript type definitions defined in index.d.ts. The javascript included in the Arc.js library is ES6 in a commonjs module format. Your application may thus be written in any language that knows how to work with JavaScript coming from an NPM module in ES6 commonjs module format.","title":"Language"},{"location":"#import-arcjs","text":"In your code, import everything from Arc.js as follows: 1 import * as ArcJs from @daostack/arc.js ; Or import specific bits like this: 1 import { WrapperService } from @daostack/arc.js ;","title":"Import Arc.js"},{"location":"#configure-arcjs","text":"You may optionally reconfigure certain default aspects of Arc.js functionality. For more information, refer to Configuring Arc.js .","title":"Configure Arc.js"},{"location":"#initialize-arcjs","text":"To take advantage of the full functionality of Arc.js, your application must invoke InitializeArcJs once at runtime. 1 2 3 import { InitializeArcJs } from @daostack/arc.js ; await InitializeArcJs (); Options InitializeArcJs takes optional arguments allowing you to configure certain aspects of Arc.js, including optimized contract loading , network settings and Account Changes .","title":"Initialize Arc.js"},{"location":"#work-with-arc-contracts","text":"Now that you've got Arc.js plugged into your application and contracts migrated to a running testnet, you are ready to start coding against DAOs and Arc contracts. You may start by creating or referencing one or more DAOs. Arc.js provides a class called DAO that facilitates creating and working with DAOs. For more information, refer to Working With DAOs . Once you have a DAO or set of DAOs, you can work with proposals, schemes and other entities such as events, global constraints and voting machines using the contract \"wrapper\" classes provided by Arc.js. For more information, refer to Arc Contract Wrappers .","title":"Work with Arc Contracts"},{"location":"#work-with-events","text":"A significant aspect of working with Arc contracts, and the Ethereum blockchain in general, involves working with the events that they emit. Arc.js provides plenty of support for working with events. For more information, refer to Working with Events .","title":"Work with Events"},{"location":"#logging","text":"Arc.js can emit console messages that can be helpful in understanding what is going on under the hood. There are various or-able \"LogLevels\". The default is to emit \"info\" and \"error\" information. For more information, see the LoggingService . Custom Loggers You can plugin custom loggers to send output elsewhere besides the javascript console.","title":"Logging"},{"location":"#service-classes","text":"Arc.js provides a variety of helpful \"service\" classes, including: Service Description AccountService for working with accounts, such as being notified when the default account changes (see Account Changes ) AvatarService handy functions for getting information about an avatar (DAO) ConfigService for working with Arc.js configuration settings. Read more here ControllerService handy functions for getting information about an avatar's controller. LoggingService for logging. See also the logLevel configuration setting ProposalService helper functions relating to proposals. Read more here PubSubEventService helper functions relating to PubSub Events. Read more here TransactionService helper functions relating to transactions. Read more here Utils miscellaneous helper function for working with Arc.js, Truffle contracts and Web3. Web3EventService helper functions relating to Web3 events. Read more here","title":"Service Classes"},{"location":"Configuration/","text":"Configuring Arc.js Behavior and Special Features You may configure Arc.js behavior and several special features using the ConfigService . Default configuration settings for Arc.js are contained in the config/default.json file. The following section describes available features, settings and their default values. Available Configuration Settings autoApproveTokenTransfers Automatically approve token transfers for operations that require the sender pay tokens to the scheme. Examples: VestingScheme.create , GenesisProtocol.stake , and ContributionReward.proposeContributionReward . Default is true. cacheContractWrappers true to cache contract wrappers obtained using the contract wrapper factory methods .at and .new . The cache is local, it does not persist across application instances. The default is false . defaultGasLimit The default gas limit used for most operations when \"estimateGas\" is false. defaultVotingMachine The voting machine used by default by Dao.new when creating new DAOs. Default is \"AbsoluteVote\". estimateGas Set this to true to have Arc.js estimate the gas cost of each transaction. See Estimating Gas Limits . foundersConfigurationLocation The location of a custom founders json configuration file, including the name of the file. The default points to founders.json located in arc.js/migrations which defines default founders for ganache. If the value is given as a relative path, then it must be relative to arc.js/dist/migrations. Refer here for more about how to define founders . logLevel The level of logging. Default is 9 ( LogLevel.error | LogLevel.info ). The available log levels, which may be combined, are: 1 2 3 4 5 6 none = 0 info = 1 warn = 2 debug = 4 error = 8 all = 15 gasPriceAdjustor Use this setting to supply Arc.js with the gas price for transactions. See Setting the Gas Price . globalGenTokenAddresses Specifies the address of the GEN token on each network. \"globalGenTokenAddresses.ganache\" for Ganache, \"globalGenTokenAddresses.default\" for all other networks. network Name of the blockchain network used during Arc contract migration. Other information like url and port come from Arc.js's truffle.js file. Default is \"ganache\". providerPort The port to use when connecting to the blockchain network at runtime. Default is 8545. providerUrl The url to use when connecting to the blockchain network at runtime. Default is \"127.0.0.1\". txDepthRequiredForConfirmation The default required depth, in terms of the number of blocks that have been added to the chain since a transaction has been mined, used by certain functions in TransactionService . For more information, see Transaction Depth . Obtain a Configuration Setting at Runtime 1 2 import { ConfigService } from @daostack/arc.js ; ConfigService . get ( network ); Override a Configuration Setting at Runtime 1 2 import { ConfigService } from @daostack/arc.js ; ConfigService . set ( network , kovan ); Override a Configuration using Environment Variables You can override the default configuration settings by setting values on properties of node.env (see here ) with the same name as the corresponding arc.js configuration setting, but with \"arcjs_\" prepended to the name . This enables you to use environment variables to control the arc.js configuration. Network Configuration In the context of a web application, if you are using MetaMask Arc.js will automatically detect which network it is running against because MetaMask will inject an appropriate instance of Web3 . In the case where your application is not using MetaMask, then Arc.js will instantiate Web3 itself. In this case Arc.js will need a url, including port number, to configure the provider for Web3 . It will construct this url from the providerUrl and providerPort configuration values described above. You can override the default url and port values in two ways: 1) tell InitializeArcJs to use the default values for a given network. Here is an example of telling Arc.js to use the default settings for Kovan: 1 2 3 4 5 import { InitializeArcJs } from @daostack/arc.js ; await InitializeArcJs ({ useNetworkDefaultsFor : Kovan }); 2) configure the url and port values directly before you call InitializeArcJs : 1 2 3 4 5 6 import { InitializeArcJs , ConfigService } from @daostack/arc.js ; ConfigService . set ( providerUrl , http://my.custom.node ); ConfigService . set ( providerPort , 8550 ); await InitializeArcJs (); Info For safety, by default Arc.js specifies a different HTTP port for each network. If you want to use the default network settings you need to make sure that the testnet your application is using is listening on the correct port. The default port values are: Network Port Ganache 8545 Kovan 8547 Ropsten 8548 Live (MainNet) 8546 Special Features You can enable several special features using the configuration settings, as described in the following sections. Optimized Contract Loading By default, InitializeArcJs will load all of the wrapped Arc contracts as deployed by the running version of Arc.js. This default behavior is perfectly fine for your application. But as a performance consideration you may consider this to be too time-consuming, so you may want to tell InitializeArcJs to only load the contracts that you expect to use. The following is enough to create a new DAO with no schemes: 1 2 3 4 5 6 await InitializeArcJs ({ filter : { AbsoluteVote : true , DaoCreator : true , } }); If you want to add schemes to your DAO, you would include each scheme in the filter: 1 2 3 4 5 6 7 await InitializeArcJs ({ filter : { AbsoluteVote : true , DaoCreator : true , SchemeRegistrar : true , } }); If you are not creating DAOs and only want to use some schemes, then reference the schemes as well as whichever voting machine(s) the schemes are using: 1 2 3 4 5 6 await InitializeArcJs ({ filter : { GenesisProtocol : true , ContributionReward : true , } }); Account Changes You can be notified whenever the current account changes by subscribing to a special PubSub event published by the AccountService . To take advantage of this feature, first tell InitializeArcJs you want the feature turned on: 1 2 3 4 5 import { InitializeArcJs } from @daostack/arc.js ; await InitializeArcJs ({ watchForAccountChanges : true }); Then subscribe to the Pub/Sub event, providing a callback: 1 2 3 import { AccountService } from @daostack/arc.js ; AccountService . subscribeToAccountChanges (( account : Address ) = { ... }); For more information, see AccountService . Estimating Gas Limits Arc.js can automatically estimate the gas cost of any transaction executed using the contract wrappers. The estimate is supplied to Web3 and will appear in a client like MetaMask, giving the user a more accurate sense of how much the transaction is going to cost when they are deciding whether to approve the transaction, and putting fewer of the user's funds at risk in case of an error. The estimate depends on the network node. The minimum value is always 21000, the maximum value is the current block gas limit minus 100000. For Ganache, the feature always sets the gas limit to the maximum value. This feature is disabled by default. You can enable it at any time with the following line: 1 ConfigService . set ( estimateGas , true ); And you may similarly disable it at any time. Setting the Gas Price Arc.js enables you to set the gas price on transactions. At any time, set the value of this gasPriceAdjustor to a function with the signature GasPriceAdjustor . This function takes as an argument a value for price that is computed as the median gas price across the x latest blocks, where x is determined by the node you are using. This feature is disabled by default.","title":"Configuration and Special Features"},{"location":"Configuration/#configuring-arcjs-behavior-and-special-features","text":"You may configure Arc.js behavior and several special features using the ConfigService . Default configuration settings for Arc.js are contained in the config/default.json file. The following section describes available features, settings and their default values.","title":"Configuring Arc.js Behavior and Special Features"},{"location":"Configuration/#available-configuration-settings","text":"autoApproveTokenTransfers Automatically approve token transfers for operations that require the sender pay tokens to the scheme. Examples: VestingScheme.create , GenesisProtocol.stake , and ContributionReward.proposeContributionReward . Default is true. cacheContractWrappers true to cache contract wrappers obtained using the contract wrapper factory methods .at and .new . The cache is local, it does not persist across application instances. The default is false . defaultGasLimit The default gas limit used for most operations when \"estimateGas\" is false. defaultVotingMachine The voting machine used by default by Dao.new when creating new DAOs. Default is \"AbsoluteVote\". estimateGas Set this to true to have Arc.js estimate the gas cost of each transaction. See Estimating Gas Limits . foundersConfigurationLocation The location of a custom founders json configuration file, including the name of the file. The default points to founders.json located in arc.js/migrations which defines default founders for ganache. If the value is given as a relative path, then it must be relative to arc.js/dist/migrations. Refer here for more about how to define founders . logLevel The level of logging. Default is 9 ( LogLevel.error | LogLevel.info ). The available log levels, which may be combined, are: 1 2 3 4 5 6 none = 0 info = 1 warn = 2 debug = 4 error = 8 all = 15 gasPriceAdjustor Use this setting to supply Arc.js with the gas price for transactions. See Setting the Gas Price . globalGenTokenAddresses Specifies the address of the GEN token on each network. \"globalGenTokenAddresses.ganache\" for Ganache, \"globalGenTokenAddresses.default\" for all other networks. network Name of the blockchain network used during Arc contract migration. Other information like url and port come from Arc.js's truffle.js file. Default is \"ganache\". providerPort The port to use when connecting to the blockchain network at runtime. Default is 8545. providerUrl The url to use when connecting to the blockchain network at runtime. Default is \"127.0.0.1\". txDepthRequiredForConfirmation The default required depth, in terms of the number of blocks that have been added to the chain since a transaction has been mined, used by certain functions in TransactionService . For more information, see Transaction Depth .","title":"Available Configuration Settings"},{"location":"Configuration/#obtain-a-configuration-setting-at-runtime","text":"1 2 import { ConfigService } from @daostack/arc.js ; ConfigService . get ( network );","title":"Obtain a Configuration Setting at Runtime"},{"location":"Configuration/#override-a-configuration-setting-at-runtime","text":"1 2 import { ConfigService } from @daostack/arc.js ; ConfigService . set ( network , kovan );","title":"Override a Configuration Setting at Runtime"},{"location":"Configuration/#override-a-configuration-using-environment-variables","text":"You can override the default configuration settings by setting values on properties of node.env (see here ) with the same name as the corresponding arc.js configuration setting, but with \"arcjs_\" prepended to the name . This enables you to use environment variables to control the arc.js configuration.","title":"Override a Configuration using Environment Variables"},{"location":"Configuration/#network-configuration","text":"In the context of a web application, if you are using MetaMask Arc.js will automatically detect which network it is running against because MetaMask will inject an appropriate instance of Web3 . In the case where your application is not using MetaMask, then Arc.js will instantiate Web3 itself. In this case Arc.js will need a url, including port number, to configure the provider for Web3 . It will construct this url from the providerUrl and providerPort configuration values described above. You can override the default url and port values in two ways: 1) tell InitializeArcJs to use the default values for a given network. Here is an example of telling Arc.js to use the default settings for Kovan: 1 2 3 4 5 import { InitializeArcJs } from @daostack/arc.js ; await InitializeArcJs ({ useNetworkDefaultsFor : Kovan }); 2) configure the url and port values directly before you call InitializeArcJs : 1 2 3 4 5 6 import { InitializeArcJs , ConfigService } from @daostack/arc.js ; ConfigService . set ( providerUrl , http://my.custom.node ); ConfigService . set ( providerPort , 8550 ); await InitializeArcJs (); Info For safety, by default Arc.js specifies a different HTTP port for each network. If you want to use the default network settings you need to make sure that the testnet your application is using is listening on the correct port. The default port values are: Network Port Ganache 8545 Kovan 8547 Ropsten 8548 Live (MainNet) 8546","title":"Network Configuration"},{"location":"Configuration/#special-features","text":"You can enable several special features using the configuration settings, as described in the following sections.","title":"Special Features"},{"location":"Configuration/#optimized-contract-loading","text":"By default, InitializeArcJs will load all of the wrapped Arc contracts as deployed by the running version of Arc.js. This default behavior is perfectly fine for your application. But as a performance consideration you may consider this to be too time-consuming, so you may want to tell InitializeArcJs to only load the contracts that you expect to use. The following is enough to create a new DAO with no schemes: 1 2 3 4 5 6 await InitializeArcJs ({ filter : { AbsoluteVote : true , DaoCreator : true , } }); If you want to add schemes to your DAO, you would include each scheme in the filter: 1 2 3 4 5 6 7 await InitializeArcJs ({ filter : { AbsoluteVote : true , DaoCreator : true , SchemeRegistrar : true , } }); If you are not creating DAOs and only want to use some schemes, then reference the schemes as well as whichever voting machine(s) the schemes are using: 1 2 3 4 5 6 await InitializeArcJs ({ filter : { GenesisProtocol : true , ContributionReward : true , } });","title":"Optimized Contract Loading"},{"location":"Configuration/#account-changes","text":"You can be notified whenever the current account changes by subscribing to a special PubSub event published by the AccountService . To take advantage of this feature, first tell InitializeArcJs you want the feature turned on: 1 2 3 4 5 import { InitializeArcJs } from @daostack/arc.js ; await InitializeArcJs ({ watchForAccountChanges : true }); Then subscribe to the Pub/Sub event, providing a callback: 1 2 3 import { AccountService } from @daostack/arc.js ; AccountService . subscribeToAccountChanges (( account : Address ) = { ... }); For more information, see AccountService .","title":"Account Changes"},{"location":"Configuration/#estimating-gas-limits","text":"Arc.js can automatically estimate the gas cost of any transaction executed using the contract wrappers. The estimate is supplied to Web3 and will appear in a client like MetaMask, giving the user a more accurate sense of how much the transaction is going to cost when they are deciding whether to approve the transaction, and putting fewer of the user's funds at risk in case of an error. The estimate depends on the network node. The minimum value is always 21000, the maximum value is the current block gas limit minus 100000. For Ganache, the feature always sets the gas limit to the maximum value. This feature is disabled by default. You can enable it at any time with the following line: 1 ConfigService . set ( estimateGas , true ); And you may similarly disable it at any time.","title":"Estimating Gas Limits"},{"location":"Configuration/#setting-the-gas-price","text":"Arc.js enables you to set the gas price on transactions. At any time, set the value of this gasPriceAdjustor to a function with the signature GasPriceAdjustor . This function takes as an argument a value for price that is computed as the median gas price across the x latest blocks, where x is determined by the node you are using. This feature is disabled by default.","title":"Setting the Gas Price"},{"location":"Daos/","text":"Working with DAOs Arc.js provides a class called DAO that facilitates creating and working with DAOs. Read on for more information about DAOs in DAOstack and the DAO class. About DAOs Every DAO in DAOstack includes an avatar, a controller, a token, a reputation system, and zero or more schemes and global constraints. The avatar is a public-facing part of the DAO that handles the interaction of the DAO with the rest of the world, for example interacting with other DAOs or paying third party agents. A DAO is always referenced by the address of its avatar. The controller is a central internal hub for all of the components of the DAO. DAOstack documentation often refers to the various DAO components as \"organs\". A controller can be \"universal\" or not. If universal then a single instance can be used by multiple DAOs. If not universal, then each DAO gets its own instance. The API is the same for both types of controllers. Note Any contract or agent's address can be registered like a scheme with the controller and thus work directly with the controller. The token is used as currency in operations like staking in GenesisProtocol , vesting agreements in VestingScheme and rewards in ContributionReward . Typically two tokens are most in play: The global GEN token created by DAOstack, and a \"native\" token that is specific to every DAO. The GEN token is used by the default GenesisProtocol voting machine for staking. The reputation system provides a kind of currency of influence. Reputation conveys influence in the DAO commenserate with the rules of the DAO, such as when proposing, voting or staking, and via proposals approved to grant or remove an agent's reputation. Reputation can be minted and burned, but it cannot be transferred between agents. Every DAO gets its own instance of an Arc Reputation contract. Schemes are public-facing contracts that any agent may use when they want perform primary functions relating to a particular DAO. Some schemes are \"universal\" in the sense that a single instance can be reused by multiple DAOs. Some schemes have the ability to create proposals and thus require that a configured voting machine be specified in the scheme's parameters. Global constraints use parameterized constraint criteria to block actions attempted by a DAO's controller that would violate a given constraint. An example is TokenCapGC that limits the total supply of a given token to a certain maximum number. DAOs are extensible beyond the reusability of Arc contracts: You can provide your own implementation of the controller, token, and any global constraints, voting machines and schemes you want. More About DAOs For more information about DAOs, refer to Structure of a DAO . More About Schemes For more information about schemes, refer to Schemes . More About Proposals For more information about proposals, refer to Proposals . Creating a new DAO When creating a DAO you can configure its name, token, founders and schemes. For schemes you configure their parameters and controller permissions. You can call DAO.new to create a new DAO, passing it a configuration object . Almost everything in the configuration has a default. The following sections describe how to supply custom configurations. Info Under the hood, Dao.new uses the DaoCreatorWrapper class. Creating a new DAO with founders The simplest example of how to create a new DAO adds one or more founders and no schemes. You add the founders by including a \"founders\" array. This will automatically mint tokens and reputation to each founder: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , founders : [ { // the current user account address : accounts [ 0 ], reputation : web3 . toWei ( 1000 ), tokens : web3 . toWei ( 40 ) }, { address : founder1Address , reputation : web3 . toWei ( 1000 ), tokens : web3 . toWei ( 40 ) }, { address : founder2Address , reputation : web3 . toWei ( 1000 ), tokens : web3 . toWei ( 40 ) } ] }); And voil\u00e0, you have created a new DAO with three founders in the DAO stack on Ethereum. The returned object newDao is an instance of DAO . But though this DAO has founders with tokens and reputation who can thus make proposals and vote on them, there is still no way to create proposals and thus nothing on which to vote. On Founders It is not possible to add or remove founders. In fact, there is no retained sense of who they even were other than events that record their interactions with the DAO. They are simply addresses you supply when you create a DAO and to whom will immediately and optionally be minted tokens and reputation. By virtue of their reputation with the DAO, founders are the first \"participants\" in a DAO (also sometimes referred-to as \"members\" of a DAO). The set of participants in a DAO will change as agents gain and lose reputation with the DAO. Creating a new DAO with schemes You can create a new DAO with schemes that enable DAO participants to create proposals and vote by including a \"schemes\" array in the DAO.new JSON. The following example registers three schemes with all default parameters, permissions and voting machines. 1 2 3 4 5 6 7 8 9 10 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { name : SchemeRegistrar }, { name : UpgradeScheme }, { name : GlobalConstraintRegistrar } ] }); Note It doesn't matter whether or not the scheme contracts have wrappers in Arc.js. See also Creating a new DAO with a non-Arc scheme and Creating a new DAO with non-universal schemes Put the last two examples together and you have a DAO with founders and schemes and can start to realize the potential of a DAO in the DAOstack ecosystem. What if we want to configure how voting will proceed when someone submits a proposal? Creating a new DAO with non-universal schemes You can register to a new DAO Arc schemes that are not universal. The scheme may have a wrapper in Arc.js or not, if doesn't matter, but realize that, being non-universal, the contract will not have been deployed by Arc.js -- you will have to have deployed an instance of the contract yourself. To register a non-universal scheme, you should: include the Arc scheme contract name supply the address of the scheme For example, for the non-universal Arc scheme Auction4Reputation : 1 2 3 4 5 6 7 8 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { name : Auction4Reputation , address : theContractAddress }, ] }); Deploying the contract yourself If the non-universal contract has a wrapper factory in Arc.js, you can use the factory's .new method to deploy an instance of the contract. Otherwise you must use .new on the Truffle contract method that you can obtain from Arc.js Utils.requireContract . Creating a new DAO with non-Arc schemes You can register non-Arc schemes to a new DAO. To do this you should: omit the scheme contract name supply the address of the scheme if it is a universal scheme, supply the hash of the scheme parameters For example, for a universal non-Arc scheme: 1 2 3 4 5 6 7 8 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { address : theContractAddress , parametersHash : paramsHash }, ] }); What defines a universal scheme? A scheme contract is judged to be universal if it supports the method updateParameters . Hashing the parameters You should hash your scheme parameters however the non-Arc scheme does. Arc schemes use keccak256 . If the non-Arc scheme uses the same method, you can use Utils.keccak256 . You should sequence the given types and values in the same order that they would appear when hashed by the universal non-Arc contract itself. Creating a new DAO with a non-Universal Controller As mentioned above, there are two types of DAO controller: universal and non-universal. The default is universal. You can create a DAO using the DAOstack Controller contract by passing false for universalController : 1 2 3 4 5 6 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , universalController : false }); Info For more information about choosing between universal and non-universal controllers, see this article . Creating a new DAO overriding the default voting machine By default, DAO.new configures each scheme with the AbsoluteVote voting machine and default voting parameter values. The following example retains the default voting machine while overriding its parameters: 1 2 3 4 5 6 7 8 9 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , votingMachineParams : { votePerc : 45 , ownerVote : false } }); Here we supply an alternate voting machine address, supplying it AbsoluteVote parameters: 1 2 3 4 5 6 7 8 9 10 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , votingMachineParams : { votePerc : 45 , ownerVote : false votingMachineAddress : anAddress } }); Here we supply a different default voting machine ( GenesisProtocol ), with default voting parameters: 1 2 3 4 5 6 7 8 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , votingMachineParams : { votingMachineName : GenesisProtocol } }); Here we override the default voting machine parameters on just one of the schemes: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { name : SchemeRegistrar }, { name : UpgradeScheme }, { name : GlobalConstraintRegistrar , votingMachineParams : { votePerc : 30 , } } ] }); Tip If you want change the default voting machine for all calls to DAO.new you can do it using the ConfigService setting defaultVotingMachine . See Arc.js Configuration Settings . Creating a new DAO using a custom DaoCreator scheme Arc supplies a contract for creating DAOs called DaoCreator . But you don't have to rely on DAOCreator if you prefer different functionality -- you can supply your own DAO creator scheme by passing its address in daoCreatorScheme : 1 2 3 4 5 6 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , daoCreatorScheme : anAddress }); Note Your DAO creator contract must, at least as a subset of its functionality, implement the same ABI as the Arc DaoCreator contract shipped with the running version of Arc.js. Get a previously-created DAO Use DAO.at to get a previously-created DAO using the avatar address: 1 const dao = await DAO . at ( daoAvatarAddress ); Info DAO.at will throw an exception if there is any problem loading the DAO. See Get information about a DAO Get all the DAOs You can obtain all of the DAOs that have been created by the DaoCreator that was deployed by the currently-running version of Arc.js: 1 const avatarAddresses = await DAO . getDaos (); Or all of the DAOs created by a specific DaoCreator: 1 const avatarAddresses = await DAO . getDaos ({ daoCreatorAddress : anAddress }); You can also watch as DAOs are, or have been, created using the EventFetcherFactory mechanism: 1 2 3 4 5 6 7 8 9 const daoEventFetcherFactory = await DAO . getDaoCreationEvents (); const watcher = await daoEventFetcherFactory ({}, { fromBlock : 0 }). watch ( async ( error : Error , addressPromise : Promise Address ) : void = { if ( ! error ) { const address = await addressPromise ; const dao = await DAO . at ( address ); } } ); Note Like with DAO.getDaos you can supply a daoCreatorAddress in the options of getDaoCreationEvents . Get information about a DAO Once you have an instance of DAO you can obtain lots of information about it. First, you will find it has several helpful member variables: Name Description name string name of the DAO avatar Truffle contract of the DAO's avatar controller Truffle contract of the DAO's controller hasUController boolean true if the DAO's controller is universal token DaoTokenWrapper of the DAO's native token reputation ReputationWrapper of the DAO's reputation contract Further, there are a number of other informational methods, all described in the following sections. Get all the schemes registered to the DAO You can obtain the addresses of all of the schemes that are registered with a DAO using DAO.getSchemes . You will also get a contract wrapper if the scheme happens to be the one deployed by the running version of Arc.js: 1 2 3 4 5 6 7 const daoSchemeInfos = await myDao . getSchemes (); for ( let schemeInfo of daoSchemeInfos ) { console . log ( `scheme address: ${ schemeInfo . address } ` ); if ( schemeInfo . wrapper ) { console . log ( `scheme name: ${ schemeInfo . wrapper . name } ` ); } } Or info about a single scheme: 1 2 3 4 5 6 const daoSchemeInfos = = await myDao . getSchemes ( UpgradeScheme ); const upgradeSchemeInfo = daoSchemeInfos [ 0 ]; console . log ( `scheme address: ${ upgradeSchemeInfo . address } ` ); if ( upgradeSchemeInfo . wrapper ) { console . log ( `scheme name: ${ upgradeSchemeInfo . wrapper . name } ` ); } Check whether a given scheme is registered to the DAO You can check whether a given scheme is registered to the DAO: 1 const isRegistered = await myDao . isSchemeRegistered ( schemeAddress ); Get all the participants in a DAO A DAO participant (often also referred-to as a \"member\") is any agent with reputation with the DAO. You can obtain the address and reputation of all of the participants in a DAO using DAO.getParticipants like this: 1 2 3 4 5 6 7 8 const daoParticipants = await myDao . getParticipants ({ returnReputations : true }); for ( let participant of daoParticipants ) { console . log ( `address: ${ participant . address } ` ); console . log ( ` reputation: ${ web3 . fromWei ( participant . reputation ) } ` ); } Or for a single participant: 1 2 3 4 5 6 7 8 const daoParticipants = await myDao . getParticipants ({ returnReputations : true , participantAddress : anAddress }); const participant = daoParticipants [ 0 ]; console . log ( `address: ${ participant . address } ` ); console . log ( ` reputation: ${ web3 . fromWei ( participant . reputation ) } ` ); Get all the globalConstraints in a DAO You can obtain information about all of the global constraints registered with a DAO, using DAO.getGlobalConstraints like this: 1 2 3 4 5 6 7 const constraints = await myDao . getGlobalConstraints (); for ( let constraint of constraints ) { console . log ( `address: ${ constraint . address } ` ); console . log ( ` paramsHash: ${ constraint . paramsHash } ` ); console . log ( ` wrapper: ${ constraint . wrapper } ` ); } Or for a single constraint that is wrapped by the running version of Arc.js, by passing the contract name of the constraint: 1 2 3 4 5 6 const constraints = await myDao . getGlobalConstraints ( contractName ); const constraint = constraints [ 0 ]; console . log ( `address: ${ constraint . address } ` ); console . log ( ` paramsHash: ${ constraint . paramsHash } ` ); console . log ( ` wrapper: ${ constraint . wrapper } ` ); Check whether a given global constraint is registered to the DAO You can check whether a given global constraint, given by its address, is registered to the DAO: 1 const isRegistered = await myDao . isGlobalConstraintRegistered ( gcAddress ); Get the native token balance of an account You can get the native token balance of an account: 1 const balance = web3 . fromWei (( await myDao . getTokenBalance ( agentAddress ))); Get the name of the DAO's native token A shortcut to myDao.token.getTokenName() , you can get the name of the DAO's native token: 1 const tokenName = await myDao . getTokenName (); Get the DAO's native token symbol A shortcut to myDao.token.getTokenSymbol() , you can get the symbol of the DAO's native token: 1 const tokenSymbol = await myDao . getTokenSymbol ();","title":"DAOs"},{"location":"Daos/#working-with-daos","text":"Arc.js provides a class called DAO that facilitates creating and working with DAOs. Read on for more information about DAOs in DAOstack and the DAO class.","title":"Working with DAOs"},{"location":"Daos/#about-daos","text":"Every DAO in DAOstack includes an avatar, a controller, a token, a reputation system, and zero or more schemes and global constraints. The avatar is a public-facing part of the DAO that handles the interaction of the DAO with the rest of the world, for example interacting with other DAOs or paying third party agents. A DAO is always referenced by the address of its avatar. The controller is a central internal hub for all of the components of the DAO. DAOstack documentation often refers to the various DAO components as \"organs\". A controller can be \"universal\" or not. If universal then a single instance can be used by multiple DAOs. If not universal, then each DAO gets its own instance. The API is the same for both types of controllers. Note Any contract or agent's address can be registered like a scheme with the controller and thus work directly with the controller. The token is used as currency in operations like staking in GenesisProtocol , vesting agreements in VestingScheme and rewards in ContributionReward . Typically two tokens are most in play: The global GEN token created by DAOstack, and a \"native\" token that is specific to every DAO. The GEN token is used by the default GenesisProtocol voting machine for staking. The reputation system provides a kind of currency of influence. Reputation conveys influence in the DAO commenserate with the rules of the DAO, such as when proposing, voting or staking, and via proposals approved to grant or remove an agent's reputation. Reputation can be minted and burned, but it cannot be transferred between agents. Every DAO gets its own instance of an Arc Reputation contract. Schemes are public-facing contracts that any agent may use when they want perform primary functions relating to a particular DAO. Some schemes are \"universal\" in the sense that a single instance can be reused by multiple DAOs. Some schemes have the ability to create proposals and thus require that a configured voting machine be specified in the scheme's parameters. Global constraints use parameterized constraint criteria to block actions attempted by a DAO's controller that would violate a given constraint. An example is TokenCapGC that limits the total supply of a given token to a certain maximum number. DAOs are extensible beyond the reusability of Arc contracts: You can provide your own implementation of the controller, token, and any global constraints, voting machines and schemes you want. More About DAOs For more information about DAOs, refer to Structure of a DAO . More About Schemes For more information about schemes, refer to Schemes . More About Proposals For more information about proposals, refer to Proposals .","title":"About DAOs"},{"location":"Daos/#creating-a-new-dao","text":"When creating a DAO you can configure its name, token, founders and schemes. For schemes you configure their parameters and controller permissions. You can call DAO.new to create a new DAO, passing it a configuration object . Almost everything in the configuration has a default. The following sections describe how to supply custom configurations. Info Under the hood, Dao.new uses the DaoCreatorWrapper class.","title":"Creating a new DAO"},{"location":"Daos/#creating-a-new-dao-with-founders","text":"The simplest example of how to create a new DAO adds one or more founders and no schemes. You add the founders by including a \"founders\" array. This will automatically mint tokens and reputation to each founder: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , founders : [ { // the current user account address : accounts [ 0 ], reputation : web3 . toWei ( 1000 ), tokens : web3 . toWei ( 40 ) }, { address : founder1Address , reputation : web3 . toWei ( 1000 ), tokens : web3 . toWei ( 40 ) }, { address : founder2Address , reputation : web3 . toWei ( 1000 ), tokens : web3 . toWei ( 40 ) } ] }); And voil\u00e0, you have created a new DAO with three founders in the DAO stack on Ethereum. The returned object newDao is an instance of DAO . But though this DAO has founders with tokens and reputation who can thus make proposals and vote on them, there is still no way to create proposals and thus nothing on which to vote. On Founders It is not possible to add or remove founders. In fact, there is no retained sense of who they even were other than events that record their interactions with the DAO. They are simply addresses you supply when you create a DAO and to whom will immediately and optionally be minted tokens and reputation. By virtue of their reputation with the DAO, founders are the first \"participants\" in a DAO (also sometimes referred-to as \"members\" of a DAO). The set of participants in a DAO will change as agents gain and lose reputation with the DAO.","title":"Creating a new DAO with founders"},{"location":"Daos/#creating-a-new-dao-with-schemes","text":"You can create a new DAO with schemes that enable DAO participants to create proposals and vote by including a \"schemes\" array in the DAO.new JSON. The following example registers three schemes with all default parameters, permissions and voting machines. 1 2 3 4 5 6 7 8 9 10 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { name : SchemeRegistrar }, { name : UpgradeScheme }, { name : GlobalConstraintRegistrar } ] }); Note It doesn't matter whether or not the scheme contracts have wrappers in Arc.js. See also Creating a new DAO with a non-Arc scheme and Creating a new DAO with non-universal schemes Put the last two examples together and you have a DAO with founders and schemes and can start to realize the potential of a DAO in the DAOstack ecosystem. What if we want to configure how voting will proceed when someone submits a proposal?","title":"Creating a new DAO with schemes"},{"location":"Daos/#creating-a-new-dao-with-non-universal-schemes","text":"You can register to a new DAO Arc schemes that are not universal. The scheme may have a wrapper in Arc.js or not, if doesn't matter, but realize that, being non-universal, the contract will not have been deployed by Arc.js -- you will have to have deployed an instance of the contract yourself. To register a non-universal scheme, you should: include the Arc scheme contract name supply the address of the scheme For example, for the non-universal Arc scheme Auction4Reputation : 1 2 3 4 5 6 7 8 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { name : Auction4Reputation , address : theContractAddress }, ] }); Deploying the contract yourself If the non-universal contract has a wrapper factory in Arc.js, you can use the factory's .new method to deploy an instance of the contract. Otherwise you must use .new on the Truffle contract method that you can obtain from Arc.js Utils.requireContract .","title":"Creating a new DAO with non-universal schemes"},{"location":"Daos/#creating-a-new-dao-with-non-arc-schemes","text":"You can register non-Arc schemes to a new DAO. To do this you should: omit the scheme contract name supply the address of the scheme if it is a universal scheme, supply the hash of the scheme parameters For example, for a universal non-Arc scheme: 1 2 3 4 5 6 7 8 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { address : theContractAddress , parametersHash : paramsHash }, ] }); What defines a universal scheme? A scheme contract is judged to be universal if it supports the method updateParameters . Hashing the parameters You should hash your scheme parameters however the non-Arc scheme does. Arc schemes use keccak256 . If the non-Arc scheme uses the same method, you can use Utils.keccak256 . You should sequence the given types and values in the same order that they would appear when hashed by the universal non-Arc contract itself.","title":"Creating a new DAO with non-Arc schemes"},{"location":"Daos/#creating-a-new-dao-with-a-non-universal-controller","text":"As mentioned above, there are two types of DAO controller: universal and non-universal. The default is universal. You can create a DAO using the DAOstack Controller contract by passing false for universalController : 1 2 3 4 5 6 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , universalController : false }); Info For more information about choosing between universal and non-universal controllers, see this article .","title":"Creating a new DAO with a non-Universal Controller"},{"location":"Daos/#creating-a-new-dao-overriding-the-default-voting-machine","text":"By default, DAO.new configures each scheme with the AbsoluteVote voting machine and default voting parameter values. The following example retains the default voting machine while overriding its parameters: 1 2 3 4 5 6 7 8 9 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , votingMachineParams : { votePerc : 45 , ownerVote : false } }); Here we supply an alternate voting machine address, supplying it AbsoluteVote parameters: 1 2 3 4 5 6 7 8 9 10 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , votingMachineParams : { votePerc : 45 , ownerVote : false votingMachineAddress : anAddress } }); Here we supply a different default voting machine ( GenesisProtocol ), with default voting parameters: 1 2 3 4 5 6 7 8 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , votingMachineParams : { votingMachineName : GenesisProtocol } }); Here we override the default voting machine parameters on just one of the schemes: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , schemes : [ { name : SchemeRegistrar }, { name : UpgradeScheme }, { name : GlobalConstraintRegistrar , votingMachineParams : { votePerc : 30 , } } ] }); Tip If you want change the default voting machine for all calls to DAO.new you can do it using the ConfigService setting defaultVotingMachine . See Arc.js Configuration Settings .","title":"Creating a new DAO overriding the default voting machine"},{"location":"Daos/#creating-a-new-dao-using-a-custom-daocreator-scheme","text":"Arc supplies a contract for creating DAOs called DaoCreator . But you don't have to rely on DAOCreator if you prefer different functionality -- you can supply your own DAO creator scheme by passing its address in daoCreatorScheme : 1 2 3 4 5 6 const newDao = await DAO . new ({ name : My New DAO , tokenName : My new Token , tokenSymbol : MNT , daoCreatorScheme : anAddress }); Note Your DAO creator contract must, at least as a subset of its functionality, implement the same ABI as the Arc DaoCreator contract shipped with the running version of Arc.js.","title":"Creating a new DAO using a custom DaoCreator scheme"},{"location":"Daos/#get-a-previously-created-dao","text":"Use DAO.at to get a previously-created DAO using the avatar address: 1 const dao = await DAO . at ( daoAvatarAddress ); Info DAO.at will throw an exception if there is any problem loading the DAO. See Get information about a DAO","title":"Get a previously-created DAO"},{"location":"Daos/#get-all-the-daos","text":"You can obtain all of the DAOs that have been created by the DaoCreator that was deployed by the currently-running version of Arc.js: 1 const avatarAddresses = await DAO . getDaos (); Or all of the DAOs created by a specific DaoCreator: 1 const avatarAddresses = await DAO . getDaos ({ daoCreatorAddress : anAddress }); You can also watch as DAOs are, or have been, created using the EventFetcherFactory mechanism: 1 2 3 4 5 6 7 8 9 const daoEventFetcherFactory = await DAO . getDaoCreationEvents (); const watcher = await daoEventFetcherFactory ({}, { fromBlock : 0 }). watch ( async ( error : Error , addressPromise : Promise Address ) : void = { if ( ! error ) { const address = await addressPromise ; const dao = await DAO . at ( address ); } } ); Note Like with DAO.getDaos you can supply a daoCreatorAddress in the options of getDaoCreationEvents .","title":"Get all the DAOs"},{"location":"Daos/#get-information-about-a-dao","text":"Once you have an instance of DAO you can obtain lots of information about it. First, you will find it has several helpful member variables: Name Description name string name of the DAO avatar Truffle contract of the DAO's avatar controller Truffle contract of the DAO's controller hasUController boolean true if the DAO's controller is universal token DaoTokenWrapper of the DAO's native token reputation ReputationWrapper of the DAO's reputation contract Further, there are a number of other informational methods, all described in the following sections.","title":"Get information about a DAO"},{"location":"Daos/#get-all-the-schemes-registered-to-the-dao","text":"You can obtain the addresses of all of the schemes that are registered with a DAO using DAO.getSchemes . You will also get a contract wrapper if the scheme happens to be the one deployed by the running version of Arc.js: 1 2 3 4 5 6 7 const daoSchemeInfos = await myDao . getSchemes (); for ( let schemeInfo of daoSchemeInfos ) { console . log ( `scheme address: ${ schemeInfo . address } ` ); if ( schemeInfo . wrapper ) { console . log ( `scheme name: ${ schemeInfo . wrapper . name } ` ); } } Or info about a single scheme: 1 2 3 4 5 6 const daoSchemeInfos = = await myDao . getSchemes ( UpgradeScheme ); const upgradeSchemeInfo = daoSchemeInfos [ 0 ]; console . log ( `scheme address: ${ upgradeSchemeInfo . address } ` ); if ( upgradeSchemeInfo . wrapper ) { console . log ( `scheme name: ${ upgradeSchemeInfo . wrapper . name } ` ); }","title":"Get all the schemes registered to the DAO"},{"location":"Daos/#check-whether-a-given-scheme-is-registered-to-the-dao","text":"You can check whether a given scheme is registered to the DAO: 1 const isRegistered = await myDao . isSchemeRegistered ( schemeAddress );","title":"Check whether a given scheme is registered to the DAO"},{"location":"Daos/#get-all-the-participants-in-a-dao","text":"A DAO participant (often also referred-to as a \"member\") is any agent with reputation with the DAO. You can obtain the address and reputation of all of the participants in a DAO using DAO.getParticipants like this: 1 2 3 4 5 6 7 8 const daoParticipants = await myDao . getParticipants ({ returnReputations : true }); for ( let participant of daoParticipants ) { console . log ( `address: ${ participant . address } ` ); console . log ( ` reputation: ${ web3 . fromWei ( participant . reputation ) } ` ); } Or for a single participant: 1 2 3 4 5 6 7 8 const daoParticipants = await myDao . getParticipants ({ returnReputations : true , participantAddress : anAddress }); const participant = daoParticipants [ 0 ]; console . log ( `address: ${ participant . address } ` ); console . log ( ` reputation: ${ web3 . fromWei ( participant . reputation ) } ` );","title":"Get all the participants in a DAO"},{"location":"Daos/#get-all-the-globalconstraints-in-a-dao","text":"You can obtain information about all of the global constraints registered with a DAO, using DAO.getGlobalConstraints like this: 1 2 3 4 5 6 7 const constraints = await myDao . getGlobalConstraints (); for ( let constraint of constraints ) { console . log ( `address: ${ constraint . address } ` ); console . log ( ` paramsHash: ${ constraint . paramsHash } ` ); console . log ( ` wrapper: ${ constraint . wrapper } ` ); } Or for a single constraint that is wrapped by the running version of Arc.js, by passing the contract name of the constraint: 1 2 3 4 5 6 const constraints = await myDao . getGlobalConstraints ( contractName ); const constraint = constraints [ 0 ]; console . log ( `address: ${ constraint . address } ` ); console . log ( ` paramsHash: ${ constraint . paramsHash } ` ); console . log ( ` wrapper: ${ constraint . wrapper } ` );","title":"Get all the globalConstraints in a DAO"},{"location":"Daos/#check-whether-a-given-global-constraint-is-registered-to-the-dao","text":"You can check whether a given global constraint, given by its address, is registered to the DAO: 1 const isRegistered = await myDao . isGlobalConstraintRegistered ( gcAddress );","title":"Check whether a given global constraint is registered to the DAO"},{"location":"Daos/#get-the-native-token-balance-of-an-account","text":"You can get the native token balance of an account: 1 const balance = web3 . fromWei (( await myDao . getTokenBalance ( agentAddress )));","title":"Get the native token balance of an account"},{"location":"Daos/#get-the-name-of-the-daos-native-token","text":"A shortcut to myDao.token.getTokenName() , you can get the name of the DAO's native token: 1 const tokenName = await myDao . getTokenName ();","title":"Get the name of the DAO's native token"},{"location":"Daos/#get-the-daos-native-token-symbol","text":"A shortcut to myDao.token.getTokenSymbol() , you can get the symbol of the DAO's native token: 1 const tokenSymbol = await myDao . getTokenSymbol ();","title":"Get the DAO's native token symbol"},{"location":"DeveloperDocs/","text":"Arc.js Architecture Review The following is a brief sketch of the primary structures of the code in Arc.js. Git repository is here . User documentation is here . Both code and automated tests are written in TypeScript. Code standards are enforced by TsLint rules defined in tslint.json . User documentation is generated using TypeDoc and MkDocs . Typedocs is configured and executed using typedoc.js . MkDocs is configured in mkdocs.yml . While some scripts are available in package.json, all are defined in package-scripts.js . Package-script.js leverages nps and defers to several custom javascript node scripts contained here . Code is located in the lib folder , tests under test . Most of the code modules define either an Arc contract wrapper class or a service class. Arc contract wrapper classes are all located under lib/wrappers . Service classes are all located in lib (though there is a ticket to move them ) More on wrappers and services follows. Arc Contract Wrappers Every Arc contract wrapper class has as its root base the ContractWrapperBase class . Each wrapper can be instantiated and hydrated using the ContractWrapperFactory class . The word \u201chydrated\u201d means to initialize a wrapper instance with information from the chain using .new , .at or .deployed . Not all wrapper classes inherit directly from ContractWrapperBase . The two voting machine classes inherit from IntVoteInterfaceWrapper which in turn inherits from ContractWrapperBase . Other classes utils.ts - provides miscellaneous functionality, including initializing web3 , creating a truffle contract from a truffle contract artifact (json) file, and others. utilsInternal.ts -- internal helper functions not exported to the client. Dao.ts -- not a wrapper, nor defined as a service, more like an entity, it provides helper functions for DAOs, particularly DAO.new and DAO.at . Arc.js initialization Arc.js typings are available to application via index.ts . At runtime, applications must initialize Arc.js by calling InitializeArcJs which is defined in index.ts . This might be viewed as the entry-point to Arc.js. Migrations A folder called \"migrations\" provides a structure that is expected by truffle contract when running migrations. It contains a single stage that does little but invoke other code generated from typescript at build time. Scripts Build Build the distributable code like this: 1 npm start build Build the test code like this: 1 npm start test.build Lint Run lint on both library and test code like this: 1 npm start lint Info The above script runs npm start lint.code and npm start lint.test To lint and fix: 1 npm start lint.andFix Info You can also fix code and test separately: npm start lint.code.andFix and npm start lint.test.andFix Tests To run the Arc.js tests, run the following script in the Arc.js root folder, assuming you have already run npm install , and are running a ganache with migrated Arc contracts (see \"Getting Started\" in the Arc.js Documentation ): 1 npm start test This script builds all of the code and runs all of the tests. Info Both application and test code are written in TypeScript. Stop tests on the first failure 1 npm start test.bail Run tests defined in a single test module Sometimes you want to run just a single test module: 1 npm start test.run test-build/test/[filename] To bail: 1 npm start test.run --bail test-build/test/[filename] Unlike test , the script test.run does not build the code first, it assumes the code has already been built, which you can do like this: 1 npm start test.build Build Documentation Build the documentation like this: 1 npm start docs.build Preview the documentation: 1 npm start docs.build.andPreview Publish the documentation: 1 npm start docs.build.andPublish","title":"Arc.js Architecture Review"},{"location":"DeveloperDocs/#arcjs-architecture-review","text":"The following is a brief sketch of the primary structures of the code in Arc.js. Git repository is here . User documentation is here . Both code and automated tests are written in TypeScript. Code standards are enforced by TsLint rules defined in tslint.json . User documentation is generated using TypeDoc and MkDocs . Typedocs is configured and executed using typedoc.js . MkDocs is configured in mkdocs.yml . While some scripts are available in package.json, all are defined in package-scripts.js . Package-script.js leverages nps and defers to several custom javascript node scripts contained here . Code is located in the lib folder , tests under test . Most of the code modules define either an Arc contract wrapper class or a service class. Arc contract wrapper classes are all located under lib/wrappers . Service classes are all located in lib (though there is a ticket to move them ) More on wrappers and services follows.","title":"Arc.js Architecture Review"},{"location":"DeveloperDocs/#arc-contract-wrappers","text":"Every Arc contract wrapper class has as its root base the ContractWrapperBase class . Each wrapper can be instantiated and hydrated using the ContractWrapperFactory class . The word \u201chydrated\u201d means to initialize a wrapper instance with information from the chain using .new , .at or .deployed . Not all wrapper classes inherit directly from ContractWrapperBase . The two voting machine classes inherit from IntVoteInterfaceWrapper which in turn inherits from ContractWrapperBase .","title":"Arc Contract Wrappers"},{"location":"DeveloperDocs/#other-classes","text":"utils.ts - provides miscellaneous functionality, including initializing web3 , creating a truffle contract from a truffle contract artifact (json) file, and others. utilsInternal.ts -- internal helper functions not exported to the client. Dao.ts -- not a wrapper, nor defined as a service, more like an entity, it provides helper functions for DAOs, particularly DAO.new and DAO.at .","title":"Other classes"},{"location":"DeveloperDocs/#arcjs-initialization","text":"Arc.js typings are available to application via index.ts . At runtime, applications must initialize Arc.js by calling InitializeArcJs which is defined in index.ts . This might be viewed as the entry-point to Arc.js.","title":"Arc.js initialization"},{"location":"DeveloperDocs/#migrations","text":"A folder called \"migrations\" provides a structure that is expected by truffle contract when running migrations. It contains a single stage that does little but invoke other code generated from typescript at build time.","title":"Migrations"},{"location":"DeveloperDocs/#scripts","text":"","title":"Scripts"},{"location":"DeveloperDocs/#build","text":"Build the distributable code like this: 1 npm start build Build the test code like this: 1 npm start test.build","title":"Build"},{"location":"DeveloperDocs/#lint","text":"Run lint on both library and test code like this: 1 npm start lint Info The above script runs npm start lint.code and npm start lint.test To lint and fix: 1 npm start lint.andFix Info You can also fix code and test separately: npm start lint.code.andFix and npm start lint.test.andFix","title":"Lint"},{"location":"DeveloperDocs/#tests","text":"To run the Arc.js tests, run the following script in the Arc.js root folder, assuming you have already run npm install , and are running a ganache with migrated Arc contracts (see \"Getting Started\" in the Arc.js Documentation ): 1 npm start test This script builds all of the code and runs all of the tests. Info Both application and test code are written in TypeScript.","title":"Tests"},{"location":"DeveloperDocs/#stop-tests-on-the-first-failure","text":"1 npm start test.bail","title":"Stop tests on the first failure"},{"location":"DeveloperDocs/#run-tests-defined-in-a-single-test-module","text":"Sometimes you want to run just a single test module: 1 npm start test.run test-build/test/[filename] To bail: 1 npm start test.run --bail test-build/test/[filename] Unlike test , the script test.run does not build the code first, it assumes the code has already been built, which you can do like this: 1 npm start test.build","title":"Run tests defined in a single test module"},{"location":"DeveloperDocs/#build-documentation","text":"Build the documentation like this: 1 npm start docs.build Preview the documentation: 1 npm start docs.build.andPreview Publish the documentation: 1 npm start docs.build.andPublish","title":"Build Documentation"},{"location":"Events/","text":"Working with Events Arc.js offers two types of event systems, Web3 and Pub/Sub : Web3 Events enable you to get and watch events as they originate from Web3 and Arc contracts. The Web3 events system also contains a hybrid of the two systems, enabling you to watch a Web3 event by subscribing to a Pub/Sub event . Pub/Sub Events enable you to subscribe to various events published by Arc.js itself (or even by your own application if you want). The following sections describe how you can use these two types of events. Web3 Events We refer to \"Web3 events\" as the events that originate from blockchain events (especially events from Arc contracts) and that are served up by Web3. (see the Web3 documentation on contract events ). Web3 events map directly to events emitted by contracts on the blockchain and thus allow you to filter by event parameters and ranges of block numbers. Arc.js exposes Web3 events in an format virtually the same as Web3 and Truffle, but with enhancements. In some cases Arc.js goes further by exposing Web3 event arguments as entities (objects) that are simpler to use and may provide more information and functionality than the original raw event. The following sections describe enhanced Web3 events, entity events, and how to subscribe to Web3 events as Pub/Sub events. Enhanced Web3 Events Every Arc contract wrapper in Arc.js exposes all of the events fired by the wrapped contract, events look just like those exposed by Web3 , so you can get, watch and filter these events in the same way you would using Web3 or Truffle. Arc.js enhances these events in several ways: If you are using TypeScript then the event data supplied to your callback will by typed, so you will see suggestions and errors in Intellisense and the TypeScript compiler. The callback to get is invoked once for the entire array of fired events, always returning an array. The callback to watch is invoked once for each value, always returning the event. The get method directly returns a promise of an array containing every event fetched, bypassing the need for a callback. Optionally you can use subscribe instead of watch to use the Pub/Sub event mechanism as an alternate means of watching events as they fire. See Pub/Sub Web3 Events . You need not worry about duplicate events, Arc.js eliminates them. (Duplicate events can occur while the chain is still in the process of reorganizing). This feature can be suppressed if desired when you create an EventFetcher (see EventFetcherFilterObject ). The enhanced event functionality is provided by Web3EventService.createEventFetcherFactory(...) which returns an EventFetcherFactory function which returns an EventFetcher which gives you the get , watch and subscribe methods. Here is an example of the above flow, resulting in calling get without a callback to get all ChangeUpgradeSchemeProposal events pertaining to a given DAO: 1 2 3 4 5 6 7 8 9 10 11 const web3EventService = new Web3EventService (); const eventFetcherFactory = web3EventService . createEventFetcherFactory ( upgradeContract . contract . ChangeUpgradeSchemeProposal ); const eventFetcher = eventFetcherFactory ( { _avatar : someAddress }, { fromBlock : 0 }); const events = await eventFetcher . get (); events . forEach (( event ) = { console . log ( `proposal id: ${ event . _proposalId } ` ); } ); All of Arc.js contract wrappers already provide an EventFetcherFactory method for each of the Arc events in the contract they wrap. So the code example given above is simplified: 1 2 3 4 5 6 const eventFetcher = upgradeScheme . ChangeUpgradeSchemeProposal ( { _avatar : someAddress }, { fromBlock : 0 }); const events = await eventFetcher . get (); events . forEach (( event ) = { console . log ( `proposal id: ${ event . _proposalId } ` ); } ); Entities for Web3 Events In some cases Arc.js exposes Web3 event arguments as entities (objects) that are cleaner to use and may provide more information and functionality than the original raw event. Web3 event entities can include any parts of the raw Web3 event information as well as additional relevant information and useful functions. Making extensive use of this feature, Proposal-related events return entities instead of the raw Web3 event data. That is really all you need to know about entities for Web3 events, so the following is optional reading in case you find yourself wanting to convert for yourself a regular enhanced Web3 event into an entity event. You can use Web3EventService to turn any EventFetcherFactory into an EntityFetcherFactory providing cleaner and potentially richer entities than what you get from Web3 and EventFetcherFactory . The EntityFetcherFactory creates an EntityFetcher which gives you the get , watch and subscribe methods. Here is how you can turn ChangeUpgradeSchemeProposal into an EntityFetcherFactory whose events give you the promise of an object (\"entity\") with a single avatarAddress property: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const entityFetcherFactory = web3EventService . createEntityFetcherFactory ( upgradeScheme . ChangeUpgradeSchemeProposal , ( event ) = { return Promise . resolve ({ avatarAddress : event . args . _avatar }); }); const eventFetcher = entityFetcherFactory ({}, { fromBlock : 0 }); eventFetcher . watch ( ( error , event ) = { if ( ! error ) { console . log ( `avatarAddress: ${ entity . avatarAddress } ` ); } ); Just like regular events, when you are done with fetching entity events you can stop watching: 1 eventFetcher . stopWatching (); Comparing Enhanced Web3 with Entity for Web3 Events Enhanced Web3 ( EventFetcherFactory ) and entity ( EntityFetcherFactory ) events each have relative pros and cons. Enhanced Web3 events give you all of the information that Web3 provides about an event. These events closely match what you may be accustomed-to if you have been working with Web3 and Truffle. Entity events only give you an entity, a javascript object providing information about the event, but the event entities can include additional relevant information and useful functions that you won't get from the enhanced Web3 events. Otherwise there is little difference between the two. They both enjoy the enhancments provided by Arc.js. Note If you prefer to use the unenhanced events supplied by Web3 via Truffle, you can access them via the contract handler property contract , which is the original Truffle contract . Pub/Sub Web3 Events Both EventFetcher and EntityFetcher provide a subscribe function, sibling to get and watch , that enables you specify the topic of a Pub/Sub event that will be published whenever the underlying Web3 event is fired. When you specify the topic for such a subscription you are effectively creating your own Pub/Sub event. This gives you wide flexibility in scoping your event handling across different Arc.js contract wrappers and events, including leveraging the hierarchical structure that you can build into your topic strings. Further, any number of your code components can use PubSubEventService.subscribe to subscribe to a single Pub/Sub Web3 event. You just need to have called EntityFetcher.subscribe once to initiate fetching of the Web3 event and subsequent publishing to the given Pub/Sub topic. Pub/Sub Events The PubSubEventService provides a Pub/Sub event system that enables you to subscribe to various events published by Arc.js (or even by your own application if you want). Uses of pub/sub events: Tracking transactions as they complete (see Transactions ). Being notified whenever the current account changes (see Account Changes ). Watching events in the Web3 event system using the subscribe function implemented by EventFetcher and EntityFetcher (see Pub/Sub Web3 Events ) Any other custom purpose for which you wish to apply the PubSubEventService in publishing and subscribing to events in the context of your own application When subscribing to a Pub/Sub event we specify the event to which we want to subscribe using a string called the event \"topic\". Event topics may be hierachically scoped by levels separated by periods ('.'). So for example: \"A.B.C\" subscribes to all \"A.B.C\" events \"A.B\" subscribes to all events prefixed by \"A.B\" \"A\" subscribes to all events prefixed by \"A\" You can subscribe to a Pub/Sub event using PubSubEventService , like this: 1 2 3 4 const subscription = PubSubEventService . subscribe ( aTopic , ( topic , payload ) = { console . log ( `received event ${ topic } ` with : $ { payload . someImportantProperty }); }) You can subscribe to multiple events at once by passing the topics in an array: 1 2 3 4 5 const subscription = PubSubEventService . subscribe ( [ aTopic 1 , aTopic 2 ], ( topic , payload ) = { console . log ( `received event ${ topic } ` with : $ { payload . someImportantProperty }); }) When you are done, be sure to unsubscribe to the event(s) or you risk memory leaks and excessive CPU usage: 1 subscription . unsubscribe (); Or unsubscribe by topic: 1 PubSubEventService . unsubscribe ( aTopic ); Or by the callback you passed in when you subscribed: 1 PubSubEventService . unsubscribe ( aCallback );","title":"Events"},{"location":"Events/#working-with-events","text":"Arc.js offers two types of event systems, Web3 and Pub/Sub : Web3 Events enable you to get and watch events as they originate from Web3 and Arc contracts. The Web3 events system also contains a hybrid of the two systems, enabling you to watch a Web3 event by subscribing to a Pub/Sub event . Pub/Sub Events enable you to subscribe to various events published by Arc.js itself (or even by your own application if you want). The following sections describe how you can use these two types of events.","title":"Working with Events"},{"location":"Events/#web3-events","text":"We refer to \"Web3 events\" as the events that originate from blockchain events (especially events from Arc contracts) and that are served up by Web3. (see the Web3 documentation on contract events ). Web3 events map directly to events emitted by contracts on the blockchain and thus allow you to filter by event parameters and ranges of block numbers. Arc.js exposes Web3 events in an format virtually the same as Web3 and Truffle, but with enhancements. In some cases Arc.js goes further by exposing Web3 event arguments as entities (objects) that are simpler to use and may provide more information and functionality than the original raw event. The following sections describe enhanced Web3 events, entity events, and how to subscribe to Web3 events as Pub/Sub events.","title":"Web3 Events"},{"location":"Events/#enhanced-web3-events","text":"Every Arc contract wrapper in Arc.js exposes all of the events fired by the wrapped contract, events look just like those exposed by Web3 , so you can get, watch and filter these events in the same way you would using Web3 or Truffle. Arc.js enhances these events in several ways: If you are using TypeScript then the event data supplied to your callback will by typed, so you will see suggestions and errors in Intellisense and the TypeScript compiler. The callback to get is invoked once for the entire array of fired events, always returning an array. The callback to watch is invoked once for each value, always returning the event. The get method directly returns a promise of an array containing every event fetched, bypassing the need for a callback. Optionally you can use subscribe instead of watch to use the Pub/Sub event mechanism as an alternate means of watching events as they fire. See Pub/Sub Web3 Events . You need not worry about duplicate events, Arc.js eliminates them. (Duplicate events can occur while the chain is still in the process of reorganizing). This feature can be suppressed if desired when you create an EventFetcher (see EventFetcherFilterObject ). The enhanced event functionality is provided by Web3EventService.createEventFetcherFactory(...) which returns an EventFetcherFactory function which returns an EventFetcher which gives you the get , watch and subscribe methods. Here is an example of the above flow, resulting in calling get without a callback to get all ChangeUpgradeSchemeProposal events pertaining to a given DAO: 1 2 3 4 5 6 7 8 9 10 11 const web3EventService = new Web3EventService (); const eventFetcherFactory = web3EventService . createEventFetcherFactory ( upgradeContract . contract . ChangeUpgradeSchemeProposal ); const eventFetcher = eventFetcherFactory ( { _avatar : someAddress }, { fromBlock : 0 }); const events = await eventFetcher . get (); events . forEach (( event ) = { console . log ( `proposal id: ${ event . _proposalId } ` ); } ); All of Arc.js contract wrappers already provide an EventFetcherFactory method for each of the Arc events in the contract they wrap. So the code example given above is simplified: 1 2 3 4 5 6 const eventFetcher = upgradeScheme . ChangeUpgradeSchemeProposal ( { _avatar : someAddress }, { fromBlock : 0 }); const events = await eventFetcher . get (); events . forEach (( event ) = { console . log ( `proposal id: ${ event . _proposalId } ` ); } );","title":"Enhanced Web3 Events"},{"location":"Events/#entities-for-web3-events","text":"In some cases Arc.js exposes Web3 event arguments as entities (objects) that are cleaner to use and may provide more information and functionality than the original raw event. Web3 event entities can include any parts of the raw Web3 event information as well as additional relevant information and useful functions. Making extensive use of this feature, Proposal-related events return entities instead of the raw Web3 event data. That is really all you need to know about entities for Web3 events, so the following is optional reading in case you find yourself wanting to convert for yourself a regular enhanced Web3 event into an entity event. You can use Web3EventService to turn any EventFetcherFactory into an EntityFetcherFactory providing cleaner and potentially richer entities than what you get from Web3 and EventFetcherFactory . The EntityFetcherFactory creates an EntityFetcher which gives you the get , watch and subscribe methods. Here is how you can turn ChangeUpgradeSchemeProposal into an EntityFetcherFactory whose events give you the promise of an object (\"entity\") with a single avatarAddress property: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const entityFetcherFactory = web3EventService . createEntityFetcherFactory ( upgradeScheme . ChangeUpgradeSchemeProposal , ( event ) = { return Promise . resolve ({ avatarAddress : event . args . _avatar }); }); const eventFetcher = entityFetcherFactory ({}, { fromBlock : 0 }); eventFetcher . watch ( ( error , event ) = { if ( ! error ) { console . log ( `avatarAddress: ${ entity . avatarAddress } ` ); } ); Just like regular events, when you are done with fetching entity events you can stop watching: 1 eventFetcher . stopWatching ();","title":"Entities for Web3 Events"},{"location":"Events/#comparing-enhanced-web3-with-entity-for-web3-events","text":"Enhanced Web3 ( EventFetcherFactory ) and entity ( EntityFetcherFactory ) events each have relative pros and cons. Enhanced Web3 events give you all of the information that Web3 provides about an event. These events closely match what you may be accustomed-to if you have been working with Web3 and Truffle. Entity events only give you an entity, a javascript object providing information about the event, but the event entities can include additional relevant information and useful functions that you won't get from the enhanced Web3 events. Otherwise there is little difference between the two. They both enjoy the enhancments provided by Arc.js. Note If you prefer to use the unenhanced events supplied by Web3 via Truffle, you can access them via the contract handler property contract , which is the original Truffle contract .","title":"Comparing Enhanced Web3 with Entity for Web3 Events"},{"location":"Events/#pubsub-web3-events","text":"Both EventFetcher and EntityFetcher provide a subscribe function, sibling to get and watch , that enables you specify the topic of a Pub/Sub event that will be published whenever the underlying Web3 event is fired. When you specify the topic for such a subscription you are effectively creating your own Pub/Sub event. This gives you wide flexibility in scoping your event handling across different Arc.js contract wrappers and events, including leveraging the hierarchical structure that you can build into your topic strings. Further, any number of your code components can use PubSubEventService.subscribe to subscribe to a single Pub/Sub Web3 event. You just need to have called EntityFetcher.subscribe once to initiate fetching of the Web3 event and subsequent publishing to the given Pub/Sub topic.","title":"Pub/Sub Web3 Events"},{"location":"Events/#pubsub-events","text":"The PubSubEventService provides a Pub/Sub event system that enables you to subscribe to various events published by Arc.js (or even by your own application if you want). Uses of pub/sub events: Tracking transactions as they complete (see Transactions ). Being notified whenever the current account changes (see Account Changes ). Watching events in the Web3 event system using the subscribe function implemented by EventFetcher and EntityFetcher (see Pub/Sub Web3 Events ) Any other custom purpose for which you wish to apply the PubSubEventService in publishing and subscribing to events in the context of your own application When subscribing to a Pub/Sub event we specify the event to which we want to subscribe using a string called the event \"topic\". Event topics may be hierachically scoped by levels separated by periods ('.'). So for example: \"A.B.C\" subscribes to all \"A.B.C\" events \"A.B\" subscribes to all events prefixed by \"A.B\" \"A\" subscribes to all events prefixed by \"A\" You can subscribe to a Pub/Sub event using PubSubEventService , like this: 1 2 3 4 const subscription = PubSubEventService . subscribe ( aTopic , ( topic , payload ) = { console . log ( `received event ${ topic } ` with : $ { payload . someImportantProperty }); }) You can subscribe to multiple events at once by passing the topics in an array: 1 2 3 4 5 const subscription = PubSubEventService . subscribe ( [ aTopic 1 , aTopic 2 ], ( topic , payload ) = { console . log ( `received event ${ topic } ` with : $ { payload . someImportantProperty }); }) When you are done, be sure to unsubscribe to the event(s) or you risk memory leaks and excessive CPU usage: 1 subscription . unsubscribe (); Or unsubscribe by topic: 1 PubSubEventService . unsubscribe ( aTopic ); Or by the callback you passed in when you subscribed: 1 PubSubEventService . unsubscribe ( aCallback );","title":"Pub/Sub Events"},{"location":"GanacheDb/","text":"Running Arc.js Against a Ganache database It can be very handy to run Arc.js tests or your application against a Ganache database that is a snapshot of the chain at any given point. Here's how, assuming you are running the script from your application (which is why you see \" npm explore @daostack/arc.js -- \" prepended to each script command). Note These instructions are very similar to those you would use when not running Ganache against a database . Start Ganache First you want to run Ganache with the appropriate flags that will create a database. 1 npm explore @daostack/arc.js -- npm start ganacheDb You can use this same command when you a restarting Ganache against a pre-populated database. Migrate Contracts Now migrate the Arc contracts. You only absolutely need to do this when you are starting from scratch with a new database, but you can do it whenever you wish. 1 npm explore @daostack/arc.js -- npm start ganacheDb.migrateContracts Terminate Ganache To save the current state so that you can restore it later in cases where the database has become no longer useful, manually, in your own OS, terminate the Ganache process you spawned above. Zip the Ganache Database If you want you can zip the database for later reuse when you wish to restore a database to the zipped snapshot. 1 npm explore @daostack/arc.js -- npm start ganacheDb.zip At this point you can restart Ganache as above and it will recommence from the point represented in the zipped snapshot. Restore Ganache Snapshot After running against the database you may want to restart Ganache, recommencing at the point at which you zipped up a snapshot . First make sure you have terminated Ganache , then unzip the database: 1 npm explore @daostack/arc.js -- npm start ganacheDb.restoreFromZip Now when you restart ganacheDb it will be running against the previously-zipped snapshot. Start Clean To start again fully from scratch, an empty database, you can clean out the pre-existing database. Note this can take a long time as there may be thousands of files to delete: 1 npm explore @daostack/arc.js -- npm start ganacheDb.clean","title":"Using GanacheDb"},{"location":"GanacheDb/#running-arcjs-against-a-ganache-database","text":"It can be very handy to run Arc.js tests or your application against a Ganache database that is a snapshot of the chain at any given point. Here's how, assuming you are running the script from your application (which is why you see \" npm explore @daostack/arc.js -- \" prepended to each script command). Note These instructions are very similar to those you would use when not running Ganache against a database .","title":"Running Arc.js Against a Ganache database"},{"location":"GanacheDb/#start-ganache","text":"First you want to run Ganache with the appropriate flags that will create a database. 1 npm explore @daostack/arc.js -- npm start ganacheDb You can use this same command when you a restarting Ganache against a pre-populated database.","title":"Start Ganache"},{"location":"GanacheDb/#migrate-contracts","text":"Now migrate the Arc contracts. You only absolutely need to do this when you are starting from scratch with a new database, but you can do it whenever you wish. 1 npm explore @daostack/arc.js -- npm start ganacheDb.migrateContracts","title":"Migrate Contracts"},{"location":"GanacheDb/#terminate-ganache","text":"To save the current state so that you can restore it later in cases where the database has become no longer useful, manually, in your own OS, terminate the Ganache process you spawned above.","title":"Terminate Ganache"},{"location":"GanacheDb/#zip-the-ganache-database","text":"If you want you can zip the database for later reuse when you wish to restore a database to the zipped snapshot. 1 npm explore @daostack/arc.js -- npm start ganacheDb.zip At this point you can restart Ganache as above and it will recommence from the point represented in the zipped snapshot.","title":"Zip the Ganache Database"},{"location":"GanacheDb/#restore-ganache-snapshot","text":"After running against the database you may want to restart Ganache, recommencing at the point at which you zipped up a snapshot . First make sure you have terminated Ganache , then unzip the database: 1 npm explore @daostack/arc.js -- npm start ganacheDb.restoreFromZip Now when you restart ganacheDb it will be running against the previously-zipped snapshot.","title":"Restore Ganache Snapshot"},{"location":"GanacheDb/#start-clean","text":"To start again fully from scratch, an empty database, you can clean out the pre-existing database. Note this can take a long time as there may be thousands of files to delete: 1 npm explore @daostack/arc.js -- npm start ganacheDb.clean","title":"Start Clean"},{"location":"Migration/","text":"Migrations Arc.js ships with contracts already migrated to Kovan and MainNet. But you may wish to deploy contracts to a specified network, particularly Ganache. Migrating to Ganache is simple, described here . Migrating to other networks involves a little more effort, as follows. Set the environment variable arcjs_network to the name of the network (\"ganache\", \"kovan\", \"ropsten\", \"live\"). The default is \"ganache\". Truffle will use this setting to find the specified settings in truffle.js in the Arc.js package. If you are deploying to ganache, skip this step, otherwise: Set the environment variable arcjs_providerConfig to contain the path to a JSON file that contains specifications for how to connect to a node. The contents of the file should look like this: 1 2 3 4 5 { name : name of the network, like \\ ganache\\ , \\ kovan\\ , \\ live\\ , mnemonic : a 12-word BIP39-compliant account mnemonic , providerUrl : examples: http://127.0.0.1:8545 or https://[network].infura.io/[token] } An account generated from the mnemonic will be unlocked for signing and accepting the transactions that are generated during the migration. Note Migrating to Ropsten is not currently supported. Warning The mnemonic won't work unless it confirms to BIP39 . You can generate examples of conformant mnemonics here . Provide a list of Genesis DAO founders as described in configuring founders . If deploying to ganache, then run npm start ganache , or from your application: npm explore @daostack/arc.js -- npm start ganache . Otherwise, make sure your node is all sync'd-up and listening at the providerUrl you supplied in step 2. run npm start migrateContracts , or from your application: npm explore @daostack/arc.js -- npm start migrateContracts . Optional: If you want to create the Genesis DAO then run npm start createGenesisDao , or from your application: npm explore @daostack/arc.js -- npm start createGenesisDao . Tip If you want to migrate contracts and create the Genesis DAO all in a single script, you can run the script migrateContracts.createGenesisDao . Configuring Founders When migrating to any network besides ganache you will need to supply a list of founders for the Genesis DAO that is created by the Arc.js migration script. You must define an environment variable named arcjs_foundersConfigurationLocation that contains the path to a JSON file containing specifications for your founders. This JSON file defines a list of founders for one or more networks in a format that looks like the following (but with real addresses): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 { founders : { ropsten : [ { address : 0x1000000000000000000000000000000000000000 , tokens : 1000 , reputation : 1000 } ], kovan : [ { address : 0x1000000000000000000000000000000000000000 , tokens : 1000 , reputation : 1000 }, { address : 0x1000000000000000000000000000000000000000 , tokens : 1000 , reputation : 1000 } ] } } Info Do not supply values in Wei. The tokens amounts are for the DAO's native token, the reputation are in units of the DAO's reputation system. The script will automatically convert the values to Wei.","title":"Contract Migration"},{"location":"Migration/#migrations","text":"Arc.js ships with contracts already migrated to Kovan and MainNet. But you may wish to deploy contracts to a specified network, particularly Ganache. Migrating to Ganache is simple, described here . Migrating to other networks involves a little more effort, as follows. Set the environment variable arcjs_network to the name of the network (\"ganache\", \"kovan\", \"ropsten\", \"live\"). The default is \"ganache\". Truffle will use this setting to find the specified settings in truffle.js in the Arc.js package. If you are deploying to ganache, skip this step, otherwise: Set the environment variable arcjs_providerConfig to contain the path to a JSON file that contains specifications for how to connect to a node. The contents of the file should look like this: 1 2 3 4 5 { name : name of the network, like \\ ganache\\ , \\ kovan\\ , \\ live\\ , mnemonic : a 12-word BIP39-compliant account mnemonic , providerUrl : examples: http://127.0.0.1:8545 or https://[network].infura.io/[token] } An account generated from the mnemonic will be unlocked for signing and accepting the transactions that are generated during the migration. Note Migrating to Ropsten is not currently supported. Warning The mnemonic won't work unless it confirms to BIP39 . You can generate examples of conformant mnemonics here . Provide a list of Genesis DAO founders as described in configuring founders . If deploying to ganache, then run npm start ganache , or from your application: npm explore @daostack/arc.js -- npm start ganache . Otherwise, make sure your node is all sync'd-up and listening at the providerUrl you supplied in step 2. run npm start migrateContracts , or from your application: npm explore @daostack/arc.js -- npm start migrateContracts . Optional: If you want to create the Genesis DAO then run npm start createGenesisDao , or from your application: npm explore @daostack/arc.js -- npm start createGenesisDao . Tip If you want to migrate contracts and create the Genesis DAO all in a single script, you can run the script migrateContracts.createGenesisDao .","title":"Migrations"},{"location":"Migration/#configuring-founders","text":"When migrating to any network besides ganache you will need to supply a list of founders for the Genesis DAO that is created by the Arc.js migration script. You must define an environment variable named arcjs_foundersConfigurationLocation that contains the path to a JSON file containing specifications for your founders. This JSON file defines a list of founders for one or more networks in a format that looks like the following (but with real addresses): 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 { founders : { ropsten : [ { address : 0x1000000000000000000000000000000000000000 , tokens : 1000 , reputation : 1000 } ], kovan : [ { address : 0x1000000000000000000000000000000000000000 , tokens : 1000 , reputation : 1000 }, { address : 0x1000000000000000000000000000000000000000 , tokens : 1000 , reputation : 1000 } ] } } Info Do not supply values in Wei. The tokens amounts are for the DAO's native token, the reputation are in units of the DAO's reputation system. The script will automatically convert the values to Wei.","title":"Configuring Founders"},{"location":"Proposals/","text":"Working with Schemes, Proposals and Voting Machines The ability to create proposals, vote one's reputation and stake one's reputation and tokens on the outcome of a vote are fundamental to promoting coherence and collaboration within DAOs in the DAOstack ecosystem. More about DAOs Working with DAOs in Arc.js The Arc Platform About DAOstack's vision for a DAO ecosystem It all starts with \"scheme\" contracts that can generate proposals and supply a voting machine for each proposal. Schemes Schemes in general are public-facing contracts that any agent may use when they want perform primary functions relating to a particular DAO. Schemes are registered with a DAO's controller enabling them to access the controller's functionality. Schemes can be \"universal\", which means that a single contract instance can serve multiple DAOs by storing DAO-specific parameters with the DAO's controller. The implementation of a certain interface is what identifies a scheme as \"universal\". Some schemes have the ability to create proposals and thus require that a configured voting machine be specified in the scheme's parameters. More Information about Schemes All the schemes wrapped in Arc.js Obtaining a list of schemes registered with a DAO Universal Schemes in Arc Proposals As ideas emerge from a DAO's community they can be submitted as proposals to the DAO using a DAO scheme. Proposals are then subject to a vote that proceeds according to the rules of the scheme's voting machine . The voting machine and its configuration were supplied to the scheme when the scheme was registered with the DAO's controller. Note Schemes are registered with a DAO's controller either when the DAO is created or afterwards using the SchemeRegistrar . The following table describes the various proposals you can create using scheme contract wrappers in Arc.js: Proposal Scheme Wrapper Class Scheme Method Propose to reward an agent for contributions to the DAO ContributionRewardWrapper proposeContributionReward Propose to add or modify a global constraint GlobalConstraintRegistrarWrapper proposeToAddModifyGlobalConstraint Propose to remove a global constraint GlobalConstraintRegistrarWrapper proposeToRemoveGlobalConstraint Propose to add or modify a scheme SchemeRegistrarWrapper proposeToAddModifyScheme Propose to remove a scheme SchemeRegistrarWrapper proposeToRemoveScheme Propose an alternative Controller for the DAO UpgradeSchemeWrapper proposeController Propse an alternative UpgradeScheme UpgradeSchemeWrapper proposeUpgradingScheme Propose a vesting agreement VestingSchemeWrapper proposeVestingAgreement Propose to vote for any proposal in another DAO VoteInOrganizationSchemeWrapper proposeVoteInOrganization Each of the scheme methods listed in the table above returns a promise of an ArcTransactionProposalResult that will contain: proposalId - a Hash value that uniquely identifies a proposal, used to identify proposals everywhere where we refer to a proposal. votingMachine - the voting machine for the proposal, as an IntVoteInterfaceWrapper , facilitating operations such as voting on the proposal. (see Voting Machines ). Proposals follow a lifecycle of creation and execution (execution is whatever happens when the voting process concludes). GenesisProtocal votes can also expire. You may find yourself wanting to keep track of a proposal's lifecycle, and for that you use events. The following section describes how. Proposal Events Each scheme responsible for creating proposals enables you to track important events during a proposal's lifecycle (see the table of proposal types above ). Voting machines do the same (see Voting Machines ). Every scheme provides instances of EventFetcherFactory that correspond directly to the events thrown by the scheme's Arc contract. Proposal-generating schemes also provide special instances of EntityFetcherFactory that fetch information about: Votable proposals - For each proposal type, the fetched entity will contain information about the proposal, plus an instance of IntVoteInterfaceWrapper for the proposal's voting machine, facilitating operations such as voting on the proposal. See getVotable[*]Proposals in each scheme. Executed proposals - Some of the schemes provide additional information in the fetched entity, where additional information is available. See getExecutedProposals in each scheme. More on Events See Enhanced Web3 Events and Entities for Web3 Events for more information about these event-fetching interfaces. Like the schemes, the GenesisProtocolWrapper voting machine provides special instances of EntityFetcherFactory to be used for fetching events about votable and executed proposals. The fetched entity will contain additional information relevant to the proposal that you will not get via the scheme or IntVoteInterface events. See VotableGenesisProtocolProposals and ExecutedProposals . Voting Machines Voting machines play an integral part in promoting coherence and collaboration within and between DAOs in the DAOstack ecosystem. Which voting machine you choose to use for your DAO or DAO scheme, and how you configure it, can profoundly affect the emergent behavior of your DAO and the community that is using it. Every proposal-generating scheme has an associated voting machine with a configuration that is registered with the controller. Every proposal created by the scheme will use the scheme's voting machine. More about Voting Machines Voting Machines in Arc . Arc.js wraps two Arc voting machines: AbsoluteVote and GenesisProtocol . While each of these voting machines have their own individual API, they both implement a common Arc interface called IntVoteInterface which Arc.js wraps in IntVoteInterfaceWrapper . Note Arc has another voting machine contract called QuorumVote that Arc.js does not yet wrap. The IntVoteInterfaceWrapper gives you the convenience of working with a voting machine wrapper without having to know which voting machine it is. You may encounter IntVoteInterfaceWrapper in several places: You can obtain an IntVoteInterfaceWrapper for the voting machine associated with any proposal-generating scheme using the scheme's getVotingMachine method. Every method that creates a proposal returns an IntVoteInterfaceWrapper in the ArcTransactionProposalResult . Every scheme's EntityFetcherFactory that returns votable proposals will supply an IntVoteInterfaceWrapper in the fetched entity. Set a Universal Scheme's Parameters When we register a universal scheme against a controller we are basically registering with the controller the hash of a set of scheme parameters and giving the scheme permission to later access the controller to obtain the parameters hash. When later we want to use the universal scheme, we will pass to it the address of the avatar we are using, enabling the scheme to obtain from the controller the hash of the parameters that we registered for the scheme. The scheme then needs some way to turn that hash back into an object whose hash we registered with the controller. So each scheme has a function called setParameters that passes the parameters object to the scheme, whereupon the scheme hashes the object and stores it internally in a Solidity mapping where the key is the parameters hash and the value is the object containing the parameters. Until we do this, even if the scheme and its parameters have been registered with a controller, the scheme will not be able to find the parameters and any function requiring them will fail. Here is an example that lets UpgradeScheme know about a set of parameter values, implying that we are going to be registering the scheme against a controller and with the given set of parameters: 1 2 3 4 const paramsHash = await upgradeSchemeWrapper . setParameters ({ voteParametersHash : aHash , votingMachineAddress : anAddress }); setParameters will extract what it needs from your object, validate their values, and always set default values on any missing properties. It will return an ArcTransactionDataResult Hash where the Hash is of the parameters. Get a Universal Scheme's Parameters If you want to obtain a universal scheme's parameters as registered against a given DAO's controller, use getSchemeParameters : 1 2 const schemeParameters = await upgradeSchemeWrapper . getSchemeParameters ( avatarAddress ); const votingMachineAddress = schemeParameters . votingMachineAddress ; This will return an object containing the scheme's parameter values. The object will be the same as that which one passes to upgradeSchemeWrapper.setParameters .","title":"Schemes, Proposals and Voting Machines"},{"location":"Proposals/#working-with-schemes-proposals-and-voting-machines","text":"The ability to create proposals, vote one's reputation and stake one's reputation and tokens on the outcome of a vote are fundamental to promoting coherence and collaboration within DAOs in the DAOstack ecosystem. More about DAOs Working with DAOs in Arc.js The Arc Platform About DAOstack's vision for a DAO ecosystem It all starts with \"scheme\" contracts that can generate proposals and supply a voting machine for each proposal.","title":"Working with Schemes, Proposals and Voting Machines"},{"location":"Proposals/#schemes","text":"Schemes in general are public-facing contracts that any agent may use when they want perform primary functions relating to a particular DAO. Schemes are registered with a DAO's controller enabling them to access the controller's functionality. Schemes can be \"universal\", which means that a single contract instance can serve multiple DAOs by storing DAO-specific parameters with the DAO's controller. The implementation of a certain interface is what identifies a scheme as \"universal\". Some schemes have the ability to create proposals and thus require that a configured voting machine be specified in the scheme's parameters. More Information about Schemes All the schemes wrapped in Arc.js Obtaining a list of schemes registered with a DAO Universal Schemes in Arc","title":"Schemes"},{"location":"Proposals/#proposals","text":"As ideas emerge from a DAO's community they can be submitted as proposals to the DAO using a DAO scheme. Proposals are then subject to a vote that proceeds according to the rules of the scheme's voting machine . The voting machine and its configuration were supplied to the scheme when the scheme was registered with the DAO's controller. Note Schemes are registered with a DAO's controller either when the DAO is created or afterwards using the SchemeRegistrar . The following table describes the various proposals you can create using scheme contract wrappers in Arc.js: Proposal Scheme Wrapper Class Scheme Method Propose to reward an agent for contributions to the DAO ContributionRewardWrapper proposeContributionReward Propose to add or modify a global constraint GlobalConstraintRegistrarWrapper proposeToAddModifyGlobalConstraint Propose to remove a global constraint GlobalConstraintRegistrarWrapper proposeToRemoveGlobalConstraint Propose to add or modify a scheme SchemeRegistrarWrapper proposeToAddModifyScheme Propose to remove a scheme SchemeRegistrarWrapper proposeToRemoveScheme Propose an alternative Controller for the DAO UpgradeSchemeWrapper proposeController Propse an alternative UpgradeScheme UpgradeSchemeWrapper proposeUpgradingScheme Propose a vesting agreement VestingSchemeWrapper proposeVestingAgreement Propose to vote for any proposal in another DAO VoteInOrganizationSchemeWrapper proposeVoteInOrganization Each of the scheme methods listed in the table above returns a promise of an ArcTransactionProposalResult that will contain: proposalId - a Hash value that uniquely identifies a proposal, used to identify proposals everywhere where we refer to a proposal. votingMachine - the voting machine for the proposal, as an IntVoteInterfaceWrapper , facilitating operations such as voting on the proposal. (see Voting Machines ). Proposals follow a lifecycle of creation and execution (execution is whatever happens when the voting process concludes). GenesisProtocal votes can also expire. You may find yourself wanting to keep track of a proposal's lifecycle, and for that you use events. The following section describes how.","title":"Proposals"},{"location":"Proposals/#proposal-events","text":"Each scheme responsible for creating proposals enables you to track important events during a proposal's lifecycle (see the table of proposal types above ). Voting machines do the same (see Voting Machines ). Every scheme provides instances of EventFetcherFactory that correspond directly to the events thrown by the scheme's Arc contract. Proposal-generating schemes also provide special instances of EntityFetcherFactory that fetch information about: Votable proposals - For each proposal type, the fetched entity will contain information about the proposal, plus an instance of IntVoteInterfaceWrapper for the proposal's voting machine, facilitating operations such as voting on the proposal. See getVotable[*]Proposals in each scheme. Executed proposals - Some of the schemes provide additional information in the fetched entity, where additional information is available. See getExecutedProposals in each scheme. More on Events See Enhanced Web3 Events and Entities for Web3 Events for more information about these event-fetching interfaces. Like the schemes, the GenesisProtocolWrapper voting machine provides special instances of EntityFetcherFactory to be used for fetching events about votable and executed proposals. The fetched entity will contain additional information relevant to the proposal that you will not get via the scheme or IntVoteInterface events. See VotableGenesisProtocolProposals and ExecutedProposals .","title":"Proposal Events"},{"location":"Proposals/#voting-machines","text":"Voting machines play an integral part in promoting coherence and collaboration within and between DAOs in the DAOstack ecosystem. Which voting machine you choose to use for your DAO or DAO scheme, and how you configure it, can profoundly affect the emergent behavior of your DAO and the community that is using it. Every proposal-generating scheme has an associated voting machine with a configuration that is registered with the controller. Every proposal created by the scheme will use the scheme's voting machine. More about Voting Machines Voting Machines in Arc . Arc.js wraps two Arc voting machines: AbsoluteVote and GenesisProtocol . While each of these voting machines have their own individual API, they both implement a common Arc interface called IntVoteInterface which Arc.js wraps in IntVoteInterfaceWrapper . Note Arc has another voting machine contract called QuorumVote that Arc.js does not yet wrap. The IntVoteInterfaceWrapper gives you the convenience of working with a voting machine wrapper without having to know which voting machine it is. You may encounter IntVoteInterfaceWrapper in several places: You can obtain an IntVoteInterfaceWrapper for the voting machine associated with any proposal-generating scheme using the scheme's getVotingMachine method. Every method that creates a proposal returns an IntVoteInterfaceWrapper in the ArcTransactionProposalResult . Every scheme's EntityFetcherFactory that returns votable proposals will supply an IntVoteInterfaceWrapper in the fetched entity.","title":"Voting Machines"},{"location":"Proposals/#set-a-universal-schemes-parameters","text":"When we register a universal scheme against a controller we are basically registering with the controller the hash of a set of scheme parameters and giving the scheme permission to later access the controller to obtain the parameters hash. When later we want to use the universal scheme, we will pass to it the address of the avatar we are using, enabling the scheme to obtain from the controller the hash of the parameters that we registered for the scheme. The scheme then needs some way to turn that hash back into an object whose hash we registered with the controller. So each scheme has a function called setParameters that passes the parameters object to the scheme, whereupon the scheme hashes the object and stores it internally in a Solidity mapping where the key is the parameters hash and the value is the object containing the parameters. Until we do this, even if the scheme and its parameters have been registered with a controller, the scheme will not be able to find the parameters and any function requiring them will fail. Here is an example that lets UpgradeScheme know about a set of parameter values, implying that we are going to be registering the scheme against a controller and with the given set of parameters: 1 2 3 4 const paramsHash = await upgradeSchemeWrapper . setParameters ({ voteParametersHash : aHash , votingMachineAddress : anAddress }); setParameters will extract what it needs from your object, validate their values, and always set default values on any missing properties. It will return an ArcTransactionDataResult Hash where the Hash is of the parameters.","title":"Set a Universal Scheme's Parameters"},{"location":"Proposals/#get-a-universal-schemes-parameters","text":"If you want to obtain a universal scheme's parameters as registered against a given DAO's controller, use getSchemeParameters : 1 2 const schemeParameters = await upgradeSchemeWrapper . getSchemeParameters ( avatarAddress ); const votingMachineAddress = schemeParameters . votingMachineAddress ; This will return an object containing the scheme's parameter values. The object will be the same as that which one passes to upgradeSchemeWrapper.setParameters .","title":"Get a Universal Scheme's Parameters"},{"location":"Scripts/","text":"Running Arc.js Scripts Arc.js contains a set of scripts for building, publishing, running tests and migrating contracts to any network. These scripts are meant to be accessible to and readily usable by client applications. Typically an application that has installed the Arc.js npm package will run an Arc.js script by prefixing \" npm explore @daostack/arc.js -- \" to the name Arc.js script command. For example, to run the Arc.js script npm start ganache from your application, you would run: 1 npm explore @daostack/arc.js -- npm start ganache Otherwise, when running the scripts at the root of an Arc.js repo, you must omit the npm explore @daostack/arc.js -- so it looks like this. 1 npm start ganache nps Other scripts not described here are defined in package-scripts.js that is used to configure a tool called nps . Arc.js uses nps run all of its scripts. While nps is installed locally by Arc.js, you can also install it globally and then substitute npm start with nps , so, when running scripts from the root of an Arc.js repo, it looks like this: 1 2 3 ```script nps ganache ```","title":"Scripts"},{"location":"Scripts/#running-arcjs-scripts","text":"Arc.js contains a set of scripts for building, publishing, running tests and migrating contracts to any network. These scripts are meant to be accessible to and readily usable by client applications. Typically an application that has installed the Arc.js npm package will run an Arc.js script by prefixing \" npm explore @daostack/arc.js -- \" to the name Arc.js script command. For example, to run the Arc.js script npm start ganache from your application, you would run: 1 npm explore @daostack/arc.js -- npm start ganache Otherwise, when running the scripts at the root of an Arc.js repo, you must omit the npm explore @daostack/arc.js -- so it looks like this. 1 npm start ganache nps Other scripts not described here are defined in package-scripts.js that is used to configure a tool called nps . Arc.js uses nps run all of its scripts. While nps is installed locally by Arc.js, you can also install it globally and then substitute npm start with nps , so, when running scripts from the root of an Arc.js repo, it looks like this: 1 2 3 ```script nps ganache ```","title":"Running Arc.js Scripts"},{"location":"Transactions/","text":"Tracking Transactions Many Arc.js functions generate transactions that proceed asychronously through a \"lifecycle\" of state changes. A user interface will require manual attention from the user to sign each transaction and configure the parameters for sending it to the network. Depending on the speed of the net, substantial delays may occur before the result of a transaction becomes available and reliable. Some functions generate multiple transactions, with significant delays between each transaction until the operation has fully completed. So you may wish to give the user a visual sense of progress and assistance during a multi-stage and potentially lengthy asynchronous process. This is where the Arc.js TransactionService comes in. TransactionService can notify your application when transactions are about to be generated by a particular Arc.js function, how many transactions there will be, and when each transaction has completed each phase in its lifecycle. For example, take DAO.new which, out of all functions in Arc.js, generates the most transactions. Suppose you want to feed back to the user how many transactions to expect and when each transaction has completed. Here is how your application can be notified of changes throughout the transaction lifecycle: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import { TransactionService } from @daostack/arc.js ; const subscription = TransactionService . subscribe ( TxTracking.DAO.new , /** * topic is the name of the event, * `txEventInfo` is often referred-to as the payload . */ ( topic : string , txEventInfo : TransactionReceiptsEventInfo ) = { // the options you passed into the function (DAO.new in this case) const optionsWithDefaults = txEventInfo . options ; // the expected number of transactions const expectedNumTransactions = txEventInfo . txCount ; // a key that is unique to a single invocation of the function (DAO.new in this case) const uniqueInvocationKey = txEventInfo . invocationKey ; // Transaction hash for `sent` transaction. // Will be null in the `kickoff` event. const txHash = txEventInfo . tx ; // TransactionReceiptTruffle for mined and confirmed transactions. // Will be null in the `kickoff` and `sent` events. const txReceipt = txEventInfo . txReceipt ; // Stage of the transaction. See `TransactionStage`. const stage = txEventInfo . txStage ; // Error, if this is a failed transaction. const error = txEventInfo . error ; }); Now you are ready to handle \"TxTracking.DAO.new\" events whenever you call DAO.new . Important You must unsubscribe to the subscription or you risk memory leaks and excessive CPU usage: 1 subscription . unsubscribe (); To let you know in advance the expected count of transactions, a single \"kick-off\" event is published at the beginning of each function invocation and before any transactions have begun. In that event, txEventInfo.tx will be null. The property txEventInfo.uniqueInvocationKey uniquely identifies the \"thread\" of events associated with a single function at the root of an invocation. You can supply anything you want in the options passed to the invoked function. The entire object will be passed back to you in the event callback ( txEventInfo.options , above). For example, you may desire a tighter coupling between the events and a specific function invocation, so for you the invocationKey not given to you until the kickoff event may not suffice. In that case you might want to add a property to the options object in advance of calling the wrapper function, and use this property as your unique invocation key. You can create this key however you want, one way being to use the same function that TransactionService uses: 1 options . myInvocationkey = TransactionService . generateInvocationKey (); Note txEventInfo.options will usually contain the options you passed in, with default values added. But in the case of DAO.new , it will not contain the default values. If you need to see the default values for DAO.new then instead of subscribing to \"TxTracking.DAO.new\" you can subscribe to \"TxTracking.DaoCreator\" and receive events published by DaoCreatorWrapper.forgeOrg and DaoCreatorWrapper.setSchemes . This would otherwise be the same as subscribing to \"TxTracking.DAO.new\". Note In cases where a transaction-generating function invokes another transaction-generating function, Arc.js will insert into the options object that you passed into the root function a property called txEventContext . This is meant only for internal use by Arc.js and may change without notice at any time. More about Pub/Sub events See more about how to use the Pub/Sub event system, including how to scope your subscriptions to whole sets of events, here . Transaction Lifecycle All transactions proceed through three stages: sent, mined and confirmed. In the example above, when we subscribed to TxTracking.DAO.new , we are actually subscribing to four distinct events: TxTracking.DAO.new.kickoff TxTracking.DAO.sent TxTracking.DAO.mined TxTracking.DAO.confirmed You can identify the stage of the event using the topic parameter of the callback, or by the txStage property of the payload ( txEventInfo ) parameter of the callback (see the example code given in the previous section). Errors may occur at any point in the lifecycle. When they do you will receive an event with \".failed\" appended to the topic parameter of the callback, and the error property of the payload will contain the Error that describes what happened. txStage will represent the stage at which the error occurred, and you will receive no further events on the transaction. Getting Information About Transactions The TransactionService provides several static functions you can use to obtain information about a transaction: Function Description getMinedTransaction Returns a promise of a TransactionReceipt if the given transaction has been mined according to the optional requiredDepth (default requiredDepth is 0) watchForMinedTransaction Returns a promise of a TransactionReceipt once the given transaction has been mined according to the optional requiredDepth (default requiredDepth is 0) getConfirmedTransaction Returns a promise of a TransactionReceipt if the given transaction has been confirmed according to the optional requiredDepth (default requiredDepth comes from the ConfigService ) watchForConfirmedTransaction Returns a promise of a TransactionReceipt once the given transaction has been confirmed according to the optional requiredDepth (default requiredDepth comes from the ConfigService ) getTransactionDepth Returns a promise of the number of blocks that have been added to the chain since the given transaction was mined. Wrapper Functions that Generate a Transaction Contract wrapper functions that generate a promise of a transaction will return the promise of an ArcTransactionResult that contains methods giving you access to the functions described in Getting Information About Transactions without having to supply the transaction hash. For example: 1 2 3 4 5 import { ArcTransactionResult } from @daostack.arc.js ; const txResult = await someWrapper . aTxGeneratingFunction (); const confirmedTransactionReceipt = await txResult . watchForTxConfirmed (); Transaction Depth As described in the previous sections, you can obtain information about a transaction on the condition that it has reached a desired depth in terms of the number of blocks that have been added to the chain since the given transaction was mined. You can supply the required depth as a parameter to the function that returns the transaction information, or you can rely on the default depth that is defined by the global setting \" txDepthRequiredForConfirmation \". The txDepthRequiredForConfirmation setting is defined individually for each network. For example, if you want to set the value for the \"live\" network: 1 ConfigService . set ( txDepthRequiredForConfirmation.live , 6 ); Transaction Logs You can obtain information from a TransactionReceiptTruffle or TransactionReceipt using TransactionService.getValueFromLogs : 1 2 3 4 5 const txResult = await someWrapper . aTxGeneratingFunction (); const minedTransactionReceipt = await txResult . watchForTxMined (); const avatarAddress = TransactionService . getValueFromLogs ( minedTransactionReceipt , _avatar , eventName );","title":"Tracking Transactions"},{"location":"Transactions/#tracking-transactions","text":"Many Arc.js functions generate transactions that proceed asychronously through a \"lifecycle\" of state changes. A user interface will require manual attention from the user to sign each transaction and configure the parameters for sending it to the network. Depending on the speed of the net, substantial delays may occur before the result of a transaction becomes available and reliable. Some functions generate multiple transactions, with significant delays between each transaction until the operation has fully completed. So you may wish to give the user a visual sense of progress and assistance during a multi-stage and potentially lengthy asynchronous process. This is where the Arc.js TransactionService comes in. TransactionService can notify your application when transactions are about to be generated by a particular Arc.js function, how many transactions there will be, and when each transaction has completed each phase in its lifecycle. For example, take DAO.new which, out of all functions in Arc.js, generates the most transactions. Suppose you want to feed back to the user how many transactions to expect and when each transaction has completed. Here is how your application can be notified of changes throughout the transaction lifecycle: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 import { TransactionService } from @daostack/arc.js ; const subscription = TransactionService . subscribe ( TxTracking.DAO.new , /** * topic is the name of the event, * `txEventInfo` is often referred-to as the payload . */ ( topic : string , txEventInfo : TransactionReceiptsEventInfo ) = { // the options you passed into the function (DAO.new in this case) const optionsWithDefaults = txEventInfo . options ; // the expected number of transactions const expectedNumTransactions = txEventInfo . txCount ; // a key that is unique to a single invocation of the function (DAO.new in this case) const uniqueInvocationKey = txEventInfo . invocationKey ; // Transaction hash for `sent` transaction. // Will be null in the `kickoff` event. const txHash = txEventInfo . tx ; // TransactionReceiptTruffle for mined and confirmed transactions. // Will be null in the `kickoff` and `sent` events. const txReceipt = txEventInfo . txReceipt ; // Stage of the transaction. See `TransactionStage`. const stage = txEventInfo . txStage ; // Error, if this is a failed transaction. const error = txEventInfo . error ; }); Now you are ready to handle \"TxTracking.DAO.new\" events whenever you call DAO.new . Important You must unsubscribe to the subscription or you risk memory leaks and excessive CPU usage: 1 subscription . unsubscribe (); To let you know in advance the expected count of transactions, a single \"kick-off\" event is published at the beginning of each function invocation and before any transactions have begun. In that event, txEventInfo.tx will be null. The property txEventInfo.uniqueInvocationKey uniquely identifies the \"thread\" of events associated with a single function at the root of an invocation. You can supply anything you want in the options passed to the invoked function. The entire object will be passed back to you in the event callback ( txEventInfo.options , above). For example, you may desire a tighter coupling between the events and a specific function invocation, so for you the invocationKey not given to you until the kickoff event may not suffice. In that case you might want to add a property to the options object in advance of calling the wrapper function, and use this property as your unique invocation key. You can create this key however you want, one way being to use the same function that TransactionService uses: 1 options . myInvocationkey = TransactionService . generateInvocationKey (); Note txEventInfo.options will usually contain the options you passed in, with default values added. But in the case of DAO.new , it will not contain the default values. If you need to see the default values for DAO.new then instead of subscribing to \"TxTracking.DAO.new\" you can subscribe to \"TxTracking.DaoCreator\" and receive events published by DaoCreatorWrapper.forgeOrg and DaoCreatorWrapper.setSchemes . This would otherwise be the same as subscribing to \"TxTracking.DAO.new\". Note In cases where a transaction-generating function invokes another transaction-generating function, Arc.js will insert into the options object that you passed into the root function a property called txEventContext . This is meant only for internal use by Arc.js and may change without notice at any time. More about Pub/Sub events See more about how to use the Pub/Sub event system, including how to scope your subscriptions to whole sets of events, here .","title":"Tracking Transactions"},{"location":"Transactions/#transaction-lifecycle","text":"All transactions proceed through three stages: sent, mined and confirmed. In the example above, when we subscribed to TxTracking.DAO.new , we are actually subscribing to four distinct events: TxTracking.DAO.new.kickoff TxTracking.DAO.sent TxTracking.DAO.mined TxTracking.DAO.confirmed You can identify the stage of the event using the topic parameter of the callback, or by the txStage property of the payload ( txEventInfo ) parameter of the callback (see the example code given in the previous section). Errors may occur at any point in the lifecycle. When they do you will receive an event with \".failed\" appended to the topic parameter of the callback, and the error property of the payload will contain the Error that describes what happened. txStage will represent the stage at which the error occurred, and you will receive no further events on the transaction.","title":"Transaction Lifecycle"},{"location":"Transactions/#getting-information-about-transactions","text":"The TransactionService provides several static functions you can use to obtain information about a transaction: Function Description getMinedTransaction Returns a promise of a TransactionReceipt if the given transaction has been mined according to the optional requiredDepth (default requiredDepth is 0) watchForMinedTransaction Returns a promise of a TransactionReceipt once the given transaction has been mined according to the optional requiredDepth (default requiredDepth is 0) getConfirmedTransaction Returns a promise of a TransactionReceipt if the given transaction has been confirmed according to the optional requiredDepth (default requiredDepth comes from the ConfigService ) watchForConfirmedTransaction Returns a promise of a TransactionReceipt once the given transaction has been confirmed according to the optional requiredDepth (default requiredDepth comes from the ConfigService ) getTransactionDepth Returns a promise of the number of blocks that have been added to the chain since the given transaction was mined.","title":"Getting Information About Transactions"},{"location":"Transactions/#wrapper-functions-that-generate-a-transaction","text":"Contract wrapper functions that generate a promise of a transaction will return the promise of an ArcTransactionResult that contains methods giving you access to the functions described in Getting Information About Transactions without having to supply the transaction hash. For example: 1 2 3 4 5 import { ArcTransactionResult } from @daostack.arc.js ; const txResult = await someWrapper . aTxGeneratingFunction (); const confirmedTransactionReceipt = await txResult . watchForTxConfirmed ();","title":"Wrapper Functions that Generate a Transaction"},{"location":"Transactions/#transaction-depth","text":"As described in the previous sections, you can obtain information about a transaction on the condition that it has reached a desired depth in terms of the number of blocks that have been added to the chain since the given transaction was mined. You can supply the required depth as a parameter to the function that returns the transaction information, or you can rely on the default depth that is defined by the global setting \" txDepthRequiredForConfirmation \". The txDepthRequiredForConfirmation setting is defined individually for each network. For example, if you want to set the value for the \"live\" network: 1 ConfigService . set ( txDepthRequiredForConfirmation.live , 6 );","title":"Transaction Depth"},{"location":"Transactions/#transaction-logs","text":"You can obtain information from a TransactionReceiptTruffle or TransactionReceipt using TransactionService.getValueFromLogs : 1 2 3 4 5 const txResult = await someWrapper . aTxGeneratingFunction (); const minedTransactionReceipt = await txResult . watchForTxMined (); const avatarAddress = TransactionService . getValueFromLogs ( minedTransactionReceipt , _avatar , eventName );","title":"Transaction Logs"},{"location":"Wrappers/","text":"Arc Contract Wrappers Overview Arc.js wraps several Arc contracts in a \"contract wrapper\" JavaScript class. Every wrapper class inherits ultimately from ContractWrapperBase providing a common set of functions and properties and specific helper functions for operations specific to the contract it wraps. Each wrapper contains some basic properties: name - the name of the wrapped Arc contract friendlyName - a more friendly name of the Arc contract address - the address of the wrapped Arc contract contract - the original \"wrapped\" Truffle contract that you can use to access all of the Truffle and Web3 functionality of the specific Arc contract being wrapped. factory - a static instance of a wrapper factory class based on ContractWrapperFactory TWrapper (where TWrapper is the type (class) of the wrapper). Each factory contains static methods: at(someAddress) new() deployed() ... that you can use to instantiate the associated wrapper class. Events Each wrapper includes the wrapped contract's events as properties that give you enhanced capabilities over the straight Truffle/Web3 event API. For more information about wrapped contract events, see Web3 Events . Types of Wrappers Arc contracts and associated Arc.js contract wrapper classes are categorized as follows: Universal Schemes ContributionReward GlobalConstraintRegistrar SchemeRegistrar UpgradeScheme VestingScheme VoteInOrganizationScheme Voting Machines AbsoluteVote GenesisProtocol Global Constraints TokenCapGC Others DaoCreator Redeemer See more at Enumerate wrappers by contract type . Obtaining Wrappers Arc.js provides multiple ways to obtain contract wrappers, each optimal for particular use cases. It all starts with the WrapperService which provides means of organizing and obtaining contract wrappers. The WrapperService API is primarily in the form of four static properties, each of which are exported for easy import in your code: Export WrapperService property Description ContractWrappers WrapperService.wrappers Properties are contract names, values are the corresponding contract wrapper ContractWrapperFactories WrapperService.factories Properties are contract names, values are the corresponding contract wrapper factory ContractWrappersByType WrapperService.wrappersByType Properties are a contract category name (see Contract Types ), values are an array of IContractWrapper ContractWrappersByAddress WrapperService.wrappersByAddress a Map where the key is an address and the associated value is a IContractWrapper for a contract as deployed by the currently-running version of Arc.js. The following sections describe how to obtain wrapper classes in several use cases: get a deployed wrapper by the Arc contract name get a wrapper at a given address deploy a new contract enumerate all of the deployed wrappers enumerate wrappers by contract type Keep in mind In Arc.js all token and reputation amounts should always be expressed in Wei, either as a string or a BigNumber . Get a deployed wrapper by Arc contract name You can obtain, by its Arc contract name, any wrapper deployed by the running version of Arc.js: 1 2 import { ContractWrappers } from @daostack/arc.js ; const upgradeScheme = ContractWrappers . UpgradeScheme ; Get a wrapper at a given address You can use a wrapper's factory class to obtain a wrapper for a contract deployed to any given address: 1 2 import { UpgradeSchemeFactory } from @daostack/arc.js ; const upgradeScheme = await UpgradeSchemeFactory . at ( someAddress ); Info .at will return undefined if it can't find the contract at the given address. Another way to get a wrapper at a given address is using WrapperService.getContractWrapper . This is most useful when you have a contract name and may or may not have an address and wish to most efficiently return the associated wrapper, or undefined when not found: 1 2 3 4 import { WrapperService } from @daostack/arc.js ; // returns undefined when not found, unlike the factory `.at` which throws an exception const upgradeScheme = await WrapperService . getContractWrapper ( UpgradeScheme , someAddressThatMayBeUndefined ); } Deploy a new contract You can use a wrapper's factory class to deploy a new instance of a contract and obtain a wrapper for it: 1 2 import { UpgradeSchemeFactory } from @daostack/arc.js ; const newUpgradeScheme = await UpgradeSchemeFactory . new (); Enumerate all of the deployed wrappers You can enumerate all of the wrappers of contracts deployed by the running version of Arc.js: 1 2 3 4 import { ContractWrappers } from @daostack/arc.js ; for ( var wrapper in ContractWrappers ) { console . log ( ` ${ wrapper . friendlyName } is at ${ wrapper . address } ` ); } Enumerate wrappers by contract type You can enumerate the wrappers by contract category, for example, universalSchemes: 1 2 3 4 import { ContractWrappersByType } from @daostack/arc.js ; for ( var schemeWrapper of ContractWrappersByType . universalSchemes ) { console . log ( ` ${ schemeWrapper . friendlyName } is at ${ schemeWrapper . address } ` ); } The set of contract categories is defined in ArcWrappersByType . Can't Find What You Need? Arc.js doesn't wrap every Arc contact nor give you a helper class for everything, but it does give you some more options described in the following sections. Truffle Contracts and Web3 Under the hood Arc.js uses Truffle contracts and Web3 . When you find that Arc.js doesn't directly provide you a piece of information or functionality that you need, you might be able to use them to find what you want. You can obtain Web3 via Utils.getWeb3 and the Truffle contract associated with each contract wrapper instance via the contract property on each wrapper class. More on Web3 and Truffle contracts Web3 Truffle contracts Undeployed Arc Contracts Some Arc contracts are wrapped but not deployed by Arc.js, for example DaoToken and others. ContractWrappers ( WrapperService.wrappers ) will not contain entries for these wrappers since they are not deployed. But you will find their factories where you can use .at . or .new . Unwrapped Arc Contracts Not all Arc contracts have been given wrapper classes, for example, Avatar , UController and many more. But using Utils.requireContract you can obtain a raw Truffle contract for any contract, enabling you to work with the contract just by providing the name of the Arc contract: 1 2 import { Utils } from @daostack/arc.js ; const avatarTruffleContract = await Utils . requireContract ( Avatar ); Info Utils.requireContract throws an exception when there is any problem creating the truffle contract object.","title":"Contract Wrappers"},{"location":"Wrappers/#arc-contract-wrappers","text":"","title":"Arc Contract Wrappers"},{"location":"Wrappers/#overview","text":"Arc.js wraps several Arc contracts in a \"contract wrapper\" JavaScript class. Every wrapper class inherits ultimately from ContractWrapperBase providing a common set of functions and properties and specific helper functions for operations specific to the contract it wraps. Each wrapper contains some basic properties: name - the name of the wrapped Arc contract friendlyName - a more friendly name of the Arc contract address - the address of the wrapped Arc contract contract - the original \"wrapped\" Truffle contract that you can use to access all of the Truffle and Web3 functionality of the specific Arc contract being wrapped. factory - a static instance of a wrapper factory class based on ContractWrapperFactory TWrapper (where TWrapper is the type (class) of the wrapper). Each factory contains static methods: at(someAddress) new() deployed() ... that you can use to instantiate the associated wrapper class.","title":"Overview"},{"location":"Wrappers/#events","text":"Each wrapper includes the wrapped contract's events as properties that give you enhanced capabilities over the straight Truffle/Web3 event API. For more information about wrapped contract events, see Web3 Events .","title":"Events"},{"location":"Wrappers/#types-of-wrappers","text":"Arc contracts and associated Arc.js contract wrapper classes are categorized as follows: Universal Schemes ContributionReward GlobalConstraintRegistrar SchemeRegistrar UpgradeScheme VestingScheme VoteInOrganizationScheme Voting Machines AbsoluteVote GenesisProtocol Global Constraints TokenCapGC Others DaoCreator Redeemer See more at Enumerate wrappers by contract type .","title":"Types of Wrappers"},{"location":"Wrappers/#obtaining-wrappers","text":"Arc.js provides multiple ways to obtain contract wrappers, each optimal for particular use cases. It all starts with the WrapperService which provides means of organizing and obtaining contract wrappers. The WrapperService API is primarily in the form of four static properties, each of which are exported for easy import in your code: Export WrapperService property Description ContractWrappers WrapperService.wrappers Properties are contract names, values are the corresponding contract wrapper ContractWrapperFactories WrapperService.factories Properties are contract names, values are the corresponding contract wrapper factory ContractWrappersByType WrapperService.wrappersByType Properties are a contract category name (see Contract Types ), values are an array of IContractWrapper ContractWrappersByAddress WrapperService.wrappersByAddress a Map where the key is an address and the associated value is a IContractWrapper for a contract as deployed by the currently-running version of Arc.js. The following sections describe how to obtain wrapper classes in several use cases: get a deployed wrapper by the Arc contract name get a wrapper at a given address deploy a new contract enumerate all of the deployed wrappers enumerate wrappers by contract type Keep in mind In Arc.js all token and reputation amounts should always be expressed in Wei, either as a string or a BigNumber .","title":"Obtaining Wrappers"},{"location":"Wrappers/#get-a-deployed-wrapper-by-arc-contract-name","text":"You can obtain, by its Arc contract name, any wrapper deployed by the running version of Arc.js: 1 2 import { ContractWrappers } from @daostack/arc.js ; const upgradeScheme = ContractWrappers . UpgradeScheme ;","title":"Get a deployed wrapper by Arc contract name"},{"location":"Wrappers/#get-a-wrapper-at-a-given-address","text":"You can use a wrapper's factory class to obtain a wrapper for a contract deployed to any given address: 1 2 import { UpgradeSchemeFactory } from @daostack/arc.js ; const upgradeScheme = await UpgradeSchemeFactory . at ( someAddress ); Info .at will return undefined if it can't find the contract at the given address. Another way to get a wrapper at a given address is using WrapperService.getContractWrapper . This is most useful when you have a contract name and may or may not have an address and wish to most efficiently return the associated wrapper, or undefined when not found: 1 2 3 4 import { WrapperService } from @daostack/arc.js ; // returns undefined when not found, unlike the factory `.at` which throws an exception const upgradeScheme = await WrapperService . getContractWrapper ( UpgradeScheme , someAddressThatMayBeUndefined ); }","title":"Get a wrapper at a given address"},{"location":"Wrappers/#deploy-a-new-contract","text":"You can use a wrapper's factory class to deploy a new instance of a contract and obtain a wrapper for it: 1 2 import { UpgradeSchemeFactory } from @daostack/arc.js ; const newUpgradeScheme = await UpgradeSchemeFactory . new ();","title":"Deploy a new contract"},{"location":"Wrappers/#enumerate-all-of-the-deployed-wrappers","text":"You can enumerate all of the wrappers of contracts deployed by the running version of Arc.js: 1 2 3 4 import { ContractWrappers } from @daostack/arc.js ; for ( var wrapper in ContractWrappers ) { console . log ( ` ${ wrapper . friendlyName } is at ${ wrapper . address } ` ); }","title":"Enumerate all of the deployed wrappers"},{"location":"Wrappers/#enumerate-wrappers-by-contract-type","text":"You can enumerate the wrappers by contract category, for example, universalSchemes: 1 2 3 4 import { ContractWrappersByType } from @daostack/arc.js ; for ( var schemeWrapper of ContractWrappersByType . universalSchemes ) { console . log ( ` ${ schemeWrapper . friendlyName } is at ${ schemeWrapper . address } ` ); } The set of contract categories is defined in ArcWrappersByType .","title":"Enumerate wrappers by contract type"},{"location":"Wrappers/#cant-find-what-you-need","text":"Arc.js doesn't wrap every Arc contact nor give you a helper class for everything, but it does give you some more options described in the following sections.","title":"Can't Find What You Need?"},{"location":"Wrappers/#truffle-contracts-and-web3","text":"Under the hood Arc.js uses Truffle contracts and Web3 . When you find that Arc.js doesn't directly provide you a piece of information or functionality that you need, you might be able to use them to find what you want. You can obtain Web3 via Utils.getWeb3 and the Truffle contract associated with each contract wrapper instance via the contract property on each wrapper class. More on Web3 and Truffle contracts Web3 Truffle contracts","title":"Truffle Contracts and Web3"},{"location":"Wrappers/#undeployed-arc-contracts","text":"Some Arc contracts are wrapped but not deployed by Arc.js, for example DaoToken and others. ContractWrappers ( WrapperService.wrappers ) will not contain entries for these wrappers since they are not deployed. But you will find their factories where you can use .at . or .new .","title":"Undeployed Arc Contracts"},{"location":"Wrappers/#unwrapped-arc-contracts","text":"Not all Arc contracts have been given wrapper classes, for example, Avatar , UController and many more. But using Utils.requireContract you can obtain a raw Truffle contract for any contract, enabling you to work with the contract just by providing the name of the Arc contract: 1 2 import { Utils } from @daostack/arc.js ; const avatarTruffleContract = await Utils . requireContract ( Avatar ); Info Utils.requireContract throws an exception when there is any problem creating the truffle contract object.","title":"Unwrapped Arc Contracts"},{"location":"api/","text":"API Reference Index Enumerations BinaryVoteResult ExecutionState GlobalConstraintProposalType LogLevel ProposalState RewardType SchemePermissions SchemeRegistrarProposalType TransactionStage UpgradeSchemeProposalType Classes AbsoluteVoteWrapper AccountService ArcTransactionAgreementResult ArcTransactionDataResult ArcTransactionProposalResult ArcTransactionResult AvatarService ConfigService ContractWrapperBase ContractWrapperFactory ContributionRewardWrapper ControllerService DAO DaoCreatorFactoryType DaoCreatorWrapper DaoTokenFactoryType DaoTokenWrapper DefaultSchemePermissions EventSubscription GenesisDaoCreator GenesisProtocolFactoryType GenesisProtocolWrapper GlobalConstraintRegistrarWrapper IntVoteInterfaceFactoryType IntVoteInterfaceWrapper LoggingService MintableTokenFactoryType MintableTokenWrapper PromiseEventService ProposalGeneratorBase ProposalService PubSubEventService RedeemerFactoryType RedeemerWrapper ReputationFactoryType ReputationWrapper SchemeRegistrarWrapper StandardTokenFactoryType StandardTokenWrapper SubscriptionCollection TokenCapGCWrapper TransactionService UpgradeSchemeWrapper Utils UtilsInternal VestingSchemeWrapper VoteInOrganizationSchemeWrapper Web3EventService Web3EventSubscription WrapperService Interfaces AVVoteProposalEventResult AbsoluteVoteParams AbsoluteVoteParamsResult Agreement AgreementBase AgreementCancelEventResult AgreementProposal AgreementProposalEventResult AllowanceOptions ApprovalEventResult ApproveAndCallOptions ArcWrapperFactories ArcWrappers ArcWrappersByType BurnEventResult BurnableTokenBurnOptions CancelProposalEventResult CancelVotingEventResult ChangeApprovalAndCallOptions ChangeUpgradeSchemeProposalEventResult CollectEventResult CollectVestingAgreementConfig CommonVestingAgreementConfig ContributionProposal ContributionRewardParams ContributionRewardParamsReturn ContributionRewardRedeemParams ContributionRewardSpecifiedRedemptionParams ControllerAddGlobalConstraintsEventLogEntry ControllerRegisterSchemeEventLogEntry CreateVestingAgreementConfig DaoGlobalConstraintInfo DaoSchemeInfo DaoTokenBurnOptions DaoTokenMintOptions EntityFetcher EventFetcher EventFetcherFilterObject EventHasPropertyId EventPreProcessorReturn ExecuteProposalEventResult ExecutedGenesisProposal ExecutedProposal ForgeOrgConfig ForgedDaoInfo FounderConfig GPExecuteProposalEventResult GenesisProtocolDaoTokenBalances GenesisProtocolParams GenesisProtocolProposal GetAgreementParams GetAllowedRangeOfChoicesResult GetBeneficiaryRewardsParams GetDaosOptions GetGenesisProtocolParamsResult GetNumberOfChoicesConfig GetParticipantsOptions GetProposalAvatarConfig GetProposalEventsOptions GetProposalStatusConfig GetProposalStatusResult GetScoreConfig GetScoreThresholdParamsConfig GetScoreThresholdParamsResult GetStakerInfoConfig GetStakerInfoResult GetStateConfig GetThresholdConfig GetTokenBalancesOptions GetTokenCapGcParamsResult GetTotalReputationSupplyConfig GetVoteStatusConfig GetVoterInfoConfig GetVoterInfoResult GetWinningVoteConfig IBurnableTokenWrapper IConfigService IContractWrapper IContractWrapperFactory IErc827TokenWrapper IEventSubscription IIntVoteInterface ILogger ISchemeWrapper ITruffleContractFunction IUniversalSchemeWrapper IVotingMachineWrapper InitialSchemesSetEventResult InitializeArcOptions MintEventResult MintFinishedEventResult MintableTokenMintOptions NewContributionProposalEventResult NewDaoConfig NewDaoVotingMachineConfig NewGlobalConstraintsProposalEventResult NewOrgEventResult NewProposalEventResult NewSchemeProposalEventResult NewUpgradeProposalEventResult NewVestedAgreementEventResult NewVoteProposalEventResult OwnerVoteOptions Participant ProposalDeletedEventResult ProposalEntity ProposalExecutedEventResult ProposalIdOption ProposalRewards ProposeContributionRewardParams ProposeControllerParams ProposeOptions ProposeToAddModifyGlobalConstraintParams ProposeToAddModifySchemeParams ProposeToRemoveGlobalConstraintParams ProposeToRemoveSchemeParams ProposeUpgradingSchemeParams ProposeVestingAgreementConfig ProposedVestedAgreementEventResult RedeeemableResult RedeemConfig RedeemEventResult RedeemerOptions RedeemerRedeemEventResult RefreshReputationEventResult RemoveGlobalConstraintsProposalEventResult RemoveSchemeProposalEventResult ReputationBurnEventResult ReputationBurnOptions ReputationMintEventResult ReputationMintOptions RevokeSignToCancelAgreementEventResult RevokeSignToCancelVestingAgreementConfig SchemeConfig SchemeProposalExecuted SchemeProposalExecutedEventResult SchemeRegistrarParams SchemesConfig SetSchemesConfig ShouldBoostConfig SignToCancelAgreementEventResult SignToCancelVestingAgreementConfig StakeConfig StakeEventResult StandardSchemeParams StandardTokenAllowanceOptions StandardTokenApproveOptions StandardTokenChangeApprovalOptions StandardTokenTransferFromOptions StandardTokenTransferOptions TokenCapGcParams TransactionReceiptTruffle TransactionReceiptsEventInfo TransferAndCallOptions TransferEventResult TransferFromAndCallOptions TruffleContract VestingSchemeSchemeProposalExecuted VotableGlobalConstraintProposal VotableProposal VotableSchemeRegistrarProposal VotableUpgradeSchemeProposal VotableVoteInOrganizationProposal VoteInOrganizationProposeVoteConfig VoteOnBehalfEventResult VoteOptions VoteProposalEventResult VoteStatusOptions VoteWithSpecifiedAmountsOptions Web3EventFetcher WrapperFilter WrapperServiceInitializeOptions Type aliases Address EntityFetcherFactory EntityGetCallback EntityWatchCallback EntityWatchSubscriptionCallback EventFetcherFactory EventGetCallback EventSubscriptionCallback EventSubscriptionKey EventWatchCallback EventWatchSubscriptionCallback GasPriceAdjustor Hash PerDaoCallback PreProcessEventCallback TransformEventCallback TruffleContractFunction fnVoid Variables AbsoluteVoteFactory ContractWrapperFactories ContractWrappers ContractWrappersByAddress ContractWrappersByType ContributionRewardFactory DaoCreatorFactory DaoTokenFactory GenesisProtocolFactory GlobalConstraintRegistrarFactory IntVoteInterfaceFactory MintableTokenFactory RedeemerFactory ReputationFactory SchemeRegistrarFactory StandardTokenFactory TokenCapGCFactory UpgradeSchemeFactory VestingSchemeFactory VoteInOrganizationSchemeFactory computeForgeOrgGasLimit Functions GetDefaultGenesisProtocolParameters InitializeArcJs arcJsDeployer Type aliases Address \u03a4 Address : string Defined in commonTypes.ts:5 EntityFetcherFactory \u03a4 EntityFetcherFactory : function Defined in web3EventService.ts:393 Function that returns an EntityFetcher TEntity . type : TEntity The type returns to the callback. Type declaration \u25ba(argsFilter?: any , filterObject?: EventFetcherFilterObject , callback?: EntityWatchCallback TDest , requiredDepth?: number ): EntityFetcher TDest , TSrc Parameters: Param Type Description argsFilter any - filterObject EventFetcherFilterObject - callback EntityWatchCallback TDest - requiredDepth number - Returns: EntityFetcher TDest , TSrc EntityGetCallback \u03a4 EntityGetCallback : function Defined in web3EventService.ts:421 Type declaration \u25ba(error: Error , entity: Promise . Array . TEntity ): void Parameters: Param Type Description error Error - entity Promise . Array . TEntity - Returns: void EntityWatchCallback \u03a4 EntityWatchCallback : function Defined in web3EventService.ts:420 Type declaration \u25ba(error: Error , entity: TEntity ): void Parameters: Param Type Description error Error - entity TEntity - Returns: void EntityWatchSubscriptionCallback \u03a4 EntityWatchSubscriptionCallback : function Defined in web3EventService.ts:422 Type declaration \u25ba(eventName: string , payload: TEntity ): void Parameters: Param Type Description eventName string - payload TEntity - Returns: void EventFetcherFactory \u03a4 EventFetcherFactory : function Defined in web3EventService.ts:473 Function that returns an EventFetcher TEventArgs . type : TEventArgs The type of the args object. Type declaration \u25ba(argsFilter?: any , filterObject?: EventFetcherFilterObject , callback?: EventWatchCallback TEventArgs , requiredDepth?: number ): EventFetcher TEventArgs Parameters: Param Type Description argsFilter any - filterObject EventFetcherFilterObject - callback EventWatchCallback TEventArgs - requiredDepth number - Returns: EventFetcher TEventArgs EventGetCallback \u03a4 EventGetCallback : function Defined in web3EventService.ts:499 Type declaration \u25ba(error: Error , args: Array . DecodedLogEntryEvent . TEventArgs ): void Parameters: Param Type Description error Error - args Array . DecodedLogEntryEvent . TEventArgs - Returns: void EventSubscriptionCallback \u03a4 EventSubscriptionCallback : function Defined in pubSubEventService.ts:196 Type declaration \u25ba(topic: string , payload: any ): any Parameters: Param Type Description topic string - payload any - Returns: any EventSubscriptionKey \u03a4 EventSubscriptionKey : string \u23ae EventSubscriptionCallback Defined in pubSubEventService.ts:197 EventWatchCallback \u03a4 EventWatchCallback : function Defined in web3EventService.ts:497 Type declaration \u25ba(error: Error , args: DecodedLogEntryEvent . TEventArgs ): void Parameters: Param Type Description error Error - args DecodedLogEntryEvent . TEventArgs - Returns: void EventWatchSubscriptionCallback \u03a4 EventWatchSubscriptionCallback : function Defined in web3EventService.ts:501 Type declaration \u25ba(eventName: string , payload: DecodedLogEntryEvent . TEventArgs ): void Parameters: Param Type Description eventName string - payload DecodedLogEntryEvent . TEventArgs - Returns: void GasPriceAdjustor \u03a4 GasPriceAdjustor : function Defined in iContractWrapperBase.ts:213 The value of the global config setting gasPriceAdjustor This function will be invoked to obtain promise of a desired gas price given the current default gas price which will be determined by the x latest blocks median gas price. Type declaration \u25ba(defaultGasPrice: BigNumber ): Promise . BigNumber \u23ae string Parameters: Param Type Description defaultGasPrice BigNumber - Returns: Promise . BigNumber \u23ae string Hash \u03a4 Hash : string Defined in commonTypes.ts:4 PerDaoCallback \u03a4 PerDaoCallback : function Defined in dao.ts:433 Type declaration \u25ba(avatarAddress: Address ): void \u23ae Promise . boolean Parameters: Param Type Description avatarAddress Address - Returns: void \u23ae Promise . boolean PreProcessEventCallback \u03a4 PreProcessEventCallback : function Defined in web3EventService.ts:383 Type declaration \u25ba(error: Error , log: Array . DecodedLogEntryEvent . TEventArgs ): EventPreProcessorReturn TEventArgs Parameters: Param Type Description error Error - log Array . DecodedLogEntryEvent . TEventArgs - Returns: EventPreProcessorReturn TEventArgs TransformEventCallback \u03a4 TransformEventCallback : function Defined in web3EventService.ts:386 Type declaration \u25ba(event: DecodedLogEntryEvent . TSrc ): Promise . TDest \u23ae undefined Parameters: Param Type Description event DecodedLogEntryEvent . TSrc - Returns: Promise . TDest \u23ae undefined TruffleContractFunction \u03a4 TruffleContractFunction : function Defined in contractWrapperBase.ts:377 Type declaration \u25ba(args?: Array . any ): Promise . Hash Parameters: Param Type Description args Array . any - Returns: Promise . Hash fnVoid \u03a4 fnVoid : function Defined in commonTypes.ts:3 Type declaration \u25ba(): void Returns: void Variables \u00abConst\u00bb AbsoluteVoteFactory \u25cf AbsoluteVoteFactory : ContractWrapperFactory AbsoluteVoteWrapper = new ContractWrapperFactory(\"AbsoluteVote\", AbsoluteVoteWrapper, new Web3EventService()) Defined in wrappers/absoluteVote.ts:168 \u00abConst\u00bb ContractWrapperFactories \u25cf ContractWrapperFactories : ArcWrapperFactories = WrapperService.factories Defined in wrapperService.ts:379 for quicker access to the contract wrapper factories \u00abConst\u00bb ContractWrappers \u25cf ContractWrappers : ArcWrappers = WrapperService.wrappers Defined in wrapperService.ts:375 for quicker access to the contract wrappers \u00abConst\u00bb ContractWrappersByAddress \u25cf ContractWrappersByAddress : Map . Address ,. IContractWrapper = WrapperService.wrappersByAddress Defined in wrapperService.ts:387 for quicker access to the contract wrappers by address \u00abConst\u00bb ContractWrappersByType \u25cf ContractWrappersByType : ArcWrappersByType = WrapperService.wrappersByType Defined in wrapperService.ts:383 for quicker access to the contract wrapper types \u00abConst\u00bb ContributionRewardFactory \u25cf ContributionRewardFactory : ContractWrapperFactory ContributionRewardWrapper = new ContractWrapperFactory(\"ContributionReward\", ContributionRewardWrapper, new Web3EventService()) Defined in wrappers/contributionReward.ts:565 \u00abConst\u00bb DaoCreatorFactory \u25cf DaoCreatorFactory : DaoCreatorFactoryType = new DaoCreatorFactoryType(\"DaoCreator\", DaoCreatorWrapper, new Web3EventService()) as DaoCreatorFactoryType Defined in wrappers/daoCreator.ts:496 \u00abConst\u00bb DaoTokenFactory \u25cf DaoTokenFactory : DaoTokenFactoryType = new DaoTokenFactoryType( \"DAOToken\", DaoTokenWrapper, new Web3EventService()) as DaoTokenFactoryType Defined in wrappers/daoToken.ts:358 \u00abConst\u00bb GenesisProtocolFactory \u25cf GenesisProtocolFactory : GenesisProtocolFactoryType = new GenesisProtocolFactoryType( \"GenesisProtocol\", GenesisProtocolWrapper, new Web3EventService()) as GenesisProtocolFactoryType Defined in wrappers/genesisProtocol.ts:961 \u00abConst\u00bb GlobalConstraintRegistrarFactory \u25cf GlobalConstraintRegistrarFactory : ContractWrapperFactory GlobalConstraintRegistrarWrapper = new ContractWrapperFactory( \"GlobalConstraintRegistrar\", GlobalConstraintRegistrarWrapper, new Web3EventService()) Defined in wrappers/globalConstraintRegistrar.ts:232 \u00abConst\u00bb IntVoteInterfaceFactory \u25cf IntVoteInterfaceFactory : IntVoteInterfaceFactoryType = new IntVoteInterfaceFactoryType( \"IntVoteInterface\", IntVoteInterfaceWrapper, new Web3EventService()) as IntVoteInterfaceFactoryType Defined in wrappers/intVoteInterface.ts:382 \u00abConst\u00bb MintableTokenFactory \u25cf MintableTokenFactory : MintableTokenFactoryType = new MintableTokenFactoryType( \"MintableToken\", MintableTokenWrapper, new Web3EventService()) as MintableTokenFactoryType Defined in wrappers/mintableToken.ts:127 \u00abConst\u00bb RedeemerFactory \u25cf RedeemerFactory : RedeemerFactoryType = new RedeemerFactoryType( \"Redeemer\", RedeemerWrapper, new Web3EventService()) as RedeemerFactoryType Defined in wrappers/redeemer.ts:107 \u00abConst\u00bb ReputationFactory \u25cf ReputationFactory : ReputationFactoryType = new ReputationFactoryType( \"Reputation\", ReputationWrapper, new Web3EventService()) as ReputationFactoryType Defined in wrappers/reputation.ts:104 \u00abConst\u00bb SchemeRegistrarFactory \u25cf SchemeRegistrarFactory : ContractWrapperFactory SchemeRegistrarWrapper = new ContractWrapperFactory(\"SchemeRegistrar\", SchemeRegistrarWrapper, new Web3EventService()) Defined in wrappers/schemeRegistrar.ts:271 \u00abConst\u00bb StandardTokenFactory \u25cf StandardTokenFactory : StandardTokenFactoryType = new StandardTokenFactoryType( \"StandardToken\", StandardTokenWrapper, new Web3EventService()) as StandardTokenFactoryType Defined in wrappers/standardToken.ts:227 \u00abConst\u00bb TokenCapGCFactory \u25cf TokenCapGCFactory : ContractWrapperFactory TokenCapGCWrapper = new ContractWrapperFactory(\"TokenCapGC\", TokenCapGCWrapper, new Web3EventService()) Defined in wrappers/tokenCapGC.ts:61 \u00abConst\u00bb UpgradeSchemeFactory \u25cf UpgradeSchemeFactory : ContractWrapperFactory UpgradeSchemeWrapper = new ContractWrapperFactory(\"UpgradeScheme\", UpgradeSchemeWrapper, new Web3EventService()) Defined in wrappers/upgradeScheme.ts:225 \u00abConst\u00bb VestingSchemeFactory \u25cf VestingSchemeFactory : ContractWrapperFactory VestingSchemeWrapper = new ContractWrapperFactory(\"VestingScheme\", VestingSchemeWrapper, new Web3EventService()) Defined in wrappers/vestingScheme.ts:442 \u00abConst\u00bb VoteInOrganizationSchemeFactory \u25cf VoteInOrganizationSchemeFactory : ContractWrapperFactory VoteInOrganizationSchemeWrapper = new ContractWrapperFactory( \"VoteInOrganizationScheme\", VoteInOrganizationSchemeWrapper, new Web3EventService()) Defined in wrappers/voteInOrganizationScheme.ts:183 \u00abConst\u00bb computeForgeOrgGasLimit \u25cf computeForgeOrgGasLimit : any = require(\"../gasLimits.js\").computeForgeOrgGasLimit Defined in index.ts:47 Functions \u00abConst\u00bb GetDefaultGenesisProtocolParameters \u25ba GetDefaultGenesisProtocolParameters (): Promise . GenesisProtocolParams Defined in wrappers/genesisProtocol.ts:1304 Returns: Promise . GenesisProtocolParams InitializeArcJs \u25ba InitializeArcJs (options?: InitializeArcOptions ): Promise . Web3 Defined in index.ts:79 You must call InitializeArcJs before doing anything else with Arc.js. Call it again whenever the current chain changes. Parameters: Param Type Description options InitializeArcOptions - Returns: Promise . Web3 Promise of the Web3 object for the current chain. \u00abConst\u00bb arcJsDeployer \u25ba arcJsDeployer (web3: Web3 , artifacts: any , deployer: any ): void Defined in migrations/2_deploy_schemes.ts:14 Migration callback Parameters: Param Type Description web3 Web3 - artifacts any - deployer any - Returns: void","title":"Index"},{"location":"api/#api-reference","text":"","title":"API Reference"},{"location":"api/#index","text":"","title":"Index"},{"location":"api/#enumerations","text":"BinaryVoteResult ExecutionState GlobalConstraintProposalType LogLevel ProposalState RewardType SchemePermissions SchemeRegistrarProposalType TransactionStage UpgradeSchemeProposalType","title":"Enumerations"},{"location":"api/#classes","text":"AbsoluteVoteWrapper AccountService ArcTransactionAgreementResult ArcTransactionDataResult ArcTransactionProposalResult ArcTransactionResult AvatarService ConfigService ContractWrapperBase ContractWrapperFactory ContributionRewardWrapper ControllerService DAO DaoCreatorFactoryType DaoCreatorWrapper DaoTokenFactoryType DaoTokenWrapper DefaultSchemePermissions EventSubscription GenesisDaoCreator GenesisProtocolFactoryType GenesisProtocolWrapper GlobalConstraintRegistrarWrapper IntVoteInterfaceFactoryType IntVoteInterfaceWrapper LoggingService MintableTokenFactoryType MintableTokenWrapper PromiseEventService ProposalGeneratorBase ProposalService PubSubEventService RedeemerFactoryType RedeemerWrapper ReputationFactoryType ReputationWrapper SchemeRegistrarWrapper StandardTokenFactoryType StandardTokenWrapper SubscriptionCollection TokenCapGCWrapper TransactionService UpgradeSchemeWrapper Utils UtilsInternal VestingSchemeWrapper VoteInOrganizationSchemeWrapper Web3EventService Web3EventSubscription WrapperService","title":"Classes"},{"location":"api/#interfaces","text":"AVVoteProposalEventResult AbsoluteVoteParams AbsoluteVoteParamsResult Agreement AgreementBase AgreementCancelEventResult AgreementProposal AgreementProposalEventResult AllowanceOptions ApprovalEventResult ApproveAndCallOptions ArcWrapperFactories ArcWrappers ArcWrappersByType BurnEventResult BurnableTokenBurnOptions CancelProposalEventResult CancelVotingEventResult ChangeApprovalAndCallOptions ChangeUpgradeSchemeProposalEventResult CollectEventResult CollectVestingAgreementConfig CommonVestingAgreementConfig ContributionProposal ContributionRewardParams ContributionRewardParamsReturn ContributionRewardRedeemParams ContributionRewardSpecifiedRedemptionParams ControllerAddGlobalConstraintsEventLogEntry ControllerRegisterSchemeEventLogEntry CreateVestingAgreementConfig DaoGlobalConstraintInfo DaoSchemeInfo DaoTokenBurnOptions DaoTokenMintOptions EntityFetcher EventFetcher EventFetcherFilterObject EventHasPropertyId EventPreProcessorReturn ExecuteProposalEventResult ExecutedGenesisProposal ExecutedProposal ForgeOrgConfig ForgedDaoInfo FounderConfig GPExecuteProposalEventResult GenesisProtocolDaoTokenBalances GenesisProtocolParams GenesisProtocolProposal GetAgreementParams GetAllowedRangeOfChoicesResult GetBeneficiaryRewardsParams GetDaosOptions GetGenesisProtocolParamsResult GetNumberOfChoicesConfig GetParticipantsOptions GetProposalAvatarConfig GetProposalEventsOptions GetProposalStatusConfig GetProposalStatusResult GetScoreConfig GetScoreThresholdParamsConfig GetScoreThresholdParamsResult GetStakerInfoConfig GetStakerInfoResult GetStateConfig GetThresholdConfig GetTokenBalancesOptions GetTokenCapGcParamsResult GetTotalReputationSupplyConfig GetVoteStatusConfig GetVoterInfoConfig GetVoterInfoResult GetWinningVoteConfig IBurnableTokenWrapper IConfigService IContractWrapper IContractWrapperFactory IErc827TokenWrapper IEventSubscription IIntVoteInterface ILogger ISchemeWrapper ITruffleContractFunction IUniversalSchemeWrapper IVotingMachineWrapper InitialSchemesSetEventResult InitializeArcOptions MintEventResult MintFinishedEventResult MintableTokenMintOptions NewContributionProposalEventResult NewDaoConfig NewDaoVotingMachineConfig NewGlobalConstraintsProposalEventResult NewOrgEventResult NewProposalEventResult NewSchemeProposalEventResult NewUpgradeProposalEventResult NewVestedAgreementEventResult NewVoteProposalEventResult OwnerVoteOptions Participant ProposalDeletedEventResult ProposalEntity ProposalExecutedEventResult ProposalIdOption ProposalRewards ProposeContributionRewardParams ProposeControllerParams ProposeOptions ProposeToAddModifyGlobalConstraintParams ProposeToAddModifySchemeParams ProposeToRemoveGlobalConstraintParams ProposeToRemoveSchemeParams ProposeUpgradingSchemeParams ProposeVestingAgreementConfig ProposedVestedAgreementEventResult RedeeemableResult RedeemConfig RedeemEventResult RedeemerOptions RedeemerRedeemEventResult RefreshReputationEventResult RemoveGlobalConstraintsProposalEventResult RemoveSchemeProposalEventResult ReputationBurnEventResult ReputationBurnOptions ReputationMintEventResult ReputationMintOptions RevokeSignToCancelAgreementEventResult RevokeSignToCancelVestingAgreementConfig SchemeConfig SchemeProposalExecuted SchemeProposalExecutedEventResult SchemeRegistrarParams SchemesConfig SetSchemesConfig ShouldBoostConfig SignToCancelAgreementEventResult SignToCancelVestingAgreementConfig StakeConfig StakeEventResult StandardSchemeParams StandardTokenAllowanceOptions StandardTokenApproveOptions StandardTokenChangeApprovalOptions StandardTokenTransferFromOptions StandardTokenTransferOptions TokenCapGcParams TransactionReceiptTruffle TransactionReceiptsEventInfo TransferAndCallOptions TransferEventResult TransferFromAndCallOptions TruffleContract VestingSchemeSchemeProposalExecuted VotableGlobalConstraintProposal VotableProposal VotableSchemeRegistrarProposal VotableUpgradeSchemeProposal VotableVoteInOrganizationProposal VoteInOrganizationProposeVoteConfig VoteOnBehalfEventResult VoteOptions VoteProposalEventResult VoteStatusOptions VoteWithSpecifiedAmountsOptions Web3EventFetcher WrapperFilter WrapperServiceInitializeOptions","title":"Interfaces"},{"location":"api/#type-aliases","text":"Address EntityFetcherFactory EntityGetCallback EntityWatchCallback EntityWatchSubscriptionCallback EventFetcherFactory EventGetCallback EventSubscriptionCallback EventSubscriptionKey EventWatchCallback EventWatchSubscriptionCallback GasPriceAdjustor Hash PerDaoCallback PreProcessEventCallback TransformEventCallback TruffleContractFunction fnVoid","title":"Type aliases"},{"location":"api/#variables","text":"AbsoluteVoteFactory ContractWrapperFactories ContractWrappers ContractWrappersByAddress ContractWrappersByType ContributionRewardFactory DaoCreatorFactory DaoTokenFactory GenesisProtocolFactory GlobalConstraintRegistrarFactory IntVoteInterfaceFactory MintableTokenFactory RedeemerFactory ReputationFactory SchemeRegistrarFactory StandardTokenFactory TokenCapGCFactory UpgradeSchemeFactory VestingSchemeFactory VoteInOrganizationSchemeFactory computeForgeOrgGasLimit","title":"Variables"},{"location":"api/#functions","text":"GetDefaultGenesisProtocolParameters InitializeArcJs arcJsDeployer","title":"Functions"},{"location":"api/#type-aliases_1","text":"","title":"Type aliases"},{"location":"api/#address","text":"\u03a4 Address : string Defined in commonTypes.ts:5","title":"Address"},{"location":"api/#entityfetcherfactory","text":"\u03a4 EntityFetcherFactory : function Defined in web3EventService.ts:393 Function that returns an EntityFetcher TEntity . type : TEntity The type returns to the callback.","title":"EntityFetcherFactory"},{"location":"api/#type-declaration","text":"\u25ba(argsFilter?: any , filterObject?: EventFetcherFilterObject , callback?: EntityWatchCallback TDest , requiredDepth?: number ): EntityFetcher TDest , TSrc Parameters: Param Type Description argsFilter any - filterObject EventFetcherFilterObject - callback EntityWatchCallback TDest - requiredDepth number - Returns: EntityFetcher TDest , TSrc","title":"Type declaration"},{"location":"api/#entitygetcallback","text":"\u03a4 EntityGetCallback : function Defined in web3EventService.ts:421","title":"EntityGetCallback"},{"location":"api/#type-declaration_1","text":"\u25ba(error: Error , entity: Promise . Array . TEntity ): void Parameters: Param Type Description error Error - entity Promise . Array . TEntity - Returns: void","title":"Type declaration"},{"location":"api/#entitywatchcallback","text":"\u03a4 EntityWatchCallback : function Defined in web3EventService.ts:420","title":"EntityWatchCallback"},{"location":"api/#type-declaration_2","text":"\u25ba(error: Error , entity: TEntity ): void Parameters: Param Type Description error Error - entity TEntity - Returns: void","title":"Type declaration"},{"location":"api/#entitywatchsubscriptioncallback","text":"\u03a4 EntityWatchSubscriptionCallback : function Defined in web3EventService.ts:422","title":"EntityWatchSubscriptionCallback"},{"location":"api/#type-declaration_3","text":"\u25ba(eventName: string , payload: TEntity ): void Parameters: Param Type Description eventName string - payload TEntity - Returns: void","title":"Type declaration"},{"location":"api/#eventfetcherfactory","text":"\u03a4 EventFetcherFactory : function Defined in web3EventService.ts:473 Function that returns an EventFetcher TEventArgs . type : TEventArgs The type of the args object.","title":"EventFetcherFactory"},{"location":"api/#type-declaration_4","text":"\u25ba(argsFilter?: any , filterObject?: EventFetcherFilterObject , callback?: EventWatchCallback TEventArgs , requiredDepth?: number ): EventFetcher TEventArgs Parameters: Param Type Description argsFilter any - filterObject EventFetcherFilterObject - callback EventWatchCallback TEventArgs - requiredDepth number - Returns: EventFetcher TEventArgs","title":"Type declaration"},{"location":"api/#eventgetcallback","text":"\u03a4 EventGetCallback : function Defined in web3EventService.ts:499","title":"EventGetCallback"},{"location":"api/#type-declaration_5","text":"\u25ba(error: Error , args: Array . DecodedLogEntryEvent . TEventArgs ): void Parameters: Param Type Description error Error - args Array . DecodedLogEntryEvent . TEventArgs - Returns: void","title":"Type declaration"},{"location":"api/#eventsubscriptioncallback","text":"\u03a4 EventSubscriptionCallback : function Defined in pubSubEventService.ts:196","title":"EventSubscriptionCallback"},{"location":"api/#type-declaration_6","text":"\u25ba(topic: string , payload: any ): any Parameters: Param Type Description topic string - payload any - Returns: any","title":"Type declaration"},{"location":"api/#eventsubscriptionkey","text":"\u03a4 EventSubscriptionKey : string \u23ae EventSubscriptionCallback Defined in pubSubEventService.ts:197","title":"EventSubscriptionKey"},{"location":"api/#eventwatchcallback","text":"\u03a4 EventWatchCallback : function Defined in web3EventService.ts:497","title":"EventWatchCallback"},{"location":"api/#type-declaration_7","text":"\u25ba(error: Error , args: DecodedLogEntryEvent . TEventArgs ): void Parameters: Param Type Description error Error - args DecodedLogEntryEvent . TEventArgs - Returns: void","title":"Type declaration"},{"location":"api/#eventwatchsubscriptioncallback","text":"\u03a4 EventWatchSubscriptionCallback : function Defined in web3EventService.ts:501","title":"EventWatchSubscriptionCallback"},{"location":"api/#type-declaration_8","text":"\u25ba(eventName: string , payload: DecodedLogEntryEvent . TEventArgs ): void Parameters: Param Type Description eventName string - payload DecodedLogEntryEvent . TEventArgs - Returns: void","title":"Type declaration"},{"location":"api/#gaspriceadjustor","text":"\u03a4 GasPriceAdjustor : function Defined in iContractWrapperBase.ts:213 The value of the global config setting gasPriceAdjustor This function will be invoked to obtain promise of a desired gas price given the current default gas price which will be determined by the x latest blocks median gas price.","title":"GasPriceAdjustor"},{"location":"api/#type-declaration_9","text":"\u25ba(defaultGasPrice: BigNumber ): Promise . BigNumber \u23ae string Parameters: Param Type Description defaultGasPrice BigNumber - Returns: Promise . BigNumber \u23ae string","title":"Type declaration"},{"location":"api/#hash","text":"\u03a4 Hash : string Defined in commonTypes.ts:4","title":"Hash"},{"location":"api/#perdaocallback","text":"\u03a4 PerDaoCallback : function Defined in dao.ts:433","title":"PerDaoCallback"},{"location":"api/#type-declaration_10","text":"\u25ba(avatarAddress: Address ): void \u23ae Promise . boolean Parameters: Param Type Description avatarAddress Address - Returns: void \u23ae Promise . boolean","title":"Type declaration"},{"location":"api/#preprocesseventcallback","text":"\u03a4 PreProcessEventCallback : function Defined in web3EventService.ts:383","title":"PreProcessEventCallback"},{"location":"api/#type-declaration_11","text":"\u25ba(error: Error , log: Array . DecodedLogEntryEvent . TEventArgs ): EventPreProcessorReturn TEventArgs Parameters: Param Type Description error Error - log Array . DecodedLogEntryEvent . TEventArgs - Returns: EventPreProcessorReturn TEventArgs","title":"Type declaration"},{"location":"api/#transformeventcallback","text":"\u03a4 TransformEventCallback : function Defined in web3EventService.ts:386","title":"TransformEventCallback"},{"location":"api/#type-declaration_12","text":"\u25ba(event: DecodedLogEntryEvent . TSrc ): Promise . TDest \u23ae undefined Parameters: Param Type Description event DecodedLogEntryEvent . TSrc - Returns: Promise . TDest \u23ae undefined","title":"Type declaration"},{"location":"api/#trufflecontractfunction","text":"\u03a4 TruffleContractFunction : function Defined in contractWrapperBase.ts:377","title":"TruffleContractFunction"},{"location":"api/#type-declaration_13","text":"\u25ba(args?: Array . any ): Promise . Hash Parameters: Param Type Description args Array . any - Returns: Promise . Hash","title":"Type declaration"},{"location":"api/#fnvoid","text":"\u03a4 fnVoid : function Defined in commonTypes.ts:3","title":"fnVoid"},{"location":"api/#type-declaration_14","text":"\u25ba(): void Returns: void","title":"Type declaration"},{"location":"api/#variables_1","text":"","title":"Variables"},{"location":"api/#const-absolutevotefactory","text":"\u25cf AbsoluteVoteFactory : ContractWrapperFactory AbsoluteVoteWrapper = new ContractWrapperFactory(\"AbsoluteVote\", AbsoluteVoteWrapper, new Web3EventService()) Defined in wrappers/absoluteVote.ts:168","title":"\u00abConst\u00bb AbsoluteVoteFactory"},{"location":"api/#const-contractwrapperfactories","text":"\u25cf ContractWrapperFactories : ArcWrapperFactories = WrapperService.factories Defined in wrapperService.ts:379 for quicker access to the contract wrapper factories","title":"\u00abConst\u00bb ContractWrapperFactories"},{"location":"api/#const-contractwrappers","text":"\u25cf ContractWrappers : ArcWrappers = WrapperService.wrappers Defined in wrapperService.ts:375 for quicker access to the contract wrappers","title":"\u00abConst\u00bb ContractWrappers"},{"location":"api/#const-contractwrappersbyaddress","text":"\u25cf ContractWrappersByAddress : Map . Address ,. IContractWrapper = WrapperService.wrappersByAddress Defined in wrapperService.ts:387 for quicker access to the contract wrappers by address","title":"\u00abConst\u00bb ContractWrappersByAddress"},{"location":"api/#const-contractwrappersbytype","text":"\u25cf ContractWrappersByType : ArcWrappersByType = WrapperService.wrappersByType Defined in wrapperService.ts:383 for quicker access to the contract wrapper types","title":"\u00abConst\u00bb ContractWrappersByType"},{"location":"api/#const-contributionrewardfactory","text":"\u25cf ContributionRewardFactory : ContractWrapperFactory ContributionRewardWrapper = new ContractWrapperFactory(\"ContributionReward\", ContributionRewardWrapper, new Web3EventService()) Defined in wrappers/contributionReward.ts:565","title":"\u00abConst\u00bb ContributionRewardFactory"},{"location":"api/#const-daocreatorfactory","text":"\u25cf DaoCreatorFactory : DaoCreatorFactoryType = new DaoCreatorFactoryType(\"DaoCreator\", DaoCreatorWrapper, new Web3EventService()) as DaoCreatorFactoryType Defined in wrappers/daoCreator.ts:496","title":"\u00abConst\u00bb DaoCreatorFactory"},{"location":"api/#const-daotokenfactory","text":"\u25cf DaoTokenFactory : DaoTokenFactoryType = new DaoTokenFactoryType( \"DAOToken\", DaoTokenWrapper, new Web3EventService()) as DaoTokenFactoryType Defined in wrappers/daoToken.ts:358","title":"\u00abConst\u00bb DaoTokenFactory"},{"location":"api/#const-genesisprotocolfactory","text":"\u25cf GenesisProtocolFactory : GenesisProtocolFactoryType = new GenesisProtocolFactoryType( \"GenesisProtocol\", GenesisProtocolWrapper, new Web3EventService()) as GenesisProtocolFactoryType Defined in wrappers/genesisProtocol.ts:961","title":"\u00abConst\u00bb GenesisProtocolFactory"},{"location":"api/#const-globalconstraintregistrarfactory","text":"\u25cf GlobalConstraintRegistrarFactory : ContractWrapperFactory GlobalConstraintRegistrarWrapper = new ContractWrapperFactory( \"GlobalConstraintRegistrar\", GlobalConstraintRegistrarWrapper, new Web3EventService()) Defined in wrappers/globalConstraintRegistrar.ts:232","title":"\u00abConst\u00bb GlobalConstraintRegistrarFactory"},{"location":"api/#const-intvoteinterfacefactory","text":"\u25cf IntVoteInterfaceFactory : IntVoteInterfaceFactoryType = new IntVoteInterfaceFactoryType( \"IntVoteInterface\", IntVoteInterfaceWrapper, new Web3EventService()) as IntVoteInterfaceFactoryType Defined in wrappers/intVoteInterface.ts:382","title":"\u00abConst\u00bb IntVoteInterfaceFactory"},{"location":"api/#const-mintabletokenfactory","text":"\u25cf MintableTokenFactory : MintableTokenFactoryType = new MintableTokenFactoryType( \"MintableToken\", MintableTokenWrapper, new Web3EventService()) as MintableTokenFactoryType Defined in wrappers/mintableToken.ts:127","title":"\u00abConst\u00bb MintableTokenFactory"},{"location":"api/#const-redeemerfactory","text":"\u25cf RedeemerFactory : RedeemerFactoryType = new RedeemerFactoryType( \"Redeemer\", RedeemerWrapper, new Web3EventService()) as RedeemerFactoryType Defined in wrappers/redeemer.ts:107","title":"\u00abConst\u00bb RedeemerFactory"},{"location":"api/#const-reputationfactory","text":"\u25cf ReputationFactory : ReputationFactoryType = new ReputationFactoryType( \"Reputation\", ReputationWrapper, new Web3EventService()) as ReputationFactoryType Defined in wrappers/reputation.ts:104","title":"\u00abConst\u00bb ReputationFactory"},{"location":"api/#const-schemeregistrarfactory","text":"\u25cf SchemeRegistrarFactory : ContractWrapperFactory SchemeRegistrarWrapper = new ContractWrapperFactory(\"SchemeRegistrar\", SchemeRegistrarWrapper, new Web3EventService()) Defined in wrappers/schemeRegistrar.ts:271","title":"\u00abConst\u00bb SchemeRegistrarFactory"},{"location":"api/#const-standardtokenfactory","text":"\u25cf StandardTokenFactory : StandardTokenFactoryType = new StandardTokenFactoryType( \"StandardToken\", StandardTokenWrapper, new Web3EventService()) as StandardTokenFactoryType Defined in wrappers/standardToken.ts:227","title":"\u00abConst\u00bb StandardTokenFactory"},{"location":"api/#const-tokencapgcfactory","text":"\u25cf TokenCapGCFactory : ContractWrapperFactory TokenCapGCWrapper = new ContractWrapperFactory(\"TokenCapGC\", TokenCapGCWrapper, new Web3EventService()) Defined in wrappers/tokenCapGC.ts:61","title":"\u00abConst\u00bb TokenCapGCFactory"},{"location":"api/#const-upgradeschemefactory","text":"\u25cf UpgradeSchemeFactory : ContractWrapperFactory UpgradeSchemeWrapper = new ContractWrapperFactory(\"UpgradeScheme\", UpgradeSchemeWrapper, new Web3EventService()) Defined in wrappers/upgradeScheme.ts:225","title":"\u00abConst\u00bb UpgradeSchemeFactory"},{"location":"api/#const-vestingschemefactory","text":"\u25cf VestingSchemeFactory : ContractWrapperFactory VestingSchemeWrapper = new ContractWrapperFactory(\"VestingScheme\", VestingSchemeWrapper, new Web3EventService()) Defined in wrappers/vestingScheme.ts:442","title":"\u00abConst\u00bb VestingSchemeFactory"},{"location":"api/#const-voteinorganizationschemefactory","text":"\u25cf VoteInOrganizationSchemeFactory : ContractWrapperFactory VoteInOrganizationSchemeWrapper = new ContractWrapperFactory( \"VoteInOrganizationScheme\", VoteInOrganizationSchemeWrapper, new Web3EventService()) Defined in wrappers/voteInOrganizationScheme.ts:183","title":"\u00abConst\u00bb VoteInOrganizationSchemeFactory"},{"location":"api/#const-computeforgeorggaslimit","text":"\u25cf computeForgeOrgGasLimit : any = require(\"../gasLimits.js\").computeForgeOrgGasLimit Defined in index.ts:47","title":"\u00abConst\u00bb computeForgeOrgGasLimit"},{"location":"api/#functions_1","text":"","title":"Functions"},{"location":"api/#const-getdefaultgenesisprotocolparameters","text":"\u25ba GetDefaultGenesisProtocolParameters (): Promise . GenesisProtocolParams Defined in wrappers/genesisProtocol.ts:1304 Returns: Promise . GenesisProtocolParams","title":"\u00abConst\u00bb GetDefaultGenesisProtocolParameters"},{"location":"api/#initializearcjs","text":"\u25ba InitializeArcJs (options?: InitializeArcOptions ): Promise . Web3 Defined in index.ts:79 You must call InitializeArcJs before doing anything else with Arc.js. Call it again whenever the current chain changes. Parameters: Param Type Description options InitializeArcOptions - Returns: Promise . Web3 Promise of the Web3 object for the current chain.","title":"InitializeArcJs"},{"location":"api/#const-arcjsdeployer","text":"\u25ba arcJsDeployer (web3: Web3 , artifacts: any , deployer: any ): void Defined in migrations/2_deploy_schemes.ts:14 Migration callback Parameters: Param Type Description web3 Web3 - artifacts any - deployer any - Returns: void","title":"\u00abConst\u00bb arcJsDeployer"},{"location":"api/classes/AbsoluteVoteWrapper/","text":"API Reference AbsoluteVoteWrapper Class: AbsoluteVoteWrapper Hierarchy \u21b3 IntVoteInterfaceWrapper \u21b3 AbsoluteVoteWrapper Implements IContractWrapper IIntVoteInterface IVotingMachineWrapper Index Constructors constructor Properties AVVoteProposal CancelProposal CancelVoting ExecuteProposal NewProposal RefreshReputation VoteProposal contract factory friendlyName name Accessors VotableAbsoluteVoteProposals VotableProposals address Methods cancelProposal cancelVote estimateGas execute getAllowedRangeOfChoices getCurrentVoteStatus getNumberOfChoices getParameters getParametersArray getParametersHash getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew isAbstainAllow isVotable ownerVote propose setParameters vote voteStatus voteWithSpecifiedAmounts Constructors \u2295 new AbsoluteVoteWrapper (solidityContract: any , web3EventService: Web3EventService ): AbsoluteVoteWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: AbsoluteVoteWrapper Properties AVVoteProposal \u25cf AVVoteProposal : EventFetcherFactory AVVoteProposalEventResult Defined in wrappers/absoluteVote.ts:38 Events CancelProposal \u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Implementation of IIntVoteInterface . CancelProposal Inherited from IntVoteInterfaceWrapper . CancelProposal Defined in wrappers/intVoteInterface.ts:49 Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable CancelVoting \u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Implementation of IIntVoteInterface . CancelVoting Inherited from IntVoteInterfaceWrapper . CancelVoting Defined in wrappers/intVoteInterface.ts:62 Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable ExecuteProposal \u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Implementation of IIntVoteInterface . ExecuteProposal Inherited from IntVoteInterfaceWrapper . ExecuteProposal Defined in wrappers/intVoteInterface.ts:53 Get or watch events fired when proposals have been executed NewProposal \u25cf NewProposal : EventFetcherFactory NewProposalEventResult Implementation of IIntVoteInterface . NewProposal Inherited from IntVoteInterfaceWrapper . NewProposal Defined in wrappers/intVoteInterface.ts:44 Get or watch events fired on the creation of a new proposal. RefreshReputation \u25cf RefreshReputation : EventFetcherFactory RefreshReputationEventResult Defined in wrappers/absoluteVote.ts:39 VoteProposal \u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Implementation of IIntVoteInterface . VoteProposal Inherited from IntVoteInterfaceWrapper . VoteProposal Defined in wrappers/intVoteInterface.ts:57 Get or watch events fired whenever votes are cast on a proposal contract \u25cf contract : any Implementation of IVotingMachineWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory AbsoluteVoteWrapper = AbsoluteVoteFactory Implementation of IVotingMachineWrapper . factory Overrides IntVoteInterfaceWrapper . factory Defined in wrappers/absoluteVote.ts:33 friendlyName \u25cf friendlyName : string = \"Absolute Vote\" Implementation of IVotingMachineWrapper . friendlyName Overrides IntVoteInterfaceWrapper . friendlyName Defined in wrappers/absoluteVote.ts:32 name \u25cf name : string = \"AbsoluteVote\" Implementation of IVotingMachineWrapper . name Overrides IntVoteInterfaceWrapper . name Defined in wrappers/absoluteVote.ts:31 Accessors VotableAbsoluteVoteProposals getVotableAbsoluteVoteProposals(): EntityFetcherFactory VotableProposal , NewProposalEventResult Defined in wrappers/absoluteVote.ts:45 EntityFetcherFactory for votable proposals. Returns: EntityFetcherFactory VotableProposal , NewProposalEventResult VotableProposals getVotableProposals(): EventFetcherFactory NewProposalEventResult Inherited from IntVoteInterfaceWrapper . VotableProposals Defined in wrappers/intVoteInterface.ts:67 Get or watch NewProposal events, filtering out proposals that are no longer votable. Returns: EventFetcherFactory NewProposalEventResult address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods cancelProposal \u25ba cancelProposal (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelProposal Overrides IntVoteInterfaceWrapper . cancelProposal Defined in wrappers/absoluteVote.ts:140 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult cancelVote \u25ba cancelVote (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelVote Overrides IntVoteInterfaceWrapper . cancelVote Defined in wrappers/absoluteVote.ts:152 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number execute \u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . execute Overrides IntVoteInterfaceWrapper . execute Defined in wrappers/absoluteVote.ts:134 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult getAllowedRangeOfChoices \u25ba getAllowedRangeOfChoices (): Promise . GetAllowedRangeOfChoicesResult Inherited from IntVoteInterfaceWrapper . getAllowedRangeOfChoices Defined in wrappers/intVoteInterface.ts:343 Returns promise of the allowed range of choices for a voting machine. Returns: Promise . GetAllowedRangeOfChoicesResult getCurrentVoteStatus \u25ba getCurrentVoteStatus (proposalId: Address ): Promise . Array . BigNumber Inherited from IntVoteInterfaceWrapper . getCurrentVoteStatus Defined in wrappers/intVoteInterface.ts:320 Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the BinaryVoteResult enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions. Parameters: Param Type Description proposalId Address - Returns: Promise . Array . BigNumber getNumberOfChoices \u25ba getNumberOfChoices (options: ProposalIdOption ): Promise . number Implementation of IIntVoteInterface . getNumberOfChoices Inherited from IntVoteInterfaceWrapper . getNumberOfChoices Defined in wrappers/intVoteInterface.ts:241 Get the number of voting choices allowed by the proposal. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . AbsoluteVoteParamsResult Implementation of IVotingMachineWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/absoluteVote.ts:104 Parameters: Param Type Description paramsHash Hash - Returns: Promise . AbsoluteVoteParamsResult getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IVotingMachineWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: AbsoluteVoteParams ): Promise . Hash Defined in wrappers/absoluteVote.ts:66 Parameters: Param Type Description params AbsoluteVoteParams - Returns: Promise . Hash getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this isAbstainAllow \u25ba isAbstainAllow (): Promise . boolean Implementation of IIntVoteInterface . isAbstainAllow Inherited from IntVoteInterfaceWrapper . isAbstainAllow Defined in wrappers/intVoteInterface.ts:285 get whether voters are allowed to cast an abstaining vote on these proposals. Returns: Promise . boolean isVotable \u25ba isVotable (options: ProposalIdOption ): Promise . boolean Implementation of IIntVoteInterface . isVotable Inherited from IntVoteInterfaceWrapper . isVotable Defined in wrappers/intVoteInterface.ts:255 Get whether the proposal is in a state where it can be voted-upon. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean ownerVote \u25ba ownerVote (options: OwnerVoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . ownerVote Overrides IntVoteInterfaceWrapper . ownerVote Defined in wrappers/absoluteVote.ts:146 Parameters: Param Type Description options OwnerVoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult propose \u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Implementation of IIntVoteInterface . propose Overrides IntVoteInterfaceWrapper . propose Defined in wrappers/absoluteVote.ts:113 Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult setParameters \u25ba setParameters (params: AbsoluteVoteParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/absoluteVote.ts:80 Parameters: Param Type Description params AbsoluteVoteParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash vote \u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . vote Overrides IntVoteInterfaceWrapper . vote Defined in wrappers/absoluteVote.ts:120 Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult voteStatus \u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Implementation of IIntVoteInterface . voteStatus Inherited from IntVoteInterfaceWrapper . voteStatus Defined in wrappers/intVoteInterface.ts:269 Get the number of votes currently cast on the given choice. Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber voteWithSpecifiedAmounts \u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . voteWithSpecifiedAmounts Overrides IntVoteInterfaceWrapper . voteWithSpecifiedAmounts Defined in wrappers/absoluteVote.ts:127 Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"AbsoluteVoteWrapper"},{"location":"api/classes/AbsoluteVoteWrapper/#class-absolutevotewrapper","text":"","title":"Class: AbsoluteVoteWrapper"},{"location":"api/classes/AbsoluteVoteWrapper/#hierarchy","text":"\u21b3 IntVoteInterfaceWrapper \u21b3 AbsoluteVoteWrapper","title":"Hierarchy"},{"location":"api/classes/AbsoluteVoteWrapper/#implements","text":"IContractWrapper IIntVoteInterface IVotingMachineWrapper","title":"Implements"},{"location":"api/classes/AbsoluteVoteWrapper/#index","text":"","title":"Index"},{"location":"api/classes/AbsoluteVoteWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/AbsoluteVoteWrapper/#properties","text":"AVVoteProposal CancelProposal CancelVoting ExecuteProposal NewProposal RefreshReputation VoteProposal contract factory friendlyName name","title":"Properties"},{"location":"api/classes/AbsoluteVoteWrapper/#accessors","text":"VotableAbsoluteVoteProposals VotableProposals address","title":"Accessors"},{"location":"api/classes/AbsoluteVoteWrapper/#methods","text":"cancelProposal cancelVote estimateGas execute getAllowedRangeOfChoices getCurrentVoteStatus getNumberOfChoices getParameters getParametersArray getParametersHash getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew isAbstainAllow isVotable ownerVote propose setParameters vote voteStatus voteWithSpecifiedAmounts","title":"Methods"},{"location":"api/classes/AbsoluteVoteWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/AbsoluteVoteWrapper/#new-absolutevotewrappersoliditycontract-any-web3eventservice-web3eventservice-absolutevotewrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: AbsoluteVoteWrapper","title":"\u2295 new AbsoluteVoteWrapper(solidityContract: any, web3EventService: Web3EventService): AbsoluteVoteWrapper"},{"location":"api/classes/AbsoluteVoteWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/AbsoluteVoteWrapper/#avvoteproposal","text":"\u25cf AVVoteProposal : EventFetcherFactory AVVoteProposalEventResult Defined in wrappers/absoluteVote.ts:38 Events","title":"AVVoteProposal"},{"location":"api/classes/AbsoluteVoteWrapper/#cancelproposal","text":"\u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Implementation of IIntVoteInterface . CancelProposal Inherited from IntVoteInterfaceWrapper . CancelProposal Defined in wrappers/intVoteInterface.ts:49 Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable","title":"CancelProposal"},{"location":"api/classes/AbsoluteVoteWrapper/#cancelvoting","text":"\u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Implementation of IIntVoteInterface . CancelVoting Inherited from IntVoteInterfaceWrapper . CancelVoting Defined in wrappers/intVoteInterface.ts:62 Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable","title":"CancelVoting"},{"location":"api/classes/AbsoluteVoteWrapper/#executeproposal","text":"\u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Implementation of IIntVoteInterface . ExecuteProposal Inherited from IntVoteInterfaceWrapper . ExecuteProposal Defined in wrappers/intVoteInterface.ts:53 Get or watch events fired when proposals have been executed","title":"ExecuteProposal"},{"location":"api/classes/AbsoluteVoteWrapper/#newproposal","text":"\u25cf NewProposal : EventFetcherFactory NewProposalEventResult Implementation of IIntVoteInterface . NewProposal Inherited from IntVoteInterfaceWrapper . NewProposal Defined in wrappers/intVoteInterface.ts:44 Get or watch events fired on the creation of a new proposal.","title":"NewProposal"},{"location":"api/classes/AbsoluteVoteWrapper/#refreshreputation","text":"\u25cf RefreshReputation : EventFetcherFactory RefreshReputationEventResult Defined in wrappers/absoluteVote.ts:39","title":"RefreshReputation"},{"location":"api/classes/AbsoluteVoteWrapper/#voteproposal","text":"\u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Implementation of IIntVoteInterface . VoteProposal Inherited from IntVoteInterfaceWrapper . VoteProposal Defined in wrappers/intVoteInterface.ts:57 Get or watch events fired whenever votes are cast on a proposal","title":"VoteProposal"},{"location":"api/classes/AbsoluteVoteWrapper/#contract","text":"\u25cf contract : any Implementation of IVotingMachineWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/AbsoluteVoteWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory AbsoluteVoteWrapper = AbsoluteVoteFactory Implementation of IVotingMachineWrapper . factory Overrides IntVoteInterfaceWrapper . factory Defined in wrappers/absoluteVote.ts:33","title":"factory"},{"location":"api/classes/AbsoluteVoteWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Absolute Vote\" Implementation of IVotingMachineWrapper . friendlyName Overrides IntVoteInterfaceWrapper . friendlyName Defined in wrappers/absoluteVote.ts:32","title":"friendlyName"},{"location":"api/classes/AbsoluteVoteWrapper/#name","text":"\u25cf name : string = \"AbsoluteVote\" Implementation of IVotingMachineWrapper . name Overrides IntVoteInterfaceWrapper . name Defined in wrappers/absoluteVote.ts:31","title":"name"},{"location":"api/classes/AbsoluteVoteWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/AbsoluteVoteWrapper/#votableabsolutevoteproposals","text":"getVotableAbsoluteVoteProposals(): EntityFetcherFactory VotableProposal , NewProposalEventResult Defined in wrappers/absoluteVote.ts:45 EntityFetcherFactory for votable proposals. Returns: EntityFetcherFactory VotableProposal , NewProposalEventResult","title":"VotableAbsoluteVoteProposals"},{"location":"api/classes/AbsoluteVoteWrapper/#votableproposals","text":"getVotableProposals(): EventFetcherFactory NewProposalEventResult Inherited from IntVoteInterfaceWrapper . VotableProposals Defined in wrappers/intVoteInterface.ts:67 Get or watch NewProposal events, filtering out proposals that are no longer votable. Returns: EventFetcherFactory NewProposalEventResult","title":"VotableProposals"},{"location":"api/classes/AbsoluteVoteWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/AbsoluteVoteWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/AbsoluteVoteWrapper/#cancelproposal_1","text":"\u25ba cancelProposal (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelProposal Overrides IntVoteInterfaceWrapper . cancelProposal Defined in wrappers/absoluteVote.ts:140 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"cancelProposal"},{"location":"api/classes/AbsoluteVoteWrapper/#cancelvote","text":"\u25ba cancelVote (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelVote Overrides IntVoteInterfaceWrapper . cancelVote Defined in wrappers/absoluteVote.ts:152 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"cancelVote"},{"location":"api/classes/AbsoluteVoteWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/AbsoluteVoteWrapper/#execute","text":"\u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . execute Overrides IntVoteInterfaceWrapper . execute Defined in wrappers/absoluteVote.ts:134 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"execute"},{"location":"api/classes/AbsoluteVoteWrapper/#getallowedrangeofchoices","text":"\u25ba getAllowedRangeOfChoices (): Promise . GetAllowedRangeOfChoicesResult Inherited from IntVoteInterfaceWrapper . getAllowedRangeOfChoices Defined in wrappers/intVoteInterface.ts:343 Returns promise of the allowed range of choices for a voting machine. Returns: Promise . GetAllowedRangeOfChoicesResult","title":"getAllowedRangeOfChoices"},{"location":"api/classes/AbsoluteVoteWrapper/#getcurrentvotestatus","text":"\u25ba getCurrentVoteStatus (proposalId: Address ): Promise . Array . BigNumber Inherited from IntVoteInterfaceWrapper . getCurrentVoteStatus Defined in wrappers/intVoteInterface.ts:320 Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the BinaryVoteResult enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions. Parameters: Param Type Description proposalId Address - Returns: Promise . Array . BigNumber","title":"getCurrentVoteStatus"},{"location":"api/classes/AbsoluteVoteWrapper/#getnumberofchoices","text":"\u25ba getNumberOfChoices (options: ProposalIdOption ): Promise . number Implementation of IIntVoteInterface . getNumberOfChoices Inherited from IntVoteInterfaceWrapper . getNumberOfChoices Defined in wrappers/intVoteInterface.ts:241 Get the number of voting choices allowed by the proposal. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . number","title":"getNumberOfChoices"},{"location":"api/classes/AbsoluteVoteWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . AbsoluteVoteParamsResult Implementation of IVotingMachineWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/absoluteVote.ts:104 Parameters: Param Type Description paramsHash Hash - Returns: Promise . AbsoluteVoteParamsResult","title":"getParameters"},{"location":"api/classes/AbsoluteVoteWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IVotingMachineWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/AbsoluteVoteWrapper/#getparametershash","text":"\u25ba getParametersHash (params: AbsoluteVoteParams ): Promise . Hash Defined in wrappers/absoluteVote.ts:66 Parameters: Param Type Description params AbsoluteVoteParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/AbsoluteVoteWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/AbsoluteVoteWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/AbsoluteVoteWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/AbsoluteVoteWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/AbsoluteVoteWrapper/#isabstainallow","text":"\u25ba isAbstainAllow (): Promise . boolean Implementation of IIntVoteInterface . isAbstainAllow Inherited from IntVoteInterfaceWrapper . isAbstainAllow Defined in wrappers/intVoteInterface.ts:285 get whether voters are allowed to cast an abstaining vote on these proposals. Returns: Promise . boolean","title":"isAbstainAllow"},{"location":"api/classes/AbsoluteVoteWrapper/#isvotable","text":"\u25ba isVotable (options: ProposalIdOption ): Promise . boolean Implementation of IIntVoteInterface . isVotable Inherited from IntVoteInterfaceWrapper . isVotable Defined in wrappers/intVoteInterface.ts:255 Get whether the proposal is in a state where it can be voted-upon. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean","title":"isVotable"},{"location":"api/classes/AbsoluteVoteWrapper/#ownervote","text":"\u25ba ownerVote (options: OwnerVoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . ownerVote Overrides IntVoteInterfaceWrapper . ownerVote Defined in wrappers/absoluteVote.ts:146 Parameters: Param Type Description options OwnerVoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"ownerVote"},{"location":"api/classes/AbsoluteVoteWrapper/#propose","text":"\u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Implementation of IIntVoteInterface . propose Overrides IntVoteInterfaceWrapper . propose Defined in wrappers/absoluteVote.ts:113 Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"propose"},{"location":"api/classes/AbsoluteVoteWrapper/#setparameters","text":"\u25ba setParameters (params: AbsoluteVoteParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/absoluteVote.ts:80 Parameters: Param Type Description params AbsoluteVoteParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/AbsoluteVoteWrapper/#vote","text":"\u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . vote Overrides IntVoteInterfaceWrapper . vote Defined in wrappers/absoluteVote.ts:120 Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"vote"},{"location":"api/classes/AbsoluteVoteWrapper/#votestatus","text":"\u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Implementation of IIntVoteInterface . voteStatus Inherited from IntVoteInterfaceWrapper . voteStatus Defined in wrappers/intVoteInterface.ts:269 Get the number of votes currently cast on the given choice. Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber","title":"voteStatus"},{"location":"api/classes/AbsoluteVoteWrapper/#votewithspecifiedamounts","text":"\u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . voteWithSpecifiedAmounts Overrides IntVoteInterfaceWrapper . voteWithSpecifiedAmounts Defined in wrappers/absoluteVote.ts:127 Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"voteWithSpecifiedAmounts"},{"location":"api/classes/AccountService/","text":"API Reference AccountService Class: AccountService Watch for changes in the default account. For more information, see Account Changes . Index Properties AccountChangedEventTopic Methods endAccountWatch initiateAccountWatch subscribeToAccountChanges Properties \u00abStatic\u00bb AccountChangedEventTopic \u25cf AccountChangedEventTopic : string = \"AccountService.account.changed\" Defined in accountService.ts:13 Methods \u00abStatic\u00bb endAccountWatch \u25ba endAccountWatch (): void Defined in accountService.ts:69 Turn off the system that watches for default account changes. Returns: void \u00abStatic\u00bb initiateAccountWatch \u25ba initiateAccountWatch (): Promise . void Defined in accountService.ts:27 Initializes the system that watches for default account changes. initiateAccountWatch is called automatically by Arc.js when you pass true for watchForAccountChanges to InitializeArcJs . You may also call it manually yourself. Then you may request to be notified whenever the current account changes by calling AccountService.subscribeToAccountChanges Returns: Promise . void \u00abStatic\u00bb subscribeToAccountChanges \u25ba subscribeToAccountChanges (callback: function ): IEventSubscription Defined in accountService.ts:85 Subscribe to be notified whenever the current account changes, like this: 1 AccountService . subscribeToAccountChanges (( account : Address ) = { ... } ); Parameters: Param Type Description callback function - Returns: IEventSubscription A subscription to the event. Unsubscribe by calling [theSubscription].unsubscribe() .","title":"AccountService"},{"location":"api/classes/AccountService/#class-accountservice","text":"Watch for changes in the default account. For more information, see Account Changes .","title":"Class: AccountService"},{"location":"api/classes/AccountService/#index","text":"","title":"Index"},{"location":"api/classes/AccountService/#properties","text":"AccountChangedEventTopic","title":"Properties"},{"location":"api/classes/AccountService/#methods","text":"endAccountWatch initiateAccountWatch subscribeToAccountChanges","title":"Methods"},{"location":"api/classes/AccountService/#properties_1","text":"","title":"Properties"},{"location":"api/classes/AccountService/#static-accountchangedeventtopic","text":"\u25cf AccountChangedEventTopic : string = \"AccountService.account.changed\" Defined in accountService.ts:13","title":"\u00abStatic\u00bb AccountChangedEventTopic"},{"location":"api/classes/AccountService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/AccountService/#static-endaccountwatch","text":"\u25ba endAccountWatch (): void Defined in accountService.ts:69 Turn off the system that watches for default account changes. Returns: void","title":"\u00abStatic\u00bb endAccountWatch"},{"location":"api/classes/AccountService/#static-initiateaccountwatch","text":"\u25ba initiateAccountWatch (): Promise . void Defined in accountService.ts:27 Initializes the system that watches for default account changes. initiateAccountWatch is called automatically by Arc.js when you pass true for watchForAccountChanges to InitializeArcJs . You may also call it manually yourself. Then you may request to be notified whenever the current account changes by calling AccountService.subscribeToAccountChanges Returns: Promise . void","title":"\u00abStatic\u00bb initiateAccountWatch"},{"location":"api/classes/AccountService/#static-subscribetoaccountchanges","text":"\u25ba subscribeToAccountChanges (callback: function ): IEventSubscription Defined in accountService.ts:85 Subscribe to be notified whenever the current account changes, like this: 1 AccountService . subscribeToAccountChanges (( account : Address ) = { ... } ); Parameters: Param Type Description callback function - Returns: IEventSubscription A subscription to the event. Unsubscribe by calling [theSubscription].unsubscribe() .","title":"\u00abStatic\u00bb subscribeToAccountChanges"},{"location":"api/classes/ArcTransactionAgreementResult/","text":"API Reference ArcTransactionAgreementResult Class: ArcTransactionAgreementResult Hierarchy ArcTransactionResult \u21b3 ArcTransactionAgreementResult Index Constructors constructor Properties tx Methods getAgreementIdFromMinedTx getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined Constructors \u2295 new ArcTransactionAgreementResult (tx: Hash , contract: any ): ArcTransactionAgreementResult Overrides ArcTransactionResult . constructor Defined in wrappers/vestingScheme.ts:426 Parameters: Param Type Description tx Hash - contract any - Returns: ArcTransactionAgreementResult Properties tx \u25cf tx : Hash Inherited from ArcTransactionResult . tx Defined in iContractWrapperBase.ts:61 The transaction hash Methods getAgreementIdFromMinedTx \u25ba getAgreementIdFromMinedTx (): Promise . number Defined in wrappers/vestingScheme.ts:437 Returns promise of the agreement id from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Returns: Promise . number getTxConfirmed \u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxConfirmed Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null getTxMined \u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxMined Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null getValueFromMinedTx \u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Inherited from ArcTransactionResult . getValueFromMinedTx Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined watchForTxConfirmed \u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxConfirmed Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle watchForTxMined \u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxMined Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"ArcTransactionAgreementResult"},{"location":"api/classes/ArcTransactionAgreementResult/#class-arctransactionagreementresult","text":"","title":"Class: ArcTransactionAgreementResult"},{"location":"api/classes/ArcTransactionAgreementResult/#hierarchy","text":"ArcTransactionResult \u21b3 ArcTransactionAgreementResult","title":"Hierarchy"},{"location":"api/classes/ArcTransactionAgreementResult/#index","text":"","title":"Index"},{"location":"api/classes/ArcTransactionAgreementResult/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ArcTransactionAgreementResult/#properties","text":"tx","title":"Properties"},{"location":"api/classes/ArcTransactionAgreementResult/#methods","text":"getAgreementIdFromMinedTx getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined","title":"Methods"},{"location":"api/classes/ArcTransactionAgreementResult/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ArcTransactionAgreementResult/#new-arctransactionagreementresulttx-hash-contract-any-arctransactionagreementresult","text":"Overrides ArcTransactionResult . constructor Defined in wrappers/vestingScheme.ts:426 Parameters: Param Type Description tx Hash - contract any - Returns: ArcTransactionAgreementResult","title":"\u2295 new ArcTransactionAgreementResult(tx: Hash, contract: any): ArcTransactionAgreementResult"},{"location":"api/classes/ArcTransactionAgreementResult/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ArcTransactionAgreementResult/#tx","text":"\u25cf tx : Hash Inherited from ArcTransactionResult . tx Defined in iContractWrapperBase.ts:61 The transaction hash","title":"tx"},{"location":"api/classes/ArcTransactionAgreementResult/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ArcTransactionAgreementResult/#getagreementidfromminedtx","text":"\u25ba getAgreementIdFromMinedTx (): Promise . number Defined in wrappers/vestingScheme.ts:437 Returns promise of the agreement id from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Returns: Promise . number","title":"getAgreementIdFromMinedTx"},{"location":"api/classes/ArcTransactionAgreementResult/#gettxconfirmed","text":"\u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxConfirmed Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxConfirmed"},{"location":"api/classes/ArcTransactionAgreementResult/#gettxmined","text":"\u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxMined Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxMined"},{"location":"api/classes/ArcTransactionAgreementResult/#getvaluefromminedtx","text":"\u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Inherited from ArcTransactionResult . getValueFromMinedTx Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined","title":"getValueFromMinedTx"},{"location":"api/classes/ArcTransactionAgreementResult/#watchfortxconfirmed","text":"\u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxConfirmed Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle","title":"watchForTxConfirmed"},{"location":"api/classes/ArcTransactionAgreementResult/#watchfortxmined","text":"\u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxMined Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"watchForTxMined"},{"location":"api/classes/ArcTransactionDataResult/","text":"API Reference ArcTransactionDataResult Class: ArcTransactionDataResult Base or actual type returned by all contract wrapper methods that generate a transaction and any other result. Type parameters TData Hierarchy ArcTransactionResult \u21b3 ArcTransactionDataResult Index Constructors constructor Properties result tx Methods getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined Constructors \u2295 new ArcTransactionDataResult (tx: Hash , contract: any , result: TData ): ArcTransactionDataResult Overrides ArcTransactionResult . constructor Defined in iContractWrapperBase.ts:178 Parameters: Param Type Description tx Hash - contract any - result TData - Returns: ArcTransactionDataResult Properties result \u25cf result : TData Defined in iContractWrapperBase.ts:185 Additional data being returned. tx \u25cf tx : Hash Inherited from ArcTransactionResult . tx Defined in iContractWrapperBase.ts:61 The transaction hash Methods getTxConfirmed \u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxConfirmed Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null getTxMined \u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxMined Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null getValueFromMinedTx \u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Inherited from ArcTransactionResult . getValueFromMinedTx Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined watchForTxConfirmed \u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxConfirmed Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle watchForTxMined \u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxMined Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"ArcTransactionDataResult"},{"location":"api/classes/ArcTransactionDataResult/#class-arctransactiondataresult","text":"Base or actual type returned by all contract wrapper methods that generate a transaction and any other result.","title":"Class: ArcTransactionDataResult"},{"location":"api/classes/ArcTransactionDataResult/#type-parameters","text":"","title":"Type parameters"},{"location":"api/classes/ArcTransactionDataResult/#tdata","text":"","title":"TData"},{"location":"api/classes/ArcTransactionDataResult/#hierarchy","text":"ArcTransactionResult \u21b3 ArcTransactionDataResult","title":"Hierarchy"},{"location":"api/classes/ArcTransactionDataResult/#index","text":"","title":"Index"},{"location":"api/classes/ArcTransactionDataResult/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ArcTransactionDataResult/#properties","text":"result tx","title":"Properties"},{"location":"api/classes/ArcTransactionDataResult/#methods","text":"getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined","title":"Methods"},{"location":"api/classes/ArcTransactionDataResult/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ArcTransactionDataResult/#new-arctransactiondataresulttx-hash-contract-any-result-tdata-arctransactiondataresult","text":"Overrides ArcTransactionResult . constructor Defined in iContractWrapperBase.ts:178 Parameters: Param Type Description tx Hash - contract any - result TData - Returns: ArcTransactionDataResult","title":"\u2295 new ArcTransactionDataResult(tx: Hash, contract: any, result: TData): ArcTransactionDataResult"},{"location":"api/classes/ArcTransactionDataResult/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ArcTransactionDataResult/#result","text":"\u25cf result : TData Defined in iContractWrapperBase.ts:185 Additional data being returned.","title":"result"},{"location":"api/classes/ArcTransactionDataResult/#tx","text":"\u25cf tx : Hash Inherited from ArcTransactionResult . tx Defined in iContractWrapperBase.ts:61 The transaction hash","title":"tx"},{"location":"api/classes/ArcTransactionDataResult/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ArcTransactionDataResult/#gettxconfirmed","text":"\u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxConfirmed Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxConfirmed"},{"location":"api/classes/ArcTransactionDataResult/#gettxmined","text":"\u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxMined Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxMined"},{"location":"api/classes/ArcTransactionDataResult/#getvaluefromminedtx","text":"\u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Inherited from ArcTransactionResult . getValueFromMinedTx Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined","title":"getValueFromMinedTx"},{"location":"api/classes/ArcTransactionDataResult/#watchfortxconfirmed","text":"\u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxConfirmed Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle","title":"watchForTxConfirmed"},{"location":"api/classes/ArcTransactionDataResult/#watchfortxmined","text":"\u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxMined Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"watchForTxMined"},{"location":"api/classes/ArcTransactionProposalResult/","text":"API Reference ArcTransactionProposalResult Class: ArcTransactionProposalResult Base or actual type returned by all contract wrapper methods that generate a transaction and initiate a proposal. Hierarchy ArcTransactionResult \u21b3 ArcTransactionProposalResult Index Constructors constructor Properties tx votingMachine Methods getProposalIdFromMinedTx getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined Constructors \u2295 new ArcTransactionProposalResult (tx: Hash , contract: any , votingMachine: IIntVoteInterface ): ArcTransactionProposalResult Overrides ArcTransactionResult . constructor Defined in iContractWrapperBase.ts:153 Parameters: Param Type Description tx Hash - contract any - votingMachine IIntVoteInterface - Returns: ArcTransactionProposalResult Properties tx \u25cf tx : Hash Inherited from ArcTransactionResult . tx Defined in iContractWrapperBase.ts:61 The transaction hash votingMachine \u25cf votingMachine : IIntVoteInterface Defined in iContractWrapperBase.ts:161 The proposal's voting machine, as IntVoteInterface Methods getProposalIdFromMinedTx \u25ba getProposalIdFromMinedTx (): Promise . Hash Defined in iContractWrapperBase.ts:170 Returns promise of the proposal id from the logs of the mined transaction. Will watch for the mined tx; if it hasn't yet been mined, could take a while to return. Returns: Promise . Hash getTxConfirmed \u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxConfirmed Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null getTxMined \u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxMined Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null getValueFromMinedTx \u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Inherited from ArcTransactionResult . getValueFromMinedTx Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined watchForTxConfirmed \u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxConfirmed Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle watchForTxMined \u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxMined Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"ArcTransactionProposalResult"},{"location":"api/classes/ArcTransactionProposalResult/#class-arctransactionproposalresult","text":"Base or actual type returned by all contract wrapper methods that generate a transaction and initiate a proposal.","title":"Class: ArcTransactionProposalResult"},{"location":"api/classes/ArcTransactionProposalResult/#hierarchy","text":"ArcTransactionResult \u21b3 ArcTransactionProposalResult","title":"Hierarchy"},{"location":"api/classes/ArcTransactionProposalResult/#index","text":"","title":"Index"},{"location":"api/classes/ArcTransactionProposalResult/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ArcTransactionProposalResult/#properties","text":"tx votingMachine","title":"Properties"},{"location":"api/classes/ArcTransactionProposalResult/#methods","text":"getProposalIdFromMinedTx getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined","title":"Methods"},{"location":"api/classes/ArcTransactionProposalResult/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ArcTransactionProposalResult/#new-arctransactionproposalresulttx-hash-contract-any-votingmachine-iintvoteinterface-arctransactionproposalresult","text":"Overrides ArcTransactionResult . constructor Defined in iContractWrapperBase.ts:153 Parameters: Param Type Description tx Hash - contract any - votingMachine IIntVoteInterface - Returns: ArcTransactionProposalResult","title":"\u2295 new ArcTransactionProposalResult(tx: Hash, contract: any, votingMachine: IIntVoteInterface): ArcTransactionProposalResult"},{"location":"api/classes/ArcTransactionProposalResult/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ArcTransactionProposalResult/#tx","text":"\u25cf tx : Hash Inherited from ArcTransactionResult . tx Defined in iContractWrapperBase.ts:61 The transaction hash","title":"tx"},{"location":"api/classes/ArcTransactionProposalResult/#votingmachine","text":"\u25cf votingMachine : IIntVoteInterface Defined in iContractWrapperBase.ts:161 The proposal's voting machine, as IntVoteInterface","title":"votingMachine"},{"location":"api/classes/ArcTransactionProposalResult/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ArcTransactionProposalResult/#getproposalidfromminedtx","text":"\u25ba getProposalIdFromMinedTx (): Promise . Hash Defined in iContractWrapperBase.ts:170 Returns promise of the proposal id from the logs of the mined transaction. Will watch for the mined tx; if it hasn't yet been mined, could take a while to return. Returns: Promise . Hash","title":"getProposalIdFromMinedTx"},{"location":"api/classes/ArcTransactionProposalResult/#gettxconfirmed","text":"\u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxConfirmed Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxConfirmed"},{"location":"api/classes/ArcTransactionProposalResult/#gettxmined","text":"\u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Inherited from ArcTransactionResult . getTxMined Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxMined"},{"location":"api/classes/ArcTransactionProposalResult/#getvaluefromminedtx","text":"\u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Inherited from ArcTransactionResult . getValueFromMinedTx Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined","title":"getValueFromMinedTx"},{"location":"api/classes/ArcTransactionProposalResult/#watchfortxconfirmed","text":"\u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxConfirmed Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle","title":"watchForTxConfirmed"},{"location":"api/classes/ArcTransactionProposalResult/#watchfortxmined","text":"\u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Inherited from ArcTransactionResult . watchForTxMined Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"watchForTxMined"},{"location":"api/classes/ArcTransactionResult/","text":"API Reference ArcTransactionResult Class: ArcTransactionResult Hierarchy ArcTransactionResult \u21b3 ArcTransactionProposalResult \u21b3 ArcTransactionDataResult \u21b3 ArcTransactionAgreementResult Index Constructors constructor Properties tx Methods getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined Constructors \u2295 new ArcTransactionResult (tx: Hash , contract: string \u23ae any ): ArcTransactionResult Defined in iContractWrapperBase.ts:55 Parameters: Param Type Description tx Hash - contract string \u23ae any - Returns: ArcTransactionResult Properties tx \u25cf tx : Hash Defined in iContractWrapperBase.ts:61 The transaction hash Methods getTxConfirmed \u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null getTxMined \u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null getValueFromMinedTx \u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined watchForTxConfirmed \u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle watchForTxMined \u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"ArcTransactionResult"},{"location":"api/classes/ArcTransactionResult/#class-arctransactionresult","text":"","title":"Class: ArcTransactionResult"},{"location":"api/classes/ArcTransactionResult/#hierarchy","text":"ArcTransactionResult \u21b3 ArcTransactionProposalResult \u21b3 ArcTransactionDataResult \u21b3 ArcTransactionAgreementResult","title":"Hierarchy"},{"location":"api/classes/ArcTransactionResult/#index","text":"","title":"Index"},{"location":"api/classes/ArcTransactionResult/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ArcTransactionResult/#properties","text":"tx","title":"Properties"},{"location":"api/classes/ArcTransactionResult/#methods","text":"getTxConfirmed getTxMined getValueFromMinedTx watchForTxConfirmed watchForTxMined","title":"Methods"},{"location":"api/classes/ArcTransactionResult/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ArcTransactionResult/#new-arctransactionresulttx-hash-contract-stringany-arctransactionresult","text":"Defined in iContractWrapperBase.ts:55 Parameters: Param Type Description tx Hash - contract string \u23ae any - Returns: ArcTransactionResult","title":"\u2295 new ArcTransactionResult(tx: Hash, contract: string\u23aeany): ArcTransactionResult"},{"location":"api/classes/ArcTransactionResult/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ArcTransactionResult/#tx","text":"\u25cf tx : Hash Defined in iContractWrapperBase.ts:61 The transaction hash","title":"tx"},{"location":"api/classes/ArcTransactionResult/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ArcTransactionResult/#gettxconfirmed","text":"\u25ba getTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle \u23ae null Defined in iContractWrapperBase.ts:92 Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaction is not yet found at the required depth. Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxConfirmed"},{"location":"api/classes/ArcTransactionResult/#gettxmined","text":"\u25ba getTxMined (): Promise . TransactionReceiptTruffle \u23ae null Defined in iContractWrapperBase.ts:74 Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs). Returns null if the transaciton is not yet mined. Returns: Promise . TransactionReceiptTruffle \u23ae null","title":"getTxMined"},{"location":"api/classes/ArcTransactionResult/#getvaluefromminedtx","text":"\u25ba getValueFromMinedTx (valueName: string , eventName?: string , index?: number ): Promise . any \u23ae undefined Defined in iContractWrapperBase.ts:140 Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return. Parameters: Param Type Default value Description valueName string - The name of the property whose value we wish to return eventName string null Name of the event in whose log we are to look for the value index number 0 Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction. Returns: Promise . any \u23ae undefined","title":"getValueFromMinedTx"},{"location":"api/classes/ArcTransactionResult/#watchfortxconfirmed","text":"\u25ba watchForTxConfirmed (requiredDepth?: number ): Promise . TransactionReceiptTruffle Defined in iContractWrapperBase.ts:123 Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional requiredDepth . Parameters: Param Type Description requiredDepth number Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceiptTruffle","title":"watchForTxConfirmed"},{"location":"api/classes/ArcTransactionResult/#watchfortxmined","text":"\u25ba watchForTxMined (): Promise . TransactionReceiptTruffle Defined in iContractWrapperBase.ts:106 Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs). Returns: Promise . TransactionReceiptTruffle","title":"watchForTxMined"},{"location":"api/classes/AvatarService/","text":"API Reference AvatarService Class: AvatarService Methods for querying information about an Avatar. Use it by: 1 const avatarService = new AvatarService(avatarAddress); Index Constructors constructor Properties controllerService Methods getAvatar getController getControllerAddress getEthBalance getIsUController getNativeReputation getNativeReputationAddress getNativeToken getNativeTokenAddress getTokenBalance Constructors \u2295 new AvatarService (avatarAddress: Address ): AvatarService Defined in avatarService.ts:27 Parameters: Param Type Description avatarAddress Address - Returns: AvatarService Properties controllerService \u25cf controllerService : ControllerService Defined in avatarService.ts:21 Methods getAvatar \u25ba getAvatar (): Promise . any Defined in avatarService.ts:38 Returns promise of the Avatar Truffle contract wrapper. Returns undefined if not found. Returns: Promise . any getController \u25ba getController (): Promise . any Defined in avatarService.ts:68 Returns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by called getIsUController . Returns: Promise . any getControllerAddress \u25ba getControllerAddress (): Promise . string Defined in avatarService.ts:59 Returns promise of the address of the controller Returns: Promise . string getEthBalance \u25ba getEthBalance (): Promise . BigNumber Defined in avatarService.ts:147 Return the current ETH balance for this avatar, in Wei. Returns: Promise . BigNumber getIsUController \u25ba getIsUController (): Promise . boolean Defined in avatarService.ts:52 Returns: Promise . boolean getNativeReputation \u25ba getNativeReputation (): Promise . ReputationWrapper Defined in avatarService.ts:88 Returns promise of the avatar's native reputation Truffle contract wrapper. Returns: Promise . ReputationWrapper getNativeReputationAddress \u25ba getNativeReputationAddress (): Promise . string Defined in avatarService.ts:75 Returns promise of the address of the avatar's native reputation. Returns: Promise . string getNativeToken \u25ba getNativeToken (): Promise . DaoTokenWrapper Defined in avatarService.ts:115 Returns promise of the avatar's native token Truffle contract wrapper. Assumes the token is a DAOToken . Returns: Promise . DaoTokenWrapper getNativeTokenAddress \u25ba getNativeTokenAddress (): Promise . string Defined in avatarService.ts:101 Returns promise of the address of the avatar's native token. Returns: Promise . string getTokenBalance \u25ba getTokenBalance (tokenAddress?: Address ): Promise . BigNumber Defined in avatarService.ts:129 Return a current token balance for this avatar, in Wei. If tokenAddress is not supplied, then uses native token. Parameters: Param Type Description tokenAddress Address - Returns: Promise . BigNumber","title":"AvatarService"},{"location":"api/classes/AvatarService/#class-avatarservice","text":"Methods for querying information about an Avatar. Use it by: 1 const avatarService = new AvatarService(avatarAddress);","title":"Class: AvatarService"},{"location":"api/classes/AvatarService/#index","text":"","title":"Index"},{"location":"api/classes/AvatarService/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/AvatarService/#properties","text":"controllerService","title":"Properties"},{"location":"api/classes/AvatarService/#methods","text":"getAvatar getController getControllerAddress getEthBalance getIsUController getNativeReputation getNativeReputationAddress getNativeToken getNativeTokenAddress getTokenBalance","title":"Methods"},{"location":"api/classes/AvatarService/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/AvatarService/#new-avatarserviceavataraddress-address-avatarservice","text":"Defined in avatarService.ts:27 Parameters: Param Type Description avatarAddress Address - Returns: AvatarService","title":"\u2295 new AvatarService(avatarAddress: Address): AvatarService"},{"location":"api/classes/AvatarService/#properties_1","text":"","title":"Properties"},{"location":"api/classes/AvatarService/#controllerservice","text":"\u25cf controllerService : ControllerService Defined in avatarService.ts:21","title":"controllerService"},{"location":"api/classes/AvatarService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/AvatarService/#getavatar","text":"\u25ba getAvatar (): Promise . any Defined in avatarService.ts:38 Returns promise of the Avatar Truffle contract wrapper. Returns undefined if not found. Returns: Promise . any","title":"getAvatar"},{"location":"api/classes/AvatarService/#getcontroller","text":"\u25ba getController (): Promise . any Defined in avatarService.ts:68 Returns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by called getIsUController . Returns: Promise . any","title":"getController"},{"location":"api/classes/AvatarService/#getcontrolleraddress","text":"\u25ba getControllerAddress (): Promise . string Defined in avatarService.ts:59 Returns promise of the address of the controller Returns: Promise . string","title":"getControllerAddress"},{"location":"api/classes/AvatarService/#getethbalance","text":"\u25ba getEthBalance (): Promise . BigNumber Defined in avatarService.ts:147 Return the current ETH balance for this avatar, in Wei. Returns: Promise . BigNumber","title":"getEthBalance"},{"location":"api/classes/AvatarService/#getisucontroller","text":"\u25ba getIsUController (): Promise . boolean Defined in avatarService.ts:52 Returns: Promise . boolean","title":"getIsUController"},{"location":"api/classes/AvatarService/#getnativereputation","text":"\u25ba getNativeReputation (): Promise . ReputationWrapper Defined in avatarService.ts:88 Returns promise of the avatar's native reputation Truffle contract wrapper. Returns: Promise . ReputationWrapper","title":"getNativeReputation"},{"location":"api/classes/AvatarService/#getnativereputationaddress","text":"\u25ba getNativeReputationAddress (): Promise . string Defined in avatarService.ts:75 Returns promise of the address of the avatar's native reputation. Returns: Promise . string","title":"getNativeReputationAddress"},{"location":"api/classes/AvatarService/#getnativetoken","text":"\u25ba getNativeToken (): Promise . DaoTokenWrapper Defined in avatarService.ts:115 Returns promise of the avatar's native token Truffle contract wrapper. Assumes the token is a DAOToken . Returns: Promise . DaoTokenWrapper","title":"getNativeToken"},{"location":"api/classes/AvatarService/#getnativetokenaddress","text":"\u25ba getNativeTokenAddress (): Promise . string Defined in avatarService.ts:101 Returns promise of the address of the avatar's native token. Returns: Promise . string","title":"getNativeTokenAddress"},{"location":"api/classes/AvatarService/#gettokenbalance","text":"\u25ba getTokenBalance (tokenAddress?: Address ): Promise . BigNumber Defined in avatarService.ts:129 Return a current token balance for this avatar, in Wei. If tokenAddress is not supplied, then uses native token. Parameters: Param Type Description tokenAddress Address - Returns: Promise . BigNumber","title":"getTokenBalance"},{"location":"api/classes/ConfigService/","text":"API Reference ConfigService Class: ConfigService Set and set global Arc.js settings. For more information, refer to Configuring Arc.js . Index Constructors constructor Properties data instance Methods get set get set Constructors \u2295 new ConfigService (): ConfigService Defined in configService.ts:36 Returns: ConfigService Properties \u00abStatic\u00bb data \u25cf data : any Defined in configService.ts:11 \u00abStatic\u00bb instance \u25cf instance : IConfigService Defined in configService.ts:10 Methods get \u25ba get (setting: string ): any Defined in configService.ts:59 Parameters: Param Type Description setting string - Returns: any set \u25ba set (setting: string , value: any ): void Defined in configService.ts:63 Parameters: Param Type Description setting string - value any - Returns: void \u00abStatic\u00bb get \u25ba get (setting: string ): any Defined in configService.ts:13 Parameters: Param Type Description setting string - Returns: any \u00abStatic\u00bb set \u25ba set (setting: string , value: any ): void Defined in configService.ts:25 Parameters: Param Type Description setting string - value any - Returns: void","title":"ConfigService"},{"location":"api/classes/ConfigService/#class-configservice","text":"Set and set global Arc.js settings. For more information, refer to Configuring Arc.js .","title":"Class: ConfigService"},{"location":"api/classes/ConfigService/#index","text":"","title":"Index"},{"location":"api/classes/ConfigService/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ConfigService/#properties","text":"data instance","title":"Properties"},{"location":"api/classes/ConfigService/#methods","text":"get set get set","title":"Methods"},{"location":"api/classes/ConfigService/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ConfigService/#new-configservice-configservice","text":"Defined in configService.ts:36 Returns: ConfigService","title":"\u2295 new ConfigService(): ConfigService"},{"location":"api/classes/ConfigService/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ConfigService/#static-data","text":"\u25cf data : any Defined in configService.ts:11","title":"\u00abStatic\u00bb data"},{"location":"api/classes/ConfigService/#static-instance","text":"\u25cf instance : IConfigService Defined in configService.ts:10","title":"\u00abStatic\u00bb instance"},{"location":"api/classes/ConfigService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ConfigService/#get","text":"\u25ba get (setting: string ): any Defined in configService.ts:59 Parameters: Param Type Description setting string - Returns: any","title":"get"},{"location":"api/classes/ConfigService/#set","text":"\u25ba set (setting: string , value: any ): void Defined in configService.ts:63 Parameters: Param Type Description setting string - value any - Returns: void","title":"set"},{"location":"api/classes/ConfigService/#static-get","text":"\u25ba get (setting: string ): any Defined in configService.ts:13 Parameters: Param Type Description setting string - Returns: any","title":"\u00abStatic\u00bb get"},{"location":"api/classes/ConfigService/#static-set","text":"\u25ba set (setting: string , value: any ): void Defined in configService.ts:25 Parameters: Param Type Description setting string - value any - Returns: void","title":"\u00abStatic\u00bb set"},{"location":"api/classes/ContractWrapperBase/","text":"API Reference ContractWrapperBase Class: ContractWrapperBase Abstract base class for all Arc contract wrapper classes. Example of how to define a wrapper: 1 2 3 4 5 6 7 8 9 10 11 import { ContractWrapperBase } from ../contractWrapperBase ; import { ContractWrapperFactory } from ../contractWrapperFactory ; export class AbsoluteVoteWrapper extends ContractWrapperBase { [ wrapper properties and methods ] } export const AbsoluteVote = new ContractWrapperFactory ( AbsoluteVote , AbsoluteVoteWrapper , new Web3EventService ()); Hierarchy ContractWrapperBase \u21b3 StandardTokenWrapper \u21b3 ReputationWrapper \u21b3 IntVoteInterfaceWrapper \u21b3 ProposalGeneratorBase \u21b3 RedeemerWrapper \u21b3 TokenCapGCWrapper \u21b3 DaoCreatorWrapper Implements IContractWrapper Index Constructors constructor Properties contract factory friendlyName name Accessors address Methods estimateGas getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew Constructors \u2295 new ContractWrapperBase (solidityContract: any , web3EventService: Web3EventService ): ContractWrapperBase Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: ContractWrapperBase Properties contract \u25cf contract : any Implementation of IContractWrapper . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. \u00abAbstract\u00bb factory \u25cf factory : IContractWrapperFactory any Implementation of IContractWrapper . factory Defined in contractWrapperBase.ts:49 The wrapper factor class providing static methods at(someAddress) , new() and deployed() . \u00abAbstract\u00bb friendlyName \u25cf friendlyName : string Implementation of IContractWrapper . friendlyName Defined in contractWrapperBase.ts:57 A more friendly name for the contract. \u00abAbstract\u00bb name \u25cf name : string Implementation of IContractWrapper . name Defined in contractWrapperBase.ts:53 The name of the contract. Accessors address getaddress(): Address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"ContractWrapperBase"},{"location":"api/classes/ContractWrapperBase/#class-contractwrapperbase","text":"Abstract base class for all Arc contract wrapper classes. Example of how to define a wrapper: 1 2 3 4 5 6 7 8 9 10 11 import { ContractWrapperBase } from ../contractWrapperBase ; import { ContractWrapperFactory } from ../contractWrapperFactory ; export class AbsoluteVoteWrapper extends ContractWrapperBase { [ wrapper properties and methods ] } export const AbsoluteVote = new ContractWrapperFactory ( AbsoluteVote , AbsoluteVoteWrapper , new Web3EventService ());","title":"Class: ContractWrapperBase"},{"location":"api/classes/ContractWrapperBase/#hierarchy","text":"ContractWrapperBase \u21b3 StandardTokenWrapper \u21b3 ReputationWrapper \u21b3 IntVoteInterfaceWrapper \u21b3 ProposalGeneratorBase \u21b3 RedeemerWrapper \u21b3 TokenCapGCWrapper \u21b3 DaoCreatorWrapper","title":"Hierarchy"},{"location":"api/classes/ContractWrapperBase/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/ContractWrapperBase/#index","text":"","title":"Index"},{"location":"api/classes/ContractWrapperBase/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ContractWrapperBase/#properties","text":"contract factory friendlyName name","title":"Properties"},{"location":"api/classes/ContractWrapperBase/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/ContractWrapperBase/#methods","text":"estimateGas getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew","title":"Methods"},{"location":"api/classes/ContractWrapperBase/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ContractWrapperBase/#new-contractwrapperbasesoliditycontract-any-web3eventservice-web3eventservice-contractwrapperbase","text":"Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: ContractWrapperBase","title":"\u2295 new ContractWrapperBase(solidityContract: any, web3EventService: Web3EventService): ContractWrapperBase"},{"location":"api/classes/ContractWrapperBase/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ContractWrapperBase/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/ContractWrapperBase/#abstract-factory","text":"\u25cf factory : IContractWrapperFactory any Implementation of IContractWrapper . factory Defined in contractWrapperBase.ts:49 The wrapper factor class providing static methods at(someAddress) , new() and deployed() .","title":"\u00abAbstract\u00bb factory"},{"location":"api/classes/ContractWrapperBase/#abstract-friendlyname","text":"\u25cf friendlyName : string Implementation of IContractWrapper . friendlyName Defined in contractWrapperBase.ts:57 A more friendly name for the contract.","title":"\u00abAbstract\u00bb friendlyName"},{"location":"api/classes/ContractWrapperBase/#abstract-name","text":"\u25cf name : string Implementation of IContractWrapper . name Defined in contractWrapperBase.ts:53 The name of the contract.","title":"\u00abAbstract\u00bb name"},{"location":"api/classes/ContractWrapperBase/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/ContractWrapperBase/#address","text":"getaddress(): Address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/ContractWrapperBase/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ContractWrapperBase/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/ContractWrapperBase/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/ContractWrapperBase/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/ContractWrapperBase/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/ContractWrapperBase/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/ContractWrapperBase/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/ContractWrapperBase/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/ContractWrapperFactory/","text":"API Reference ContractWrapperFactory Class: ContractWrapperFactory Generic class factory for all of the contract wrapper classes. Type parameters TWrapper : IContractWrapper Hierarchy ContractWrapperFactory \u21b3 StandardTokenFactoryType \u21b3 MintableTokenFactoryType \u21b3 DaoTokenFactoryType \u21b3 ReputationFactoryType \u21b3 IntVoteInterfaceFactoryType \u21b3 GenesisProtocolFactoryType \u21b3 RedeemerFactoryType \u21b3 DaoCreatorFactoryType Implements IContractWrapperFactory TWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new ContractWrapperFactory (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): ContractWrapperFactory Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: ContractWrapperFactory Methods at \u25ba at (address: string ): Promise . TWrapper Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . TWrapper deployed \u25ba deployed (): Promise . TWrapper Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . TWrapper new \u25ba new (...rest: Array . any ): Promise . TWrapper Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . TWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"ContractWrapperFactory"},{"location":"api/classes/ContractWrapperFactory/#class-contractwrapperfactory","text":"Generic class factory for all of the contract wrapper classes.","title":"Class: ContractWrapperFactory"},{"location":"api/classes/ContractWrapperFactory/#type-parameters","text":"","title":"Type parameters"},{"location":"api/classes/ContractWrapperFactory/#twrapper-icontractwrapper","text":"","title":"TWrapper :  IContractWrapper"},{"location":"api/classes/ContractWrapperFactory/#hierarchy","text":"ContractWrapperFactory \u21b3 StandardTokenFactoryType \u21b3 MintableTokenFactoryType \u21b3 DaoTokenFactoryType \u21b3 ReputationFactoryType \u21b3 IntVoteInterfaceFactoryType \u21b3 GenesisProtocolFactoryType \u21b3 RedeemerFactoryType \u21b3 DaoCreatorFactoryType","title":"Hierarchy"},{"location":"api/classes/ContractWrapperFactory/#implements","text":"IContractWrapperFactory TWrapper","title":"Implements"},{"location":"api/classes/ContractWrapperFactory/#index","text":"","title":"Index"},{"location":"api/classes/ContractWrapperFactory/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ContractWrapperFactory/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/ContractWrapperFactory/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ContractWrapperFactory/#new-contractwrapperfactorysoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-contractwrapperfactory","text":"Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: ContractWrapperFactory","title":"\u2295 new ContractWrapperFactory(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): ContractWrapperFactory"},{"location":"api/classes/ContractWrapperFactory/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ContractWrapperFactory/#at","text":"\u25ba at (address: string ): Promise . TWrapper Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . TWrapper","title":"at"},{"location":"api/classes/ContractWrapperFactory/#deployed","text":"\u25ba deployed (): Promise . TWrapper Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . TWrapper","title":"deployed"},{"location":"api/classes/ContractWrapperFactory/#new","text":"\u25ba new (...rest: Array . any ): Promise . TWrapper Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . TWrapper","title":"new"},{"location":"api/classes/ContractWrapperFactory/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/ContributionRewardWrapper/","text":"API Reference ContributionRewardWrapper Class: ContributionRewardWrapper Hierarchy \u21b3 ProposalGeneratorBase \u21b3 ContributionRewardWrapper Implements IContractWrapper IUniversalSchemeWrapper Index Constructors constructor Properties NewContributionProposal ProposalDeleted ProposalExecuted RedeemEther RedeemExternalToken RedeemNativeToken RedeemReputation contract factory friendlyName name Accessors address Methods estimateGas getBeneficiaryRewards getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getProposal getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeContributionReward redeemContributionReward redeemEther redeemExternalToken redeemNativeToken redeemReputation setParameters Constructors \u2295 new ContributionRewardWrapper (solidityContract: any , web3EventService: Web3EventService ): ContributionRewardWrapper Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: ContributionRewardWrapper Properties NewContributionProposal \u25cf NewContributionProposal : EventFetcherFactory NewContributionProposalEventResult Defined in wrappers/contributionReward.ts:42 Events ProposalDeleted \u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/contributionReward.ts:44 ProposalExecuted \u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/contributionReward.ts:43 RedeemEther \u25cf RedeemEther : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:46 RedeemExternalToken \u25cf RedeemExternalToken : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:48 RedeemNativeToken \u25cf RedeemNativeToken : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:47 RedeemReputation \u25cf RedeemReputation : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:45 contract \u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory ContributionRewardWrapper = ContributionRewardFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/contributionReward.ts:36 friendlyName \u25cf friendlyName : string = \"Contribution Reward\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/contributionReward.ts:35 name \u25cf name : string = \"ContributionReward\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/contributionReward.ts:34 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getBeneficiaryRewards \u25ba getBeneficiaryRewards (options?: GetBeneficiaryRewardsParams ): Promise . Array . ProposalRewards Defined in wrappers/contributionReward.ts:366 Return a list of ProposalRewards for executed (passed by vote) proposals that have rewards waiting to be redeemed by the given beneficiary. ProposalRewards includes the total amount redeemable, the amount yet-to-be redeemed and where applicable, the amount that the Dao has available to pay out. The latter is useful for anticipating whether an attempt to redeem would succeed. Parameters: Param Type Default value Description options GetBeneficiaryRewardsParams {} as GetBeneficiaryRewardsParams - Returns: Promise . Array . ProposalRewards getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/contributionReward.ts:491 Returns: SchemePermissions getExecutedProposals \u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory ContributionProposal , SchemeProposalExecutedEventResult Defined in wrappers/contributionReward.ts:343 EntityFetcherFactory for executed ContributionProposals. The Arc ContributionProposals contract retains the original proposal struct after execution. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory ContributionProposal , SchemeProposalExecutedEventResult getParameters \u25ba getParameters (paramsHash: Hash ): Promise . ContributionRewardParamsReturn Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/contributionReward.ts:503 Parameters: Param Type Description paramsHash Hash - Returns: Promise . ContributionRewardParamsReturn getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: ContributionRewardParams ): Promise . Hash Defined in wrappers/contributionReward.ts:441 Parameters: Param Type Description params ContributionRewardParams - Returns: Promise . Hash getProposal \u25ba getProposal (avatarAddress: Address , proposalId: Hash ): Promise . ContributionProposal Defined in wrappers/contributionReward.ts:486 Returns promise of a ContributionProposal for the given proposal id and avatar address. Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . ContributionProposal getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . ContributionRewardParamsReturn Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/contributionReward.ts:499 Parameters: Param Type Description avatarAddress Address - Returns: Promise . ContributionRewardParamsReturn getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/contributionReward.ts:495 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions getVotableProposals \u25ba getVotableProposals (avatarAddress: Address ): Promise . EntityFetcherFactory ContributionProposal , NewContributionProposalEventResult Defined in wrappers/contributionReward.ts:318 EntityFetcherFactory for votable ContributionProposals. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory ContributionProposal , NewContributionProposalEventResult getVotingMachine \u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper getVotingMachineAddress \u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this proposeContributionReward \u25ba proposeContributionReward (options?: ProposeContributionRewardParams ): Promise . ArcTransactionProposalResult Defined in wrappers/contributionReward.ts:55 Submit a proposal to reward a beneficiary for contributions to the DAO Parameters: Param Type Default value Description options ProposeContributionRewardParams {} as ProposeContributionRewardParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult redeemContributionReward \u25ba redeemContributionReward (options?: ContributionRewardRedeemParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:175 Redeem the specified rewards for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardRedeemParams {} as ContributionRewardRedeemParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult redeemEther \u25ba redeemEther (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:291 Redeem ether reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult redeemExternalToken \u25ba redeemExternalToken (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:210 Redeem external token reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult redeemNativeToken \u25ba redeemNativeToken (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:264 Redeem native token reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult redeemReputation \u25ba redeemReputation (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:237 Redeem reputation reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult setParameters \u25ba setParameters (params: ContributionRewardParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/contributionReward.ts:455 Parameters: Param Type Description params ContributionRewardParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"ContributionRewardWrapper"},{"location":"api/classes/ContributionRewardWrapper/#class-contributionrewardwrapper","text":"","title":"Class: ContributionRewardWrapper"},{"location":"api/classes/ContributionRewardWrapper/#hierarchy","text":"\u21b3 ProposalGeneratorBase \u21b3 ContributionRewardWrapper","title":"Hierarchy"},{"location":"api/classes/ContributionRewardWrapper/#implements","text":"IContractWrapper IUniversalSchemeWrapper","title":"Implements"},{"location":"api/classes/ContributionRewardWrapper/#index","text":"","title":"Index"},{"location":"api/classes/ContributionRewardWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ContributionRewardWrapper/#properties","text":"NewContributionProposal ProposalDeleted ProposalExecuted RedeemEther RedeemExternalToken RedeemNativeToken RedeemReputation contract factory friendlyName name","title":"Properties"},{"location":"api/classes/ContributionRewardWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/ContributionRewardWrapper/#methods","text":"estimateGas getBeneficiaryRewards getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getProposal getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeContributionReward redeemContributionReward redeemEther redeemExternalToken redeemNativeToken redeemReputation setParameters","title":"Methods"},{"location":"api/classes/ContributionRewardWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ContributionRewardWrapper/#new-contributionrewardwrappersoliditycontract-any-web3eventservice-web3eventservice-contributionrewardwrapper","text":"Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: ContributionRewardWrapper","title":"\u2295 new ContributionRewardWrapper(solidityContract: any, web3EventService: Web3EventService): ContributionRewardWrapper"},{"location":"api/classes/ContributionRewardWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ContributionRewardWrapper/#newcontributionproposal","text":"\u25cf NewContributionProposal : EventFetcherFactory NewContributionProposalEventResult Defined in wrappers/contributionReward.ts:42 Events","title":"NewContributionProposal"},{"location":"api/classes/ContributionRewardWrapper/#proposaldeleted","text":"\u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/contributionReward.ts:44","title":"ProposalDeleted"},{"location":"api/classes/ContributionRewardWrapper/#proposalexecuted","text":"\u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/contributionReward.ts:43","title":"ProposalExecuted"},{"location":"api/classes/ContributionRewardWrapper/#redeemether","text":"\u25cf RedeemEther : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:46","title":"RedeemEther"},{"location":"api/classes/ContributionRewardWrapper/#redeemexternaltoken","text":"\u25cf RedeemExternalToken : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:48","title":"RedeemExternalToken"},{"location":"api/classes/ContributionRewardWrapper/#redeemnativetoken","text":"\u25cf RedeemNativeToken : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:47","title":"RedeemNativeToken"},{"location":"api/classes/ContributionRewardWrapper/#redeemreputation","text":"\u25cf RedeemReputation : EventFetcherFactory RedeemEventResult Defined in wrappers/contributionReward.ts:45","title":"RedeemReputation"},{"location":"api/classes/ContributionRewardWrapper/#contract","text":"\u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/ContributionRewardWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory ContributionRewardWrapper = ContributionRewardFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/contributionReward.ts:36","title":"factory"},{"location":"api/classes/ContributionRewardWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Contribution Reward\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/contributionReward.ts:35","title":"friendlyName"},{"location":"api/classes/ContributionRewardWrapper/#name","text":"\u25cf name : string = \"ContributionReward\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/contributionReward.ts:34","title":"name"},{"location":"api/classes/ContributionRewardWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/ContributionRewardWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/ContributionRewardWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ContributionRewardWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/ContributionRewardWrapper/#getbeneficiaryrewards","text":"\u25ba getBeneficiaryRewards (options?: GetBeneficiaryRewardsParams ): Promise . Array . ProposalRewards Defined in wrappers/contributionReward.ts:366 Return a list of ProposalRewards for executed (passed by vote) proposals that have rewards waiting to be redeemed by the given beneficiary. ProposalRewards includes the total amount redeemable, the amount yet-to-be redeemed and where applicable, the amount that the Dao has available to pay out. The latter is useful for anticipating whether an attempt to redeem would succeed. Parameters: Param Type Default value Description options GetBeneficiaryRewardsParams {} as GetBeneficiaryRewardsParams - Returns: Promise . Array . ProposalRewards","title":"getBeneficiaryRewards"},{"location":"api/classes/ContributionRewardWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/contributionReward.ts:491 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/classes/ContributionRewardWrapper/#getexecutedproposals","text":"\u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory ContributionProposal , SchemeProposalExecutedEventResult Defined in wrappers/contributionReward.ts:343 EntityFetcherFactory for executed ContributionProposals. The Arc ContributionProposals contract retains the original proposal struct after execution. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory ContributionProposal , SchemeProposalExecutedEventResult","title":"getExecutedProposals"},{"location":"api/classes/ContributionRewardWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . ContributionRewardParamsReturn Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/contributionReward.ts:503 Parameters: Param Type Description paramsHash Hash - Returns: Promise . ContributionRewardParamsReturn","title":"getParameters"},{"location":"api/classes/ContributionRewardWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/ContributionRewardWrapper/#getparametershash","text":"\u25ba getParametersHash (params: ContributionRewardParams ): Promise . Hash Defined in wrappers/contributionReward.ts:441 Parameters: Param Type Description params ContributionRewardParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/ContributionRewardWrapper/#getproposal","text":"\u25ba getProposal (avatarAddress: Address , proposalId: Hash ): Promise . ContributionProposal Defined in wrappers/contributionReward.ts:486 Returns promise of a ContributionProposal for the given proposal id and avatar address. Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . ContributionProposal","title":"getProposal"},{"location":"api/classes/ContributionRewardWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . ContributionRewardParamsReturn Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/contributionReward.ts:499 Parameters: Param Type Description avatarAddress Address - Returns: Promise . ContributionRewardParamsReturn","title":"getSchemeParameters"},{"location":"api/classes/ContributionRewardWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/ContributionRewardWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/contributionReward.ts:495 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/classes/ContributionRewardWrapper/#getvotableproposals","text":"\u25ba getVotableProposals (avatarAddress: Address ): Promise . EntityFetcherFactory ContributionProposal , NewContributionProposalEventResult Defined in wrappers/contributionReward.ts:318 EntityFetcherFactory for votable ContributionProposals. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory ContributionProposal , NewContributionProposalEventResult","title":"getVotableProposals"},{"location":"api/classes/ContributionRewardWrapper/#getvotingmachine","text":"\u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper","title":"getVotingMachine"},{"location":"api/classes/ContributionRewardWrapper/#getvotingmachineaddress","text":"\u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address","title":"getVotingMachineAddress"},{"location":"api/classes/ContributionRewardWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/ContributionRewardWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/ContributionRewardWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/ContributionRewardWrapper/#proposecontributionreward","text":"\u25ba proposeContributionReward (options?: ProposeContributionRewardParams ): Promise . ArcTransactionProposalResult Defined in wrappers/contributionReward.ts:55 Submit a proposal to reward a beneficiary for contributions to the DAO Parameters: Param Type Default value Description options ProposeContributionRewardParams {} as ProposeContributionRewardParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"proposeContributionReward"},{"location":"api/classes/ContributionRewardWrapper/#redeemcontributionreward","text":"\u25ba redeemContributionReward (options?: ContributionRewardRedeemParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:175 Redeem the specified rewards for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardRedeemParams {} as ContributionRewardRedeemParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"redeemContributionReward"},{"location":"api/classes/ContributionRewardWrapper/#redeemether_1","text":"\u25ba redeemEther (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:291 Redeem ether reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"redeemEther"},{"location":"api/classes/ContributionRewardWrapper/#redeemexternaltoken_1","text":"\u25ba redeemExternalToken (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:210 Redeem external token reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"redeemExternalToken"},{"location":"api/classes/ContributionRewardWrapper/#redeemnativetoken_1","text":"\u25ba redeemNativeToken (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:264 Redeem native token reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"redeemNativeToken"},{"location":"api/classes/ContributionRewardWrapper/#redeemreputation_1","text":"\u25ba redeemReputation (options?: ContributionRewardSpecifiedRedemptionParams ): Promise . ArcTransactionResult Defined in wrappers/contributionReward.ts:237 Redeem reputation reward for the beneficiary of the proposal Parameters: Param Type Default value Description options ContributionRewardSpecifiedRedemptionParams {} as ContributionRewardSpecifiedRedemptionParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"redeemReputation"},{"location":"api/classes/ContributionRewardWrapper/#setparameters","text":"\u25ba setParameters (params: ContributionRewardParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/contributionReward.ts:455 Parameters: Param Type Description params ContributionRewardParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/ControllerService/","text":"API Reference ControllerService Class: ControllerService Methods for querying information about an Avatar's controller. Use it by: 1 const controllerService = new ControllerService(avatarAddress); Index Constructors constructor Methods getController getControllerAddress getIsUController Constructors \u2295 new ControllerService (avatarAddress: Address ): ControllerService Defined in controllerService.ts:20 Parameters: Param Type Description avatarAddress Address - Returns: ControllerService Methods getController \u25ba getController (): Promise . any Defined in controllerService.ts:53 Returns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by checking the ControllerService instance property isUController . Returns: Promise . any getControllerAddress \u25ba getControllerAddress (): Promise . string Defined in controllerService.ts:38 Returns promise of the address of the controller Returns: Promise . string getIsUController \u25ba getIsUController (): Promise . boolean Defined in controllerService.ts:30 Returns promise of whether avatar has a universal controller Returns: Promise . boolean","title":"ControllerService"},{"location":"api/classes/ControllerService/#class-controllerservice","text":"Methods for querying information about an Avatar's controller. Use it by: 1 const controllerService = new ControllerService(avatarAddress);","title":"Class: ControllerService"},{"location":"api/classes/ControllerService/#index","text":"","title":"Index"},{"location":"api/classes/ControllerService/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ControllerService/#methods","text":"getController getControllerAddress getIsUController","title":"Methods"},{"location":"api/classes/ControllerService/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ControllerService/#new-controllerserviceavataraddress-address-controllerservice","text":"Defined in controllerService.ts:20 Parameters: Param Type Description avatarAddress Address - Returns: ControllerService","title":"\u2295 new ControllerService(avatarAddress: Address): ControllerService"},{"location":"api/classes/ControllerService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ControllerService/#getcontroller","text":"\u25ba getController (): Promise . any Defined in controllerService.ts:53 Returns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by checking the ControllerService instance property isUController . Returns: Promise . any","title":"getController"},{"location":"api/classes/ControllerService/#getcontrolleraddress","text":"\u25ba getControllerAddress (): Promise . string Defined in controllerService.ts:38 Returns promise of the address of the controller Returns: Promise . string","title":"getControllerAddress"},{"location":"api/classes/ControllerService/#getisucontroller","text":"\u25ba getIsUController (): Promise . boolean Defined in controllerService.ts:30 Returns promise of whether avatar has a universal controller Returns: Promise . boolean","title":"getIsUController"},{"location":"api/classes/DAO/","text":"API Reference DAO Class: DAO Helper class and factory for DAOs. Index Properties avatar controller hasUController name reputation token Methods getGlobalConstraints getParticipants getSchemes getTokenBalance getTokenName getTokenSymbol isGlobalConstraintRegistered isSchemeRegistered at getDaoCreationEvents getDaos new Properties avatar \u25cf avatar : any Defined in dao.ts:128 Truffle contract wrapper for the DAO's Avatar controller \u25cf controller : any Defined in dao.ts:132 Truffle contract wrapper for the DAO's controller (Controller or UController by default, see DAO.hasUController) hasUController \u25cf hasUController : boolean Defined in dao.ts:136 true if the DAO is using Arc's universal controller name \u25cf name : string Defined in dao.ts:148 the name of the DAO reputation \u25cf reputation : ReputationWrapper Defined in dao.ts:144 Truffle contract wrapper for the DAO's native reputation (Reputation) token \u25cf token : DaoTokenWrapper Defined in dao.ts:140 Truffle contract wrapper for the DAO's native token (DAOToken by default) Methods getGlobalConstraints \u25ba getGlobalConstraints (name?: string ): Promise . Array . DaoGlobalConstraintInfo Defined in dao.ts:167 Returns the promise of all os the global constraints currently registered into this DAO, as Array Parameters: Param Type Description name string Optionally filter by the name of a global constraint, like \"TokenCapGC\" Returns: Promise . Array . DaoGlobalConstraintInfo getParticipants \u25ba getParticipants (options?: GetParticipantsOptions ): Promise . Array . Participant Defined in dao.ts:184 Returns promise of an array of Participant representing accounts that currently have greater-than-zero reputation with this DAO. Optionally returns the current reputation of each participant. Parameters: Param Type Default value Description options GetParticipantsOptions {} as GetParticipantsOptions - Returns: Promise . Array . Participant getSchemes \u25ba getSchemes (name?: string ): Promise . Array . DaoSchemeInfo Defined in dao.ts:154 Returns the promise of all of the schemes registered into this DAO, as Array Parameters: Param Type Description name string Optionally filter by the name of a scheme, like \"SchemeRegistrar\" Returns: Promise . Array . DaoSchemeInfo getTokenBalance \u25ba getTokenBalance (agentAddress: Address ): Promise . BigNumber Defined in dao.ts:234 Returns a promise of the given account's native token balance. Parameters: Param Type Description agentAddress Address - Returns: Promise . BigNumber getTokenName \u25ba getTokenName (): Promise . string Defined in dao.ts:241 Returns the promise of the token name for the DAO as stored in the native token Returns: Promise . string getTokenSymbol \u25ba getTokenSymbol (): Promise . string Defined in dao.ts:249 Returns the promise of the token symbol for the DAO as stored in the native token Returns: Promise . string isGlobalConstraintRegistered \u25ba isGlobalConstraintRegistered (gc: Address ): Promise . boolean Defined in dao.ts:226 Returns whether the global constraint with the given address is registered to this DAO's controller Parameters: Param Type Description gc Address - Returns: Promise . boolean isSchemeRegistered \u25ba isSchemeRegistered (schemeAddress: Address ): Promise . boolean Defined in dao.ts:219 Returns whether the scheme with the given address is registered to this DAO's controller Parameters: Param Type Description schemeAddress Address - Returns: Promise . boolean \u00abStatic\u00bb at \u25ba at (avatarAddress: Address ): Promise . DAO Defined in dao.ts:67 Returns the promise of a DAO at the given address. Returns undefined if not found. Parameters: Param Type Description avatarAddress Address The DAO avatar's address Returns: Promise . DAO \u00abStatic\u00bb getDaoCreationEvents \u25ba getDaoCreationEvents (options?: GetDaosOptions ): Promise . EntityFetcherFactory Address , InitialSchemesSetEventResult Defined in dao.ts:109 Return a promise of an EntityFetcherFactory to get/watch avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js. An alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater. Parameters: Param Type Default value Description options GetDaosOptions {} Optional, default is {} . Returns: Promise . EntityFetcherFactory Address , InitialSchemesSetEventResult \u00abStatic\u00bb getDaos \u25ba getDaos (options?: GetDaosOptions ): Promise . Array . Address Defined in dao.ts:96 Return a promise of an array of avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js. An alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater. Parameters: Param Type Default value Description options GetDaosOptions {} - Returns: Promise . Array . Address \u00abStatic\u00bb new \u25ba new (options: NewDaoConfig TxGeneratingFunctionOptions ): Promise . DAO Defined in dao.ts:24 Returns the promise of a new DAO Parameters: Param Type Description options NewDaoConfig TxGeneratingFunctionOptions Configuration of the new DAO Returns: Promise . DAO","title":"DAO"},{"location":"api/classes/DAO/#class-dao","text":"Helper class and factory for DAOs.","title":"Class: DAO"},{"location":"api/classes/DAO/#index","text":"","title":"Index"},{"location":"api/classes/DAO/#properties","text":"avatar controller hasUController name reputation token","title":"Properties"},{"location":"api/classes/DAO/#methods","text":"getGlobalConstraints getParticipants getSchemes getTokenBalance getTokenName getTokenSymbol isGlobalConstraintRegistered isSchemeRegistered at getDaoCreationEvents getDaos new","title":"Methods"},{"location":"api/classes/DAO/#properties_1","text":"","title":"Properties"},{"location":"api/classes/DAO/#avatar","text":"\u25cf avatar : any Defined in dao.ts:128 Truffle contract wrapper for the DAO's Avatar","title":"avatar"},{"location":"api/classes/DAO/#controller","text":"\u25cf controller : any Defined in dao.ts:132 Truffle contract wrapper for the DAO's controller (Controller or UController by default, see DAO.hasUController)","title":"controller"},{"location":"api/classes/DAO/#hasucontroller","text":"\u25cf hasUController : boolean Defined in dao.ts:136 true if the DAO is using Arc's universal controller","title":"hasUController"},{"location":"api/classes/DAO/#name","text":"\u25cf name : string Defined in dao.ts:148 the name of the DAO","title":"name"},{"location":"api/classes/DAO/#reputation","text":"\u25cf reputation : ReputationWrapper Defined in dao.ts:144 Truffle contract wrapper for the DAO's native reputation (Reputation)","title":"reputation"},{"location":"api/classes/DAO/#token","text":"\u25cf token : DaoTokenWrapper Defined in dao.ts:140 Truffle contract wrapper for the DAO's native token (DAOToken by default)","title":"token"},{"location":"api/classes/DAO/#methods_1","text":"","title":"Methods"},{"location":"api/classes/DAO/#getglobalconstraints","text":"\u25ba getGlobalConstraints (name?: string ): Promise . Array . DaoGlobalConstraintInfo Defined in dao.ts:167 Returns the promise of all os the global constraints currently registered into this DAO, as Array Parameters: Param Type Description name string Optionally filter by the name of a global constraint, like \"TokenCapGC\" Returns: Promise . Array . DaoGlobalConstraintInfo","title":"getGlobalConstraints"},{"location":"api/classes/DAO/#getparticipants","text":"\u25ba getParticipants (options?: GetParticipantsOptions ): Promise . Array . Participant Defined in dao.ts:184 Returns promise of an array of Participant representing accounts that currently have greater-than-zero reputation with this DAO. Optionally returns the current reputation of each participant. Parameters: Param Type Default value Description options GetParticipantsOptions {} as GetParticipantsOptions - Returns: Promise . Array . Participant","title":"getParticipants"},{"location":"api/classes/DAO/#getschemes","text":"\u25ba getSchemes (name?: string ): Promise . Array . DaoSchemeInfo Defined in dao.ts:154 Returns the promise of all of the schemes registered into this DAO, as Array Parameters: Param Type Description name string Optionally filter by the name of a scheme, like \"SchemeRegistrar\" Returns: Promise . Array . DaoSchemeInfo","title":"getSchemes"},{"location":"api/classes/DAO/#gettokenbalance","text":"\u25ba getTokenBalance (agentAddress: Address ): Promise . BigNumber Defined in dao.ts:234 Returns a promise of the given account's native token balance. Parameters: Param Type Description agentAddress Address - Returns: Promise . BigNumber","title":"getTokenBalance"},{"location":"api/classes/DAO/#gettokenname","text":"\u25ba getTokenName (): Promise . string Defined in dao.ts:241 Returns the promise of the token name for the DAO as stored in the native token Returns: Promise . string","title":"getTokenName"},{"location":"api/classes/DAO/#gettokensymbol","text":"\u25ba getTokenSymbol (): Promise . string Defined in dao.ts:249 Returns the promise of the token symbol for the DAO as stored in the native token Returns: Promise . string","title":"getTokenSymbol"},{"location":"api/classes/DAO/#isglobalconstraintregistered","text":"\u25ba isGlobalConstraintRegistered (gc: Address ): Promise . boolean Defined in dao.ts:226 Returns whether the global constraint with the given address is registered to this DAO's controller Parameters: Param Type Description gc Address - Returns: Promise . boolean","title":"isGlobalConstraintRegistered"},{"location":"api/classes/DAO/#isschemeregistered","text":"\u25ba isSchemeRegistered (schemeAddress: Address ): Promise . boolean Defined in dao.ts:219 Returns whether the scheme with the given address is registered to this DAO's controller Parameters: Param Type Description schemeAddress Address - Returns: Promise . boolean","title":"isSchemeRegistered"},{"location":"api/classes/DAO/#static-at","text":"\u25ba at (avatarAddress: Address ): Promise . DAO Defined in dao.ts:67 Returns the promise of a DAO at the given address. Returns undefined if not found. Parameters: Param Type Description avatarAddress Address The DAO avatar's address Returns: Promise . DAO","title":"\u00abStatic\u00bb at"},{"location":"api/classes/DAO/#static-getdaocreationevents","text":"\u25ba getDaoCreationEvents (options?: GetDaosOptions ): Promise . EntityFetcherFactory Address , InitialSchemesSetEventResult Defined in dao.ts:109 Return a promise of an EntityFetcherFactory to get/watch avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js. An alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater. Parameters: Param Type Default value Description options GetDaosOptions {} Optional, default is {} . Returns: Promise . EntityFetcherFactory Address , InitialSchemesSetEventResult","title":"\u00abStatic\u00bb getDaoCreationEvents"},{"location":"api/classes/DAO/#static-getdaos","text":"\u25ba getDaos (options?: GetDaosOptions ): Promise . Array . Address Defined in dao.ts:96 Return a promise of an array of avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js. An alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater. Parameters: Param Type Default value Description options GetDaosOptions {} - Returns: Promise . Array . Address","title":"\u00abStatic\u00bb getDaos"},{"location":"api/classes/DAO/#static-new","text":"\u25ba new (options: NewDaoConfig TxGeneratingFunctionOptions ): Promise . DAO Defined in dao.ts:24 Returns the promise of a new DAO Parameters: Param Type Description options NewDaoConfig TxGeneratingFunctionOptions Configuration of the new DAO Returns: Promise . DAO","title":"\u00abStatic\u00bb new"},{"location":"api/classes/DaoCreatorFactoryType/","text":"API Reference DaoCreatorFactoryType Class: DaoCreatorFactoryType defined just to add good type checking Hierarchy ContractWrapperFactory DaoCreatorWrapper \u21b3 DaoCreatorFactoryType Implements IContractWrapperFactory DaoCreatorWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new DaoCreatorFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): DaoCreatorFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: DaoCreatorFactoryType Methods at \u25ba at (address: string ): Promise . DaoCreatorWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . DaoCreatorWrapper deployed \u25ba deployed (): Promise . DaoCreatorWrapper Inherited from ContractWrapperFactory . deployed Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . DaoCreatorWrapper new \u25ba new (controllerCreatorAddress?: Address ): Promise . DaoCreatorWrapper Overrides ContractWrapperFactory . new Defined in wrappers/daoCreator.ts:488 Parameters: Param Type Description controllerCreatorAddress Address The ControllerCreator that Arc will use when migratinga new non-universal controller in forgeOrg .Typically is ControllerCreator from Arc. Returns: Promise . DaoCreatorWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"DaoCreatorFactoryType"},{"location":"api/classes/DaoCreatorFactoryType/#class-daocreatorfactorytype","text":"defined just to add good type checking","title":"Class: DaoCreatorFactoryType"},{"location":"api/classes/DaoCreatorFactoryType/#hierarchy","text":"ContractWrapperFactory DaoCreatorWrapper \u21b3 DaoCreatorFactoryType","title":"Hierarchy"},{"location":"api/classes/DaoCreatorFactoryType/#implements","text":"IContractWrapperFactory DaoCreatorWrapper","title":"Implements"},{"location":"api/classes/DaoCreatorFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/DaoCreatorFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/DaoCreatorFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/DaoCreatorFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/DaoCreatorFactoryType/#new-daocreatorfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-daocreatorfactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: DaoCreatorFactoryType","title":"\u2295 new DaoCreatorFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): DaoCreatorFactoryType"},{"location":"api/classes/DaoCreatorFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/DaoCreatorFactoryType/#at","text":"\u25ba at (address: string ): Promise . DaoCreatorWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . DaoCreatorWrapper","title":"at"},{"location":"api/classes/DaoCreatorFactoryType/#deployed","text":"\u25ba deployed (): Promise . DaoCreatorWrapper Inherited from ContractWrapperFactory . deployed Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . DaoCreatorWrapper","title":"deployed"},{"location":"api/classes/DaoCreatorFactoryType/#new","text":"\u25ba new (controllerCreatorAddress?: Address ): Promise . DaoCreatorWrapper Overrides ContractWrapperFactory . new Defined in wrappers/daoCreator.ts:488 Parameters: Param Type Description controllerCreatorAddress Address The ControllerCreator that Arc will use when migratinga new non-universal controller in forgeOrg .Typically is ControllerCreator from Arc. Returns: Promise . DaoCreatorWrapper","title":"new"},{"location":"api/classes/DaoCreatorFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/DaoCreatorWrapper/","text":"API Reference DaoCreatorWrapper Class: DaoCreatorWrapper Hierarchy ContractWrapperBase \u21b3 DaoCreatorWrapper Implements IContractWrapper Index Constructors constructor Properties InitialSchemesSet NewOrg contract factory friendlyName name Accessors address Methods estimateGas forgeOrg forgeOrgTransactionsCount getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew setSchemes setSchemesTransactionsCount Constructors \u2295 new DaoCreatorWrapper (solidityContract: any , web3EventService: Web3EventService ): DaoCreatorWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: DaoCreatorWrapper Properties InitialSchemesSet \u25cf InitialSchemesSet : EventFetcherFactory InitialSchemesSetEventResult Defined in wrappers/daoCreator.ts:56 NewOrg \u25cf NewOrg : EventFetcherFactory NewOrgEventResult Defined in wrappers/daoCreator.ts:55 Events contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory DaoCreatorWrapper = DaoCreatorFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/daoCreator.ts:50 friendlyName \u25cf friendlyName : string = \"Dao Creator\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/daoCreator.ts:49 name \u25cf name : string = \"DaoCreator\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/daoCreator.ts:48 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number forgeOrg \u25ba forgeOrg (options?: ForgeOrgConfig ): Promise . ArcTransactionResult Defined in wrappers/daoCreator.ts:62 Create a new DAO Parameters: Param Type Default value Description options ForgeOrgConfig {} as ForgeOrgConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult forgeOrgTransactionsCount \u25ba forgeOrgTransactionsCount (options: ForgeOrgConfig ): number Defined in wrappers/daoCreator.ts:455 Parameters: Param Type Description options ForgeOrgConfig - Returns: number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this setSchemes \u25ba setSchemes (options?: SetSchemesConfig ): Promise . ArcTransactionResult Defined in wrappers/daoCreator.ts:139 Register schemes with newly-created DAO. Can only be invoked by the agent that created the DAO via forgeOrg, and at that, can only be called one time. Parameters: Param Type Default value Description options SetSchemesConfig {} as SetSchemesConfig - Returns: Promise . ArcTransactionResult setSchemesTransactionsCount \u25ba setSchemesTransactionsCount (options: SchemesConfig ): number Defined in wrappers/daoCreator.ts:459 Parameters: Param Type Description options SchemesConfig - Returns: number","title":"DaoCreatorWrapper"},{"location":"api/classes/DaoCreatorWrapper/#class-daocreatorwrapper","text":"","title":"Class: DaoCreatorWrapper"},{"location":"api/classes/DaoCreatorWrapper/#hierarchy","text":"ContractWrapperBase \u21b3 DaoCreatorWrapper","title":"Hierarchy"},{"location":"api/classes/DaoCreatorWrapper/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/DaoCreatorWrapper/#index","text":"","title":"Index"},{"location":"api/classes/DaoCreatorWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/DaoCreatorWrapper/#properties","text":"InitialSchemesSet NewOrg contract factory friendlyName name","title":"Properties"},{"location":"api/classes/DaoCreatorWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/DaoCreatorWrapper/#methods","text":"estimateGas forgeOrg forgeOrgTransactionsCount getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew setSchemes setSchemesTransactionsCount","title":"Methods"},{"location":"api/classes/DaoCreatorWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/DaoCreatorWrapper/#new-daocreatorwrappersoliditycontract-any-web3eventservice-web3eventservice-daocreatorwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: DaoCreatorWrapper","title":"\u2295 new DaoCreatorWrapper(solidityContract: any, web3EventService: Web3EventService): DaoCreatorWrapper"},{"location":"api/classes/DaoCreatorWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/DaoCreatorWrapper/#initialschemesset","text":"\u25cf InitialSchemesSet : EventFetcherFactory InitialSchemesSetEventResult Defined in wrappers/daoCreator.ts:56","title":"InitialSchemesSet"},{"location":"api/classes/DaoCreatorWrapper/#neworg","text":"\u25cf NewOrg : EventFetcherFactory NewOrgEventResult Defined in wrappers/daoCreator.ts:55 Events","title":"NewOrg"},{"location":"api/classes/DaoCreatorWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/DaoCreatorWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory DaoCreatorWrapper = DaoCreatorFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/daoCreator.ts:50","title":"factory"},{"location":"api/classes/DaoCreatorWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Dao Creator\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/daoCreator.ts:49","title":"friendlyName"},{"location":"api/classes/DaoCreatorWrapper/#name","text":"\u25cf name : string = \"DaoCreator\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/daoCreator.ts:48","title":"name"},{"location":"api/classes/DaoCreatorWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/DaoCreatorWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/DaoCreatorWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/DaoCreatorWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/DaoCreatorWrapper/#forgeorg","text":"\u25ba forgeOrg (options?: ForgeOrgConfig ): Promise . ArcTransactionResult Defined in wrappers/daoCreator.ts:62 Create a new DAO Parameters: Param Type Default value Description options ForgeOrgConfig {} as ForgeOrgConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"forgeOrg"},{"location":"api/classes/DaoCreatorWrapper/#forgeorgtransactionscount","text":"\u25ba forgeOrgTransactionsCount (options: ForgeOrgConfig ): number Defined in wrappers/daoCreator.ts:455 Parameters: Param Type Description options ForgeOrgConfig - Returns: number","title":"forgeOrgTransactionsCount"},{"location":"api/classes/DaoCreatorWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/DaoCreatorWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/DaoCreatorWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/DaoCreatorWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/DaoCreatorWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/DaoCreatorWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/DaoCreatorWrapper/#setschemes","text":"\u25ba setSchemes (options?: SetSchemesConfig ): Promise . ArcTransactionResult Defined in wrappers/daoCreator.ts:139 Register schemes with newly-created DAO. Can only be invoked by the agent that created the DAO via forgeOrg, and at that, can only be called one time. Parameters: Param Type Default value Description options SetSchemesConfig {} as SetSchemesConfig - Returns: Promise . ArcTransactionResult","title":"setSchemes"},{"location":"api/classes/DaoCreatorWrapper/#setschemestransactionscount","text":"\u25ba setSchemesTransactionsCount (options: SchemesConfig ): number Defined in wrappers/daoCreator.ts:459 Parameters: Param Type Description options SchemesConfig - Returns: number","title":"setSchemesTransactionsCount"},{"location":"api/classes/DaoTokenFactoryType/","text":"API Reference DaoTokenFactoryType Class: DaoTokenFactoryType defined just to add good type checking Hierarchy ContractWrapperFactory DaoTokenWrapper \u21b3 DaoTokenFactoryType Implements IContractWrapperFactory DaoTokenWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new DaoTokenFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): DaoTokenFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: DaoTokenFactoryType Methods at \u25ba at (address: string ): Promise . DaoTokenWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . DaoTokenWrapper deployed \u25ba deployed (): Promise . DaoTokenWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/daoToken.ts:346 Returns: Promise . DaoTokenWrapper new \u25ba new (name: string , symbol: string , cap: BigNumber ): Promise . DaoTokenWrapper Overrides ContractWrapperFactory . new Defined in wrappers/daoToken.ts:350 Parameters: Param Type Description name string - symbol string - cap BigNumber - Returns: Promise . DaoTokenWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"DaoTokenFactoryType"},{"location":"api/classes/DaoTokenFactoryType/#class-daotokenfactorytype","text":"defined just to add good type checking","title":"Class: DaoTokenFactoryType"},{"location":"api/classes/DaoTokenFactoryType/#hierarchy","text":"ContractWrapperFactory DaoTokenWrapper \u21b3 DaoTokenFactoryType","title":"Hierarchy"},{"location":"api/classes/DaoTokenFactoryType/#implements","text":"IContractWrapperFactory DaoTokenWrapper","title":"Implements"},{"location":"api/classes/DaoTokenFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/DaoTokenFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/DaoTokenFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/DaoTokenFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/DaoTokenFactoryType/#new-daotokenfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-daotokenfactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: DaoTokenFactoryType","title":"\u2295 new DaoTokenFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): DaoTokenFactoryType"},{"location":"api/classes/DaoTokenFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/DaoTokenFactoryType/#at","text":"\u25ba at (address: string ): Promise . DaoTokenWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . DaoTokenWrapper","title":"at"},{"location":"api/classes/DaoTokenFactoryType/#deployed","text":"\u25ba deployed (): Promise . DaoTokenWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/daoToken.ts:346 Returns: Promise . DaoTokenWrapper","title":"deployed"},{"location":"api/classes/DaoTokenFactoryType/#new","text":"\u25ba new (name: string , symbol: string , cap: BigNumber ): Promise . DaoTokenWrapper Overrides ContractWrapperFactory . new Defined in wrappers/daoToken.ts:350 Parameters: Param Type Description name string - symbol string - cap BigNumber - Returns: Promise . DaoTokenWrapper","title":"new"},{"location":"api/classes/DaoTokenFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/DaoTokenWrapper/","text":"API Reference DaoTokenWrapper Class: DaoTokenWrapper Hierarchy \u21b3 MintableTokenWrapper \u21b3 DaoTokenWrapper Implements IContractWrapper IErc827TokenWrapper IBurnableTokenWrapper Index Constructors constructor Properties Approval Burn Mint MintFinished Transfer contract factory friendlyName name Accessors address Methods allowance approve approveAndCall burn decreaseApproval decreaseApprovalAndCall estimateGas finishMinting getBalanceOf getParameters getParametersArray getSchemeParametersHash getTokenCap getTokenName getTokenSymbol getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew increaseApproval increaseApprovalAndCall mint transfer transferAndCall transferFrom transferFromAndCall getGenToken Constructors \u2295 new DaoTokenWrapper (solidityContract: any , web3EventService: Web3EventService ): DaoTokenWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: DaoTokenWrapper Properties Approval \u25cf Approval : EventFetcherFactory ApprovalEventResult Inherited from StandardTokenWrapper . Approval Defined in wrappers/standardToken.ts:16 Burn \u25cf Burn : EventFetcherFactory BurnEventResult Implementation of IBurnableTokenWrapper . Burn Defined in wrappers/daoToken.ts:48 Mint \u25cf Mint : EventFetcherFactory MintEventResult Inherited from MintableTokenWrapper . Mint Defined in wrappers/mintableToken.ts:22 MintFinished \u25cf MintFinished : EventFetcherFactory MintFinishedEventResult Inherited from MintableTokenWrapper . MintFinished Defined in wrappers/mintableToken.ts:23 Transfer \u25cf Transfer : EventFetcherFactory TransferEventResult Inherited from StandardTokenWrapper . Transfer Defined in wrappers/standardToken.ts:17 contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory DaoTokenWrapper = DaoTokenFactory Implementation of IContractWrapper . factory Overrides MintableTokenWrapper . factory Defined in wrappers/daoToken.ts:46 friendlyName \u25cf friendlyName : string = \"DAO Token\" Implementation of IContractWrapper . friendlyName Overrides MintableTokenWrapper . friendlyName Defined in wrappers/daoToken.ts:45 name \u25cf name : string = \"DAOToken\" Implementation of IContractWrapper . name Overrides MintableTokenWrapper . name Defined in wrappers/daoToken.ts:44 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods allowance \u25ba allowance (options: StandardTokenAllowanceOptions ): Promise . BigNumber Inherited from StandardTokenWrapper . allowance Defined in wrappers/standardToken.ts:198 Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account. Parameters: Param Type Description options StandardTokenAllowanceOptions - Returns: Promise . BigNumber approve \u25ba approve (options: StandardTokenApproveOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . approve Defined in wrappers/daoToken.ts:293 Parameters: Param Type Description options StandardTokenApproveOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult approveAndCall \u25ba approveAndCall (options: ApproveAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . approveAndCall Defined in wrappers/daoToken.ts:106 Approve transfer of tokens by msg.sender (or onBehalfOf , if given) from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ApproveAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult burn \u25ba burn (options: DaoTokenBurnOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IBurnableTokenWrapper . burn Defined in wrappers/daoToken.ts:81 Burn the given number of tokens Parameters: Param Type Description options DaoTokenBurnOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult decreaseApproval \u25ba decreaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Inherited from MintableTokenWrapper . decreaseApproval Overrides StandardTokenWrapper . decreaseApproval Defined in wrappers/mintableToken.ts:100 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult decreaseApprovalAndCall \u25ba decreaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . decreaseApprovalAndCall Defined in wrappers/daoToken.ts:250 Decrease the number of tokens approved that msg.sender (or onBehalfOf if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number finishMinting \u25ba finishMinting (options?: TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . finishMinting Defined in wrappers/daoToken.ts:325 Parameters: Param Type Description options TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult getBalanceOf \u25ba getBalanceOf (account: Address ): Promise . BigNumber Inherited from StandardTokenWrapper . getBalanceOf Defined in wrappers/standardToken.ts:175 Returns a promise of the given account's current token balance. Parameters: Param Type Description account Address - Returns: Promise . BigNumber getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getTokenCap \u25ba getTokenCap (): Promise . BigNumber Defined in wrappers/daoToken.ts:288 Returns: Promise . BigNumber getTokenName \u25ba getTokenName (): Promise . string Defined in wrappers/daoToken.ts:278 Returns: Promise . string getTokenSymbol \u25ba getTokenSymbol (): Promise . string Defined in wrappers/daoToken.ts:283 Returns: Promise . string getTotalSupply \u25ba getTotalSupply (): Promise . BigNumber Inherited from StandardTokenWrapper . getTotalSupply Defined in wrappers/standardToken.ts:187 Returns a promise of the token's total number of tokens. Returns: Promise . BigNumber hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this increaseApproval \u25ba increaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . increaseApproval Defined in wrappers/daoToken.ts:317 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult increaseApprovalAndCall \u25ba increaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . increaseApprovalAndCall Defined in wrappers/daoToken.ts:216 Increase the number of tokens approved that msg.sender (or onBehalfOf , if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult mint \u25ba mint (options: DaoTokenMintOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . mint Defined in wrappers/daoToken.ts:54 Mint tokens to recipient Parameters: Param Type Description options DaoTokenMintOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transfer \u25ba transfer (options: StandardTokenTransferOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . transfer Defined in wrappers/daoToken.ts:301 Parameters: Param Type Description options StandardTokenTransferOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transferAndCall \u25ba transferAndCall (options: TransferAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . transferAndCall Defined in wrappers/daoToken.ts:139 Transfer tokens from the current account to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transferFrom \u25ba transferFrom (options: StandardTokenTransferFromOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . transferFrom Defined in wrappers/daoToken.ts:309 Parameters: Param Type Description options StandardTokenTransferFromOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transferFromAndCall \u25ba transferFromAndCall (options: TransferFromAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . transferFromAndCall Defined in wrappers/daoToken.ts:175 Transfer tokens from one address to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferFromAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult \u00abStatic\u00bb getGenToken \u25ba getGenToken (): Promise . DaoTokenWrapper Defined in wrappers/daoToken.ts:39 Returns promise of DaoTokenWrapper on the global GEN token. Returns: Promise . DaoTokenWrapper","title":"DaoTokenWrapper"},{"location":"api/classes/DaoTokenWrapper/#class-daotokenwrapper","text":"","title":"Class: DaoTokenWrapper"},{"location":"api/classes/DaoTokenWrapper/#hierarchy","text":"\u21b3 MintableTokenWrapper \u21b3 DaoTokenWrapper","title":"Hierarchy"},{"location":"api/classes/DaoTokenWrapper/#implements","text":"IContractWrapper IErc827TokenWrapper IBurnableTokenWrapper","title":"Implements"},{"location":"api/classes/DaoTokenWrapper/#index","text":"","title":"Index"},{"location":"api/classes/DaoTokenWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/DaoTokenWrapper/#properties","text":"Approval Burn Mint MintFinished Transfer contract factory friendlyName name","title":"Properties"},{"location":"api/classes/DaoTokenWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/DaoTokenWrapper/#methods","text":"allowance approve approveAndCall burn decreaseApproval decreaseApprovalAndCall estimateGas finishMinting getBalanceOf getParameters getParametersArray getSchemeParametersHash getTokenCap getTokenName getTokenSymbol getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew increaseApproval increaseApprovalAndCall mint transfer transferAndCall transferFrom transferFromAndCall getGenToken","title":"Methods"},{"location":"api/classes/DaoTokenWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/DaoTokenWrapper/#new-daotokenwrappersoliditycontract-any-web3eventservice-web3eventservice-daotokenwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: DaoTokenWrapper","title":"\u2295 new DaoTokenWrapper(solidityContract: any, web3EventService: Web3EventService): DaoTokenWrapper"},{"location":"api/classes/DaoTokenWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/DaoTokenWrapper/#approval","text":"\u25cf Approval : EventFetcherFactory ApprovalEventResult Inherited from StandardTokenWrapper . Approval Defined in wrappers/standardToken.ts:16","title":"Approval"},{"location":"api/classes/DaoTokenWrapper/#burn","text":"\u25cf Burn : EventFetcherFactory BurnEventResult Implementation of IBurnableTokenWrapper . Burn Defined in wrappers/daoToken.ts:48","title":"Burn"},{"location":"api/classes/DaoTokenWrapper/#mint","text":"\u25cf Mint : EventFetcherFactory MintEventResult Inherited from MintableTokenWrapper . Mint Defined in wrappers/mintableToken.ts:22","title":"Mint"},{"location":"api/classes/DaoTokenWrapper/#mintfinished","text":"\u25cf MintFinished : EventFetcherFactory MintFinishedEventResult Inherited from MintableTokenWrapper . MintFinished Defined in wrappers/mintableToken.ts:23","title":"MintFinished"},{"location":"api/classes/DaoTokenWrapper/#transfer","text":"\u25cf Transfer : EventFetcherFactory TransferEventResult Inherited from StandardTokenWrapper . Transfer Defined in wrappers/standardToken.ts:17","title":"Transfer"},{"location":"api/classes/DaoTokenWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/DaoTokenWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory DaoTokenWrapper = DaoTokenFactory Implementation of IContractWrapper . factory Overrides MintableTokenWrapper . factory Defined in wrappers/daoToken.ts:46","title":"factory"},{"location":"api/classes/DaoTokenWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"DAO Token\" Implementation of IContractWrapper . friendlyName Overrides MintableTokenWrapper . friendlyName Defined in wrappers/daoToken.ts:45","title":"friendlyName"},{"location":"api/classes/DaoTokenWrapper/#name","text":"\u25cf name : string = \"DAOToken\" Implementation of IContractWrapper . name Overrides MintableTokenWrapper . name Defined in wrappers/daoToken.ts:44","title":"name"},{"location":"api/classes/DaoTokenWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/DaoTokenWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/DaoTokenWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/DaoTokenWrapper/#allowance","text":"\u25ba allowance (options: StandardTokenAllowanceOptions ): Promise . BigNumber Inherited from StandardTokenWrapper . allowance Defined in wrappers/standardToken.ts:198 Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account. Parameters: Param Type Description options StandardTokenAllowanceOptions - Returns: Promise . BigNumber","title":"allowance"},{"location":"api/classes/DaoTokenWrapper/#approve","text":"\u25ba approve (options: StandardTokenApproveOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . approve Defined in wrappers/daoToken.ts:293 Parameters: Param Type Description options StandardTokenApproveOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"approve"},{"location":"api/classes/DaoTokenWrapper/#approveandcall","text":"\u25ba approveAndCall (options: ApproveAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . approveAndCall Defined in wrappers/daoToken.ts:106 Approve transfer of tokens by msg.sender (or onBehalfOf , if given) from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ApproveAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"approveAndCall"},{"location":"api/classes/DaoTokenWrapper/#burn_1","text":"\u25ba burn (options: DaoTokenBurnOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IBurnableTokenWrapper . burn Defined in wrappers/daoToken.ts:81 Burn the given number of tokens Parameters: Param Type Description options DaoTokenBurnOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"burn"},{"location":"api/classes/DaoTokenWrapper/#decreaseapproval","text":"\u25ba decreaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Inherited from MintableTokenWrapper . decreaseApproval Overrides StandardTokenWrapper . decreaseApproval Defined in wrappers/mintableToken.ts:100 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"decreaseApproval"},{"location":"api/classes/DaoTokenWrapper/#decreaseapprovalandcall","text":"\u25ba decreaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . decreaseApprovalAndCall Defined in wrappers/daoToken.ts:250 Decrease the number of tokens approved that msg.sender (or onBehalfOf if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"decreaseApprovalAndCall"},{"location":"api/classes/DaoTokenWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/DaoTokenWrapper/#finishminting","text":"\u25ba finishMinting (options?: TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . finishMinting Defined in wrappers/daoToken.ts:325 Parameters: Param Type Description options TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"finishMinting"},{"location":"api/classes/DaoTokenWrapper/#getbalanceof","text":"\u25ba getBalanceOf (account: Address ): Promise . BigNumber Inherited from StandardTokenWrapper . getBalanceOf Defined in wrappers/standardToken.ts:175 Returns a promise of the given account's current token balance. Parameters: Param Type Description account Address - Returns: Promise . BigNumber","title":"getBalanceOf"},{"location":"api/classes/DaoTokenWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/DaoTokenWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/DaoTokenWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/DaoTokenWrapper/#gettokencap","text":"\u25ba getTokenCap (): Promise . BigNumber Defined in wrappers/daoToken.ts:288 Returns: Promise . BigNumber","title":"getTokenCap"},{"location":"api/classes/DaoTokenWrapper/#gettokenname","text":"\u25ba getTokenName (): Promise . string Defined in wrappers/daoToken.ts:278 Returns: Promise . string","title":"getTokenName"},{"location":"api/classes/DaoTokenWrapper/#gettokensymbol","text":"\u25ba getTokenSymbol (): Promise . string Defined in wrappers/daoToken.ts:283 Returns: Promise . string","title":"getTokenSymbol"},{"location":"api/classes/DaoTokenWrapper/#gettotalsupply","text":"\u25ba getTotalSupply (): Promise . BigNumber Inherited from StandardTokenWrapper . getTotalSupply Defined in wrappers/standardToken.ts:187 Returns a promise of the token's total number of tokens. Returns: Promise . BigNumber","title":"getTotalSupply"},{"location":"api/classes/DaoTokenWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/DaoTokenWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/DaoTokenWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/DaoTokenWrapper/#increaseapproval","text":"\u25ba increaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . increaseApproval Defined in wrappers/daoToken.ts:317 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"increaseApproval"},{"location":"api/classes/DaoTokenWrapper/#increaseapprovalandcall","text":"\u25ba increaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . increaseApprovalAndCall Defined in wrappers/daoToken.ts:216 Increase the number of tokens approved that msg.sender (or onBehalfOf , if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"increaseApprovalAndCall"},{"location":"api/classes/DaoTokenWrapper/#mint_1","text":"\u25ba mint (options: DaoTokenMintOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . mint Defined in wrappers/daoToken.ts:54 Mint tokens to recipient Parameters: Param Type Description options DaoTokenMintOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"mint"},{"location":"api/classes/DaoTokenWrapper/#transfer_1","text":"\u25ba transfer (options: StandardTokenTransferOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . transfer Defined in wrappers/daoToken.ts:301 Parameters: Param Type Description options StandardTokenTransferOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transfer"},{"location":"api/classes/DaoTokenWrapper/#transferandcall","text":"\u25ba transferAndCall (options: TransferAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . transferAndCall Defined in wrappers/daoToken.ts:139 Transfer tokens from the current account to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transferAndCall"},{"location":"api/classes/DaoTokenWrapper/#transferfrom","text":"\u25ba transferFrom (options: StandardTokenTransferFromOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides MintableTokenWrapper . transferFrom Defined in wrappers/daoToken.ts:309 Parameters: Param Type Description options StandardTokenTransferFromOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transferFrom"},{"location":"api/classes/DaoTokenWrapper/#transferfromandcall","text":"\u25ba transferFromAndCall (options: TransferFromAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IErc827TokenWrapper . transferFromAndCall Defined in wrappers/daoToken.ts:175 Transfer tokens from one address to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferFromAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transferFromAndCall"},{"location":"api/classes/DaoTokenWrapper/#static-getgentoken","text":"\u25ba getGenToken (): Promise . DaoTokenWrapper Defined in wrappers/daoToken.ts:39 Returns promise of DaoTokenWrapper on the global GEN token. Returns: Promise . DaoTokenWrapper","title":"\u00abStatic\u00bb getGenToken"},{"location":"api/classes/DefaultSchemePermissions/","text":"API Reference DefaultSchemePermissions Class: DefaultSchemePermissions These are the permissions that are the minimum that each scheme must have to be able to perform its full range of functionality. Note that '1' is always assigned to a scheme by the Controller when the scheme is registered with the controller. Index Properties AllPermissions ContributionReward GenesisProtocol GlobalConstraintRegistrar MinimumPermissions NoPermissions SchemeRegistrar UpgradeScheme VestingScheme VoteInOrganizationScheme Properties \u00abStatic\u00bb AllPermissions \u25cf AllPermissions : SchemePermissions = SchemePermissions.All Defined in commonTypes.ts:37 \u00abStatic\u00bb ContributionReward \u25cf ContributionReward : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:38 \u00abStatic\u00bb GenesisProtocol \u25cf GenesisProtocol : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:39 \u00abStatic\u00bb GlobalConstraintRegistrar \u25cf GlobalConstraintRegistrar : SchemePermissions = SchemePermissions.IsRegistered | SchemePermissions.CanAddRemoveGlobalConstraints Defined in commonTypes.ts:40 \u00abStatic\u00bb MinimumPermissions \u25cf MinimumPermissions : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:36 \u00abStatic\u00bb NoPermissions \u25cf NoPermissions : SchemePermissions = SchemePermissions.None Defined in commonTypes.ts:35 \u00abStatic\u00bb SchemeRegistrar \u25cf SchemeRegistrar : SchemePermissions = SchemePermissions.All Defined in commonTypes.ts:44 Has all permissions so that it can register/unregister all schemes \u00abStatic\u00bb UpgradeScheme \u25cf UpgradeScheme : SchemePermissions = SchemePermissions.IsRegistered | SchemePermissions.CanRegisterSchemes | SchemePermissions.CanUpgradeController Defined in commonTypes.ts:45 \u00abStatic\u00bb VestingScheme \u25cf VestingScheme : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:46 \u00abStatic\u00bb VoteInOrganizationScheme \u25cf VoteInOrganizationScheme : SchemePermissions = SchemePermissions.IsRegistered | SchemePermissions.CanCallDelegateCall Defined in commonTypes.ts:47","title":"DefaultSchemePermissions"},{"location":"api/classes/DefaultSchemePermissions/#class-defaultschemepermissions","text":"These are the permissions that are the minimum that each scheme must have to be able to perform its full range of functionality. Note that '1' is always assigned to a scheme by the Controller when the scheme is registered with the controller.","title":"Class: DefaultSchemePermissions"},{"location":"api/classes/DefaultSchemePermissions/#index","text":"","title":"Index"},{"location":"api/classes/DefaultSchemePermissions/#properties","text":"AllPermissions ContributionReward GenesisProtocol GlobalConstraintRegistrar MinimumPermissions NoPermissions SchemeRegistrar UpgradeScheme VestingScheme VoteInOrganizationScheme","title":"Properties"},{"location":"api/classes/DefaultSchemePermissions/#properties_1","text":"","title":"Properties"},{"location":"api/classes/DefaultSchemePermissions/#static-allpermissions","text":"\u25cf AllPermissions : SchemePermissions = SchemePermissions.All Defined in commonTypes.ts:37","title":"\u00abStatic\u00bb AllPermissions"},{"location":"api/classes/DefaultSchemePermissions/#static-contributionreward","text":"\u25cf ContributionReward : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:38","title":"\u00abStatic\u00bb ContributionReward"},{"location":"api/classes/DefaultSchemePermissions/#static-genesisprotocol","text":"\u25cf GenesisProtocol : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:39","title":"\u00abStatic\u00bb GenesisProtocol"},{"location":"api/classes/DefaultSchemePermissions/#static-globalconstraintregistrar","text":"\u25cf GlobalConstraintRegistrar : SchemePermissions = SchemePermissions.IsRegistered | SchemePermissions.CanAddRemoveGlobalConstraints Defined in commonTypes.ts:40","title":"\u00abStatic\u00bb GlobalConstraintRegistrar"},{"location":"api/classes/DefaultSchemePermissions/#static-minimumpermissions","text":"\u25cf MinimumPermissions : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:36","title":"\u00abStatic\u00bb MinimumPermissions"},{"location":"api/classes/DefaultSchemePermissions/#static-nopermissions","text":"\u25cf NoPermissions : SchemePermissions = SchemePermissions.None Defined in commonTypes.ts:35","title":"\u00abStatic\u00bb NoPermissions"},{"location":"api/classes/DefaultSchemePermissions/#static-schemeregistrar","text":"\u25cf SchemeRegistrar : SchemePermissions = SchemePermissions.All Defined in commonTypes.ts:44 Has all permissions so that it can register/unregister all schemes","title":"\u00abStatic\u00bb SchemeRegistrar"},{"location":"api/classes/DefaultSchemePermissions/#static-upgradescheme","text":"\u25cf UpgradeScheme : SchemePermissions = SchemePermissions.IsRegistered | SchemePermissions.CanRegisterSchemes | SchemePermissions.CanUpgradeController Defined in commonTypes.ts:45","title":"\u00abStatic\u00bb UpgradeScheme"},{"location":"api/classes/DefaultSchemePermissions/#static-vestingscheme","text":"\u25cf VestingScheme : SchemePermissions = SchemePermissions.IsRegistered Defined in commonTypes.ts:46","title":"\u00abStatic\u00bb VestingScheme"},{"location":"api/classes/DefaultSchemePermissions/#static-voteinorganizationscheme","text":"\u25cf VoteInOrganizationScheme : SchemePermissions = SchemePermissions.IsRegistered | SchemePermissions.CanCallDelegateCall Defined in commonTypes.ts:47","title":"\u00abStatic\u00bb VoteInOrganizationScheme"},{"location":"api/classes/EventSubscription/","text":"API Reference EventSubscription Class: EventSubscription Implements IEventSubscription Index Constructors constructor Methods unsubscribe Constructors \u2295 new EventSubscription (key: EventSubscriptionKey ): EventSubscription Defined in pubSubEventService.ts:203 Parameters: Param Type Description key EventSubscriptionKey - Returns: EventSubscription Methods unsubscribe \u25ba unsubscribe (milliseconds?: number ): Promise . void Implementation of IEventSubscription . unsubscribe Defined in pubSubEventService.ts:212 Unsubscribes after optional timeout. Parameters: Param Type Default value Description milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"EventSubscription"},{"location":"api/classes/EventSubscription/#class-eventsubscription","text":"","title":"Class: EventSubscription"},{"location":"api/classes/EventSubscription/#implements","text":"IEventSubscription","title":"Implements"},{"location":"api/classes/EventSubscription/#index","text":"","title":"Index"},{"location":"api/classes/EventSubscription/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/EventSubscription/#methods","text":"unsubscribe","title":"Methods"},{"location":"api/classes/EventSubscription/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/EventSubscription/#new-eventsubscriptionkey-eventsubscriptionkey-eventsubscription","text":"Defined in pubSubEventService.ts:203 Parameters: Param Type Description key EventSubscriptionKey - Returns: EventSubscription","title":"\u2295 new EventSubscription(key: EventSubscriptionKey): EventSubscription"},{"location":"api/classes/EventSubscription/#methods_1","text":"","title":"Methods"},{"location":"api/classes/EventSubscription/#unsubscribe","text":"\u25ba unsubscribe (milliseconds?: number ): Promise . void Implementation of IEventSubscription . unsubscribe Defined in pubSubEventService.ts:212 Unsubscribes after optional timeout. Parameters: Param Type Default value Description milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"unsubscribe"},{"location":"api/classes/GenesisDaoCreator/","text":"API Reference GenesisDaoCreator Class: GenesisDaoCreator Migration callback Index Constructors constructor Methods forge setSchemes Constructors \u2295 new GenesisDaoCreator (web3: Web3 , network: string ): GenesisDaoCreator Defined in scripts/createGenesisDao.ts:42 Parameters: Param Type Description web3 Web3 - network string - Returns: GenesisDaoCreator Methods forge \u25ba forge (foundersConfigurationLocation: string ): Promise . ForgedDaoInfo Defined in scripts/createGenesisDao.ts:52 Forge the Genesis DAO. Note this does not set the schemes. Parameters: Param Type Description foundersConfigurationLocation string - Returns: Promise . ForgedDaoInfo setSchemes \u25ba setSchemes (forgedDaoInfo: ForgedDaoInfo ): Promise . void Defined in scripts/createGenesisDao.ts:143 Parameters: Param Type Description forgedDaoInfo ForgedDaoInfo - Returns: Promise . void","title":"GenesisDaoCreator"},{"location":"api/classes/GenesisDaoCreator/#class-genesisdaocreator","text":"Migration callback","title":"Class: GenesisDaoCreator"},{"location":"api/classes/GenesisDaoCreator/#index","text":"","title":"Index"},{"location":"api/classes/GenesisDaoCreator/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/GenesisDaoCreator/#methods","text":"forge setSchemes","title":"Methods"},{"location":"api/classes/GenesisDaoCreator/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/GenesisDaoCreator/#new-genesisdaocreatorweb3-web3-network-string-genesisdaocreator","text":"Defined in scripts/createGenesisDao.ts:42 Parameters: Param Type Description web3 Web3 - network string - Returns: GenesisDaoCreator","title":"\u2295 new GenesisDaoCreator(web3: Web3, network: string): GenesisDaoCreator"},{"location":"api/classes/GenesisDaoCreator/#methods_1","text":"","title":"Methods"},{"location":"api/classes/GenesisDaoCreator/#forge","text":"\u25ba forge (foundersConfigurationLocation: string ): Promise . ForgedDaoInfo Defined in scripts/createGenesisDao.ts:52 Forge the Genesis DAO. Note this does not set the schemes. Parameters: Param Type Description foundersConfigurationLocation string - Returns: Promise . ForgedDaoInfo","title":"forge"},{"location":"api/classes/GenesisDaoCreator/#setschemes","text":"\u25ba setSchemes (forgedDaoInfo: ForgedDaoInfo ): Promise . void Defined in scripts/createGenesisDao.ts:143 Parameters: Param Type Description forgedDaoInfo ForgedDaoInfo - Returns: Promise . void","title":"setSchemes"},{"location":"api/classes/GenesisProtocolFactoryType/","text":"API Reference GenesisProtocolFactoryType Class: GenesisProtocolFactoryType defined just to add good type checking Hierarchy ContractWrapperFactory GenesisProtocolWrapper \u21b3 GenesisProtocolFactoryType Implements IContractWrapperFactory GenesisProtocolWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new GenesisProtocolFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): GenesisProtocolFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: GenesisProtocolFactoryType Methods at \u25ba at (address: string ): Promise . GenesisProtocolWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . GenesisProtocolWrapper deployed \u25ba deployed (): Promise . GenesisProtocolWrapper Inherited from ContractWrapperFactory . deployed Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . GenesisProtocolWrapper new \u25ba new (stakingTokenAddress: Address ): Promise . GenesisProtocolWrapper Overrides ContractWrapperFactory . new Defined in wrappers/genesisProtocol.ts:956 Migrate a new instance of GenesisProtocol. Parameters: Param Type Description stakingTokenAddress Address The token that will be used when staking. Typicallyis the token of the DAO that is going to use this GenesisProtocol. Returns: Promise . GenesisProtocolWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"GenesisProtocolFactoryType"},{"location":"api/classes/GenesisProtocolFactoryType/#class-genesisprotocolfactorytype","text":"defined just to add good type checking","title":"Class: GenesisProtocolFactoryType"},{"location":"api/classes/GenesisProtocolFactoryType/#hierarchy","text":"ContractWrapperFactory GenesisProtocolWrapper \u21b3 GenesisProtocolFactoryType","title":"Hierarchy"},{"location":"api/classes/GenesisProtocolFactoryType/#implements","text":"IContractWrapperFactory GenesisProtocolWrapper","title":"Implements"},{"location":"api/classes/GenesisProtocolFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/GenesisProtocolFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/GenesisProtocolFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/GenesisProtocolFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/GenesisProtocolFactoryType/#new-genesisprotocolfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-genesisprotocolfactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: GenesisProtocolFactoryType","title":"\u2295 new GenesisProtocolFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): GenesisProtocolFactoryType"},{"location":"api/classes/GenesisProtocolFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/GenesisProtocolFactoryType/#at","text":"\u25ba at (address: string ): Promise . GenesisProtocolWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . GenesisProtocolWrapper","title":"at"},{"location":"api/classes/GenesisProtocolFactoryType/#deployed","text":"\u25ba deployed (): Promise . GenesisProtocolWrapper Inherited from ContractWrapperFactory . deployed Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . GenesisProtocolWrapper","title":"deployed"},{"location":"api/classes/GenesisProtocolFactoryType/#new","text":"\u25ba new (stakingTokenAddress: Address ): Promise . GenesisProtocolWrapper Overrides ContractWrapperFactory . new Defined in wrappers/genesisProtocol.ts:956 Migrate a new instance of GenesisProtocol. Parameters: Param Type Description stakingTokenAddress Address The token that will be used when staking. Typicallyis the token of the DAO that is going to use this GenesisProtocol. Returns: Promise . GenesisProtocolWrapper","title":"new"},{"location":"api/classes/GenesisProtocolFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/GenesisProtocolWrapper/","text":"API Reference GenesisProtocolWrapper Class: GenesisProtocolWrapper Hierarchy \u21b3 IntVoteInterfaceWrapper \u21b3 GenesisProtocolWrapper Implements IContractWrapper IIntVoteInterface IUniversalSchemeWrapper IVotingMachineWrapper Index Constructors constructor Properties CancelProposal CancelVoting ExecuteProposal GPExecuteProposal NewProposal Redeem RedeemDaoBounty RedeemReputation Stake VoteProposal contract factory friendlyName name Accessors ExecutedProposals VotableGenesisProtocolProposals VotableProposals address Methods cancelProposal cancelVote estimateGas execute getAllowedRangeOfChoices getBoostedProposalsCount getCurrentVoteStatus getDefaultPermissions getNumberOfChoices getParameters getParametersArray getParametersHash getProposal getProposalAvatar getProposalExecutionState getProposalStatus getSchemeParameters getSchemeParametersHash getSchemePermissions getScore getScoreThresholdParams getStakerInfo getStakingToken getStakingTokenAddress getState getThreshold getTokenBalances getVoteStatus getVoterInfo getWinningVote hydrateFromAt hydrateFromDeployed hydrateFromNew isAbstainAllow isVotable ownerVote propose redeem redeemDaoBounty setParameters shouldBoost stake stakeWithApproval vote voteStatus voteWithSpecifiedAmounts Constructors \u2295 new GenesisProtocolWrapper (solidityContract: any , web3EventService: Web3EventService ): GenesisProtocolWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: GenesisProtocolWrapper Properties CancelProposal \u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Implementation of IIntVoteInterface . CancelProposal Inherited from IntVoteInterfaceWrapper . CancelProposal Defined in wrappers/intVoteInterface.ts:49 Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable CancelVoting \u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Implementation of IIntVoteInterface . CancelVoting Inherited from IntVoteInterfaceWrapper . CancelVoting Defined in wrappers/intVoteInterface.ts:62 Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable ExecuteProposal \u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Implementation of IIntVoteInterface . ExecuteProposal Inherited from IntVoteInterfaceWrapper . ExecuteProposal Defined in wrappers/intVoteInterface.ts:53 Get or watch events fired when proposals have been executed GPExecuteProposal \u25cf GPExecuteProposal : EventFetcherFactory GPExecuteProposalEventResult Defined in wrappers/genesisProtocol.ts:55 Events NewProposal \u25cf NewProposal : EventFetcherFactory NewProposalEventResult Implementation of IIntVoteInterface . NewProposal Inherited from IntVoteInterfaceWrapper . NewProposal Defined in wrappers/intVoteInterface.ts:44 Get or watch events fired on the creation of a new proposal. Redeem \u25cf Redeem : EventFetcherFactory RedeemEventResult Defined in wrappers/genesisProtocol.ts:57 RedeemDaoBounty \u25cf RedeemDaoBounty : EventFetcherFactory RedeemEventResult Defined in wrappers/genesisProtocol.ts:59 RedeemReputation \u25cf RedeemReputation : EventFetcherFactory RedeemEventResult Defined in wrappers/genesisProtocol.ts:58 Stake \u25cf Stake : EventFetcherFactory StakeEventResult Defined in wrappers/genesisProtocol.ts:56 VoteProposal \u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Implementation of IIntVoteInterface . VoteProposal Inherited from IntVoteInterfaceWrapper . VoteProposal Defined in wrappers/intVoteInterface.ts:57 Get or watch events fired whenever votes are cast on a proposal contract \u25cf contract : any Implementation of IVotingMachineWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory GenesisProtocolWrapper = GenesisProtocolFactory Implementation of IVotingMachineWrapper . factory Overrides IntVoteInterfaceWrapper . factory Defined in wrappers/genesisProtocol.ts:49 friendlyName \u25cf friendlyName : string = \"Genesis Protocol\" Implementation of IVotingMachineWrapper . friendlyName Overrides IntVoteInterfaceWrapper . friendlyName Defined in wrappers/genesisProtocol.ts:48 name \u25cf name : string = \"GenesisProtocol\" Implementation of IVotingMachineWrapper . name Overrides IntVoteInterfaceWrapper . name Defined in wrappers/genesisProtocol.ts:47 Accessors ExecutedProposals getExecutedProposals(): EntityFetcherFactory ExecutedGenesisProposal , ExecuteProposalEventResult Defined in wrappers/genesisProtocol.ts:662 EntityFetcherFactory for executed ExecutedGenesisProposal. The Arc GenesisProtocol contract retains the original proposal struct after execution. Returns: EntityFetcherFactory ExecutedGenesisProposal , ExecuteProposalEventResult VotableGenesisProtocolProposals getVotableGenesisProtocolProposals(): EntityFetcherFactory GenesisProtocolProposal , NewProposalEventResult Defined in wrappers/genesisProtocol.ts:625 EntityFetcherFactory for votable GenesisProtocolProposal. Returns: EntityFetcherFactory GenesisProtocolProposal , NewProposalEventResult VotableProposals getVotableProposals(): EventFetcherFactory NewProposalEventResult Inherited from IntVoteInterfaceWrapper . VotableProposals Defined in wrappers/intVoteInterface.ts:67 Get or watch NewProposal events, filtering out proposals that are no longer votable. Returns: EventFetcherFactory NewProposalEventResult address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods cancelProposal \u25ba cancelProposal (options: ProposalIdOption ): Promise . ArcTransactionResult Overrides IntVoteInterfaceWrapper . cancelProposal Defined in wrappers/genesisProtocol.ts:645 Cancel the given proposal Parameters: Param Type Description options ProposalIdOption - Returns: Promise . ArcTransactionResult cancelVote \u25ba cancelVote (options: ProposalIdOption ): Promise . ArcTransactionResult Overrides IntVoteInterfaceWrapper . cancelVote Defined in wrappers/genesisProtocol.ts:653 Parameters: Param Type Description options ProposalIdOption - Returns: Promise . ArcTransactionResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number execute \u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . execute Overrides IntVoteInterfaceWrapper . execute Defined in wrappers/genesisProtocol.ts:909 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult getAllowedRangeOfChoices \u25ba getAllowedRangeOfChoices (): Promise . GetAllowedRangeOfChoicesResult Inherited from IntVoteInterfaceWrapper . getAllowedRangeOfChoices Defined in wrappers/intVoteInterface.ts:343 Returns promise of the allowed range of choices for a voting machine. Returns: Promise . GetAllowedRangeOfChoicesResult getBoostedProposalsCount \u25ba getBoostedProposalsCount (avatar: Address ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:361 Returns a promise of the number of boosted proposals, not including those that have expired but have not yet been executed to update their status. Parameters: Param Type Description avatar Address - Returns: Promise . BigNumber getCurrentVoteStatus \u25ba getCurrentVoteStatus (proposalId: Address ): Promise . Array . BigNumber Inherited from IntVoteInterfaceWrapper . getCurrentVoteStatus Defined in wrappers/intVoteInterface.ts:320 Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the BinaryVoteResult enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions. Parameters: Param Type Description proposalId Address - Returns: Promise . Array . BigNumber getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/genesisProtocol.ts:838 Returns: SchemePermissions getNumberOfChoices \u25ba getNumberOfChoices (options?: GetNumberOfChoicesConfig ): Promise . number Overrides IntVoteInterfaceWrapper . getNumberOfChoices Defined in wrappers/genesisProtocol.ts:410 Return the number of possible choices when voting for the proposal. Parameters: Param Type Default value Description options GetNumberOfChoicesConfig {} as GetNumberOfChoicesConfig - Returns: Promise . number Promise getParameters \u25ba getParameters (paramsHash: Hash ): Promise . GetGenesisProtocolParamsResult Implementation of IVotingMachineWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/genesisProtocol.ts:850 Parameters: Param Type Description paramsHash Hash - Returns: Promise . GetGenesisProtocolParamsResult getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IVotingMachineWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: GenesisProtocolParams ): Promise . Hash Defined in wrappers/genesisProtocol.ts:699 Parameters: Param Type Description params GenesisProtocolParams - Returns: Promise . Hash getProposal \u25ba getProposal (proposalId: Hash ): Promise . GenesisProtocolProposal Defined in wrappers/genesisProtocol.ts:694 Returns promise of a GenesisProtocolProposal for the given proposal id. Parameters: Param Type Description proposalId Hash - Returns: Promise . GenesisProtocolProposal getProposalAvatar \u25ba getProposalAvatar (options?: GetProposalAvatarConfig ): Promise . string Defined in wrappers/genesisProtocol.ts:517 Return the DAO avatar address under which the proposal was made Parameters: Param Type Default value Description options GetProposalAvatarConfig {} as GetProposalAvatarConfig - Returns: Promise . string Promise getProposalExecutionState \u25ba getProposalExecutionState (proposalId: Hash ): Promise . ExecutionState Defined in wrappers/genesisProtocol.ts:683 Returns a promise of the execution state of the given proposal. The result is ExecutionState.None if the proposal has not been executed or is not found. Parameters: Param Type Description proposalId Hash - Returns: Promise . ExecutionState getProposalStatus \u25ba getProposalStatus (options?: GetProposalStatusConfig ): Promise . GetProposalStatusResult Defined in wrappers/genesisProtocol.ts:488 Return the preBoosted votes, amount staked per vote, total staked and total staked net voters' take for a given proposal Parameters: Param Type Default value Description options GetProposalStatusConfig {} as GetProposalStatusConfig - Returns: Promise . GetProposalStatusResult Promise getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . GenesisProtocolParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/genesisProtocol.ts:846 Parameters: Param Type Description avatarAddress Address - Returns: Promise . GenesisProtocolParams getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/genesisProtocol.ts:842 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions getScore \u25ba getScore (options?: GetScoreConfig ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:326 Return the current proposal score. Parameters: Param Type Default value Description options GetScoreConfig {} as GetScoreConfig - Returns: Promise . BigNumber Promise getScoreThresholdParams \u25ba getScoreThresholdParams (options?: GetScoreThresholdParamsConfig ): Promise . GetScoreThresholdParamsResult Defined in wrappers/genesisProtocol.ts:535 Return the score threshold params for the given DAO. Parameters: Param Type Default value Description options GetScoreThresholdParamsConfig {} as GetScoreThresholdParamsConfig - Returns: Promise . GetScoreThresholdParamsResult Promise getStakerInfo \u25ba getStakerInfo (options?: GetStakerInfoConfig ): Promise . GetStakerInfoResult Defined in wrappers/genesisProtocol.ts:558 Return the vote and stake amount for a given proposal and staker. Parameters: Param Type Default value Description options GetStakerInfoConfig {} as GetStakerInfoConfig - Returns: Promise . GetStakerInfoResult Promise getStakingToken \u25ba getStakingToken (): Promise . StandardTokenWrapper Defined in wrappers/genesisProtocol.ts:874 Returns promise of the staking token as StandardTokenWrapper. Returns: Promise . StandardTokenWrapper Promise getStakingTokenAddress \u25ba getStakingTokenAddress (): Promise . Address Defined in wrappers/genesisProtocol.ts:884 Returns promise of the staking token address. Returns: Promise . Address Promise getState \u25ba getState (options?: GetStateConfig ): Promise . ProposalState Defined in wrappers/genesisProtocol.ts:608 Return the current state of a given proposal. Parameters: Param Type Default value Description options GetStateConfig {} as GetStateConfig - Returns: Promise . ProposalState Promise getThreshold \u25ba getThreshold (options?: GetThresholdConfig ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:344 Return the threshold that is required by a proposal to it shift it into boosted state. The computation depends on the current number of boosted proposals in the DAO as well as the GenesisProtocol parameters thresholdConstA and thresholdConstB. Parameters: Param Type Default value Description options GetThresholdConfig {} as GetThresholdConfig - Returns: Promise . BigNumber getTokenBalances \u25ba getTokenBalances (options?: GetTokenBalancesOptions ): Promise . GenesisProtocolDaoTokenBalances Defined in wrappers/genesisProtocol.ts:379 Return the current balances on this GenesisProtocol's staking and the given avatar's native tokens. This can be useful, for example, if you want to know in advance whether the avatar has enough funds at the moment to payout rewards to stakers and voters. It also returns the respective tokens' truffle contracts. Parameters: Param Type Default value Description options GetTokenBalancesOptions {} as GetTokenBalancesOptions - Returns: Promise . GenesisProtocolDaoTokenBalances getVoteStatus \u25ba getVoteStatus (options?: GetVoteStatusConfig ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:462 Returns the reputation currently voted on the given choice. Parameters: Param Type Default value Description options GetVoteStatusConfig {} as GetVoteStatusConfig - Returns: Promise . BigNumber Promise getVoterInfo \u25ba getVoterInfo (options?: GetVoterInfoConfig ): Promise . GetVoterInfoResult Defined in wrappers/genesisProtocol.ts:432 Return the vote and the amount of reputation of the voter committed to this proposal Parameters: Param Type Default value Description options GetVoterInfoConfig {} as GetVoterInfoConfig - Returns: Promise . GetVoterInfoResult Promise getWinningVote \u25ba getWinningVote (options?: GetWinningVoteConfig ): Promise . number Defined in wrappers/genesisProtocol.ts:588 Return the winningVote for a given proposal. Parameters: Param Type Default value Description options GetWinningVoteConfig {} as GetWinningVoteConfig - Returns: Promise . number Promise hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this isAbstainAllow \u25ba isAbstainAllow (): Promise . boolean Implementation of IIntVoteInterface . isAbstainAllow Inherited from IntVoteInterfaceWrapper . isAbstainAllow Defined in wrappers/intVoteInterface.ts:285 get whether voters are allowed to cast an abstaining vote on these proposals. Returns: Promise . boolean isVotable \u25ba isVotable (options: ProposalIdOption ): Promise . boolean Implementation of IIntVoteInterface . isVotable Inherited from IntVoteInterfaceWrapper . isVotable Defined in wrappers/intVoteInterface.ts:255 Get whether the proposal is in a state where it can be voted-upon. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean ownerVote \u25ba ownerVote (options: OwnerVoteOptions ): Promise . ArcTransactionResult Overrides IntVoteInterfaceWrapper . ownerVote Defined in wrappers/genesisProtocol.ts:649 Parameters: Param Type Description options OwnerVoteOptions - Returns: Promise . ArcTransactionResult propose \u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Implementation of IIntVoteInterface . propose Overrides IntVoteInterfaceWrapper . propose Defined in wrappers/genesisProtocol.ts:888 Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult redeem \u25ba redeem (options?: RedeemConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:245 Redeem any tokens and reputation, excluding bounty, that are due the beneficiary from the outcome of the proposal. Parameters: Param Type Default value Description options RedeemConfig {} as RedeemConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult Promise redeemDaoBounty \u25ba redeemDaoBounty (options?: RedeemConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:278 Redeem any token bounty that are due the beneficiary from the outcome of the proposal. Parameters: Param Type Default value Description options RedeemConfig {} as RedeemConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult Promise setParameters \u25ba setParameters (params: GenesisProtocolParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/genesisProtocol.ts:729 Set the contract parameters. Parameters: Param Type Description params GenesisProtocolParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash parameters hash shouldBoost \u25ba shouldBoost (options?: ShouldBoostConfig ): Promise . boolean Defined in wrappers/genesisProtocol.ts:310 Return whether a proposal should be shifted to the boosted phase. Parameters: Param Type Default value Description options ShouldBoostConfig {} as ShouldBoostConfig - Returns: Promise . boolean Promise stake \u25ba stake (options?: StakeConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:72 Stake some tokens on the final outcome matching this vote. A transfer of tokens from the staker to this GenesisProtocol scheme is automatically approved and executed on the token with which this GenesisProtocol scheme was deployed. Parameters: Param Type Default value Description options StakeConfig {} as StakeConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult Promise stakeWithApproval \u25ba stakeWithApproval (options?: StakeConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:133 Preapprove the transfer of stakingTokens from the default account to this GenesisProtocol contract, and then stake, all in a single transaction. Parameters: Param Type Default value Description options StakeConfig {} as StakeConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult vote \u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . vote Overrides IntVoteInterfaceWrapper . vote Defined in wrappers/genesisProtocol.ts:895 Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult voteStatus \u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Implementation of IIntVoteInterface . voteStatus Inherited from IntVoteInterfaceWrapper . voteStatus Defined in wrappers/intVoteInterface.ts:269 Get the number of votes currently cast on the given choice. Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber voteWithSpecifiedAmounts \u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . voteWithSpecifiedAmounts Overrides IntVoteInterfaceWrapper . voteWithSpecifiedAmounts Defined in wrappers/genesisProtocol.ts:902 Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"GenesisProtocolWrapper"},{"location":"api/classes/GenesisProtocolWrapper/#class-genesisprotocolwrapper","text":"","title":"Class: GenesisProtocolWrapper"},{"location":"api/classes/GenesisProtocolWrapper/#hierarchy","text":"\u21b3 IntVoteInterfaceWrapper \u21b3 GenesisProtocolWrapper","title":"Hierarchy"},{"location":"api/classes/GenesisProtocolWrapper/#implements","text":"IContractWrapper IIntVoteInterface IUniversalSchemeWrapper IVotingMachineWrapper","title":"Implements"},{"location":"api/classes/GenesisProtocolWrapper/#index","text":"","title":"Index"},{"location":"api/classes/GenesisProtocolWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/GenesisProtocolWrapper/#properties","text":"CancelProposal CancelVoting ExecuteProposal GPExecuteProposal NewProposal Redeem RedeemDaoBounty RedeemReputation Stake VoteProposal contract factory friendlyName name","title":"Properties"},{"location":"api/classes/GenesisProtocolWrapper/#accessors","text":"ExecutedProposals VotableGenesisProtocolProposals VotableProposals address","title":"Accessors"},{"location":"api/classes/GenesisProtocolWrapper/#methods","text":"cancelProposal cancelVote estimateGas execute getAllowedRangeOfChoices getBoostedProposalsCount getCurrentVoteStatus getDefaultPermissions getNumberOfChoices getParameters getParametersArray getParametersHash getProposal getProposalAvatar getProposalExecutionState getProposalStatus getSchemeParameters getSchemeParametersHash getSchemePermissions getScore getScoreThresholdParams getStakerInfo getStakingToken getStakingTokenAddress getState getThreshold getTokenBalances getVoteStatus getVoterInfo getWinningVote hydrateFromAt hydrateFromDeployed hydrateFromNew isAbstainAllow isVotable ownerVote propose redeem redeemDaoBounty setParameters shouldBoost stake stakeWithApproval vote voteStatus voteWithSpecifiedAmounts","title":"Methods"},{"location":"api/classes/GenesisProtocolWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/GenesisProtocolWrapper/#new-genesisprotocolwrappersoliditycontract-any-web3eventservice-web3eventservice-genesisprotocolwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: GenesisProtocolWrapper","title":"\u2295 new GenesisProtocolWrapper(solidityContract: any, web3EventService: Web3EventService): GenesisProtocolWrapper"},{"location":"api/classes/GenesisProtocolWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/GenesisProtocolWrapper/#cancelproposal","text":"\u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Implementation of IIntVoteInterface . CancelProposal Inherited from IntVoteInterfaceWrapper . CancelProposal Defined in wrappers/intVoteInterface.ts:49 Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable","title":"CancelProposal"},{"location":"api/classes/GenesisProtocolWrapper/#cancelvoting","text":"\u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Implementation of IIntVoteInterface . CancelVoting Inherited from IntVoteInterfaceWrapper . CancelVoting Defined in wrappers/intVoteInterface.ts:62 Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable","title":"CancelVoting"},{"location":"api/classes/GenesisProtocolWrapper/#executeproposal","text":"\u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Implementation of IIntVoteInterface . ExecuteProposal Inherited from IntVoteInterfaceWrapper . ExecuteProposal Defined in wrappers/intVoteInterface.ts:53 Get or watch events fired when proposals have been executed","title":"ExecuteProposal"},{"location":"api/classes/GenesisProtocolWrapper/#gpexecuteproposal","text":"\u25cf GPExecuteProposal : EventFetcherFactory GPExecuteProposalEventResult Defined in wrappers/genesisProtocol.ts:55 Events","title":"GPExecuteProposal"},{"location":"api/classes/GenesisProtocolWrapper/#newproposal","text":"\u25cf NewProposal : EventFetcherFactory NewProposalEventResult Implementation of IIntVoteInterface . NewProposal Inherited from IntVoteInterfaceWrapper . NewProposal Defined in wrappers/intVoteInterface.ts:44 Get or watch events fired on the creation of a new proposal.","title":"NewProposal"},{"location":"api/classes/GenesisProtocolWrapper/#redeem","text":"\u25cf Redeem : EventFetcherFactory RedeemEventResult Defined in wrappers/genesisProtocol.ts:57","title":"Redeem"},{"location":"api/classes/GenesisProtocolWrapper/#redeemdaobounty","text":"\u25cf RedeemDaoBounty : EventFetcherFactory RedeemEventResult Defined in wrappers/genesisProtocol.ts:59","title":"RedeemDaoBounty"},{"location":"api/classes/GenesisProtocolWrapper/#redeemreputation","text":"\u25cf RedeemReputation : EventFetcherFactory RedeemEventResult Defined in wrappers/genesisProtocol.ts:58","title":"RedeemReputation"},{"location":"api/classes/GenesisProtocolWrapper/#stake","text":"\u25cf Stake : EventFetcherFactory StakeEventResult Defined in wrappers/genesisProtocol.ts:56","title":"Stake"},{"location":"api/classes/GenesisProtocolWrapper/#voteproposal","text":"\u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Implementation of IIntVoteInterface . VoteProposal Inherited from IntVoteInterfaceWrapper . VoteProposal Defined in wrappers/intVoteInterface.ts:57 Get or watch events fired whenever votes are cast on a proposal","title":"VoteProposal"},{"location":"api/classes/GenesisProtocolWrapper/#contract","text":"\u25cf contract : any Implementation of IVotingMachineWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/GenesisProtocolWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory GenesisProtocolWrapper = GenesisProtocolFactory Implementation of IVotingMachineWrapper . factory Overrides IntVoteInterfaceWrapper . factory Defined in wrappers/genesisProtocol.ts:49","title":"factory"},{"location":"api/classes/GenesisProtocolWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Genesis Protocol\" Implementation of IVotingMachineWrapper . friendlyName Overrides IntVoteInterfaceWrapper . friendlyName Defined in wrappers/genesisProtocol.ts:48","title":"friendlyName"},{"location":"api/classes/GenesisProtocolWrapper/#name","text":"\u25cf name : string = \"GenesisProtocol\" Implementation of IVotingMachineWrapper . name Overrides IntVoteInterfaceWrapper . name Defined in wrappers/genesisProtocol.ts:47","title":"name"},{"location":"api/classes/GenesisProtocolWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/GenesisProtocolWrapper/#executedproposals","text":"getExecutedProposals(): EntityFetcherFactory ExecutedGenesisProposal , ExecuteProposalEventResult Defined in wrappers/genesisProtocol.ts:662 EntityFetcherFactory for executed ExecutedGenesisProposal. The Arc GenesisProtocol contract retains the original proposal struct after execution. Returns: EntityFetcherFactory ExecutedGenesisProposal , ExecuteProposalEventResult","title":"ExecutedProposals"},{"location":"api/classes/GenesisProtocolWrapper/#votablegenesisprotocolproposals","text":"getVotableGenesisProtocolProposals(): EntityFetcherFactory GenesisProtocolProposal , NewProposalEventResult Defined in wrappers/genesisProtocol.ts:625 EntityFetcherFactory for votable GenesisProtocolProposal. Returns: EntityFetcherFactory GenesisProtocolProposal , NewProposalEventResult","title":"VotableGenesisProtocolProposals"},{"location":"api/classes/GenesisProtocolWrapper/#votableproposals","text":"getVotableProposals(): EventFetcherFactory NewProposalEventResult Inherited from IntVoteInterfaceWrapper . VotableProposals Defined in wrappers/intVoteInterface.ts:67 Get or watch NewProposal events, filtering out proposals that are no longer votable. Returns: EventFetcherFactory NewProposalEventResult","title":"VotableProposals"},{"location":"api/classes/GenesisProtocolWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/GenesisProtocolWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/GenesisProtocolWrapper/#cancelproposal_1","text":"\u25ba cancelProposal (options: ProposalIdOption ): Promise . ArcTransactionResult Overrides IntVoteInterfaceWrapper . cancelProposal Defined in wrappers/genesisProtocol.ts:645 Cancel the given proposal Parameters: Param Type Description options ProposalIdOption - Returns: Promise . ArcTransactionResult","title":"cancelProposal"},{"location":"api/classes/GenesisProtocolWrapper/#cancelvote","text":"\u25ba cancelVote (options: ProposalIdOption ): Promise . ArcTransactionResult Overrides IntVoteInterfaceWrapper . cancelVote Defined in wrappers/genesisProtocol.ts:653 Parameters: Param Type Description options ProposalIdOption - Returns: Promise . ArcTransactionResult","title":"cancelVote"},{"location":"api/classes/GenesisProtocolWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/GenesisProtocolWrapper/#execute","text":"\u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . execute Overrides IntVoteInterfaceWrapper . execute Defined in wrappers/genesisProtocol.ts:909 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"execute"},{"location":"api/classes/GenesisProtocolWrapper/#getallowedrangeofchoices","text":"\u25ba getAllowedRangeOfChoices (): Promise . GetAllowedRangeOfChoicesResult Inherited from IntVoteInterfaceWrapper . getAllowedRangeOfChoices Defined in wrappers/intVoteInterface.ts:343 Returns promise of the allowed range of choices for a voting machine. Returns: Promise . GetAllowedRangeOfChoicesResult","title":"getAllowedRangeOfChoices"},{"location":"api/classes/GenesisProtocolWrapper/#getboostedproposalscount","text":"\u25ba getBoostedProposalsCount (avatar: Address ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:361 Returns a promise of the number of boosted proposals, not including those that have expired but have not yet been executed to update their status. Parameters: Param Type Description avatar Address - Returns: Promise . BigNumber","title":"getBoostedProposalsCount"},{"location":"api/classes/GenesisProtocolWrapper/#getcurrentvotestatus","text":"\u25ba getCurrentVoteStatus (proposalId: Address ): Promise . Array . BigNumber Inherited from IntVoteInterfaceWrapper . getCurrentVoteStatus Defined in wrappers/intVoteInterface.ts:320 Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the BinaryVoteResult enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions. Parameters: Param Type Description proposalId Address - Returns: Promise . Array . BigNumber","title":"getCurrentVoteStatus"},{"location":"api/classes/GenesisProtocolWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/genesisProtocol.ts:838 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/classes/GenesisProtocolWrapper/#getnumberofchoices","text":"\u25ba getNumberOfChoices (options?: GetNumberOfChoicesConfig ): Promise . number Overrides IntVoteInterfaceWrapper . getNumberOfChoices Defined in wrappers/genesisProtocol.ts:410 Return the number of possible choices when voting for the proposal. Parameters: Param Type Default value Description options GetNumberOfChoicesConfig {} as GetNumberOfChoicesConfig - Returns: Promise . number Promise","title":"getNumberOfChoices"},{"location":"api/classes/GenesisProtocolWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . GetGenesisProtocolParamsResult Implementation of IVotingMachineWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/genesisProtocol.ts:850 Parameters: Param Type Description paramsHash Hash - Returns: Promise . GetGenesisProtocolParamsResult","title":"getParameters"},{"location":"api/classes/GenesisProtocolWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IVotingMachineWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/GenesisProtocolWrapper/#getparametershash","text":"\u25ba getParametersHash (params: GenesisProtocolParams ): Promise . Hash Defined in wrappers/genesisProtocol.ts:699 Parameters: Param Type Description params GenesisProtocolParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/GenesisProtocolWrapper/#getproposal","text":"\u25ba getProposal (proposalId: Hash ): Promise . GenesisProtocolProposal Defined in wrappers/genesisProtocol.ts:694 Returns promise of a GenesisProtocolProposal for the given proposal id. Parameters: Param Type Description proposalId Hash - Returns: Promise . GenesisProtocolProposal","title":"getProposal"},{"location":"api/classes/GenesisProtocolWrapper/#getproposalavatar","text":"\u25ba getProposalAvatar (options?: GetProposalAvatarConfig ): Promise . string Defined in wrappers/genesisProtocol.ts:517 Return the DAO avatar address under which the proposal was made Parameters: Param Type Default value Description options GetProposalAvatarConfig {} as GetProposalAvatarConfig - Returns: Promise . string Promise","title":"getProposalAvatar"},{"location":"api/classes/GenesisProtocolWrapper/#getproposalexecutionstate","text":"\u25ba getProposalExecutionState (proposalId: Hash ): Promise . ExecutionState Defined in wrappers/genesisProtocol.ts:683 Returns a promise of the execution state of the given proposal. The result is ExecutionState.None if the proposal has not been executed or is not found. Parameters: Param Type Description proposalId Hash - Returns: Promise . ExecutionState","title":"getProposalExecutionState"},{"location":"api/classes/GenesisProtocolWrapper/#getproposalstatus","text":"\u25ba getProposalStatus (options?: GetProposalStatusConfig ): Promise . GetProposalStatusResult Defined in wrappers/genesisProtocol.ts:488 Return the preBoosted votes, amount staked per vote, total staked and total staked net voters' take for a given proposal Parameters: Param Type Default value Description options GetProposalStatusConfig {} as GetProposalStatusConfig - Returns: Promise . GetProposalStatusResult Promise","title":"getProposalStatus"},{"location":"api/classes/GenesisProtocolWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . GenesisProtocolParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/genesisProtocol.ts:846 Parameters: Param Type Description avatarAddress Address - Returns: Promise . GenesisProtocolParams","title":"getSchemeParameters"},{"location":"api/classes/GenesisProtocolWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/GenesisProtocolWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/genesisProtocol.ts:842 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/classes/GenesisProtocolWrapper/#getscore","text":"\u25ba getScore (options?: GetScoreConfig ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:326 Return the current proposal score. Parameters: Param Type Default value Description options GetScoreConfig {} as GetScoreConfig - Returns: Promise . BigNumber Promise","title":"getScore"},{"location":"api/classes/GenesisProtocolWrapper/#getscorethresholdparams","text":"\u25ba getScoreThresholdParams (options?: GetScoreThresholdParamsConfig ): Promise . GetScoreThresholdParamsResult Defined in wrappers/genesisProtocol.ts:535 Return the score threshold params for the given DAO. Parameters: Param Type Default value Description options GetScoreThresholdParamsConfig {} as GetScoreThresholdParamsConfig - Returns: Promise . GetScoreThresholdParamsResult Promise","title":"getScoreThresholdParams"},{"location":"api/classes/GenesisProtocolWrapper/#getstakerinfo","text":"\u25ba getStakerInfo (options?: GetStakerInfoConfig ): Promise . GetStakerInfoResult Defined in wrappers/genesisProtocol.ts:558 Return the vote and stake amount for a given proposal and staker. Parameters: Param Type Default value Description options GetStakerInfoConfig {} as GetStakerInfoConfig - Returns: Promise . GetStakerInfoResult Promise","title":"getStakerInfo"},{"location":"api/classes/GenesisProtocolWrapper/#getstakingtoken","text":"\u25ba getStakingToken (): Promise . StandardTokenWrapper Defined in wrappers/genesisProtocol.ts:874 Returns promise of the staking token as StandardTokenWrapper. Returns: Promise . StandardTokenWrapper Promise","title":"getStakingToken"},{"location":"api/classes/GenesisProtocolWrapper/#getstakingtokenaddress","text":"\u25ba getStakingTokenAddress (): Promise . Address Defined in wrappers/genesisProtocol.ts:884 Returns promise of the staking token address. Returns: Promise . Address Promise","title":"getStakingTokenAddress"},{"location":"api/classes/GenesisProtocolWrapper/#getstate","text":"\u25ba getState (options?: GetStateConfig ): Promise . ProposalState Defined in wrappers/genesisProtocol.ts:608 Return the current state of a given proposal. Parameters: Param Type Default value Description options GetStateConfig {} as GetStateConfig - Returns: Promise . ProposalState Promise","title":"getState"},{"location":"api/classes/GenesisProtocolWrapper/#getthreshold","text":"\u25ba getThreshold (options?: GetThresholdConfig ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:344 Return the threshold that is required by a proposal to it shift it into boosted state. The computation depends on the current number of boosted proposals in the DAO as well as the GenesisProtocol parameters thresholdConstA and thresholdConstB. Parameters: Param Type Default value Description options GetThresholdConfig {} as GetThresholdConfig - Returns: Promise . BigNumber","title":"getThreshold"},{"location":"api/classes/GenesisProtocolWrapper/#gettokenbalances","text":"\u25ba getTokenBalances (options?: GetTokenBalancesOptions ): Promise . GenesisProtocolDaoTokenBalances Defined in wrappers/genesisProtocol.ts:379 Return the current balances on this GenesisProtocol's staking and the given avatar's native tokens. This can be useful, for example, if you want to know in advance whether the avatar has enough funds at the moment to payout rewards to stakers and voters. It also returns the respective tokens' truffle contracts. Parameters: Param Type Default value Description options GetTokenBalancesOptions {} as GetTokenBalancesOptions - Returns: Promise . GenesisProtocolDaoTokenBalances","title":"getTokenBalances"},{"location":"api/classes/GenesisProtocolWrapper/#getvotestatus","text":"\u25ba getVoteStatus (options?: GetVoteStatusConfig ): Promise . BigNumber Defined in wrappers/genesisProtocol.ts:462 Returns the reputation currently voted on the given choice. Parameters: Param Type Default value Description options GetVoteStatusConfig {} as GetVoteStatusConfig - Returns: Promise . BigNumber Promise","title":"getVoteStatus"},{"location":"api/classes/GenesisProtocolWrapper/#getvoterinfo","text":"\u25ba getVoterInfo (options?: GetVoterInfoConfig ): Promise . GetVoterInfoResult Defined in wrappers/genesisProtocol.ts:432 Return the vote and the amount of reputation of the voter committed to this proposal Parameters: Param Type Default value Description options GetVoterInfoConfig {} as GetVoterInfoConfig - Returns: Promise . GetVoterInfoResult Promise","title":"getVoterInfo"},{"location":"api/classes/GenesisProtocolWrapper/#getwinningvote","text":"\u25ba getWinningVote (options?: GetWinningVoteConfig ): Promise . number Defined in wrappers/genesisProtocol.ts:588 Return the winningVote for a given proposal. Parameters: Param Type Default value Description options GetWinningVoteConfig {} as GetWinningVoteConfig - Returns: Promise . number Promise","title":"getWinningVote"},{"location":"api/classes/GenesisProtocolWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/GenesisProtocolWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/GenesisProtocolWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IVotingMachineWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/GenesisProtocolWrapper/#isabstainallow","text":"\u25ba isAbstainAllow (): Promise . boolean Implementation of IIntVoteInterface . isAbstainAllow Inherited from IntVoteInterfaceWrapper . isAbstainAllow Defined in wrappers/intVoteInterface.ts:285 get whether voters are allowed to cast an abstaining vote on these proposals. Returns: Promise . boolean","title":"isAbstainAllow"},{"location":"api/classes/GenesisProtocolWrapper/#isvotable","text":"\u25ba isVotable (options: ProposalIdOption ): Promise . boolean Implementation of IIntVoteInterface . isVotable Inherited from IntVoteInterfaceWrapper . isVotable Defined in wrappers/intVoteInterface.ts:255 Get whether the proposal is in a state where it can be voted-upon. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean","title":"isVotable"},{"location":"api/classes/GenesisProtocolWrapper/#ownervote","text":"\u25ba ownerVote (options: OwnerVoteOptions ): Promise . ArcTransactionResult Overrides IntVoteInterfaceWrapper . ownerVote Defined in wrappers/genesisProtocol.ts:649 Parameters: Param Type Description options OwnerVoteOptions - Returns: Promise . ArcTransactionResult","title":"ownerVote"},{"location":"api/classes/GenesisProtocolWrapper/#propose","text":"\u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Implementation of IIntVoteInterface . propose Overrides IntVoteInterfaceWrapper . propose Defined in wrappers/genesisProtocol.ts:888 Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"propose"},{"location":"api/classes/GenesisProtocolWrapper/#redeem_1","text":"\u25ba redeem (options?: RedeemConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:245 Redeem any tokens and reputation, excluding bounty, that are due the beneficiary from the outcome of the proposal. Parameters: Param Type Default value Description options RedeemConfig {} as RedeemConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult Promise","title":"redeem"},{"location":"api/classes/GenesisProtocolWrapper/#redeemdaobounty_1","text":"\u25ba redeemDaoBounty (options?: RedeemConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:278 Redeem any token bounty that are due the beneficiary from the outcome of the proposal. Parameters: Param Type Default value Description options RedeemConfig {} as RedeemConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult Promise","title":"redeemDaoBounty"},{"location":"api/classes/GenesisProtocolWrapper/#setparameters","text":"\u25ba setParameters (params: GenesisProtocolParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/genesisProtocol.ts:729 Set the contract parameters. Parameters: Param Type Description params GenesisProtocolParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash parameters hash","title":"setParameters"},{"location":"api/classes/GenesisProtocolWrapper/#shouldboost","text":"\u25ba shouldBoost (options?: ShouldBoostConfig ): Promise . boolean Defined in wrappers/genesisProtocol.ts:310 Return whether a proposal should be shifted to the boosted phase. Parameters: Param Type Default value Description options ShouldBoostConfig {} as ShouldBoostConfig - Returns: Promise . boolean Promise","title":"shouldBoost"},{"location":"api/classes/GenesisProtocolWrapper/#stake_1","text":"\u25ba stake (options?: StakeConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:72 Stake some tokens on the final outcome matching this vote. A transfer of tokens from the staker to this GenesisProtocol scheme is automatically approved and executed on the token with which this GenesisProtocol scheme was deployed. Parameters: Param Type Default value Description options StakeConfig {} as StakeConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult Promise","title":"stake"},{"location":"api/classes/GenesisProtocolWrapper/#stakewithapproval","text":"\u25ba stakeWithApproval (options?: StakeConfig ): Promise . ArcTransactionResult Defined in wrappers/genesisProtocol.ts:133 Preapprove the transfer of stakingTokens from the default account to this GenesisProtocol contract, and then stake, all in a single transaction. Parameters: Param Type Default value Description options StakeConfig {} as StakeConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"stakeWithApproval"},{"location":"api/classes/GenesisProtocolWrapper/#vote","text":"\u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . vote Overrides IntVoteInterfaceWrapper . vote Defined in wrappers/genesisProtocol.ts:895 Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"vote"},{"location":"api/classes/GenesisProtocolWrapper/#votestatus","text":"\u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Implementation of IIntVoteInterface . voteStatus Inherited from IntVoteInterfaceWrapper . voteStatus Defined in wrappers/intVoteInterface.ts:269 Get the number of votes currently cast on the given choice. Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber","title":"voteStatus"},{"location":"api/classes/GenesisProtocolWrapper/#votewithspecifiedamounts","text":"\u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . voteWithSpecifiedAmounts Overrides IntVoteInterfaceWrapper . voteWithSpecifiedAmounts Defined in wrappers/genesisProtocol.ts:902 Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"voteWithSpecifiedAmounts"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/","text":"API Reference GlobalConstraintRegistrarWrapper Class: GlobalConstraintRegistrarWrapper Hierarchy \u21b3 ProposalGeneratorBase \u21b3 GlobalConstraintRegistrarWrapper Implements IContractWrapper IUniversalSchemeWrapper Index Constructors constructor Properties NewGlobalConstraintsProposal ProposalDeleted ProposalExecuted RemoveGlobalConstraintsProposal contract factory friendlyName name Accessors address Methods estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableAddGcProposals getVotableProposal getVotableRemoveGcProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeToAddModifyGlobalConstraint proposeToRemoveGlobalConstraint setParameters Constructors \u2295 new GlobalConstraintRegistrarWrapper (solidityContract: any , web3EventService: Web3EventService ): GlobalConstraintRegistrarWrapper Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: GlobalConstraintRegistrarWrapper Properties NewGlobalConstraintsProposal \u25cf NewGlobalConstraintsProposal : EventFetcherFactory NewGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:30 Events ProposalDeleted \u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/globalConstraintRegistrar.ts:33 ProposalExecuted \u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/globalConstraintRegistrar.ts:32 RemoveGlobalConstraintsProposal \u25cf RemoveGlobalConstraintsProposal : EventFetcherFactory RemoveGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:31 contract \u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory GlobalConstraintRegistrarWrapper = GlobalConstraintRegistrarFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/globalConstraintRegistrar.ts:25 friendlyName \u25cf friendlyName : string = \"Global Constraint Registrar\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/globalConstraintRegistrar.ts:24 name \u25cf name : string = \"GlobalConstraintRegistrar\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/globalConstraintRegistrar.ts:23 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/globalConstraintRegistrar.ts:192 Returns: SchemePermissions getExecutedProposals \u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/globalConstraintRegistrar.ts:149 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult getParameters \u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/globalConstraintRegistrar.ts:204 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/globalConstraintRegistrar.ts:172 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/globalConstraintRegistrar.ts:200 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/globalConstraintRegistrar.ts:196 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions getVotableAddGcProposals \u25ba getVotableAddGcProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableGlobalConstraintProposal , NewGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:107 EntityFetcherFactory for votable GlobalConstraintProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableGlobalConstraintProposal , NewGlobalConstraintsProposalEventResult getVotableProposal \u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableGlobalConstraintProposal Defined in wrappers/globalConstraintRegistrar.ts:167 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableGlobalConstraintProposal getVotableRemoveGcProposals \u25ba getVotableRemoveGcProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableGlobalConstraintProposal , RemoveGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:128 EntityFetcherFactory for votable GlobalConstraintProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableGlobalConstraintProposal , RemoveGlobalConstraintsProposalEventResult getVotingMachine \u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper getVotingMachineAddress \u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this proposeToAddModifyGlobalConstraint \u25ba proposeToAddModifyGlobalConstraint (options?: ProposeToAddModifyGlobalConstraintParams ): Promise . ArcTransactionProposalResult Defined in wrappers/globalConstraintRegistrar.ts:39 Submit a proposal to add or modify a given global constraint. Parameters: Param Type Default value Description options ProposeToAddModifyGlobalConstraintParams {} as ProposeToAddModifyGlobalConstraintParams - Returns: Promise . ArcTransactionProposalResult proposeToRemoveGlobalConstraint \u25ba proposeToRemoveGlobalConstraint (options?: ProposeToRemoveGlobalConstraintParams ): Promise . ArcTransactionProposalResult Defined in wrappers/globalConstraintRegistrar.ts:78 Submit a proposal to remove a global constraint. Parameters: Param Type Default value Description options ProposeToRemoveGlobalConstraintParams {} as ProposeToRemoveGlobalConstraintParams - Returns: Promise . ArcTransactionProposalResult setParameters \u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/globalConstraintRegistrar.ts:179 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"GlobalConstraintRegistrarWrapper"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#class-globalconstraintregistrarwrapper","text":"","title":"Class: GlobalConstraintRegistrarWrapper"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#hierarchy","text":"\u21b3 ProposalGeneratorBase \u21b3 GlobalConstraintRegistrarWrapper","title":"Hierarchy"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#implements","text":"IContractWrapper IUniversalSchemeWrapper","title":"Implements"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#index","text":"","title":"Index"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#properties","text":"NewGlobalConstraintsProposal ProposalDeleted ProposalExecuted RemoveGlobalConstraintsProposal contract factory friendlyName name","title":"Properties"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#methods","text":"estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableAddGcProposals getVotableProposal getVotableRemoveGcProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeToAddModifyGlobalConstraint proposeToRemoveGlobalConstraint setParameters","title":"Methods"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#new-globalconstraintregistrarwrappersoliditycontract-any-web3eventservice-web3eventservice-globalconstraintregistrarwrapper","text":"Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: GlobalConstraintRegistrarWrapper","title":"\u2295 new GlobalConstraintRegistrarWrapper(solidityContract: any, web3EventService: Web3EventService): GlobalConstraintRegistrarWrapper"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#newglobalconstraintsproposal","text":"\u25cf NewGlobalConstraintsProposal : EventFetcherFactory NewGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:30 Events","title":"NewGlobalConstraintsProposal"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#proposaldeleted","text":"\u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/globalConstraintRegistrar.ts:33","title":"ProposalDeleted"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#proposalexecuted","text":"\u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/globalConstraintRegistrar.ts:32","title":"ProposalExecuted"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#removeglobalconstraintsproposal","text":"\u25cf RemoveGlobalConstraintsProposal : EventFetcherFactory RemoveGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:31","title":"RemoveGlobalConstraintsProposal"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#contract","text":"\u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory GlobalConstraintRegistrarWrapper = GlobalConstraintRegistrarFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/globalConstraintRegistrar.ts:25","title":"factory"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Global Constraint Registrar\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/globalConstraintRegistrar.ts:24","title":"friendlyName"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#name","text":"\u25cf name : string = \"GlobalConstraintRegistrar\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/globalConstraintRegistrar.ts:23","title":"name"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/globalConstraintRegistrar.ts:192 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getexecutedproposals","text":"\u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/globalConstraintRegistrar.ts:149 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult","title":"getExecutedProposals"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/globalConstraintRegistrar.ts:204 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams","title":"getParameters"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getparametershash","text":"\u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/globalConstraintRegistrar.ts:172 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/globalConstraintRegistrar.ts:200 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams","title":"getSchemeParameters"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/globalConstraintRegistrar.ts:196 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getvotableaddgcproposals","text":"\u25ba getVotableAddGcProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableGlobalConstraintProposal , NewGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:107 EntityFetcherFactory for votable GlobalConstraintProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableGlobalConstraintProposal , NewGlobalConstraintsProposalEventResult","title":"getVotableAddGcProposals"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getvotableproposal","text":"\u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableGlobalConstraintProposal Defined in wrappers/globalConstraintRegistrar.ts:167 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableGlobalConstraintProposal","title":"getVotableProposal"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getvotableremovegcproposals","text":"\u25ba getVotableRemoveGcProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableGlobalConstraintProposal , RemoveGlobalConstraintsProposalEventResult Defined in wrappers/globalConstraintRegistrar.ts:128 EntityFetcherFactory for votable GlobalConstraintProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableGlobalConstraintProposal , RemoveGlobalConstraintsProposalEventResult","title":"getVotableRemoveGcProposals"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getvotingmachine","text":"\u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper","title":"getVotingMachine"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#getvotingmachineaddress","text":"\u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address","title":"getVotingMachineAddress"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#proposetoaddmodifyglobalconstraint","text":"\u25ba proposeToAddModifyGlobalConstraint (options?: ProposeToAddModifyGlobalConstraintParams ): Promise . ArcTransactionProposalResult Defined in wrappers/globalConstraintRegistrar.ts:39 Submit a proposal to add or modify a given global constraint. Parameters: Param Type Default value Description options ProposeToAddModifyGlobalConstraintParams {} as ProposeToAddModifyGlobalConstraintParams - Returns: Promise . ArcTransactionProposalResult","title":"proposeToAddModifyGlobalConstraint"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#proposetoremoveglobalconstraint","text":"\u25ba proposeToRemoveGlobalConstraint (options?: ProposeToRemoveGlobalConstraintParams ): Promise . ArcTransactionProposalResult Defined in wrappers/globalConstraintRegistrar.ts:78 Submit a proposal to remove a global constraint. Parameters: Param Type Default value Description options ProposeToRemoveGlobalConstraintParams {} as ProposeToRemoveGlobalConstraintParams - Returns: Promise . ArcTransactionProposalResult","title":"proposeToRemoveGlobalConstraint"},{"location":"api/classes/GlobalConstraintRegistrarWrapper/#setparameters","text":"\u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/globalConstraintRegistrar.ts:179 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/IntVoteInterfaceFactoryType/","text":"API Reference IntVoteInterfaceFactoryType Class: IntVoteInterfaceFactoryType Hierarchy ContractWrapperFactory IntVoteInterfaceWrapper \u21b3 IntVoteInterfaceFactoryType Implements IContractWrapperFactory IntVoteInterfaceWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new IntVoteInterfaceFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): IntVoteInterfaceFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: IntVoteInterfaceFactoryType Methods at \u25ba at (address: string ): Promise . IntVoteInterfaceWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . IntVoteInterfaceWrapper deployed \u25ba deployed (): Promise . IntVoteInterfaceWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/intVoteInterface.ts:377 Returns: Promise . IntVoteInterfaceWrapper new \u25ba new (): Promise . IntVoteInterfaceWrapper Overrides ContractWrapperFactory . new Defined in wrappers/intVoteInterface.ts:374 Returns: Promise . IntVoteInterfaceWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"IntVoteInterfaceFactoryType"},{"location":"api/classes/IntVoteInterfaceFactoryType/#class-intvoteinterfacefactorytype","text":"","title":"Class: IntVoteInterfaceFactoryType"},{"location":"api/classes/IntVoteInterfaceFactoryType/#hierarchy","text":"ContractWrapperFactory IntVoteInterfaceWrapper \u21b3 IntVoteInterfaceFactoryType","title":"Hierarchy"},{"location":"api/classes/IntVoteInterfaceFactoryType/#implements","text":"IContractWrapperFactory IntVoteInterfaceWrapper","title":"Implements"},{"location":"api/classes/IntVoteInterfaceFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/IntVoteInterfaceFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/IntVoteInterfaceFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/IntVoteInterfaceFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/IntVoteInterfaceFactoryType/#new-intvoteinterfacefactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-intvoteinterfacefactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: IntVoteInterfaceFactoryType","title":"\u2295 new IntVoteInterfaceFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): IntVoteInterfaceFactoryType"},{"location":"api/classes/IntVoteInterfaceFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/IntVoteInterfaceFactoryType/#at","text":"\u25ba at (address: string ): Promise . IntVoteInterfaceWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . IntVoteInterfaceWrapper","title":"at"},{"location":"api/classes/IntVoteInterfaceFactoryType/#deployed","text":"\u25ba deployed (): Promise . IntVoteInterfaceWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/intVoteInterface.ts:377 Returns: Promise . IntVoteInterfaceWrapper","title":"deployed"},{"location":"api/classes/IntVoteInterfaceFactoryType/#new","text":"\u25ba new (): Promise . IntVoteInterfaceWrapper Overrides ContractWrapperFactory . new Defined in wrappers/intVoteInterface.ts:374 Returns: Promise . IntVoteInterfaceWrapper","title":"new"},{"location":"api/classes/IntVoteInterfaceFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/IntVoteInterfaceWrapper/","text":"API Reference IntVoteInterfaceWrapper Class: IntVoteInterfaceWrapper Provides the services of any voting machine that implements the IntVoteInterface Arc contract interface. Also serves as the base class for all the specific voting machine contract wrapper classes. Hierarchy ContractWrapperBase \u21b3 IntVoteInterfaceWrapper \u21b3 AbsoluteVoteWrapper \u21b3 GenesisProtocolWrapper Implements IContractWrapper IIntVoteInterface Index Constructors constructor Properties CancelProposal CancelVoting ExecuteProposal NewProposal VoteProposal contract factory friendlyName name Accessors VotableProposals address Methods cancelProposal cancelVote estimateGas execute getAllowedRangeOfChoices getCurrentVoteStatus getNumberOfChoices getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew isAbstainAllow isVotable ownerVote propose vote voteStatus voteWithSpecifiedAmounts Constructors \u2295 new IntVoteInterfaceWrapper (solidityContract: any , web3EventService: Web3EventService ): IntVoteInterfaceWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: IntVoteInterfaceWrapper Properties CancelProposal \u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Implementation of IIntVoteInterface . CancelProposal Defined in wrappers/intVoteInterface.ts:49 Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable CancelVoting \u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Implementation of IIntVoteInterface . CancelVoting Defined in wrappers/intVoteInterface.ts:62 Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable ExecuteProposal \u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Implementation of IIntVoteInterface . ExecuteProposal Defined in wrappers/intVoteInterface.ts:53 Get or watch events fired when proposals have been executed NewProposal \u25cf NewProposal : EventFetcherFactory NewProposalEventResult Implementation of IIntVoteInterface . NewProposal Defined in wrappers/intVoteInterface.ts:44 Get or watch events fired on the creation of a new proposal. VoteProposal \u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Implementation of IIntVoteInterface . VoteProposal Defined in wrappers/intVoteInterface.ts:57 Get or watch events fired whenever votes are cast on a proposal contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory any = IntVoteInterfaceFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/intVoteInterface.ts:37 friendlyName \u25cf friendlyName : string = \"IntVoteInterface\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/intVoteInterface.ts:39 name \u25cf name : string = \"IntVoteInterface\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/intVoteInterface.ts:38 Accessors VotableProposals getVotableProposals(): EventFetcherFactory NewProposalEventResult Defined in wrappers/intVoteInterface.ts:67 Get or watch NewProposal events, filtering out proposals that are no longer votable. Returns: EventFetcherFactory NewProposalEventResult address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods cancelProposal \u25ba cancelProposal (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelProposal Defined in wrappers/intVoteInterface.ts:136 Cancel the given proposal Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult cancelVote \u25ba cancelVote (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelVote Defined in wrappers/intVoteInterface.ts:223 Cancel voting on the proposal. Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number execute \u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . execute Defined in wrappers/intVoteInterface.ts:297 Attempt to execute the given proposal vote. Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult getAllowedRangeOfChoices \u25ba getAllowedRangeOfChoices (): Promise . GetAllowedRangeOfChoicesResult Defined in wrappers/intVoteInterface.ts:343 Returns promise of the allowed range of choices for a voting machine. Returns: Promise . GetAllowedRangeOfChoicesResult getCurrentVoteStatus \u25ba getCurrentVoteStatus (proposalId: Address ): Promise . Array . BigNumber Defined in wrappers/intVoteInterface.ts:320 Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the BinaryVoteResult enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions. Parameters: Param Type Description proposalId Address - Returns: Promise . Array . BigNumber getNumberOfChoices \u25ba getNumberOfChoices (options: ProposalIdOption ): Promise . number Implementation of IIntVoteInterface . getNumberOfChoices Defined in wrappers/intVoteInterface.ts:241 Get the number of voting choices allowed by the proposal. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this isAbstainAllow \u25ba isAbstainAllow (): Promise . boolean Implementation of IIntVoteInterface . isAbstainAllow Defined in wrappers/intVoteInterface.ts:285 get whether voters are allowed to cast an abstaining vote on these proposals. Returns: Promise . boolean isVotable \u25ba isVotable (options: ProposalIdOption ): Promise . boolean Implementation of IIntVoteInterface . isVotable Defined in wrappers/intVoteInterface.ts:255 Get whether the proposal is in a state where it can be voted-upon. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean ownerVote \u25ba ownerVote (options: OwnerVoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . ownerVote Defined in wrappers/intVoteInterface.ts:154 Vote on behalf of the owner of the proposal, ie the agent that created it. Parameters: Param Type Description options OwnerVoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult propose \u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Implementation of IIntVoteInterface . propose Defined in wrappers/intVoteInterface.ts:85 Register a new proposal with the given parameters. Every proposal is given a unique ID which is a hash generated by calculating the keccak256 of a packing of an incremented counter and the address of the voting machine. Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult vote \u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . vote Defined in wrappers/intVoteInterface.ts:178 Vote on behalf of the current account. Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult voteStatus \u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Implementation of IIntVoteInterface . voteStatus Defined in wrappers/intVoteInterface.ts:269 Get the number of votes currently cast on the given choice. Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber voteWithSpecifiedAmounts \u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . voteWithSpecifiedAmounts Defined in wrappers/intVoteInterface.ts:198 Vote specified reputation amount Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"IntVoteInterfaceWrapper"},{"location":"api/classes/IntVoteInterfaceWrapper/#class-intvoteinterfacewrapper","text":"Provides the services of any voting machine that implements the IntVoteInterface Arc contract interface. Also serves as the base class for all the specific voting machine contract wrapper classes.","title":"Class: IntVoteInterfaceWrapper"},{"location":"api/classes/IntVoteInterfaceWrapper/#hierarchy","text":"ContractWrapperBase \u21b3 IntVoteInterfaceWrapper \u21b3 AbsoluteVoteWrapper \u21b3 GenesisProtocolWrapper","title":"Hierarchy"},{"location":"api/classes/IntVoteInterfaceWrapper/#implements","text":"IContractWrapper IIntVoteInterface","title":"Implements"},{"location":"api/classes/IntVoteInterfaceWrapper/#index","text":"","title":"Index"},{"location":"api/classes/IntVoteInterfaceWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/IntVoteInterfaceWrapper/#properties","text":"CancelProposal CancelVoting ExecuteProposal NewProposal VoteProposal contract factory friendlyName name","title":"Properties"},{"location":"api/classes/IntVoteInterfaceWrapper/#accessors","text":"VotableProposals address","title":"Accessors"},{"location":"api/classes/IntVoteInterfaceWrapper/#methods","text":"cancelProposal cancelVote estimateGas execute getAllowedRangeOfChoices getCurrentVoteStatus getNumberOfChoices getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew isAbstainAllow isVotable ownerVote propose vote voteStatus voteWithSpecifiedAmounts","title":"Methods"},{"location":"api/classes/IntVoteInterfaceWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/IntVoteInterfaceWrapper/#new-intvoteinterfacewrappersoliditycontract-any-web3eventservice-web3eventservice-intvoteinterfacewrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: IntVoteInterfaceWrapper","title":"\u2295 new IntVoteInterfaceWrapper(solidityContract: any, web3EventService: Web3EventService): IntVoteInterfaceWrapper"},{"location":"api/classes/IntVoteInterfaceWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/IntVoteInterfaceWrapper/#cancelproposal","text":"\u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Implementation of IIntVoteInterface . CancelProposal Defined in wrappers/intVoteInterface.ts:49 Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable","title":"CancelProposal"},{"location":"api/classes/IntVoteInterfaceWrapper/#cancelvoting","text":"\u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Implementation of IIntVoteInterface . CancelVoting Defined in wrappers/intVoteInterface.ts:62 Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable","title":"CancelVoting"},{"location":"api/classes/IntVoteInterfaceWrapper/#executeproposal","text":"\u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Implementation of IIntVoteInterface . ExecuteProposal Defined in wrappers/intVoteInterface.ts:53 Get or watch events fired when proposals have been executed","title":"ExecuteProposal"},{"location":"api/classes/IntVoteInterfaceWrapper/#newproposal","text":"\u25cf NewProposal : EventFetcherFactory NewProposalEventResult Implementation of IIntVoteInterface . NewProposal Defined in wrappers/intVoteInterface.ts:44 Get or watch events fired on the creation of a new proposal.","title":"NewProposal"},{"location":"api/classes/IntVoteInterfaceWrapper/#voteproposal","text":"\u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Implementation of IIntVoteInterface . VoteProposal Defined in wrappers/intVoteInterface.ts:57 Get or watch events fired whenever votes are cast on a proposal","title":"VoteProposal"},{"location":"api/classes/IntVoteInterfaceWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/IntVoteInterfaceWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory any = IntVoteInterfaceFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/intVoteInterface.ts:37","title":"factory"},{"location":"api/classes/IntVoteInterfaceWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"IntVoteInterface\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/intVoteInterface.ts:39","title":"friendlyName"},{"location":"api/classes/IntVoteInterfaceWrapper/#name","text":"\u25cf name : string = \"IntVoteInterface\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/intVoteInterface.ts:38","title":"name"},{"location":"api/classes/IntVoteInterfaceWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/IntVoteInterfaceWrapper/#votableproposals","text":"getVotableProposals(): EventFetcherFactory NewProposalEventResult Defined in wrappers/intVoteInterface.ts:67 Get or watch NewProposal events, filtering out proposals that are no longer votable. Returns: EventFetcherFactory NewProposalEventResult","title":"VotableProposals"},{"location":"api/classes/IntVoteInterfaceWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/IntVoteInterfaceWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/IntVoteInterfaceWrapper/#cancelproposal_1","text":"\u25ba cancelProposal (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelProposal Defined in wrappers/intVoteInterface.ts:136 Cancel the given proposal Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"cancelProposal"},{"location":"api/classes/IntVoteInterfaceWrapper/#cancelvote","text":"\u25ba cancelVote (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . cancelVote Defined in wrappers/intVoteInterface.ts:223 Cancel voting on the proposal. Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"cancelVote"},{"location":"api/classes/IntVoteInterfaceWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/IntVoteInterfaceWrapper/#execute","text":"\u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . execute Defined in wrappers/intVoteInterface.ts:297 Attempt to execute the given proposal vote. Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"execute"},{"location":"api/classes/IntVoteInterfaceWrapper/#getallowedrangeofchoices","text":"\u25ba getAllowedRangeOfChoices (): Promise . GetAllowedRangeOfChoicesResult Defined in wrappers/intVoteInterface.ts:343 Returns promise of the allowed range of choices for a voting machine. Returns: Promise . GetAllowedRangeOfChoicesResult","title":"getAllowedRangeOfChoices"},{"location":"api/classes/IntVoteInterfaceWrapper/#getcurrentvotestatus","text":"\u25ba getCurrentVoteStatus (proposalId: Address ): Promise . Array . BigNumber Defined in wrappers/intVoteInterface.ts:320 Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the BinaryVoteResult enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions. Parameters: Param Type Description proposalId Address - Returns: Promise . Array . BigNumber","title":"getCurrentVoteStatus"},{"location":"api/classes/IntVoteInterfaceWrapper/#getnumberofchoices","text":"\u25ba getNumberOfChoices (options: ProposalIdOption ): Promise . number Implementation of IIntVoteInterface . getNumberOfChoices Defined in wrappers/intVoteInterface.ts:241 Get the number of voting choices allowed by the proposal. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . number","title":"getNumberOfChoices"},{"location":"api/classes/IntVoteInterfaceWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/IntVoteInterfaceWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/IntVoteInterfaceWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/IntVoteInterfaceWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/IntVoteInterfaceWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/IntVoteInterfaceWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/IntVoteInterfaceWrapper/#isabstainallow","text":"\u25ba isAbstainAllow (): Promise . boolean Implementation of IIntVoteInterface . isAbstainAllow Defined in wrappers/intVoteInterface.ts:285 get whether voters are allowed to cast an abstaining vote on these proposals. Returns: Promise . boolean","title":"isAbstainAllow"},{"location":"api/classes/IntVoteInterfaceWrapper/#isvotable","text":"\u25ba isVotable (options: ProposalIdOption ): Promise . boolean Implementation of IIntVoteInterface . isVotable Defined in wrappers/intVoteInterface.ts:255 Get whether the proposal is in a state where it can be voted-upon. Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean","title":"isVotable"},{"location":"api/classes/IntVoteInterfaceWrapper/#ownervote","text":"\u25ba ownerVote (options: OwnerVoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . ownerVote Defined in wrappers/intVoteInterface.ts:154 Vote on behalf of the owner of the proposal, ie the agent that created it. Parameters: Param Type Description options OwnerVoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"ownerVote"},{"location":"api/classes/IntVoteInterfaceWrapper/#propose","text":"\u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Implementation of IIntVoteInterface . propose Defined in wrappers/intVoteInterface.ts:85 Register a new proposal with the given parameters. Every proposal is given a unique ID which is a hash generated by calculating the keccak256 of a packing of an incremented counter and the address of the voting machine. Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"propose"},{"location":"api/classes/IntVoteInterfaceWrapper/#vote","text":"\u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . vote Defined in wrappers/intVoteInterface.ts:178 Vote on behalf of the current account. Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"vote"},{"location":"api/classes/IntVoteInterfaceWrapper/#votestatus","text":"\u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Implementation of IIntVoteInterface . voteStatus Defined in wrappers/intVoteInterface.ts:269 Get the number of votes currently cast on the given choice. Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber","title":"voteStatus"},{"location":"api/classes/IntVoteInterfaceWrapper/#votewithspecifiedamounts","text":"\u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Implementation of IIntVoteInterface . voteWithSpecifiedAmounts Defined in wrappers/intVoteInterface.ts:198 Vote specified reputation amount Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"voteWithSpecifiedAmounts"},{"location":"api/classes/LoggingService/","text":"API Reference LoggingService Class: LoggingService Provides logging support, logging by default to the JavaScript console. You can provide alternate or additional loggers by using LoggingService.addLogger and LoggingService.removeLogger . You can set the LogLevel by setting LoggingService.logLevel with flags from LogLevel or by using the ConfigService . Logically, LogLevels are simply or'd together, there is no hierarchy to them. Index Properties logLevel loggers moduleName Methods addLogger debug error info message removeLogger stringifyObject warn Properties \u00abStatic\u00bb logLevel \u25cf logLevel : LogLevel = LogLevel.none Defined in loggingService.ts:72 \u00abStatic\u00bb loggers \u25cf loggers : Array . ILogger = [new ConsoleLogger()] Defined in loggingService.ts:70 \u00abStatic\u00bb moduleName \u25cf moduleName : string = \"Arc.js\" Defined in loggingService.ts:74 Methods \u00abStatic\u00bb addLogger \u25ba addLogger (logger: ILogger ): void Defined in loggingService.ts:145 Parameters: Param Type Description logger ILogger - Returns: void \u00abStatic\u00bb debug \u25ba debug (message: string ): void Defined in loggingService.ts:76 Parameters: Param Type Description message string - Returns: void \u00abStatic\u00bb error \u25ba error (message: string ): void Defined in loggingService.ts:94 Parameters: Param Type Description message string - Returns: void \u00abStatic\u00bb info \u25ba info (message: string ): void Defined in loggingService.ts:82 Parameters: Param Type Description message string - Returns: void \u00abStatic\u00bb message \u25ba message (message: string , level?: LogLevel ): void Defined in loggingService.ts:117 Log a message at potentially multiple levels instead of just one. The message will be logged just once, at the first log level in the intersection between the given log level and the current log level, in the following order of precendence: error warn info debug So if the current log level is info|error and you call message(\"a message\", LogLevel.info|LogLevel.error) then you will see the message logged as an error. Parameters: Param Type Default value Description message string - - level LogLevel LoggingService.logLevel log level(s) Returns: void \u00abStatic\u00bb removeLogger \u25ba removeLogger (logger: ILogger ): void Defined in loggingService.ts:149 Parameters: Param Type Description logger ILogger - Returns: void \u00abStatic\u00bb stringifyObject \u25ba stringifyObject (obj: any ): string Defined in loggingService.ts:156 Parameters: Param Type Description obj any - Returns: string \u00abStatic\u00bb warn \u25ba warn (message: string ): void Defined in loggingService.ts:88 Parameters: Param Type Description message string - Returns: void","title":"LoggingService"},{"location":"api/classes/LoggingService/#class-loggingservice","text":"Provides logging support, logging by default to the JavaScript console. You can provide alternate or additional loggers by using LoggingService.addLogger and LoggingService.removeLogger . You can set the LogLevel by setting LoggingService.logLevel with flags from LogLevel or by using the ConfigService . Logically, LogLevels are simply or'd together, there is no hierarchy to them.","title":"Class: LoggingService"},{"location":"api/classes/LoggingService/#index","text":"","title":"Index"},{"location":"api/classes/LoggingService/#properties","text":"logLevel loggers moduleName","title":"Properties"},{"location":"api/classes/LoggingService/#methods","text":"addLogger debug error info message removeLogger stringifyObject warn","title":"Methods"},{"location":"api/classes/LoggingService/#properties_1","text":"","title":"Properties"},{"location":"api/classes/LoggingService/#static-loglevel","text":"\u25cf logLevel : LogLevel = LogLevel.none Defined in loggingService.ts:72","title":"\u00abStatic\u00bb logLevel"},{"location":"api/classes/LoggingService/#static-loggers","text":"\u25cf loggers : Array . ILogger = [new ConsoleLogger()] Defined in loggingService.ts:70","title":"\u00abStatic\u00bb loggers"},{"location":"api/classes/LoggingService/#static-modulename","text":"\u25cf moduleName : string = \"Arc.js\" Defined in loggingService.ts:74","title":"\u00abStatic\u00bb moduleName"},{"location":"api/classes/LoggingService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/LoggingService/#static-addlogger","text":"\u25ba addLogger (logger: ILogger ): void Defined in loggingService.ts:145 Parameters: Param Type Description logger ILogger - Returns: void","title":"\u00abStatic\u00bb addLogger"},{"location":"api/classes/LoggingService/#static-debug","text":"\u25ba debug (message: string ): void Defined in loggingService.ts:76 Parameters: Param Type Description message string - Returns: void","title":"\u00abStatic\u00bb debug"},{"location":"api/classes/LoggingService/#static-error","text":"\u25ba error (message: string ): void Defined in loggingService.ts:94 Parameters: Param Type Description message string - Returns: void","title":"\u00abStatic\u00bb error"},{"location":"api/classes/LoggingService/#static-info","text":"\u25ba info (message: string ): void Defined in loggingService.ts:82 Parameters: Param Type Description message string - Returns: void","title":"\u00abStatic\u00bb info"},{"location":"api/classes/LoggingService/#static-message","text":"\u25ba message (message: string , level?: LogLevel ): void Defined in loggingService.ts:117 Log a message at potentially multiple levels instead of just one. The message will be logged just once, at the first log level in the intersection between the given log level and the current log level, in the following order of precendence: error warn info debug So if the current log level is info|error and you call message(\"a message\", LogLevel.info|LogLevel.error) then you will see the message logged as an error. Parameters: Param Type Default value Description message string - - level LogLevel LoggingService.logLevel log level(s) Returns: void","title":"\u00abStatic\u00bb message"},{"location":"api/classes/LoggingService/#static-removelogger","text":"\u25ba removeLogger (logger: ILogger ): void Defined in loggingService.ts:149 Parameters: Param Type Description logger ILogger - Returns: void","title":"\u00abStatic\u00bb removeLogger"},{"location":"api/classes/LoggingService/#static-stringifyobject","text":"\u25ba stringifyObject (obj: any ): string Defined in loggingService.ts:156 Parameters: Param Type Description obj any - Returns: string","title":"\u00abStatic\u00bb stringifyObject"},{"location":"api/classes/LoggingService/#static-warn","text":"\u25ba warn (message: string ): void Defined in loggingService.ts:88 Parameters: Param Type Description message string - Returns: void","title":"\u00abStatic\u00bb warn"},{"location":"api/classes/MintableTokenFactoryType/","text":"API Reference MintableTokenFactoryType Class: MintableTokenFactoryType defined just to add good type checking Hierarchy ContractWrapperFactory MintableTokenWrapper \u21b3 MintableTokenFactoryType Implements IContractWrapperFactory MintableTokenWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new MintableTokenFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): MintableTokenFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: MintableTokenFactoryType Methods at \u25ba at (address: string ): Promise . MintableTokenWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . MintableTokenWrapper deployed \u25ba deployed (): Promise . MintableTokenWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/mintableToken.ts:122 Returns: Promise . MintableTokenWrapper new \u25ba new (...rest: Array . any ): Promise . MintableTokenWrapper Inherited from ContractWrapperFactory . new Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . MintableTokenWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"MintableTokenFactoryType"},{"location":"api/classes/MintableTokenFactoryType/#class-mintabletokenfactorytype","text":"defined just to add good type checking","title":"Class: MintableTokenFactoryType"},{"location":"api/classes/MintableTokenFactoryType/#hierarchy","text":"ContractWrapperFactory MintableTokenWrapper \u21b3 MintableTokenFactoryType","title":"Hierarchy"},{"location":"api/classes/MintableTokenFactoryType/#implements","text":"IContractWrapperFactory MintableTokenWrapper","title":"Implements"},{"location":"api/classes/MintableTokenFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/MintableTokenFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/MintableTokenFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/MintableTokenFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/MintableTokenFactoryType/#new-mintabletokenfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-mintabletokenfactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: MintableTokenFactoryType","title":"\u2295 new MintableTokenFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): MintableTokenFactoryType"},{"location":"api/classes/MintableTokenFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/MintableTokenFactoryType/#at","text":"\u25ba at (address: string ): Promise . MintableTokenWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . MintableTokenWrapper","title":"at"},{"location":"api/classes/MintableTokenFactoryType/#deployed","text":"\u25ba deployed (): Promise . MintableTokenWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/mintableToken.ts:122 Returns: Promise . MintableTokenWrapper","title":"deployed"},{"location":"api/classes/MintableTokenFactoryType/#new","text":"\u25ba new (...rest: Array . any ): Promise . MintableTokenWrapper Inherited from ContractWrapperFactory . new Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . MintableTokenWrapper","title":"new"},{"location":"api/classes/MintableTokenFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/MintableTokenWrapper/","text":"API Reference MintableTokenWrapper Class: MintableTokenWrapper Hierarchy \u21b3 StandardTokenWrapper \u21b3 MintableTokenWrapper \u21b3 DaoTokenWrapper Implements IContractWrapper Index Constructors constructor Properties Approval Mint MintFinished Transfer contract factory friendlyName name Accessors address Methods allowance approve decreaseApproval estimateGas finishMinting getBalanceOf getParameters getParametersArray getSchemeParametersHash getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew increaseApproval mint transfer transferFrom Constructors \u2295 new MintableTokenWrapper (solidityContract: any , web3EventService: Web3EventService ): MintableTokenWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: MintableTokenWrapper Properties Approval \u25cf Approval : EventFetcherFactory ApprovalEventResult Inherited from StandardTokenWrapper . Approval Defined in wrappers/standardToken.ts:16 Mint \u25cf Mint : EventFetcherFactory MintEventResult Defined in wrappers/mintableToken.ts:22 MintFinished \u25cf MintFinished : EventFetcherFactory MintFinishedEventResult Defined in wrappers/mintableToken.ts:23 Transfer \u25cf Transfer : EventFetcherFactory TransferEventResult Inherited from StandardTokenWrapper . Transfer Defined in wrappers/standardToken.ts:17 contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory MintableTokenWrapper = MintableTokenFactory Implementation of IContractWrapper . factory Overrides StandardTokenWrapper . factory Defined in wrappers/mintableToken.ts:20 friendlyName \u25cf friendlyName : string = \"Mintable Token\" Implementation of IContractWrapper . friendlyName Overrides StandardTokenWrapper . friendlyName Defined in wrappers/mintableToken.ts:19 name \u25cf name : string = \"MintableToken\" Implementation of IContractWrapper . name Overrides StandardTokenWrapper . name Defined in wrappers/mintableToken.ts:18 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods allowance \u25ba allowance (options: StandardTokenAllowanceOptions ): Promise . BigNumber Inherited from StandardTokenWrapper . allowance Defined in wrappers/standardToken.ts:198 Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account. Parameters: Param Type Description options StandardTokenAllowanceOptions - Returns: Promise . BigNumber approve \u25ba approve (options: StandardTokenApproveOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . approve Defined in wrappers/mintableToken.ts:68 Parameters: Param Type Description options StandardTokenApproveOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult decreaseApproval \u25ba decreaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . decreaseApproval Defined in wrappers/mintableToken.ts:100 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number finishMinting \u25ba finishMinting (options?: TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/mintableToken.ts:56 Terminate the ability to mint tokens Parameters: Param Type Description options TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult getBalanceOf \u25ba getBalanceOf (account: Address ): Promise . BigNumber Inherited from StandardTokenWrapper . getBalanceOf Defined in wrappers/standardToken.ts:175 Returns a promise of the given account's current token balance. Parameters: Param Type Description account Address - Returns: Promise . BigNumber getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getTotalSupply \u25ba getTotalSupply (): Promise . BigNumber Inherited from StandardTokenWrapper . getTotalSupply Defined in wrappers/standardToken.ts:187 Returns a promise of the token's total number of tokens. Returns: Promise . BigNumber hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this increaseApproval \u25ba increaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . increaseApproval Defined in wrappers/mintableToken.ts:92 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult mint \u25ba mint (options: MintableTokenMintOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/mintableToken.ts:29 Mint tokens to recipient Parameters: Param Type Description options MintableTokenMintOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transfer \u25ba transfer (options: StandardTokenTransferOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . transfer Defined in wrappers/mintableToken.ts:76 Parameters: Param Type Description options StandardTokenTransferOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transferFrom \u25ba transferFrom (options: StandardTokenTransferFromOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . transferFrom Defined in wrappers/mintableToken.ts:84 Parameters: Param Type Description options StandardTokenTransferFromOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"MintableTokenWrapper"},{"location":"api/classes/MintableTokenWrapper/#class-mintabletokenwrapper","text":"","title":"Class: MintableTokenWrapper"},{"location":"api/classes/MintableTokenWrapper/#hierarchy","text":"\u21b3 StandardTokenWrapper \u21b3 MintableTokenWrapper \u21b3 DaoTokenWrapper","title":"Hierarchy"},{"location":"api/classes/MintableTokenWrapper/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/MintableTokenWrapper/#index","text":"","title":"Index"},{"location":"api/classes/MintableTokenWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/MintableTokenWrapper/#properties","text":"Approval Mint MintFinished Transfer contract factory friendlyName name","title":"Properties"},{"location":"api/classes/MintableTokenWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/MintableTokenWrapper/#methods","text":"allowance approve decreaseApproval estimateGas finishMinting getBalanceOf getParameters getParametersArray getSchemeParametersHash getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew increaseApproval mint transfer transferFrom","title":"Methods"},{"location":"api/classes/MintableTokenWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/MintableTokenWrapper/#new-mintabletokenwrappersoliditycontract-any-web3eventservice-web3eventservice-mintabletokenwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: MintableTokenWrapper","title":"\u2295 new MintableTokenWrapper(solidityContract: any, web3EventService: Web3EventService): MintableTokenWrapper"},{"location":"api/classes/MintableTokenWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/MintableTokenWrapper/#approval","text":"\u25cf Approval : EventFetcherFactory ApprovalEventResult Inherited from StandardTokenWrapper . Approval Defined in wrappers/standardToken.ts:16","title":"Approval"},{"location":"api/classes/MintableTokenWrapper/#mint","text":"\u25cf Mint : EventFetcherFactory MintEventResult Defined in wrappers/mintableToken.ts:22","title":"Mint"},{"location":"api/classes/MintableTokenWrapper/#mintfinished","text":"\u25cf MintFinished : EventFetcherFactory MintFinishedEventResult Defined in wrappers/mintableToken.ts:23","title":"MintFinished"},{"location":"api/classes/MintableTokenWrapper/#transfer","text":"\u25cf Transfer : EventFetcherFactory TransferEventResult Inherited from StandardTokenWrapper . Transfer Defined in wrappers/standardToken.ts:17","title":"Transfer"},{"location":"api/classes/MintableTokenWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/MintableTokenWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory MintableTokenWrapper = MintableTokenFactory Implementation of IContractWrapper . factory Overrides StandardTokenWrapper . factory Defined in wrappers/mintableToken.ts:20","title":"factory"},{"location":"api/classes/MintableTokenWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Mintable Token\" Implementation of IContractWrapper . friendlyName Overrides StandardTokenWrapper . friendlyName Defined in wrappers/mintableToken.ts:19","title":"friendlyName"},{"location":"api/classes/MintableTokenWrapper/#name","text":"\u25cf name : string = \"MintableToken\" Implementation of IContractWrapper . name Overrides StandardTokenWrapper . name Defined in wrappers/mintableToken.ts:18","title":"name"},{"location":"api/classes/MintableTokenWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/MintableTokenWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/MintableTokenWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/MintableTokenWrapper/#allowance","text":"\u25ba allowance (options: StandardTokenAllowanceOptions ): Promise . BigNumber Inherited from StandardTokenWrapper . allowance Defined in wrappers/standardToken.ts:198 Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account. Parameters: Param Type Description options StandardTokenAllowanceOptions - Returns: Promise . BigNumber","title":"allowance"},{"location":"api/classes/MintableTokenWrapper/#approve","text":"\u25ba approve (options: StandardTokenApproveOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . approve Defined in wrappers/mintableToken.ts:68 Parameters: Param Type Description options StandardTokenApproveOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"approve"},{"location":"api/classes/MintableTokenWrapper/#decreaseapproval","text":"\u25ba decreaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . decreaseApproval Defined in wrappers/mintableToken.ts:100 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"decreaseApproval"},{"location":"api/classes/MintableTokenWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/MintableTokenWrapper/#finishminting","text":"\u25ba finishMinting (options?: TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/mintableToken.ts:56 Terminate the ability to mint tokens Parameters: Param Type Description options TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"finishMinting"},{"location":"api/classes/MintableTokenWrapper/#getbalanceof","text":"\u25ba getBalanceOf (account: Address ): Promise . BigNumber Inherited from StandardTokenWrapper . getBalanceOf Defined in wrappers/standardToken.ts:175 Returns a promise of the given account's current token balance. Parameters: Param Type Description account Address - Returns: Promise . BigNumber","title":"getBalanceOf"},{"location":"api/classes/MintableTokenWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/MintableTokenWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/MintableTokenWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/MintableTokenWrapper/#gettotalsupply","text":"\u25ba getTotalSupply (): Promise . BigNumber Inherited from StandardTokenWrapper . getTotalSupply Defined in wrappers/standardToken.ts:187 Returns a promise of the token's total number of tokens. Returns: Promise . BigNumber","title":"getTotalSupply"},{"location":"api/classes/MintableTokenWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/MintableTokenWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/MintableTokenWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/MintableTokenWrapper/#increaseapproval","text":"\u25ba increaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . increaseApproval Defined in wrappers/mintableToken.ts:92 Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"increaseApproval"},{"location":"api/classes/MintableTokenWrapper/#mint_1","text":"\u25ba mint (options: MintableTokenMintOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/mintableToken.ts:29 Mint tokens to recipient Parameters: Param Type Description options MintableTokenMintOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"mint"},{"location":"api/classes/MintableTokenWrapper/#transfer_1","text":"\u25ba transfer (options: StandardTokenTransferOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . transfer Defined in wrappers/mintableToken.ts:76 Parameters: Param Type Description options StandardTokenTransferOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transfer"},{"location":"api/classes/MintableTokenWrapper/#transferfrom","text":"\u25ba transferFrom (options: StandardTokenTransferFromOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Overrides StandardTokenWrapper . transferFrom Defined in wrappers/mintableToken.ts:84 Parameters: Param Type Description options StandardTokenTransferFromOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transferFrom"},{"location":"api/classes/PromiseEventService/","text":"API Reference PromiseEventService Class: PromiseEventService Index Methods publish Methods \u00abStatic\u00bb publish \u25ba publish TResult(topics: Array . string \u23ae string , promise: Promise . TResult ): void Defined in promiseEventService.ts:12 Publish to the given topics the result of the given promise. The payload of the event will be of type TResult. Type parameters: TResult Parameters: Param Type Description topics Array . string \u23ae string - promise Promise . TResult - Returns: void","title":"PromiseEventService"},{"location":"api/classes/PromiseEventService/#class-promiseeventservice","text":"","title":"Class: PromiseEventService"},{"location":"api/classes/PromiseEventService/#index","text":"","title":"Index"},{"location":"api/classes/PromiseEventService/#methods","text":"publish","title":"Methods"},{"location":"api/classes/PromiseEventService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/PromiseEventService/#static-publish","text":"\u25ba publish TResult(topics: Array . string \u23ae string , promise: Promise . TResult ): void Defined in promiseEventService.ts:12 Publish to the given topics the result of the given promise. The payload of the event will be of type TResult. Type parameters:","title":"\u00abStatic\u00bb publish"},{"location":"api/classes/PromiseEventService/#tresult","text":"Parameters: Param Type Description topics Array . string \u23ae string - promise Promise . TResult - Returns: void","title":"TResult"},{"location":"api/classes/ProposalGeneratorBase/","text":"API Reference ProposalGeneratorBase Class: ProposalGeneratorBase Hierarchy ContractWrapperBase \u21b3 ProposalGeneratorBase \u21b3 ContributionRewardWrapper \u21b3 GlobalConstraintRegistrarWrapper \u21b3 SchemeRegistrarWrapper \u21b3 UpgradeSchemeWrapper \u21b3 VestingSchemeWrapper \u21b3 VoteInOrganizationSchemeWrapper Implements IContractWrapper Index Constructors constructor Properties contract factory friendlyName name Accessors address Methods estimateGas getParameters getParametersArray getSchemeParametersHash getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew Constructors \u2295 new ProposalGeneratorBase (solidityContract: any , web3EventService: Web3EventService ): ProposalGeneratorBase Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: ProposalGeneratorBase Properties contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. \u00abAbstract\u00bb factory \u25cf factory : IContractWrapperFactory any Implementation of IContractWrapper . factory Inherited from ContractWrapperBase . factory Defined in contractWrapperBase.ts:49 The wrapper factor class providing static methods at(someAddress) , new() and deployed() . \u00abAbstract\u00bb friendlyName \u25cf friendlyName : string Implementation of IContractWrapper . friendlyName Inherited from ContractWrapperBase . friendlyName Defined in contractWrapperBase.ts:57 A more friendly name for the contract. \u00abAbstract\u00bb name \u25cf name : string Implementation of IContractWrapper . name Inherited from ContractWrapperBase . name Defined in contractWrapperBase.ts:53 The name of the contract. Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getVotingMachine \u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper getVotingMachineAddress \u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"ProposalGeneratorBase"},{"location":"api/classes/ProposalGeneratorBase/#class-proposalgeneratorbase","text":"","title":"Class: ProposalGeneratorBase"},{"location":"api/classes/ProposalGeneratorBase/#hierarchy","text":"ContractWrapperBase \u21b3 ProposalGeneratorBase \u21b3 ContributionRewardWrapper \u21b3 GlobalConstraintRegistrarWrapper \u21b3 SchemeRegistrarWrapper \u21b3 UpgradeSchemeWrapper \u21b3 VestingSchemeWrapper \u21b3 VoteInOrganizationSchemeWrapper","title":"Hierarchy"},{"location":"api/classes/ProposalGeneratorBase/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/ProposalGeneratorBase/#index","text":"","title":"Index"},{"location":"api/classes/ProposalGeneratorBase/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ProposalGeneratorBase/#properties","text":"contract factory friendlyName name","title":"Properties"},{"location":"api/classes/ProposalGeneratorBase/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/ProposalGeneratorBase/#methods","text":"estimateGas getParameters getParametersArray getSchemeParametersHash getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew","title":"Methods"},{"location":"api/classes/ProposalGeneratorBase/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ProposalGeneratorBase/#new-proposalgeneratorbasesoliditycontract-any-web3eventservice-web3eventservice-proposalgeneratorbase","text":"Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: ProposalGeneratorBase","title":"\u2295 new ProposalGeneratorBase(solidityContract: any, web3EventService: Web3EventService): ProposalGeneratorBase"},{"location":"api/classes/ProposalGeneratorBase/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ProposalGeneratorBase/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/ProposalGeneratorBase/#abstract-factory","text":"\u25cf factory : IContractWrapperFactory any Implementation of IContractWrapper . factory Inherited from ContractWrapperBase . factory Defined in contractWrapperBase.ts:49 The wrapper factor class providing static methods at(someAddress) , new() and deployed() .","title":"\u00abAbstract\u00bb factory"},{"location":"api/classes/ProposalGeneratorBase/#abstract-friendlyname","text":"\u25cf friendlyName : string Implementation of IContractWrapper . friendlyName Inherited from ContractWrapperBase . friendlyName Defined in contractWrapperBase.ts:57 A more friendly name for the contract.","title":"\u00abAbstract\u00bb friendlyName"},{"location":"api/classes/ProposalGeneratorBase/#abstract-name","text":"\u25cf name : string Implementation of IContractWrapper . name Inherited from ContractWrapperBase . name Defined in contractWrapperBase.ts:53 The name of the contract.","title":"\u00abAbstract\u00bb name"},{"location":"api/classes/ProposalGeneratorBase/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/ProposalGeneratorBase/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/ProposalGeneratorBase/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ProposalGeneratorBase/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/ProposalGeneratorBase/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/ProposalGeneratorBase/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/ProposalGeneratorBase/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/ProposalGeneratorBase/#getvotingmachine","text":"\u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper","title":"getVotingMachine"},{"location":"api/classes/ProposalGeneratorBase/#getvotingmachineaddress","text":"\u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address","title":"getVotingMachineAddress"},{"location":"api/classes/ProposalGeneratorBase/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/ProposalGeneratorBase/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/ProposalGeneratorBase/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/ProposalService/","text":"API Reference ProposalService Class: ProposalService A single instance of ProposalService provides services relating to a single type of proposal (TProposal), for example a proposal to contribute rewards to a beneficiary. When constructing a ProposalService we pass to the constructor a ProposalMaker TProposal, TEventArgs that provides functions enabling ProposalService to do its job with respect to the given TProposal. Note it is not scoped to a particular Avatar. For more information, see Proposals . Index Constructors constructor Methods getExecutedProposals getProposalEvents getVotableProposals Constructors \u2295 new ProposalService (web3EventService: Web3EventService ): ProposalService Defined in proposalService.ts:27 Parameters: Param Type Description web3EventService Web3EventService - Returns: ProposalService Methods getExecutedProposals \u25ba getExecutedProposals (votingMachine: IntVoteInterfaceWrapper ): EntityFetcherFactory ExecutedProposal , ExecuteProposalEventResult Defined in proposalService.ts:118 Returns promise of an EntityFetcherFactory for fetching executed proposals from the given IntVoteInterfaceWrapper . The proposals are returned as promises of instances of ExecutedProposal . Parameters: Param Type Description votingMachine IntVoteInterfaceWrapper - Returns: EntityFetcherFactory ExecutedProposal , ExecuteProposalEventResult getProposalEvents \u25ba getProposalEvents TProposal,TEventArgs(options: GetProposalEventsOptions TProposal , TEventArgs ): EntityFetcherFactory TProposal \u23ae TProposal ProposalEntity , TEventArgs Defined in proposalService.ts:43 Returns an EntityFetcherFactory for fetching proposal-related events. Can take any EventFetcherFactory whose event args supply _proposalId . Returns events as a promise of TProposal . You must supply an EventFetcherFactory for fetching the events and a callback to transform TEventArgs to a promise of TProposal . Each entity, when the associated proposal is votable and options.votingMachine is supplied, will also contain a votingMachine property of type IntVoteInterfaceWrapper . type : TEventArgs The type of the args object in the event. type : TProposal The type of object returned as a transformation of the args information in each event. Type parameters: TProposal TEventArgs : EventHasPropertyId Parameters: Param Type Description options GetProposalEventsOptions TProposal , TEventArgs - Returns: EntityFetcherFactory TProposal \u23ae TProposal ProposalEntity , TEventArgs getVotableProposals \u25ba getVotableProposals (votingMachine: IntVoteInterfaceWrapper ): EntityFetcherFactory VotableProposal , NewProposalEventResult Defined in proposalService.ts:93 Returns promise of an EntityFetcherFactory for fetching votable proposals from the given IntVoteInterfaceWrapper . The proposals are returned as promises of instances of VotableProposal . Parameters: Param Type Description votingMachine IntVoteInterfaceWrapper - Returns: EntityFetcherFactory VotableProposal , NewProposalEventResult","title":"ProposalService"},{"location":"api/classes/ProposalService/#class-proposalservice","text":"A single instance of ProposalService provides services relating to a single type of proposal (TProposal), for example a proposal to contribute rewards to a beneficiary. When constructing a ProposalService we pass to the constructor a ProposalMaker TProposal, TEventArgs that provides functions enabling ProposalService to do its job with respect to the given TProposal. Note it is not scoped to a particular Avatar. For more information, see Proposals .","title":"Class: ProposalService"},{"location":"api/classes/ProposalService/#index","text":"","title":"Index"},{"location":"api/classes/ProposalService/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ProposalService/#methods","text":"getExecutedProposals getProposalEvents getVotableProposals","title":"Methods"},{"location":"api/classes/ProposalService/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ProposalService/#new-proposalserviceweb3eventservice-web3eventservice-proposalservice","text":"Defined in proposalService.ts:27 Parameters: Param Type Description web3EventService Web3EventService - Returns: ProposalService","title":"\u2295 new ProposalService(web3EventService: Web3EventService): ProposalService"},{"location":"api/classes/ProposalService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ProposalService/#getexecutedproposals","text":"\u25ba getExecutedProposals (votingMachine: IntVoteInterfaceWrapper ): EntityFetcherFactory ExecutedProposal , ExecuteProposalEventResult Defined in proposalService.ts:118 Returns promise of an EntityFetcherFactory for fetching executed proposals from the given IntVoteInterfaceWrapper . The proposals are returned as promises of instances of ExecutedProposal . Parameters: Param Type Description votingMachine IntVoteInterfaceWrapper - Returns: EntityFetcherFactory ExecutedProposal , ExecuteProposalEventResult","title":"getExecutedProposals"},{"location":"api/classes/ProposalService/#getproposalevents","text":"\u25ba getProposalEvents TProposal,TEventArgs(options: GetProposalEventsOptions TProposal , TEventArgs ): EntityFetcherFactory TProposal \u23ae TProposal ProposalEntity , TEventArgs Defined in proposalService.ts:43 Returns an EntityFetcherFactory for fetching proposal-related events. Can take any EventFetcherFactory whose event args supply _proposalId . Returns events as a promise of TProposal . You must supply an EventFetcherFactory for fetching the events and a callback to transform TEventArgs to a promise of TProposal . Each entity, when the associated proposal is votable and options.votingMachine is supplied, will also contain a votingMachine property of type IntVoteInterfaceWrapper . type : TEventArgs The type of the args object in the event. type : TProposal The type of object returned as a transformation of the args information in each event. Type parameters:","title":"getProposalEvents"},{"location":"api/classes/ProposalService/#tproposal","text":"","title":"TProposal"},{"location":"api/classes/ProposalService/#teventargs-eventhaspropertyid","text":"Parameters: Param Type Description options GetProposalEventsOptions TProposal , TEventArgs - Returns: EntityFetcherFactory TProposal \u23ae TProposal ProposalEntity , TEventArgs","title":"TEventArgs :  EventHasPropertyId"},{"location":"api/classes/ProposalService/#getvotableproposals","text":"\u25ba getVotableProposals (votingMachine: IntVoteInterfaceWrapper ): EntityFetcherFactory VotableProposal , NewProposalEventResult Defined in proposalService.ts:93 Returns promise of an EntityFetcherFactory for fetching votable proposals from the given IntVoteInterfaceWrapper . The proposals are returned as promises of instances of VotableProposal . Parameters: Param Type Description votingMachine IntVoteInterfaceWrapper - Returns: EntityFetcherFactory VotableProposal , NewProposalEventResult","title":"getVotableProposals"},{"location":"api/classes/PubSubEventService/","text":"API Reference PubSubEventService Class: PubSubEventService A Pub/Sub event system that enables you to subscribe to various events published by Arc.js. For more information, see Pub/Sub Events . Hierarchy PubSubEventService \u21b3 TransactionService Index Methods clearAllSubscriptions isTopicSpecifiedBy publish subscribe unsubscribe Methods \u00abStatic\u00bb clearAllSubscriptions \u25ba clearAllSubscriptions (): void Defined in pubSubEventService.ts:38 Remove all subscriptions Returns: void \u00abStatic\u00bb isTopicSpecifiedBy \u25ba isTopicSpecifiedBy (matchTemplates: Array . string \u23ae string , topic: string ): boolean Defined in pubSubEventService.ts:91 Return whether topic is specified by matchTemplates. Examples: matchTemplates: [\"foo\"] topic: \"foo.bar\" result: true matchTemplates: [\"foo.bar\"] topic: \"foo\" result: false Or a wildcard: matchTemplates: \"*\" topic: \"foo\" result: true Parameters: Param Type Description matchTemplates Array . string \u23ae string - topic string - Returns: boolean \u00abStatic\u00bb publish \u25ba publish (topic: string , payload: any ): boolean Defined in pubSubEventService.ts:18 Send the given payload to subscribers of the given topic. Parameters: Param Type Description topic string See subscribe payload any Sent in the subscription callback. Returns: boolean True if there are any subscribers \u00abStatic\u00bb subscribe \u25ba subscribe (topics: string \u23ae Array . string , callback: EventSubscriptionCallback ): IEventSubscription Defined in pubSubEventService.ts:29 Subscribe to the given topic or array of topics. Parameters: Param Type Description topics string \u23ae Array . string Identifies the event(s) to which you wish to subscribe callback EventSubscriptionCallback The function to call when the requested events are published Returns: IEventSubscription An interface with .unsubscribe() . Be sure to call it! \u00abStatic\u00bb unsubscribe \u25ba unsubscribe (key: EventSubscriptionKey , milliseconds?: number ): Promise . void Defined in pubSubEventService.ts:52 Unsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy. Parameters: Param Type Default value Description key EventSubscriptionKey - A token, function or topic to unsubscribe. milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"PubSubEventService"},{"location":"api/classes/PubSubEventService/#class-pubsubeventservice","text":"A Pub/Sub event system that enables you to subscribe to various events published by Arc.js. For more information, see Pub/Sub Events .","title":"Class: PubSubEventService"},{"location":"api/classes/PubSubEventService/#hierarchy","text":"PubSubEventService \u21b3 TransactionService","title":"Hierarchy"},{"location":"api/classes/PubSubEventService/#index","text":"","title":"Index"},{"location":"api/classes/PubSubEventService/#methods","text":"clearAllSubscriptions isTopicSpecifiedBy publish subscribe unsubscribe","title":"Methods"},{"location":"api/classes/PubSubEventService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/PubSubEventService/#static-clearallsubscriptions","text":"\u25ba clearAllSubscriptions (): void Defined in pubSubEventService.ts:38 Remove all subscriptions Returns: void","title":"\u00abStatic\u00bb clearAllSubscriptions"},{"location":"api/classes/PubSubEventService/#static-istopicspecifiedby","text":"\u25ba isTopicSpecifiedBy (matchTemplates: Array . string \u23ae string , topic: string ): boolean Defined in pubSubEventService.ts:91 Return whether topic is specified by matchTemplates. Examples: matchTemplates: [\"foo\"] topic: \"foo.bar\" result: true matchTemplates: [\"foo.bar\"] topic: \"foo\" result: false Or a wildcard: matchTemplates: \"*\" topic: \"foo\" result: true Parameters: Param Type Description matchTemplates Array . string \u23ae string - topic string - Returns: boolean","title":"\u00abStatic\u00bb isTopicSpecifiedBy"},{"location":"api/classes/PubSubEventService/#static-publish","text":"\u25ba publish (topic: string , payload: any ): boolean Defined in pubSubEventService.ts:18 Send the given payload to subscribers of the given topic. Parameters: Param Type Description topic string See subscribe payload any Sent in the subscription callback. Returns: boolean True if there are any subscribers","title":"\u00abStatic\u00bb publish"},{"location":"api/classes/PubSubEventService/#static-subscribe","text":"\u25ba subscribe (topics: string \u23ae Array . string , callback: EventSubscriptionCallback ): IEventSubscription Defined in pubSubEventService.ts:29 Subscribe to the given topic or array of topics. Parameters: Param Type Description topics string \u23ae Array . string Identifies the event(s) to which you wish to subscribe callback EventSubscriptionCallback The function to call when the requested events are published Returns: IEventSubscription An interface with .unsubscribe() . Be sure to call it!","title":"\u00abStatic\u00bb subscribe"},{"location":"api/classes/PubSubEventService/#static-unsubscribe","text":"\u25ba unsubscribe (key: EventSubscriptionKey , milliseconds?: number ): Promise . void Defined in pubSubEventService.ts:52 Unsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy. Parameters: Param Type Default value Description key EventSubscriptionKey - A token, function or topic to unsubscribe. milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"\u00abStatic\u00bb unsubscribe"},{"location":"api/classes/RedeemerFactoryType/","text":"API Reference RedeemerFactoryType Class: RedeemerFactoryType defined just to add good type checking Hierarchy ContractWrapperFactory RedeemerWrapper \u21b3 RedeemerFactoryType Implements IContractWrapperFactory RedeemerWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new RedeemerFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): RedeemerFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: RedeemerFactoryType Methods at \u25ba at (address: string ): Promise . RedeemerWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . RedeemerWrapper deployed \u25ba deployed (): Promise . RedeemerWrapper Inherited from ContractWrapperFactory . deployed Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . RedeemerWrapper new \u25ba new (contributionRewardAddress: Address , genesisProtocolAddress: Address ): Promise . RedeemerWrapper Overrides ContractWrapperFactory . new Defined in wrappers/redeemer.ts:100 Parameters: Param Type Description contributionRewardAddress Address - genesisProtocolAddress Address - Returns: Promise . RedeemerWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"RedeemerFactoryType"},{"location":"api/classes/RedeemerFactoryType/#class-redeemerfactorytype","text":"defined just to add good type checking","title":"Class: RedeemerFactoryType"},{"location":"api/classes/RedeemerFactoryType/#hierarchy","text":"ContractWrapperFactory RedeemerWrapper \u21b3 RedeemerFactoryType","title":"Hierarchy"},{"location":"api/classes/RedeemerFactoryType/#implements","text":"IContractWrapperFactory RedeemerWrapper","title":"Implements"},{"location":"api/classes/RedeemerFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/RedeemerFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/RedeemerFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/RedeemerFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/RedeemerFactoryType/#new-redeemerfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-redeemerfactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: RedeemerFactoryType","title":"\u2295 new RedeemerFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): RedeemerFactoryType"},{"location":"api/classes/RedeemerFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/RedeemerFactoryType/#at","text":"\u25ba at (address: string ): Promise . RedeemerWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . RedeemerWrapper","title":"at"},{"location":"api/classes/RedeemerFactoryType/#deployed","text":"\u25ba deployed (): Promise . RedeemerWrapper Inherited from ContractWrapperFactory . deployed Defined in contractWrapperFactory.ts:77 Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found. Returns: Promise . RedeemerWrapper","title":"deployed"},{"location":"api/classes/RedeemerFactoryType/#new","text":"\u25ba new (contributionRewardAddress: Address , genesisProtocolAddress: Address ): Promise . RedeemerWrapper Overrides ContractWrapperFactory . new Defined in wrappers/redeemer.ts:100 Parameters: Param Type Description contributionRewardAddress Address - genesisProtocolAddress Address - Returns: Promise . RedeemerWrapper","title":"new"},{"location":"api/classes/RedeemerFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/RedeemerWrapper/","text":"API Reference RedeemerWrapper Class: RedeemerWrapper Hierarchy ContractWrapperBase \u21b3 RedeemerWrapper Implements IContractWrapper Index Constructors constructor Properties contract factory friendlyName name Accessors address Methods estimateGas getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew redeem redeemables Constructors \u2295 new RedeemerWrapper (solidityContract: any , web3EventService: Web3EventService ): RedeemerWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: RedeemerWrapper Properties contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory RedeemerWrapper = RedeemerFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/redeemer.ts:13 friendlyName \u25cf friendlyName : string = \"Redeemer\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/redeemer.ts:12 name \u25cf name : string = \"Redeemer\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/redeemer.ts:11 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this redeem \u25ba redeem (options: RedeemerOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/redeemer.ts:22 Redeems rewards for a ContributionReward proposal in a single transaction. Calls execute on the proposal if it is not yet executed. Redeems rewardable reputation and stake from the GenesisProtocol. Redeem rewardable contribution proposal rewards. Parameters: Param Type Description options RedeemerOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult redeemables \u25ba redeemables (options: RedeemerOptions ): Promise . RedeeemableResult Defined in wrappers/redeemer.ts:50 Returns the amounts that would be redeemed if Redeemer.redeem were invoked right now. Parameters: Param Type Description options RedeemerOptions - Returns: Promise . RedeeemableResult","title":"RedeemerWrapper"},{"location":"api/classes/RedeemerWrapper/#class-redeemerwrapper","text":"","title":"Class: RedeemerWrapper"},{"location":"api/classes/RedeemerWrapper/#hierarchy","text":"ContractWrapperBase \u21b3 RedeemerWrapper","title":"Hierarchy"},{"location":"api/classes/RedeemerWrapper/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/RedeemerWrapper/#index","text":"","title":"Index"},{"location":"api/classes/RedeemerWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/RedeemerWrapper/#properties","text":"contract factory friendlyName name","title":"Properties"},{"location":"api/classes/RedeemerWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/RedeemerWrapper/#methods","text":"estimateGas getParameters getParametersArray getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew redeem redeemables","title":"Methods"},{"location":"api/classes/RedeemerWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/RedeemerWrapper/#new-redeemerwrappersoliditycontract-any-web3eventservice-web3eventservice-redeemerwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: RedeemerWrapper","title":"\u2295 new RedeemerWrapper(solidityContract: any, web3EventService: Web3EventService): RedeemerWrapper"},{"location":"api/classes/RedeemerWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/RedeemerWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/RedeemerWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory RedeemerWrapper = RedeemerFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/redeemer.ts:13","title":"factory"},{"location":"api/classes/RedeemerWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Redeemer\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/redeemer.ts:12","title":"friendlyName"},{"location":"api/classes/RedeemerWrapper/#name","text":"\u25cf name : string = \"Redeemer\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/redeemer.ts:11","title":"name"},{"location":"api/classes/RedeemerWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/RedeemerWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/RedeemerWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/RedeemerWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/RedeemerWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/RedeemerWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/RedeemerWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/RedeemerWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/RedeemerWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/RedeemerWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/RedeemerWrapper/#redeem","text":"\u25ba redeem (options: RedeemerOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/redeemer.ts:22 Redeems rewards for a ContributionReward proposal in a single transaction. Calls execute on the proposal if it is not yet executed. Redeems rewardable reputation and stake from the GenesisProtocol. Redeem rewardable contribution proposal rewards. Parameters: Param Type Description options RedeemerOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"redeem"},{"location":"api/classes/RedeemerWrapper/#redeemables","text":"\u25ba redeemables (options: RedeemerOptions ): Promise . RedeeemableResult Defined in wrappers/redeemer.ts:50 Returns the amounts that would be redeemed if Redeemer.redeem were invoked right now. Parameters: Param Type Description options RedeemerOptions - Returns: Promise . RedeeemableResult","title":"redeemables"},{"location":"api/classes/ReputationFactoryType/","text":"API Reference ReputationFactoryType Class: ReputationFactoryType Hierarchy ContractWrapperFactory ReputationWrapper \u21b3 ReputationFactoryType Implements IContractWrapperFactory ReputationWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new ReputationFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): ReputationFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: ReputationFactoryType Methods at \u25ba at (address: string ): Promise . ReputationWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . ReputationWrapper deployed \u25ba deployed (): Promise . ReputationWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/reputation.ts:99 Returns: Promise . ReputationWrapper new \u25ba new (...rest: Array . any ): Promise . ReputationWrapper Inherited from ContractWrapperFactory . new Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . ReputationWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"ReputationFactoryType"},{"location":"api/classes/ReputationFactoryType/#class-reputationfactorytype","text":"","title":"Class: ReputationFactoryType"},{"location":"api/classes/ReputationFactoryType/#hierarchy","text":"ContractWrapperFactory ReputationWrapper \u21b3 ReputationFactoryType","title":"Hierarchy"},{"location":"api/classes/ReputationFactoryType/#implements","text":"IContractWrapperFactory ReputationWrapper","title":"Implements"},{"location":"api/classes/ReputationFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/ReputationFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ReputationFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/ReputationFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ReputationFactoryType/#new-reputationfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-reputationfactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: ReputationFactoryType","title":"\u2295 new ReputationFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): ReputationFactoryType"},{"location":"api/classes/ReputationFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ReputationFactoryType/#at","text":"\u25ba at (address: string ): Promise . ReputationWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . ReputationWrapper","title":"at"},{"location":"api/classes/ReputationFactoryType/#deployed","text":"\u25ba deployed (): Promise . ReputationWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/reputation.ts:99 Returns: Promise . ReputationWrapper","title":"deployed"},{"location":"api/classes/ReputationFactoryType/#new","text":"\u25ba new (...rest: Array . any ): Promise . ReputationWrapper Inherited from ContractWrapperFactory . new Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . ReputationWrapper","title":"new"},{"location":"api/classes/ReputationFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/ReputationWrapper/","text":"API Reference ReputationWrapper Class: ReputationWrapper Hierarchy ContractWrapperBase \u21b3 ReputationWrapper Implements IContractWrapper Index Constructors constructor Properties Burn Mint contract factory friendlyName name Accessors address Methods burn estimateGas getParameters getParametersArray getSchemeParametersHash getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew mint reputationOf Constructors \u2295 new ReputationWrapper (solidityContract: any , web3EventService: Web3EventService ): ReputationWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: ReputationWrapper Properties Burn \u25cf Burn : EventFetcherFactory ReputationBurnEventResult Defined in wrappers/reputation.ts:18 Mint \u25cf Mint : EventFetcherFactory ReputationMintEventResult Defined in wrappers/reputation.ts:17 contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory ReputationWrapper = ReputationFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/reputation.ts:15 friendlyName \u25cf friendlyName : string = \"Reputation\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/reputation.ts:14 name \u25cf name : string = \"Reputation\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/reputation.ts:13 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods burn \u25ba burn (options: ReputationBurnOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/reputation.ts:51 Remove reputation from the given account. Parameters: Param Type Description options ReputationBurnOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getTotalSupply \u25ba getTotalSupply (): Promise . BigNumber Defined in wrappers/reputation.ts:74 Returns: Promise . BigNumber hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this mint \u25ba mint (options: ReputationMintOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/reputation.ts:24 Mint reputation to the given recipient Parameters: Param Type Description options ReputationMintOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult reputationOf \u25ba reputationOf (accountAddress: Address ): Promise . BigNumber Defined in wrappers/reputation.ts:78 Parameters: Param Type Description accountAddress Address - Returns: Promise . BigNumber","title":"ReputationWrapper"},{"location":"api/classes/ReputationWrapper/#class-reputationwrapper","text":"","title":"Class: ReputationWrapper"},{"location":"api/classes/ReputationWrapper/#hierarchy","text":"ContractWrapperBase \u21b3 ReputationWrapper","title":"Hierarchy"},{"location":"api/classes/ReputationWrapper/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/ReputationWrapper/#index","text":"","title":"Index"},{"location":"api/classes/ReputationWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/ReputationWrapper/#properties","text":"Burn Mint contract factory friendlyName name","title":"Properties"},{"location":"api/classes/ReputationWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/ReputationWrapper/#methods","text":"burn estimateGas getParameters getParametersArray getSchemeParametersHash getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew mint reputationOf","title":"Methods"},{"location":"api/classes/ReputationWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/ReputationWrapper/#new-reputationwrappersoliditycontract-any-web3eventservice-web3eventservice-reputationwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: ReputationWrapper","title":"\u2295 new ReputationWrapper(solidityContract: any, web3EventService: Web3EventService): ReputationWrapper"},{"location":"api/classes/ReputationWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/ReputationWrapper/#burn","text":"\u25cf Burn : EventFetcherFactory ReputationBurnEventResult Defined in wrappers/reputation.ts:18","title":"Burn"},{"location":"api/classes/ReputationWrapper/#mint","text":"\u25cf Mint : EventFetcherFactory ReputationMintEventResult Defined in wrappers/reputation.ts:17","title":"Mint"},{"location":"api/classes/ReputationWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/ReputationWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory ReputationWrapper = ReputationFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/reputation.ts:15","title":"factory"},{"location":"api/classes/ReputationWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Reputation\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/reputation.ts:14","title":"friendlyName"},{"location":"api/classes/ReputationWrapper/#name","text":"\u25cf name : string = \"Reputation\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/reputation.ts:13","title":"name"},{"location":"api/classes/ReputationWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/ReputationWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/ReputationWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/ReputationWrapper/#burn_1","text":"\u25ba burn (options: ReputationBurnOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/reputation.ts:51 Remove reputation from the given account. Parameters: Param Type Description options ReputationBurnOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"burn"},{"location":"api/classes/ReputationWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/ReputationWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/ReputationWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/ReputationWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/ReputationWrapper/#gettotalsupply","text":"\u25ba getTotalSupply (): Promise . BigNumber Defined in wrappers/reputation.ts:74 Returns: Promise . BigNumber","title":"getTotalSupply"},{"location":"api/classes/ReputationWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/ReputationWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/ReputationWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/ReputationWrapper/#mint_1","text":"\u25ba mint (options: ReputationMintOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/reputation.ts:24 Mint reputation to the given recipient Parameters: Param Type Description options ReputationMintOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"mint"},{"location":"api/classes/ReputationWrapper/#reputationof","text":"\u25ba reputationOf (accountAddress: Address ): Promise . BigNumber Defined in wrappers/reputation.ts:78 Parameters: Param Type Description accountAddress Address - Returns: Promise . BigNumber","title":"reputationOf"},{"location":"api/classes/SchemeRegistrarWrapper/","text":"API Reference SchemeRegistrarWrapper Class: SchemeRegistrarWrapper Hierarchy \u21b3 ProposalGeneratorBase \u21b3 SchemeRegistrarWrapper Implements IContractWrapper IUniversalSchemeWrapper Index Constructors constructor Properties NewSchemeProposal ProposalDeleted ProposalExecuted RemoveSchemeProposal contract factory friendlyName name Accessors address Methods estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableAddSchemeProposals getVotableProposal getVotableRemoveSchemeProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeToAddModifyScheme proposeToRemoveScheme setParameters Constructors \u2295 new SchemeRegistrarWrapper (solidityContract: any , web3EventService: Web3EventService ): SchemeRegistrarWrapper Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: SchemeRegistrarWrapper Properties NewSchemeProposal \u25cf NewSchemeProposal : EventFetcherFactory NewSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:30 Events ProposalDeleted \u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/schemeRegistrar.ts:33 ProposalExecuted \u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/schemeRegistrar.ts:32 RemoveSchemeProposal \u25cf RemoveSchemeProposal : EventFetcherFactory RemoveSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:31 contract \u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory SchemeRegistrarWrapper = SchemeRegistrarFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/schemeRegistrar.ts:25 friendlyName \u25cf friendlyName : string = \"Scheme Registrar\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/schemeRegistrar.ts:24 name \u25cf name : string = \"SchemeRegistrar\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/schemeRegistrar.ts:23 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/schemeRegistrar.ts:153 Returns: SchemePermissions getExecutedProposals \u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/schemeRegistrar.ts:228 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult getParameters \u25ba getParameters (paramsHash: Hash ): Promise . SchemeRegistrarParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/schemeRegistrar.ts:165 Parameters: Param Type Description paramsHash Hash - Returns: Promise . SchemeRegistrarParams getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: SchemeRegistrarParams ): Promise . Hash Defined in wrappers/schemeRegistrar.ts:130 Parameters: Param Type Description params SchemeRegistrarParams - Returns: Promise . Hash getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . SchemeRegistrarParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/schemeRegistrar.ts:161 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemeRegistrarParams getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/schemeRegistrar.ts:157 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions getVotableAddSchemeProposals \u25ba getVotableAddSchemeProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , NewSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:178 EntityFetcherFactory for votable SchemeRegistrarProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , NewSchemeProposalEventResult getVotableProposal \u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableSchemeRegistrarProposal Defined in wrappers/schemeRegistrar.ts:246 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableSchemeRegistrarProposal getVotableRemoveSchemeProposals \u25ba getVotableRemoveSchemeProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , RemoveSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:203 EntityFetcherFactory for votable SchemeRegistrarProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , RemoveSchemeProposalEventResult getVotingMachine \u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper getVotingMachineAddress \u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this proposeToAddModifyScheme \u25ba proposeToAddModifyScheme (options?: ProposeToAddModifySchemeParams ): Promise . ArcTransactionProposalResult Defined in wrappers/schemeRegistrar.ts:39 Submit a proposal to add or modify a given scheme. Parameters: Param Type Default value Description options ProposeToAddModifySchemeParams {} as ProposeToAddModifySchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult proposeToRemoveScheme \u25ba proposeToRemoveScheme (options?: ProposeToRemoveSchemeParams ): Promise . ArcTransactionProposalResult Defined in wrappers/schemeRegistrar.ts:106 Submit a proposal to remove a given scheme. Parameters: Param Type Default value Description options ProposeToRemoveSchemeParams {} as ProposeToRemoveSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult setParameters \u25ba setParameters (params: SchemeRegistrarParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/schemeRegistrar.ts:138 Parameters: Param Type Description params SchemeRegistrarParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"SchemeRegistrarWrapper"},{"location":"api/classes/SchemeRegistrarWrapper/#class-schemeregistrarwrapper","text":"","title":"Class: SchemeRegistrarWrapper"},{"location":"api/classes/SchemeRegistrarWrapper/#hierarchy","text":"\u21b3 ProposalGeneratorBase \u21b3 SchemeRegistrarWrapper","title":"Hierarchy"},{"location":"api/classes/SchemeRegistrarWrapper/#implements","text":"IContractWrapper IUniversalSchemeWrapper","title":"Implements"},{"location":"api/classes/SchemeRegistrarWrapper/#index","text":"","title":"Index"},{"location":"api/classes/SchemeRegistrarWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/SchemeRegistrarWrapper/#properties","text":"NewSchemeProposal ProposalDeleted ProposalExecuted RemoveSchemeProposal contract factory friendlyName name","title":"Properties"},{"location":"api/classes/SchemeRegistrarWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/SchemeRegistrarWrapper/#methods","text":"estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableAddSchemeProposals getVotableProposal getVotableRemoveSchemeProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeToAddModifyScheme proposeToRemoveScheme setParameters","title":"Methods"},{"location":"api/classes/SchemeRegistrarWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/SchemeRegistrarWrapper/#new-schemeregistrarwrappersoliditycontract-any-web3eventservice-web3eventservice-schemeregistrarwrapper","text":"Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: SchemeRegistrarWrapper","title":"\u2295 new SchemeRegistrarWrapper(solidityContract: any, web3EventService: Web3EventService): SchemeRegistrarWrapper"},{"location":"api/classes/SchemeRegistrarWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/SchemeRegistrarWrapper/#newschemeproposal","text":"\u25cf NewSchemeProposal : EventFetcherFactory NewSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:30 Events","title":"NewSchemeProposal"},{"location":"api/classes/SchemeRegistrarWrapper/#proposaldeleted","text":"\u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/schemeRegistrar.ts:33","title":"ProposalDeleted"},{"location":"api/classes/SchemeRegistrarWrapper/#proposalexecuted","text":"\u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/schemeRegistrar.ts:32","title":"ProposalExecuted"},{"location":"api/classes/SchemeRegistrarWrapper/#removeschemeproposal","text":"\u25cf RemoveSchemeProposal : EventFetcherFactory RemoveSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:31","title":"RemoveSchemeProposal"},{"location":"api/classes/SchemeRegistrarWrapper/#contract","text":"\u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/SchemeRegistrarWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory SchemeRegistrarWrapper = SchemeRegistrarFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/schemeRegistrar.ts:25","title":"factory"},{"location":"api/classes/SchemeRegistrarWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Scheme Registrar\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/schemeRegistrar.ts:24","title":"friendlyName"},{"location":"api/classes/SchemeRegistrarWrapper/#name","text":"\u25cf name : string = \"SchemeRegistrar\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/schemeRegistrar.ts:23","title":"name"},{"location":"api/classes/SchemeRegistrarWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/SchemeRegistrarWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/SchemeRegistrarWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/SchemeRegistrarWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/SchemeRegistrarWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/schemeRegistrar.ts:153 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/classes/SchemeRegistrarWrapper/#getexecutedproposals","text":"\u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/schemeRegistrar.ts:228 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult","title":"getExecutedProposals"},{"location":"api/classes/SchemeRegistrarWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . SchemeRegistrarParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/schemeRegistrar.ts:165 Parameters: Param Type Description paramsHash Hash - Returns: Promise . SchemeRegistrarParams","title":"getParameters"},{"location":"api/classes/SchemeRegistrarWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/SchemeRegistrarWrapper/#getparametershash","text":"\u25ba getParametersHash (params: SchemeRegistrarParams ): Promise . Hash Defined in wrappers/schemeRegistrar.ts:130 Parameters: Param Type Description params SchemeRegistrarParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/SchemeRegistrarWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . SchemeRegistrarParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/schemeRegistrar.ts:161 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemeRegistrarParams","title":"getSchemeParameters"},{"location":"api/classes/SchemeRegistrarWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/SchemeRegistrarWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/schemeRegistrar.ts:157 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/classes/SchemeRegistrarWrapper/#getvotableaddschemeproposals","text":"\u25ba getVotableAddSchemeProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , NewSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:178 EntityFetcherFactory for votable SchemeRegistrarProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , NewSchemeProposalEventResult","title":"getVotableAddSchemeProposals"},{"location":"api/classes/SchemeRegistrarWrapper/#getvotableproposal","text":"\u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableSchemeRegistrarProposal Defined in wrappers/schemeRegistrar.ts:246 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableSchemeRegistrarProposal","title":"getVotableProposal"},{"location":"api/classes/SchemeRegistrarWrapper/#getvotableremoveschemeproposals","text":"\u25ba getVotableRemoveSchemeProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , RemoveSchemeProposalEventResult Defined in wrappers/schemeRegistrar.ts:203 EntityFetcherFactory for votable SchemeRegistrarProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableSchemeRegistrarProposal , RemoveSchemeProposalEventResult","title":"getVotableRemoveSchemeProposals"},{"location":"api/classes/SchemeRegistrarWrapper/#getvotingmachine","text":"\u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper","title":"getVotingMachine"},{"location":"api/classes/SchemeRegistrarWrapper/#getvotingmachineaddress","text":"\u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address","title":"getVotingMachineAddress"},{"location":"api/classes/SchemeRegistrarWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/SchemeRegistrarWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/SchemeRegistrarWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/SchemeRegistrarWrapper/#proposetoaddmodifyscheme","text":"\u25ba proposeToAddModifyScheme (options?: ProposeToAddModifySchemeParams ): Promise . ArcTransactionProposalResult Defined in wrappers/schemeRegistrar.ts:39 Submit a proposal to add or modify a given scheme. Parameters: Param Type Default value Description options ProposeToAddModifySchemeParams {} as ProposeToAddModifySchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"proposeToAddModifyScheme"},{"location":"api/classes/SchemeRegistrarWrapper/#proposetoremovescheme","text":"\u25ba proposeToRemoveScheme (options?: ProposeToRemoveSchemeParams ): Promise . ArcTransactionProposalResult Defined in wrappers/schemeRegistrar.ts:106 Submit a proposal to remove a given scheme. Parameters: Param Type Default value Description options ProposeToRemoveSchemeParams {} as ProposeToRemoveSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"proposeToRemoveScheme"},{"location":"api/classes/SchemeRegistrarWrapper/#setparameters","text":"\u25ba setParameters (params: SchemeRegistrarParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/schemeRegistrar.ts:138 Parameters: Param Type Description params SchemeRegistrarParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/StandardTokenFactoryType/","text":"API Reference StandardTokenFactoryType Class: StandardTokenFactoryType defined just to add good type checking Hierarchy ContractWrapperFactory StandardTokenWrapper \u21b3 StandardTokenFactoryType Implements IContractWrapperFactory StandardTokenWrapper Index Constructors constructor Methods at deployed new setConfigService Constructors \u2295 new StandardTokenFactoryType (solidityContractName: string , wrapper: object , web3EventService: Web3EventService ): StandardTokenFactoryType Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: StandardTokenFactoryType Methods at \u25ba at (address: string ): Promise . StandardTokenWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . StandardTokenWrapper deployed \u25ba deployed (): Promise . StandardTokenWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/standardToken.ts:222 Returns: Promise . StandardTokenWrapper new \u25ba new (...rest: Array . any ): Promise . StandardTokenWrapper Inherited from ContractWrapperFactory . new Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . StandardTokenWrapper \u00abStatic\u00bb setConfigService \u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"StandardTokenFactoryType"},{"location":"api/classes/StandardTokenFactoryType/#class-standardtokenfactorytype","text":"defined just to add good type checking","title":"Class: StandardTokenFactoryType"},{"location":"api/classes/StandardTokenFactoryType/#hierarchy","text":"ContractWrapperFactory StandardTokenWrapper \u21b3 StandardTokenFactoryType","title":"Hierarchy"},{"location":"api/classes/StandardTokenFactoryType/#implements","text":"IContractWrapperFactory StandardTokenWrapper","title":"Implements"},{"location":"api/classes/StandardTokenFactoryType/#index","text":"","title":"Index"},{"location":"api/classes/StandardTokenFactoryType/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/StandardTokenFactoryType/#methods","text":"at deployed new setConfigService","title":"Methods"},{"location":"api/classes/StandardTokenFactoryType/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/StandardTokenFactoryType/#new-standardtokenfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-standardtokenfactorytype","text":"Inherited from ContractWrapperFactory . constructor Defined in contractWrapperFactory.ts:26 Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class. Parameters: Param Type Description solidityContractName string - wrapper object Class of the contract web3EventService Web3EventService - Returns: StandardTokenFactoryType","title":"\u2295 new StandardTokenFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): StandardTokenFactoryType"},{"location":"api/classes/StandardTokenFactoryType/#methods_1","text":"","title":"Methods"},{"location":"api/classes/StandardTokenFactoryType/#at","text":"\u25ba at (address: string ): Promise . StandardTokenWrapper Inherited from ContractWrapperFactory . at Defined in contractWrapperFactory.ts:61 Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found. Parameters: Param Type Description address string - Returns: Promise . StandardTokenWrapper","title":"at"},{"location":"api/classes/StandardTokenFactoryType/#deployed","text":"\u25ba deployed (): Promise . StandardTokenWrapper Overrides ContractWrapperFactory . deployed Defined in wrappers/standardToken.ts:222 Returns: Promise . StandardTokenWrapper","title":"deployed"},{"location":"api/classes/StandardTokenFactoryType/#new","text":"\u25ba new (...rest: Array . any ): Promise . StandardTokenWrapper Inherited from ContractWrapperFactory . new Defined in contractWrapperFactory.ts:44 Deploy a new instance of the contract and return a wrapper around it. Parameters: Param Type Description rest Array . any Optional arguments to the Arc contracts constructor. Returns: Promise . StandardTokenWrapper","title":"new"},{"location":"api/classes/StandardTokenFactoryType/#static-setconfigservice","text":"\u25ba setConfigService (configService: IConfigService ): void Inherited from ContractWrapperFactory . setConfigService Defined in contractWrapperFactory.ts:14 Parameters: Param Type Description configService IConfigService - Returns: void","title":"\u00abStatic\u00bb setConfigService"},{"location":"api/classes/StandardTokenWrapper/","text":"API Reference StandardTokenWrapper Class: StandardTokenWrapper Hierarchy ContractWrapperBase \u21b3 StandardTokenWrapper \u21b3 MintableTokenWrapper Implements IContractWrapper Index Constructors constructor Properties Approval Transfer contract factory friendlyName name Accessors address Methods allowance approve decreaseApproval estimateGas getBalanceOf getParameters getParametersArray getSchemeParametersHash getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew increaseApproval transfer transferFrom Constructors \u2295 new StandardTokenWrapper (solidityContract: any , web3EventService: Web3EventService ): StandardTokenWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: StandardTokenWrapper Properties Approval \u25cf Approval : EventFetcherFactory ApprovalEventResult Defined in wrappers/standardToken.ts:16 Transfer \u25cf Transfer : EventFetcherFactory TransferEventResult Defined in wrappers/standardToken.ts:17 contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory StandardTokenWrapper = StandardTokenFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/standardToken.ts:14 friendlyName \u25cf friendlyName : string = \"Standard Token\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/standardToken.ts:13 name \u25cf name : string = \"StandardToken\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/standardToken.ts:12 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods allowance \u25ba allowance (options: StandardTokenAllowanceOptions ): Promise . BigNumber Defined in wrappers/standardToken.ts:198 Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account. Parameters: Param Type Description options StandardTokenAllowanceOptions - Returns: Promise . BigNumber approve \u25ba approve (options: StandardTokenApproveOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:24 Approve transfer of tokens by msg.sender (or onBehalfOf , if given) from the given \"spender\". Parameters: Param Type Description options StandardTokenApproveOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult decreaseApproval \u25ba decreaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:147 Decrease the number of tokens approved that msg.sender (or onBehalfOf if given) may transfer from the given \"spender\". Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getBalanceOf \u25ba getBalanceOf (account: Address ): Promise . BigNumber Defined in wrappers/standardToken.ts:175 Returns a promise of the given account's current token balance. Parameters: Param Type Description account Address - Returns: Promise . BigNumber getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getTotalSupply \u25ba getTotalSupply (): Promise . BigNumber Defined in wrappers/standardToken.ts:187 Returns a promise of the token's total number of tokens. Returns: Promise . BigNumber hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this increaseApproval \u25ba increaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:118 Increase the number of tokens approved that msg.sender (or onBehalfOf , if given) may transfer from the given \"spender\". Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transfer \u25ba transfer (options: StandardTokenTransferOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:51 Transfer tokens from the current account to another. Parameters: Param Type Description options StandardTokenTransferOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transferFrom \u25ba transferFrom (options: StandardTokenTransferFromOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:82 Transfer tokens from one address to another. Parameters: Param Type Description options StandardTokenTransferFromOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"StandardTokenWrapper"},{"location":"api/classes/StandardTokenWrapper/#class-standardtokenwrapper","text":"","title":"Class: StandardTokenWrapper"},{"location":"api/classes/StandardTokenWrapper/#hierarchy","text":"ContractWrapperBase \u21b3 StandardTokenWrapper \u21b3 MintableTokenWrapper","title":"Hierarchy"},{"location":"api/classes/StandardTokenWrapper/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/StandardTokenWrapper/#index","text":"","title":"Index"},{"location":"api/classes/StandardTokenWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/StandardTokenWrapper/#properties","text":"Approval Transfer contract factory friendlyName name","title":"Properties"},{"location":"api/classes/StandardTokenWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/StandardTokenWrapper/#methods","text":"allowance approve decreaseApproval estimateGas getBalanceOf getParameters getParametersArray getSchemeParametersHash getTotalSupply hydrateFromAt hydrateFromDeployed hydrateFromNew increaseApproval transfer transferFrom","title":"Methods"},{"location":"api/classes/StandardTokenWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/StandardTokenWrapper/#new-standardtokenwrappersoliditycontract-any-web3eventservice-web3eventservice-standardtokenwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: StandardTokenWrapper","title":"\u2295 new StandardTokenWrapper(solidityContract: any, web3EventService: Web3EventService): StandardTokenWrapper"},{"location":"api/classes/StandardTokenWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/StandardTokenWrapper/#approval","text":"\u25cf Approval : EventFetcherFactory ApprovalEventResult Defined in wrappers/standardToken.ts:16","title":"Approval"},{"location":"api/classes/StandardTokenWrapper/#transfer","text":"\u25cf Transfer : EventFetcherFactory TransferEventResult Defined in wrappers/standardToken.ts:17","title":"Transfer"},{"location":"api/classes/StandardTokenWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/StandardTokenWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory StandardTokenWrapper = StandardTokenFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/standardToken.ts:14","title":"factory"},{"location":"api/classes/StandardTokenWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Standard Token\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/standardToken.ts:13","title":"friendlyName"},{"location":"api/classes/StandardTokenWrapper/#name","text":"\u25cf name : string = \"StandardToken\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/standardToken.ts:12","title":"name"},{"location":"api/classes/StandardTokenWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/StandardTokenWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/StandardTokenWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/StandardTokenWrapper/#allowance","text":"\u25ba allowance (options: StandardTokenAllowanceOptions ): Promise . BigNumber Defined in wrappers/standardToken.ts:198 Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account. Parameters: Param Type Description options StandardTokenAllowanceOptions - Returns: Promise . BigNumber","title":"allowance"},{"location":"api/classes/StandardTokenWrapper/#approve","text":"\u25ba approve (options: StandardTokenApproveOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:24 Approve transfer of tokens by msg.sender (or onBehalfOf , if given) from the given \"spender\". Parameters: Param Type Description options StandardTokenApproveOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"approve"},{"location":"api/classes/StandardTokenWrapper/#decreaseapproval","text":"\u25ba decreaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:147 Decrease the number of tokens approved that msg.sender (or onBehalfOf if given) may transfer from the given \"spender\". Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"decreaseApproval"},{"location":"api/classes/StandardTokenWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/StandardTokenWrapper/#getbalanceof","text":"\u25ba getBalanceOf (account: Address ): Promise . BigNumber Defined in wrappers/standardToken.ts:175 Returns a promise of the given account's current token balance. Parameters: Param Type Description account Address - Returns: Promise . BigNumber","title":"getBalanceOf"},{"location":"api/classes/StandardTokenWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Inherited from ContractWrapperBase . getParameters Defined in contractWrapperBase.ts:136 Given a hash, returns the associated parameters as an object. Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/StandardTokenWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/StandardTokenWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/StandardTokenWrapper/#gettotalsupply","text":"\u25ba getTotalSupply (): Promise . BigNumber Defined in wrappers/standardToken.ts:187 Returns a promise of the token's total number of tokens. Returns: Promise . BigNumber","title":"getTotalSupply"},{"location":"api/classes/StandardTokenWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/StandardTokenWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/StandardTokenWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/StandardTokenWrapper/#increaseapproval","text":"\u25ba increaseApproval (options: StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:118 Increase the number of tokens approved that msg.sender (or onBehalfOf , if given) may transfer from the given \"spender\". Parameters: Param Type Description options StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"increaseApproval"},{"location":"api/classes/StandardTokenWrapper/#transfer_1","text":"\u25ba transfer (options: StandardTokenTransferOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:51 Transfer tokens from the current account to another. Parameters: Param Type Description options StandardTokenTransferOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transfer"},{"location":"api/classes/StandardTokenWrapper/#transferfrom","text":"\u25ba transferFrom (options: StandardTokenTransferFromOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/standardToken.ts:82 Transfer tokens from one address to another. Parameters: Param Type Description options StandardTokenTransferFromOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transferFrom"},{"location":"api/classes/SubscriptionCollection/","text":"API Reference SubscriptionCollection Class: SubscriptionCollection Creates a collection of subscriptions to which one can unsubscribe all at once. Implements IEventSubscription Index Constructors constructor Methods subscribe unsubscribe Constructors \u2295 new SubscriptionCollection (topics?: string \u23ae Array . string , callback?: EventSubscriptionCallback ): SubscriptionCollection Defined in pubSubEventService.ts:154 Parameters: Param Type Description topics string \u23ae Array . string - callback EventSubscriptionCallback - Returns: SubscriptionCollection Methods subscribe \u25ba subscribe (topics: string \u23ae Array . string , callback: EventSubscriptionCallback ): void Defined in pubSubEventService.ts:169 Subscribe a single callback to a set of events Parameters: Param Type Description topics string \u23ae Array . string - callback EventSubscriptionCallback - Returns: void unsubscribe \u25ba unsubscribe (milliseconds?: number ): Promise . void Implementation of IEventSubscription . unsubscribe Defined in pubSubEventService.ts:184 Unsubscribe from all of the events Parameters: Param Type Default value Description milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"SubscriptionCollection"},{"location":"api/classes/SubscriptionCollection/#class-subscriptioncollection","text":"Creates a collection of subscriptions to which one can unsubscribe all at once.","title":"Class: SubscriptionCollection"},{"location":"api/classes/SubscriptionCollection/#implements","text":"IEventSubscription","title":"Implements"},{"location":"api/classes/SubscriptionCollection/#index","text":"","title":"Index"},{"location":"api/classes/SubscriptionCollection/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/SubscriptionCollection/#methods","text":"subscribe unsubscribe","title":"Methods"},{"location":"api/classes/SubscriptionCollection/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/SubscriptionCollection/#new-subscriptioncollectiontopics-stringarraystring-callback-eventsubscriptioncallback-subscriptioncollection","text":"Defined in pubSubEventService.ts:154 Parameters: Param Type Description topics string \u23ae Array . string - callback EventSubscriptionCallback - Returns: SubscriptionCollection","title":"\u2295 new SubscriptionCollection(topics?: string\u23aeArray.&lt;string&gt;, callback?: EventSubscriptionCallback): SubscriptionCollection"},{"location":"api/classes/SubscriptionCollection/#methods_1","text":"","title":"Methods"},{"location":"api/classes/SubscriptionCollection/#subscribe","text":"\u25ba subscribe (topics: string \u23ae Array . string , callback: EventSubscriptionCallback ): void Defined in pubSubEventService.ts:169 Subscribe a single callback to a set of events Parameters: Param Type Description topics string \u23ae Array . string - callback EventSubscriptionCallback - Returns: void","title":"subscribe"},{"location":"api/classes/SubscriptionCollection/#unsubscribe","text":"\u25ba unsubscribe (milliseconds?: number ): Promise . void Implementation of IEventSubscription . unsubscribe Defined in pubSubEventService.ts:184 Unsubscribe from all of the events Parameters: Param Type Default value Description milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"unsubscribe"},{"location":"api/classes/TokenCapGCWrapper/","text":"API Reference TokenCapGCWrapper Class: TokenCapGCWrapper Hierarchy ContractWrapperBase \u21b3 TokenCapGCWrapper Implements IContractWrapper Index Constructors constructor Properties contract factory friendlyName name Accessors address Methods estimateGas getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew setParameters Constructors \u2295 new TokenCapGCWrapper (solidityContract: any , web3EventService: Web3EventService ): TokenCapGCWrapper Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: TokenCapGCWrapper Properties contract \u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory TokenCapGCWrapper = TokenCapGCFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/tokenCapGC.ts:15 friendlyName \u25cf friendlyName : string = \"Token Cap Global Constraint\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/tokenCapGC.ts:14 name \u25cf name : string = \"TokenCapGC\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/tokenCapGC.ts:13 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Overrides ContractWrapperBase . getParameters Defined in wrappers/tokenCapGC.ts:42 Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: TokenCapGcParams ): Promise . Hash Defined in wrappers/tokenCapGC.ts:17 Parameters: Param Type Description params TokenCapGcParams - Returns: Promise . Hash getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . GetTokenCapGcParamsResult Defined in wrappers/tokenCapGC.ts:56 Parameters: Param Type Description avatarAddress Address - Returns: Promise . GetTokenCapGcParamsResult getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Overrides ContractWrapperBase . getSchemeParametersHash Defined in wrappers/tokenCapGC.ts:50 Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this setParameters \u25ba setParameters (params: TokenCapGcParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/tokenCapGC.ts:23 Parameters: Param Type Description params TokenCapGcParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"TokenCapGCWrapper"},{"location":"api/classes/TokenCapGCWrapper/#class-tokencapgcwrapper","text":"","title":"Class: TokenCapGCWrapper"},{"location":"api/classes/TokenCapGCWrapper/#hierarchy","text":"ContractWrapperBase \u21b3 TokenCapGCWrapper","title":"Hierarchy"},{"location":"api/classes/TokenCapGCWrapper/#implements","text":"IContractWrapper","title":"Implements"},{"location":"api/classes/TokenCapGCWrapper/#index","text":"","title":"Index"},{"location":"api/classes/TokenCapGCWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/TokenCapGCWrapper/#properties","text":"contract factory friendlyName name","title":"Properties"},{"location":"api/classes/TokenCapGCWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/TokenCapGCWrapper/#methods","text":"estimateGas getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash hydrateFromAt hydrateFromDeployed hydrateFromNew setParameters","title":"Methods"},{"location":"api/classes/TokenCapGCWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/TokenCapGCWrapper/#new-tokencapgcwrappersoliditycontract-any-web3eventservice-web3eventservice-tokencapgcwrapper","text":"Inherited from ContractWrapperBase . constructor Defined in contractWrapperBase.ts:66 ContractWrapperFactory constructs this Parameters: Param Type Description solidityContract any The json contract truffle artifact web3EventService Web3EventService - Returns: TokenCapGCWrapper","title":"\u2295 new TokenCapGCWrapper(solidityContract: any, web3EventService: Web3EventService): TokenCapGCWrapper"},{"location":"api/classes/TokenCapGCWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/TokenCapGCWrapper/#contract","text":"\u25cf contract : any Implementation of IContractWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/TokenCapGCWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory TokenCapGCWrapper = TokenCapGCFactory Implementation of IContractWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/tokenCapGC.ts:15","title":"factory"},{"location":"api/classes/TokenCapGCWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Token Cap Global Constraint\" Implementation of IContractWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/tokenCapGC.ts:14","title":"friendlyName"},{"location":"api/classes/TokenCapGCWrapper/#name","text":"\u25cf name : string = \"TokenCapGC\" Implementation of IContractWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/tokenCapGC.ts:13","title":"name"},{"location":"api/classes/TokenCapGCWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/TokenCapGCWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/TokenCapGCWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/TokenCapGCWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/TokenCapGCWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Overrides ContractWrapperBase . getParameters Defined in wrappers/tokenCapGC.ts:42 Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/classes/TokenCapGCWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/TokenCapGCWrapper/#getparametershash","text":"\u25ba getParametersHash (params: TokenCapGcParams ): Promise . Hash Defined in wrappers/tokenCapGC.ts:17 Parameters: Param Type Description params TokenCapGcParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/TokenCapGCWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . GetTokenCapGcParamsResult Defined in wrappers/tokenCapGC.ts:56 Parameters: Param Type Description avatarAddress Address - Returns: Promise . GetTokenCapGcParamsResult","title":"getSchemeParameters"},{"location":"api/classes/TokenCapGCWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Overrides ContractWrapperBase . getSchemeParametersHash Defined in wrappers/tokenCapGC.ts:50 Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/TokenCapGCWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/TokenCapGCWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/TokenCapGCWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IContractWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/TokenCapGCWrapper/#setparameters","text":"\u25ba setParameters (params: TokenCapGcParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/tokenCapGC.ts:23 Parameters: Param Type Description params TokenCapGcParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/TransactionService/","text":"API Reference TransactionService Class: TransactionService Enables you to track the completion of transactions triggered by Arc.js functions. You can subscribe to events that tell you how many transactions are anticipated when the transactions have completed. For more information, see Tracking Transactions . Hierarchy PubSubEventService \u21b3 TransactionService Index Methods clearAllSubscriptions generateInvocationKey getConfirmedTransaction getDefaultDepth getMinedTransaction getTransactionDepth getValueFromLogs isTopicSpecifiedBy publish publishTxFailed subscribe unsubscribe watchForConfirmedTransaction watchForMinedTransaction Methods \u00abStatic\u00bb clearAllSubscriptions \u25ba clearAllSubscriptions (): void Inherited from PubSubEventService . clearAllSubscriptions Defined in pubSubEventService.ts:38 Remove all subscriptions Returns: void \u00abStatic\u00bb generateInvocationKey \u25ba generateInvocationKey (): number Defined in transactionService.ts:22 Generate a new invocation key. Returns: number \u00abStatic\u00bb getConfirmedTransaction \u25ba getConfirmedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null Defined in transactionService.ts:344 Returns a promise of a TransactionReceipt for a confirmed transaction, or null if it hasn't yet been confirmed according to the requiredDepth. Parameters: Param Type Default value Description txHash Hash - - contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number - Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null \u00abStatic\u00bb getDefaultDepth \u25ba getDefaultDepth (requiredDepth?: number ): Promise . number Defined in transactionService.ts:522 Returns the default value for required block depth defined for the current network in the Arc.js global configuration \" txDepthRequiredForConfirmation \". Parameters: Param Type Description requiredDepth number Overrides the default if given Returns: Promise . number \u00abStatic\u00bb getMinedTransaction \u25ba getMinedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null Defined in transactionService.ts:313 Returns a promise of a TransactionReceipt for a mined transaction, or null if it hasn't yet been mined. Parameters: Param Type Default value Description txHash Hash - - contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number 0 Optional minimum block depth required to resolve the promise. Default is 0. Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null Promise of TransactionReceiptTruffle if contract is given, else TransactionReceipt , or null if not found. \u00abStatic\u00bb getTransactionDepth \u25ba getTransactionDepth (tx: Hash \u23ae TransactionReceipt ): Promise . number Defined in transactionService.ts:281 Returns a promise of the number of blocks that have been added to the chain since the given transaction appeared. Use this to decide whether a transaction is sufficiently secure (confirmed). See also getConfirmedTransaction and watchForConfirmedTransaction . Parameters: Param Type Description tx Hash \u23ae TransactionReceipt txHash or TransactionReceipt Returns: Promise . number Promise of the depth or -1 if the transaction cannot be found \u00abStatic\u00bb getValueFromLogs \u25ba getValueFromLogs (tx: TransactionReceiptTruffle \u23ae TransactionReceipt , arg: string , eventName?: string , index?: number ): any \u23ae undefined Defined in transactionService.ts:462 Returns a value from the given transaction log. Undefined if not found for any reason. Parameters: Param Type Default value Description tx TransactionReceiptTruffle \u23ae TransactionReceipt - The transaction arg string - The name of the property whose value we wish to return from the args object: tx.logs[index].args[argName] eventName string null Overrides index, identifies which log, where tx.logs[n].event === eventName index number 0 Identifies which log when eventName is not given Returns: any \u23ae undefined \u00abStatic\u00bb isTopicSpecifiedBy \u25ba isTopicSpecifiedBy (matchTemplates: Array . string \u23ae string , topic: string ): boolean Inherited from PubSubEventService . isTopicSpecifiedBy Defined in pubSubEventService.ts:91 Return whether topic is specified by matchTemplates. Examples: matchTemplates: [\"foo\"] topic: \"foo.bar\" result: true matchTemplates: [\"foo.bar\"] topic: \"foo\" result: false Or a wildcard: matchTemplates: \"*\" topic: \"foo\" result: true Parameters: Param Type Description matchTemplates Array . string \u23ae string - topic string - Returns: boolean \u00abStatic\u00bb publish \u25ba publish (topic: string , payload: any ): boolean Inherited from PubSubEventService . publish Defined in pubSubEventService.ts:18 Send the given payload to subscribers of the given topic. Parameters: Param Type Description topic string See subscribe payload any Sent in the subscription callback. Returns: boolean True if there are any subscribers \u00abStatic\u00bb publishTxFailed \u25ba publishTxFailed (eventContext: TxEventContext , atStage: TransactionStage , error?: Error , tx?: Hash , txReceipt?: TransactionReceiptTruffle ): void Defined in transactionService.ts:120 Parameters: Param Type Default value Description eventContext TxEventContext - - atStage TransactionStage - - error Error new Error( Unspecified error ) - tx Hash - - txReceipt TransactionReceiptTruffle - - Returns: void \u00abStatic\u00bb subscribe \u25ba subscribe (topics: string \u23ae Array . string , callback: EventSubscriptionCallback ): IEventSubscription Inherited from PubSubEventService . subscribe Defined in pubSubEventService.ts:29 Subscribe to the given topic or array of topics. Parameters: Param Type Description topics string \u23ae Array . string Identifies the event(s) to which you wish to subscribe callback EventSubscriptionCallback The function to call when the requested events are published Returns: IEventSubscription An interface with .unsubscribe() . Be sure to call it! \u00abStatic\u00bb unsubscribe \u25ba unsubscribe (key: EventSubscriptionKey , milliseconds?: number ): Promise . void Inherited from PubSubEventService . unsubscribe Defined in pubSubEventService.ts:52 Unsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy. Parameters: Param Type Default value Description key EventSubscriptionKey - A token, function or topic to unsubscribe. milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void \u00abStatic\u00bb watchForConfirmedTransaction \u25ba watchForConfirmedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle Defined in transactionService.ts:254 Returns a promise of a TransactionReceipt once the given transaction has been confirmed according to the optional requiredDepth . See also getConfirmedTransaction and getTransactionDepth . Parameters: Param Type Default value Description txHash Hash - The transaction hash to watch contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number - Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u00abStatic\u00bb watchForMinedTransaction \u25ba watchForMinedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle Defined in transactionService.ts:188 Returns a promise of a TransactionReceipt once the given transaction has been mined. See also getMinedTransaction and getTransactionDepth . Parameters: Param Type Default value Description txHash Hash - the transaction hash contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number 0 Optional minimum block depth required to resolve the promise. Default is 0. Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle Promise of TransactionReceiptTruffle if contract is given, else TransactionReceipt","title":"TransactionService"},{"location":"api/classes/TransactionService/#class-transactionservice","text":"Enables you to track the completion of transactions triggered by Arc.js functions. You can subscribe to events that tell you how many transactions are anticipated when the transactions have completed. For more information, see Tracking Transactions .","title":"Class: TransactionService"},{"location":"api/classes/TransactionService/#hierarchy","text":"PubSubEventService \u21b3 TransactionService","title":"Hierarchy"},{"location":"api/classes/TransactionService/#index","text":"","title":"Index"},{"location":"api/classes/TransactionService/#methods","text":"clearAllSubscriptions generateInvocationKey getConfirmedTransaction getDefaultDepth getMinedTransaction getTransactionDepth getValueFromLogs isTopicSpecifiedBy publish publishTxFailed subscribe unsubscribe watchForConfirmedTransaction watchForMinedTransaction","title":"Methods"},{"location":"api/classes/TransactionService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/TransactionService/#static-clearallsubscriptions","text":"\u25ba clearAllSubscriptions (): void Inherited from PubSubEventService . clearAllSubscriptions Defined in pubSubEventService.ts:38 Remove all subscriptions Returns: void","title":"\u00abStatic\u00bb clearAllSubscriptions"},{"location":"api/classes/TransactionService/#static-generateinvocationkey","text":"\u25ba generateInvocationKey (): number Defined in transactionService.ts:22 Generate a new invocation key. Returns: number","title":"\u00abStatic\u00bb generateInvocationKey"},{"location":"api/classes/TransactionService/#static-getconfirmedtransaction","text":"\u25ba getConfirmedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null Defined in transactionService.ts:344 Returns a promise of a TransactionReceipt for a confirmed transaction, or null if it hasn't yet been confirmed according to the requiredDepth. Parameters: Param Type Default value Description txHash Hash - - contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number - Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null","title":"\u00abStatic\u00bb getConfirmedTransaction"},{"location":"api/classes/TransactionService/#static-getdefaultdepth","text":"\u25ba getDefaultDepth (requiredDepth?: number ): Promise . number Defined in transactionService.ts:522 Returns the default value for required block depth defined for the current network in the Arc.js global configuration \" txDepthRequiredForConfirmation \". Parameters: Param Type Description requiredDepth number Overrides the default if given Returns: Promise . number","title":"\u00abStatic\u00bb getDefaultDepth"},{"location":"api/classes/TransactionService/#static-getminedtransaction","text":"\u25ba getMinedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null Defined in transactionService.ts:313 Returns a promise of a TransactionReceipt for a mined transaction, or null if it hasn't yet been mined. Parameters: Param Type Default value Description txHash Hash - - contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number 0 Optional minimum block depth required to resolve the promise. Default is 0. Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null Promise of TransactionReceiptTruffle if contract is given, else TransactionReceipt , or null if not found.","title":"\u00abStatic\u00bb getMinedTransaction"},{"location":"api/classes/TransactionService/#static-gettransactiondepth","text":"\u25ba getTransactionDepth (tx: Hash \u23ae TransactionReceipt ): Promise . number Defined in transactionService.ts:281 Returns a promise of the number of blocks that have been added to the chain since the given transaction appeared. Use this to decide whether a transaction is sufficiently secure (confirmed). See also getConfirmedTransaction and watchForConfirmedTransaction . Parameters: Param Type Description tx Hash \u23ae TransactionReceipt txHash or TransactionReceipt Returns: Promise . number Promise of the depth or -1 if the transaction cannot be found","title":"\u00abStatic\u00bb getTransactionDepth"},{"location":"api/classes/TransactionService/#static-getvaluefromlogs","text":"\u25ba getValueFromLogs (tx: TransactionReceiptTruffle \u23ae TransactionReceipt , arg: string , eventName?: string , index?: number ): any \u23ae undefined Defined in transactionService.ts:462 Returns a value from the given transaction log. Undefined if not found for any reason. Parameters: Param Type Default value Description tx TransactionReceiptTruffle \u23ae TransactionReceipt - The transaction arg string - The name of the property whose value we wish to return from the args object: tx.logs[index].args[argName] eventName string null Overrides index, identifies which log, where tx.logs[n].event === eventName index number 0 Identifies which log when eventName is not given Returns: any \u23ae undefined","title":"\u00abStatic\u00bb getValueFromLogs"},{"location":"api/classes/TransactionService/#static-istopicspecifiedby","text":"\u25ba isTopicSpecifiedBy (matchTemplates: Array . string \u23ae string , topic: string ): boolean Inherited from PubSubEventService . isTopicSpecifiedBy Defined in pubSubEventService.ts:91 Return whether topic is specified by matchTemplates. Examples: matchTemplates: [\"foo\"] topic: \"foo.bar\" result: true matchTemplates: [\"foo.bar\"] topic: \"foo\" result: false Or a wildcard: matchTemplates: \"*\" topic: \"foo\" result: true Parameters: Param Type Description matchTemplates Array . string \u23ae string - topic string - Returns: boolean","title":"\u00abStatic\u00bb isTopicSpecifiedBy"},{"location":"api/classes/TransactionService/#static-publish","text":"\u25ba publish (topic: string , payload: any ): boolean Inherited from PubSubEventService . publish Defined in pubSubEventService.ts:18 Send the given payload to subscribers of the given topic. Parameters: Param Type Description topic string See subscribe payload any Sent in the subscription callback. Returns: boolean True if there are any subscribers","title":"\u00abStatic\u00bb publish"},{"location":"api/classes/TransactionService/#static-publishtxfailed","text":"\u25ba publishTxFailed (eventContext: TxEventContext , atStage: TransactionStage , error?: Error , tx?: Hash , txReceipt?: TransactionReceiptTruffle ): void Defined in transactionService.ts:120 Parameters: Param Type Default value Description eventContext TxEventContext - - atStage TransactionStage - - error Error new Error( Unspecified error ) - tx Hash - - txReceipt TransactionReceiptTruffle - - Returns: void","title":"\u00abStatic\u00bb publishTxFailed"},{"location":"api/classes/TransactionService/#static-subscribe","text":"\u25ba subscribe (topics: string \u23ae Array . string , callback: EventSubscriptionCallback ): IEventSubscription Inherited from PubSubEventService . subscribe Defined in pubSubEventService.ts:29 Subscribe to the given topic or array of topics. Parameters: Param Type Description topics string \u23ae Array . string Identifies the event(s) to which you wish to subscribe callback EventSubscriptionCallback The function to call when the requested events are published Returns: IEventSubscription An interface with .unsubscribe() . Be sure to call it!","title":"\u00abStatic\u00bb subscribe"},{"location":"api/classes/TransactionService/#static-unsubscribe","text":"\u25ba unsubscribe (key: EventSubscriptionKey , milliseconds?: number ): Promise . void Inherited from PubSubEventService . unsubscribe Defined in pubSubEventService.ts:52 Unsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy. Parameters: Param Type Default value Description key EventSubscriptionKey - A token, function or topic to unsubscribe. milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"\u00abStatic\u00bb unsubscribe"},{"location":"api/classes/TransactionService/#static-watchforconfirmedtransaction","text":"\u25ba watchForConfirmedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle Defined in transactionService.ts:254 Returns a promise of a TransactionReceipt once the given transaction has been confirmed according to the optional requiredDepth . See also getConfirmedTransaction and getTransactionDepth . Parameters: Param Type Default value Description txHash Hash - The transaction hash to watch contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number - Optional minimum block depth required to resolve the promise.Default comes from the ConfigService . Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle","title":"\u00abStatic\u00bb watchForConfirmedTransaction"},{"location":"api/classes/TransactionService/#static-watchforminedtransaction","text":"\u25ba watchForMinedTransaction (txHash: Hash , contract?: string \u23ae any , requiredDepth?: number ): Promise . TransactionReceipt \u23ae TransactionReceiptTruffle Defined in transactionService.ts:188 Returns a promise of a TransactionReceipt once the given transaction has been mined. See also getMinedTransaction and getTransactionDepth . Parameters: Param Type Default value Description txHash Hash - the transaction hash contract string \u23ae any null Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events. requiredDepth number 0 Optional minimum block depth required to resolve the promise. Default is 0. Returns: Promise . TransactionReceipt \u23ae TransactionReceiptTruffle Promise of TransactionReceiptTruffle if contract is given, else TransactionReceipt","title":"\u00abStatic\u00bb watchForMinedTransaction"},{"location":"api/classes/UpgradeSchemeWrapper/","text":"API Reference UpgradeSchemeWrapper Class: UpgradeSchemeWrapper Hierarchy \u21b3 ProposalGeneratorBase \u21b3 UpgradeSchemeWrapper Implements IContractWrapper IUniversalSchemeWrapper Index Constructors constructor Properties ChangeUpgradeSchemeProposal NewUpgradeProposal ProposalDeleted ProposalExecuted contract factory friendlyName name Accessors address Methods estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposal getVotableUpgradeControllerProposals getVotableUpgradeUpgradeSchemeProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeController proposeUpgradingScheme setParameters Constructors \u2295 new UpgradeSchemeWrapper (solidityContract: any , web3EventService: Web3EventService ): UpgradeSchemeWrapper Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: UpgradeSchemeWrapper Properties ChangeUpgradeSchemeProposal \u25cf ChangeUpgradeSchemeProposal : EventFetcherFactory ChangeUpgradeSchemeProposalEventResult Defined in wrappers/upgradeScheme.ts:32 NewUpgradeProposal \u25cf NewUpgradeProposal : EventFetcherFactory NewUpgradeProposalEventResult Defined in wrappers/upgradeScheme.ts:31 Events ProposalDeleted \u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/upgradeScheme.ts:34 ProposalExecuted \u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/upgradeScheme.ts:33 contract \u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory UpgradeSchemeWrapper = UpgradeSchemeFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/upgradeScheme.ts:26 friendlyName \u25cf friendlyName : string = \"Upgrade Scheme\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/upgradeScheme.ts:25 name \u25cf name : string = \"UpgradeScheme\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/upgradeScheme.ts:24 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/upgradeScheme.ts:118 Returns: SchemePermissions getExecutedProposals \u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/upgradeScheme.ts:183 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult getParameters \u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/upgradeScheme.ts:130 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/upgradeScheme.ts:97 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/upgradeScheme.ts:126 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/upgradeScheme.ts:122 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions getVotableProposal \u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableUpgradeSchemeProposal Defined in wrappers/upgradeScheme.ts:201 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableUpgradeSchemeProposal getVotableUpgradeControllerProposals \u25ba getVotableUpgradeControllerProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , NewUpgradeProposalEventResult Defined in wrappers/upgradeScheme.ts:163 EntityFetcherFactory for votable UpgradeSchemeProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , NewUpgradeProposalEventResult getVotableUpgradeUpgradeSchemeProposals \u25ba getVotableUpgradeUpgradeSchemeProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , ChangeUpgradeSchemeProposalEventResult Defined in wrappers/upgradeScheme.ts:142 EntityFetcherFactory for votable UpgradeSchemeProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , ChangeUpgradeSchemeProposalEventResult getVotingMachine \u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper getVotingMachineAddress \u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this proposeController \u25ba proposeController (options?: ProposeControllerParams ): Promise . ArcTransactionProposalResult Defined in wrappers/upgradeScheme.ts:40 Submit a proposal to change the DAO's controller. Parameters: Param Type Default value Description options ProposeControllerParams {} as ProposeControllerParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult proposeUpgradingScheme \u25ba proposeUpgradingScheme (options?: ProposeUpgradingSchemeParams ): Promise . ArcTransactionProposalResult Defined in wrappers/upgradeScheme.ts:68 Submit a proposal to change or modify the DAO's upgrading scheme. Parameters: Param Type Default value Description options ProposeUpgradingSchemeParams {} as ProposeUpgradingSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult setParameters \u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/upgradeScheme.ts:104 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"UpgradeSchemeWrapper"},{"location":"api/classes/UpgradeSchemeWrapper/#class-upgradeschemewrapper","text":"","title":"Class: UpgradeSchemeWrapper"},{"location":"api/classes/UpgradeSchemeWrapper/#hierarchy","text":"\u21b3 ProposalGeneratorBase \u21b3 UpgradeSchemeWrapper","title":"Hierarchy"},{"location":"api/classes/UpgradeSchemeWrapper/#implements","text":"IContractWrapper IUniversalSchemeWrapper","title":"Implements"},{"location":"api/classes/UpgradeSchemeWrapper/#index","text":"","title":"Index"},{"location":"api/classes/UpgradeSchemeWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/UpgradeSchemeWrapper/#properties","text":"ChangeUpgradeSchemeProposal NewUpgradeProposal ProposalDeleted ProposalExecuted contract factory friendlyName name","title":"Properties"},{"location":"api/classes/UpgradeSchemeWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/UpgradeSchemeWrapper/#methods","text":"estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposal getVotableUpgradeControllerProposals getVotableUpgradeUpgradeSchemeProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeController proposeUpgradingScheme setParameters","title":"Methods"},{"location":"api/classes/UpgradeSchemeWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/UpgradeSchemeWrapper/#new-upgradeschemewrappersoliditycontract-any-web3eventservice-web3eventservice-upgradeschemewrapper","text":"Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: UpgradeSchemeWrapper","title":"\u2295 new UpgradeSchemeWrapper(solidityContract: any, web3EventService: Web3EventService): UpgradeSchemeWrapper"},{"location":"api/classes/UpgradeSchemeWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/UpgradeSchemeWrapper/#changeupgradeschemeproposal","text":"\u25cf ChangeUpgradeSchemeProposal : EventFetcherFactory ChangeUpgradeSchemeProposalEventResult Defined in wrappers/upgradeScheme.ts:32","title":"ChangeUpgradeSchemeProposal"},{"location":"api/classes/UpgradeSchemeWrapper/#newupgradeproposal","text":"\u25cf NewUpgradeProposal : EventFetcherFactory NewUpgradeProposalEventResult Defined in wrappers/upgradeScheme.ts:31 Events","title":"NewUpgradeProposal"},{"location":"api/classes/UpgradeSchemeWrapper/#proposaldeleted","text":"\u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/upgradeScheme.ts:34","title":"ProposalDeleted"},{"location":"api/classes/UpgradeSchemeWrapper/#proposalexecuted","text":"\u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/upgradeScheme.ts:33","title":"ProposalExecuted"},{"location":"api/classes/UpgradeSchemeWrapper/#contract","text":"\u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/UpgradeSchemeWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory UpgradeSchemeWrapper = UpgradeSchemeFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/upgradeScheme.ts:26","title":"factory"},{"location":"api/classes/UpgradeSchemeWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Upgrade Scheme\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/upgradeScheme.ts:25","title":"friendlyName"},{"location":"api/classes/UpgradeSchemeWrapper/#name","text":"\u25cf name : string = \"UpgradeScheme\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/upgradeScheme.ts:24","title":"name"},{"location":"api/classes/UpgradeSchemeWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/UpgradeSchemeWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/UpgradeSchemeWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/UpgradeSchemeWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/UpgradeSchemeWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/upgradeScheme.ts:118 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/classes/UpgradeSchemeWrapper/#getexecutedproposals","text":"\u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/upgradeScheme.ts:183 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult","title":"getExecutedProposals"},{"location":"api/classes/UpgradeSchemeWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/upgradeScheme.ts:130 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams","title":"getParameters"},{"location":"api/classes/UpgradeSchemeWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/UpgradeSchemeWrapper/#getparametershash","text":"\u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/upgradeScheme.ts:97 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/UpgradeSchemeWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/upgradeScheme.ts:126 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams","title":"getSchemeParameters"},{"location":"api/classes/UpgradeSchemeWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/UpgradeSchemeWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/upgradeScheme.ts:122 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/classes/UpgradeSchemeWrapper/#getvotableproposal","text":"\u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableUpgradeSchemeProposal Defined in wrappers/upgradeScheme.ts:201 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableUpgradeSchemeProposal","title":"getVotableProposal"},{"location":"api/classes/UpgradeSchemeWrapper/#getvotableupgradecontrollerproposals","text":"\u25ba getVotableUpgradeControllerProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , NewUpgradeProposalEventResult Defined in wrappers/upgradeScheme.ts:163 EntityFetcherFactory for votable UpgradeSchemeProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , NewUpgradeProposalEventResult","title":"getVotableUpgradeControllerProposals"},{"location":"api/classes/UpgradeSchemeWrapper/#getvotableupgradeupgradeschemeproposals","text":"\u25ba getVotableUpgradeUpgradeSchemeProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , ChangeUpgradeSchemeProposalEventResult Defined in wrappers/upgradeScheme.ts:142 EntityFetcherFactory for votable UpgradeSchemeProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableUpgradeSchemeProposal , ChangeUpgradeSchemeProposalEventResult","title":"getVotableUpgradeUpgradeSchemeProposals"},{"location":"api/classes/UpgradeSchemeWrapper/#getvotingmachine","text":"\u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper","title":"getVotingMachine"},{"location":"api/classes/UpgradeSchemeWrapper/#getvotingmachineaddress","text":"\u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address","title":"getVotingMachineAddress"},{"location":"api/classes/UpgradeSchemeWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/UpgradeSchemeWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/UpgradeSchemeWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/UpgradeSchemeWrapper/#proposecontroller","text":"\u25ba proposeController (options?: ProposeControllerParams ): Promise . ArcTransactionProposalResult Defined in wrappers/upgradeScheme.ts:40 Submit a proposal to change the DAO's controller. Parameters: Param Type Default value Description options ProposeControllerParams {} as ProposeControllerParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"proposeController"},{"location":"api/classes/UpgradeSchemeWrapper/#proposeupgradingscheme","text":"\u25ba proposeUpgradingScheme (options?: ProposeUpgradingSchemeParams ): Promise . ArcTransactionProposalResult Defined in wrappers/upgradeScheme.ts:68 Submit a proposal to change or modify the DAO's upgrading scheme. Parameters: Param Type Default value Description options ProposeUpgradingSchemeParams {} as ProposeUpgradingSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"proposeUpgradingScheme"},{"location":"api/classes/UpgradeSchemeWrapper/#setparameters","text":"\u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/upgradeScheme.ts:104 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/Utils/","text":"API Reference Utils Class: Utils Index Accessors NULL_ADDRESS NULL_HASH Methods SHA3 getDefaultAccount getEthBalance getGenTokenAddress getGenTokenBalance getNetworkId getNetworkName getTokenBalance getTruffleArtifactForContract getWeb3 keccak256 numberToPermissionsString permissionsStringToNumber requireContract Accessors \u00abStatic\u00bb NULL_ADDRESS getNULL_ADDRESS(): Address Defined in utils.ts:17 Returns: Address \u00abStatic\u00bb NULL_HASH getNULL_HASH(): Hash Defined in utils.ts:18 Returns: Hash Methods \u00abStatic\u00bb SHA3 \u25ba SHA3 (str: string ): string Defined in utils.ts:178 Return the hash of a string the same way solidity would, and to a format that will be properly translated into a bytes32 that solidity expects Parameters: Param Type Description str string a string Returns: string \u00abStatic\u00bb getDefaultAccount \u25ba getDefaultAccount (): Promise . string Defined in utils.ts:123 Returns the address of the default user account. Has the side-effect of setting web3.eth.defaultAccount. Throws an exception on failure. Returns: Promise . string \u00abStatic\u00bb getEthBalance \u25ba getEthBalance (agentAddress: Address ): Promise . BigNumber Defined in utils.ts:159 Return the current ETH balance for the given agent. Parameters: Param Type Description agentAddress Address - Returns: Promise . BigNumber \u00abStatic\u00bb getGenTokenAddress \u25ba getGenTokenAddress (): Promise . string Defined in utils.ts:271 Returns promise of the address of the global GEN token. Returns: Promise . string \u00abStatic\u00bb getGenTokenBalance \u25ba getGenTokenBalance (agentAddress: Address ): Promise . BigNumber Defined in utils.ts:283 Returns a promise of the given account's GEN token balance. Parameters: Param Type Description agentAddress Address - Returns: Promise . BigNumber \u00abStatic\u00bb getNetworkId \u25ba getNetworkId (): Promise . string Defined in utils.ts:261 Returns promise of the id of the current network Returns: Promise . string \u00abStatic\u00bb getNetworkName \u25ba getNetworkName (id?: string ): Promise . string Defined in utils.ts:233 Returns promise of the name of the current or given network Parameters: Param Type Description id string Optional id of the network Returns: Promise . string \u00abStatic\u00bb getTokenBalance \u25ba getTokenBalance (agentAddress: Address , tokenAddress: Address ): Promise . BigNumber Defined in utils.ts:140 Return the current token balance for the given token and agent. Parameters: Param Type Description agentAddress Address - tokenAddress Address - Returns: Promise . BigNumber \u00abStatic\u00bb getTruffleArtifactForContract \u25ba getTruffleArtifactForContract (contractName: string ): any Defined in utils.ts:292 Returns the truffle artifact json for the given contract Parameters: Param Type Description contractName string - Returns: any \u00abStatic\u00bb getWeb3 \u25ba getWeb3 (): Promise . Web3 Defined in utils.ts:51 Returns the web3 object. When called for the first time, web3 is initialized from the Arc.js configuration. Throws an exception when web3 cannot be initialized. Returns: Promise . Web3 \u00abStatic\u00bb keccak256 \u25ba keccak256 (types: Array . string , values: Array . any ): string Defined in utils.ts:204 Return the tightly-packed hash of any arbitrary array of objects just as Solidity's keccak256 function would do. Items in the types array must appear in the same order in which the values would be passed to Solidity's keccak256 function. Type names can be: bytes[N] - fails if (N 1 || N 32) string bool address uint[N] - fails if ((N % 8) || (N 8) || (N 256)) int[N] - fails if ((N % 8) || (N 8) || (N 256)) Use bytes32 for a Hash value See: https://github.com/ethereumjs/ethereumjs-abi Parameters: Param Type Description types Array . string array of type names. values Array . any the values to pack and hash. These must appear in the same order in which the types are ordered. Returns: string \u00abStatic\u00bb numberToPermissionsString \u25ba numberToPermissionsString (permissions: SchemePermissions ): string Defined in utils.ts:221 Convert SchemePermissions | DefaultSchemePermissions to a scheme permissions string Parameters: Param Type Description permissions SchemePermissions - Returns: string \u00abStatic\u00bb permissionsStringToNumber \u25ba permissionsStringToNumber (permissions: string ): SchemePermissions Defined in utils.ts:212 Convert scheme permissions string to a number Parameters: Param Type Description permissions string - Returns: SchemePermissions \u00abStatic\u00bb requireContract \u25ba requireContract (contractName: string ): Promise . any Defined in utils.ts:26 Returns Truffle contract wrapper given the name of the contract (like \"SchemeRegistrar\"). Optimized for synchronicity issues encountered with MetaMask. Throws an exception if it can't load the contract. Uses the asynchronous web.eth.getAccounts to obtain the default account (good with MetaMask). Parameters: Param Type Description contractName string like \"SchemeRegistrar\" Returns: Promise . any","title":"Utils"},{"location":"api/classes/Utils/#class-utils","text":"","title":"Class: Utils"},{"location":"api/classes/Utils/#index","text":"","title":"Index"},{"location":"api/classes/Utils/#accessors","text":"NULL_ADDRESS NULL_HASH","title":"Accessors"},{"location":"api/classes/Utils/#methods","text":"SHA3 getDefaultAccount getEthBalance getGenTokenAddress getGenTokenBalance getNetworkId getNetworkName getTokenBalance getTruffleArtifactForContract getWeb3 keccak256 numberToPermissionsString permissionsStringToNumber requireContract","title":"Methods"},{"location":"api/classes/Utils/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/Utils/#static-null_address","text":"getNULL_ADDRESS(): Address Defined in utils.ts:17 Returns: Address","title":"\u00abStatic\u00bb NULL_ADDRESS"},{"location":"api/classes/Utils/#static-null_hash","text":"getNULL_HASH(): Hash Defined in utils.ts:18 Returns: Hash","title":"\u00abStatic\u00bb NULL_HASH"},{"location":"api/classes/Utils/#methods_1","text":"","title":"Methods"},{"location":"api/classes/Utils/#static-sha3","text":"\u25ba SHA3 (str: string ): string Defined in utils.ts:178 Return the hash of a string the same way solidity would, and to a format that will be properly translated into a bytes32 that solidity expects Parameters: Param Type Description str string a string Returns: string","title":"\u00abStatic\u00bb SHA3"},{"location":"api/classes/Utils/#static-getdefaultaccount","text":"\u25ba getDefaultAccount (): Promise . string Defined in utils.ts:123 Returns the address of the default user account. Has the side-effect of setting web3.eth.defaultAccount. Throws an exception on failure. Returns: Promise . string","title":"\u00abStatic\u00bb getDefaultAccount"},{"location":"api/classes/Utils/#static-getethbalance","text":"\u25ba getEthBalance (agentAddress: Address ): Promise . BigNumber Defined in utils.ts:159 Return the current ETH balance for the given agent. Parameters: Param Type Description agentAddress Address - Returns: Promise . BigNumber","title":"\u00abStatic\u00bb getEthBalance"},{"location":"api/classes/Utils/#static-getgentokenaddress","text":"\u25ba getGenTokenAddress (): Promise . string Defined in utils.ts:271 Returns promise of the address of the global GEN token. Returns: Promise . string","title":"\u00abStatic\u00bb getGenTokenAddress"},{"location":"api/classes/Utils/#static-getgentokenbalance","text":"\u25ba getGenTokenBalance (agentAddress: Address ): Promise . BigNumber Defined in utils.ts:283 Returns a promise of the given account's GEN token balance. Parameters: Param Type Description agentAddress Address - Returns: Promise . BigNumber","title":"\u00abStatic\u00bb getGenTokenBalance"},{"location":"api/classes/Utils/#static-getnetworkid","text":"\u25ba getNetworkId (): Promise . string Defined in utils.ts:261 Returns promise of the id of the current network Returns: Promise . string","title":"\u00abStatic\u00bb getNetworkId"},{"location":"api/classes/Utils/#static-getnetworkname","text":"\u25ba getNetworkName (id?: string ): Promise . string Defined in utils.ts:233 Returns promise of the name of the current or given network Parameters: Param Type Description id string Optional id of the network Returns: Promise . string","title":"\u00abStatic\u00bb getNetworkName"},{"location":"api/classes/Utils/#static-gettokenbalance","text":"\u25ba getTokenBalance (agentAddress: Address , tokenAddress: Address ): Promise . BigNumber Defined in utils.ts:140 Return the current token balance for the given token and agent. Parameters: Param Type Description agentAddress Address - tokenAddress Address - Returns: Promise . BigNumber","title":"\u00abStatic\u00bb getTokenBalance"},{"location":"api/classes/Utils/#static-gettruffleartifactforcontract","text":"\u25ba getTruffleArtifactForContract (contractName: string ): any Defined in utils.ts:292 Returns the truffle artifact json for the given contract Parameters: Param Type Description contractName string - Returns: any","title":"\u00abStatic\u00bb getTruffleArtifactForContract"},{"location":"api/classes/Utils/#static-getweb3","text":"\u25ba getWeb3 (): Promise . Web3 Defined in utils.ts:51 Returns the web3 object. When called for the first time, web3 is initialized from the Arc.js configuration. Throws an exception when web3 cannot be initialized. Returns: Promise . Web3","title":"\u00abStatic\u00bb getWeb3"},{"location":"api/classes/Utils/#static-keccak256","text":"\u25ba keccak256 (types: Array . string , values: Array . any ): string Defined in utils.ts:204 Return the tightly-packed hash of any arbitrary array of objects just as Solidity's keccak256 function would do. Items in the types array must appear in the same order in which the values would be passed to Solidity's keccak256 function. Type names can be: bytes[N] - fails if (N 1 || N 32) string bool address uint[N] - fails if ((N % 8) || (N 8) || (N 256)) int[N] - fails if ((N % 8) || (N 8) || (N 256)) Use bytes32 for a Hash value See: https://github.com/ethereumjs/ethereumjs-abi Parameters: Param Type Description types Array . string array of type names. values Array . any the values to pack and hash. These must appear in the same order in which the types are ordered. Returns: string","title":"\u00abStatic\u00bb keccak256"},{"location":"api/classes/Utils/#static-numbertopermissionsstring","text":"\u25ba numberToPermissionsString (permissions: SchemePermissions ): string Defined in utils.ts:221 Convert SchemePermissions | DefaultSchemePermissions to a scheme permissions string Parameters: Param Type Description permissions SchemePermissions - Returns: string","title":"\u00abStatic\u00bb numberToPermissionsString"},{"location":"api/classes/Utils/#static-permissionsstringtonumber","text":"\u25ba permissionsStringToNumber (permissions: string ): SchemePermissions Defined in utils.ts:212 Convert scheme permissions string to a number Parameters: Param Type Description permissions string - Returns: SchemePermissions","title":"\u00abStatic\u00bb permissionsStringToNumber"},{"location":"api/classes/Utils/#static-requirecontract","text":"\u25ba requireContract (contractName: string ): Promise . any Defined in utils.ts:26 Returns Truffle contract wrapper given the name of the contract (like \"SchemeRegistrar\"). Optimized for synchronicity issues encountered with MetaMask. Throws an exception if it can't load the contract. Uses the asynchronous web.eth.getAccounts to obtain the default account (good with MetaMask). Parameters: Param Type Description contractName string like \"SchemeRegistrar\" Returns: Promise . any","title":"\u00abStatic\u00bb requireContract"},{"location":"api/classes/UtilsInternal/","text":"API Reference UtilsInternal Class: UtilsInternal Utils not meant to be exported to the public Index Methods ensureArray getRandomNumber getWeb3Sync lastBlock sleep stopWatchingAsync Methods \u00abStatic\u00bb ensureArray \u25ba ensureArray T(arr: Array . T \u23ae T ): Array . T Defined in utilsInternal.ts:15 Type parameters: T Parameters: Param Type Description arr Array . T \u23ae T - Returns: Array . T \u00abStatic\u00bb getRandomNumber \u25ba getRandomNumber (): number Defined in utilsInternal.ts:38 Returns: number \u00abStatic\u00bb getWeb3Sync \u25ba getWeb3Sync (): Web3 Defined in utilsInternal.ts:42 Returns: Web3 \u00abStatic\u00bb lastBlock \u25ba lastBlock (): Promise . number Defined in utilsInternal.ts:25 Returns the last mined block in the chain. Returns: Promise . number \u00abStatic\u00bb sleep \u25ba sleep (milliseconds: number ): Promise . any Defined in utilsInternal.ts:11 Parameters: Param Type Description milliseconds number - Returns: Promise . any \u00abStatic\u00bb stopWatchingAsync \u25ba stopWatchingAsync (filter: FilterResult ): Promise . any Defined in utilsInternal.ts:34 For environments that don't allow synchronous functions Parameters: Param Type Description filter FilterResult - Returns: Promise . any","title":"UtilsInternal"},{"location":"api/classes/UtilsInternal/#class-utilsinternal","text":"Utils not meant to be exported to the public","title":"Class: UtilsInternal"},{"location":"api/classes/UtilsInternal/#index","text":"","title":"Index"},{"location":"api/classes/UtilsInternal/#methods","text":"ensureArray getRandomNumber getWeb3Sync lastBlock sleep stopWatchingAsync","title":"Methods"},{"location":"api/classes/UtilsInternal/#methods_1","text":"","title":"Methods"},{"location":"api/classes/UtilsInternal/#static-ensurearray","text":"\u25ba ensureArray T(arr: Array . T \u23ae T ): Array . T Defined in utilsInternal.ts:15 Type parameters:","title":"\u00abStatic\u00bb ensureArray"},{"location":"api/classes/UtilsInternal/#t","text":"Parameters: Param Type Description arr Array . T \u23ae T - Returns: Array . T","title":"T"},{"location":"api/classes/UtilsInternal/#static-getrandomnumber","text":"\u25ba getRandomNumber (): number Defined in utilsInternal.ts:38 Returns: number","title":"\u00abStatic\u00bb getRandomNumber"},{"location":"api/classes/UtilsInternal/#static-getweb3sync","text":"\u25ba getWeb3Sync (): Web3 Defined in utilsInternal.ts:42 Returns: Web3","title":"\u00abStatic\u00bb getWeb3Sync"},{"location":"api/classes/UtilsInternal/#static-lastblock","text":"\u25ba lastBlock (): Promise . number Defined in utilsInternal.ts:25 Returns the last mined block in the chain. Returns: Promise . number","title":"\u00abStatic\u00bb lastBlock"},{"location":"api/classes/UtilsInternal/#static-sleep","text":"\u25ba sleep (milliseconds: number ): Promise . any Defined in utilsInternal.ts:11 Parameters: Param Type Description milliseconds number - Returns: Promise . any","title":"\u00abStatic\u00bb sleep"},{"location":"api/classes/UtilsInternal/#static-stopwatchingasync","text":"\u25ba stopWatchingAsync (filter: FilterResult ): Promise . any Defined in utilsInternal.ts:34 For environments that don't allow synchronous functions Parameters: Param Type Description filter FilterResult - Returns: Promise . any","title":"\u00abStatic\u00bb stopWatchingAsync"},{"location":"api/classes/VestingSchemeWrapper/","text":"API Reference VestingSchemeWrapper Class: VestingSchemeWrapper Hierarchy \u21b3 ProposalGeneratorBase \u21b3 VestingSchemeWrapper Implements IContractWrapper IUniversalSchemeWrapper Index Constructors constructor Properties AgreementCancel AgreementProposal Collect NewVestedAgreement ProposalExecuted ProposedVestedAgreement RevokeSignToCancelAgreement SignToCancelAgreement contract factory friendlyName name Accessors address Methods collect create estimateGas getAgreement getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getProposalAgreementId getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposal getVotableProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeVestingAgreement revokeSignToCancel setParameters signToCancel Constructors \u2295 new VestingSchemeWrapper (solidityContract: any , web3EventService: Web3EventService ): VestingSchemeWrapper Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: VestingSchemeWrapper Properties AgreementCancel \u25cf AgreementCancel : EventFetcherFactory AgreementCancelEventResult Defined in wrappers/vestingScheme.ts:50 AgreementProposal \u25cf AgreementProposal : EventFetcherFactory AgreementProposalEventResult Defined in wrappers/vestingScheme.ts:43 fired when a proposal is submitted to create an agreement Collect \u25cf Collect : EventFetcherFactory CollectEventResult Defined in wrappers/vestingScheme.ts:51 NewVestedAgreement \u25cf NewVestedAgreement : EventFetcherFactory NewVestedAgreementEventResult Defined in wrappers/vestingScheme.ts:47 fired when an agreement is created through create (not-through a proposal process) ProposalExecuted \u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/vestingScheme.ts:35 fired when a proposal is executed whether an agreement is created or not. ProposedVestedAgreement \u25cf ProposedVestedAgreement : EventFetcherFactory ProposedVestedAgreementEventResult Defined in wrappers/vestingScheme.ts:39 fired when proposal is executed and an agreement is created RevokeSignToCancelAgreement \u25cf RevokeSignToCancelAgreement : EventFetcherFactory RevokeSignToCancelAgreementEventResult Defined in wrappers/vestingScheme.ts:49 SignToCancelAgreement \u25cf SignToCancelAgreement : EventFetcherFactory SignToCancelAgreementEventResult Defined in wrappers/vestingScheme.ts:48 contract \u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory VestingSchemeWrapper = VestingSchemeFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/vestingScheme.ts:27 friendlyName \u25cf friendlyName : string = \"Vesting Scheme\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/vestingScheme.ts:26 name \u25cf name : string = \"VestingScheme\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/vestingScheme.ts:25 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods collect \u25ba collect (options?: CollectVestingAgreementConfig ): Promise . ArcTransactionResult Defined in wrappers/vestingScheme.ts:217 Collects for a beneficiary, according to the agreement Parameters: Param Type Default value Description options CollectVestingAgreementConfig {} as CollectVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult create \u25ba create (options?: CreateVestingAgreementConfig ): Promise . ArcTransactionAgreementResult Defined in wrappers/vestingScheme.ts:104 Create a new vesting agreement Parameters: Param Type Default value Description options CreateVestingAgreementConfig {} as CreateVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionAgreementResult estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getAgreement \u25ba getAgreement (agreementId: number ): Promise . Agreement Defined in wrappers/vestingScheme.ts:296 Parameters: Param Type Description agreementId number - Returns: Promise . Agreement getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/vestingScheme.ts:324 Returns: SchemePermissions getExecutedProposals \u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory VestingSchemeSchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/vestingScheme.ts:258 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory VestingSchemeSchemeProposalExecuted , SchemeProposalExecutedEventResult getParameters \u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/vestingScheme.ts:336 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/vestingScheme.ts:303 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash getProposalAgreementId \u25ba getProposalAgreementId (proposalId: Hash ): Promise . number Defined in wrappers/vestingScheme.ts:283 Returns a promise of the agreementId associated with the given proposal. The result is 0 if the proposal has not been executed or is not found. Parameters: Param Type Description proposalId Hash - Returns: Promise . number getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/vestingScheme.ts:332 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/vestingScheme.ts:328 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions getVotableProposal \u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . AgreementProposal Defined in wrappers/vestingScheme.ts:289 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . AgreementProposal getVotableProposals \u25ba getVotableProposals (avatarAddress: Address ): Promise . EntityFetcherFactory AgreementProposal , SchemeProposalExecutedEventResult Defined in wrappers/vestingScheme.ts:238 EntityFetcherFactory for votable Agreement. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory AgreementProposal , SchemeProposalExecutedEventResult getVotingMachine \u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper getVotingMachineAddress \u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this proposeVestingAgreement \u25ba proposeVestingAgreement (options?: ProposeVestingAgreementConfig ): Promise . ArcTransactionProposalResult Defined in wrappers/vestingScheme.ts:64 Submit a proposal to create a vesting agreement. Parameters: Param Type Default value Description options ProposeVestingAgreementConfig {} as ProposeVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult revokeSignToCancel \u25ba revokeSignToCancel (options?: RevokeSignToCancelVestingAgreementConfig ): Promise . ArcTransactionResult Defined in wrappers/vestingScheme.ts:195 Revoke vote for cancelling a vesting agreement Parameters: Param Type Default value Description options RevokeSignToCancelVestingAgreementConfig {} as RevokeSignToCancelVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult setParameters \u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/vestingScheme.ts:310 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash signToCancel \u25ba signToCancel (options?: SignToCancelVestingAgreementConfig ): Promise . ArcTransactionResult Defined in wrappers/vestingScheme.ts:173 Sign to cancel a vesting agreement Parameters: Param Type Default value Description options SignToCancelVestingAgreementConfig {} as SignToCancelVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"VestingSchemeWrapper"},{"location":"api/classes/VestingSchemeWrapper/#class-vestingschemewrapper","text":"","title":"Class: VestingSchemeWrapper"},{"location":"api/classes/VestingSchemeWrapper/#hierarchy","text":"\u21b3 ProposalGeneratorBase \u21b3 VestingSchemeWrapper","title":"Hierarchy"},{"location":"api/classes/VestingSchemeWrapper/#implements","text":"IContractWrapper IUniversalSchemeWrapper","title":"Implements"},{"location":"api/classes/VestingSchemeWrapper/#index","text":"","title":"Index"},{"location":"api/classes/VestingSchemeWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/VestingSchemeWrapper/#properties","text":"AgreementCancel AgreementProposal Collect NewVestedAgreement ProposalExecuted ProposedVestedAgreement RevokeSignToCancelAgreement SignToCancelAgreement contract factory friendlyName name","title":"Properties"},{"location":"api/classes/VestingSchemeWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/VestingSchemeWrapper/#methods","text":"collect create estimateGas getAgreement getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getProposalAgreementId getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposal getVotableProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeVestingAgreement revokeSignToCancel setParameters signToCancel","title":"Methods"},{"location":"api/classes/VestingSchemeWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/VestingSchemeWrapper/#new-vestingschemewrappersoliditycontract-any-web3eventservice-web3eventservice-vestingschemewrapper","text":"Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: VestingSchemeWrapper","title":"\u2295 new VestingSchemeWrapper(solidityContract: any, web3EventService: Web3EventService): VestingSchemeWrapper"},{"location":"api/classes/VestingSchemeWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/VestingSchemeWrapper/#agreementcancel","text":"\u25cf AgreementCancel : EventFetcherFactory AgreementCancelEventResult Defined in wrappers/vestingScheme.ts:50","title":"AgreementCancel"},{"location":"api/classes/VestingSchemeWrapper/#agreementproposal","text":"\u25cf AgreementProposal : EventFetcherFactory AgreementProposalEventResult Defined in wrappers/vestingScheme.ts:43 fired when a proposal is submitted to create an agreement","title":"AgreementProposal"},{"location":"api/classes/VestingSchemeWrapper/#collect","text":"\u25cf Collect : EventFetcherFactory CollectEventResult Defined in wrappers/vestingScheme.ts:51","title":"Collect"},{"location":"api/classes/VestingSchemeWrapper/#newvestedagreement","text":"\u25cf NewVestedAgreement : EventFetcherFactory NewVestedAgreementEventResult Defined in wrappers/vestingScheme.ts:47 fired when an agreement is created through create (not-through a proposal process)","title":"NewVestedAgreement"},{"location":"api/classes/VestingSchemeWrapper/#proposalexecuted","text":"\u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/vestingScheme.ts:35 fired when a proposal is executed whether an agreement is created or not.","title":"ProposalExecuted"},{"location":"api/classes/VestingSchemeWrapper/#proposedvestedagreement","text":"\u25cf ProposedVestedAgreement : EventFetcherFactory ProposedVestedAgreementEventResult Defined in wrappers/vestingScheme.ts:39 fired when proposal is executed and an agreement is created","title":"ProposedVestedAgreement"},{"location":"api/classes/VestingSchemeWrapper/#revokesigntocancelagreement","text":"\u25cf RevokeSignToCancelAgreement : EventFetcherFactory RevokeSignToCancelAgreementEventResult Defined in wrappers/vestingScheme.ts:49","title":"RevokeSignToCancelAgreement"},{"location":"api/classes/VestingSchemeWrapper/#signtocancelagreement","text":"\u25cf SignToCancelAgreement : EventFetcherFactory SignToCancelAgreementEventResult Defined in wrappers/vestingScheme.ts:48","title":"SignToCancelAgreement"},{"location":"api/classes/VestingSchemeWrapper/#contract","text":"\u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/VestingSchemeWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory VestingSchemeWrapper = VestingSchemeFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/vestingScheme.ts:27","title":"factory"},{"location":"api/classes/VestingSchemeWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Vesting Scheme\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/vestingScheme.ts:26","title":"friendlyName"},{"location":"api/classes/VestingSchemeWrapper/#name","text":"\u25cf name : string = \"VestingScheme\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/vestingScheme.ts:25","title":"name"},{"location":"api/classes/VestingSchemeWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/VestingSchemeWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/VestingSchemeWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/VestingSchemeWrapper/#collect_1","text":"\u25ba collect (options?: CollectVestingAgreementConfig ): Promise . ArcTransactionResult Defined in wrappers/vestingScheme.ts:217 Collects for a beneficiary, according to the agreement Parameters: Param Type Default value Description options CollectVestingAgreementConfig {} as CollectVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"collect"},{"location":"api/classes/VestingSchemeWrapper/#create","text":"\u25ba create (options?: CreateVestingAgreementConfig ): Promise . ArcTransactionAgreementResult Defined in wrappers/vestingScheme.ts:104 Create a new vesting agreement Parameters: Param Type Default value Description options CreateVestingAgreementConfig {} as CreateVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionAgreementResult","title":"create"},{"location":"api/classes/VestingSchemeWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/VestingSchemeWrapper/#getagreement","text":"\u25ba getAgreement (agreementId: number ): Promise . Agreement Defined in wrappers/vestingScheme.ts:296 Parameters: Param Type Description agreementId number - Returns: Promise . Agreement","title":"getAgreement"},{"location":"api/classes/VestingSchemeWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/vestingScheme.ts:324 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/classes/VestingSchemeWrapper/#getexecutedproposals","text":"\u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory VestingSchemeSchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/vestingScheme.ts:258 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory VestingSchemeSchemeProposalExecuted , SchemeProposalExecutedEventResult","title":"getExecutedProposals"},{"location":"api/classes/VestingSchemeWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/vestingScheme.ts:336 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams","title":"getParameters"},{"location":"api/classes/VestingSchemeWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/VestingSchemeWrapper/#getparametershash","text":"\u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/vestingScheme.ts:303 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/VestingSchemeWrapper/#getproposalagreementid","text":"\u25ba getProposalAgreementId (proposalId: Hash ): Promise . number Defined in wrappers/vestingScheme.ts:283 Returns a promise of the agreementId associated with the given proposal. The result is 0 if the proposal has not been executed or is not found. Parameters: Param Type Description proposalId Hash - Returns: Promise . number","title":"getProposalAgreementId"},{"location":"api/classes/VestingSchemeWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/vestingScheme.ts:332 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams","title":"getSchemeParameters"},{"location":"api/classes/VestingSchemeWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/VestingSchemeWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/vestingScheme.ts:328 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/classes/VestingSchemeWrapper/#getvotableproposal","text":"\u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . AgreementProposal Defined in wrappers/vestingScheme.ts:289 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . AgreementProposal","title":"getVotableProposal"},{"location":"api/classes/VestingSchemeWrapper/#getvotableproposals","text":"\u25ba getVotableProposals (avatarAddress: Address ): Promise . EntityFetcherFactory AgreementProposal , SchemeProposalExecutedEventResult Defined in wrappers/vestingScheme.ts:238 EntityFetcherFactory for votable Agreement. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory AgreementProposal , SchemeProposalExecutedEventResult","title":"getVotableProposals"},{"location":"api/classes/VestingSchemeWrapper/#getvotingmachine","text":"\u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper","title":"getVotingMachine"},{"location":"api/classes/VestingSchemeWrapper/#getvotingmachineaddress","text":"\u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address","title":"getVotingMachineAddress"},{"location":"api/classes/VestingSchemeWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/VestingSchemeWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/VestingSchemeWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/VestingSchemeWrapper/#proposevestingagreement","text":"\u25ba proposeVestingAgreement (options?: ProposeVestingAgreementConfig ): Promise . ArcTransactionProposalResult Defined in wrappers/vestingScheme.ts:64 Submit a proposal to create a vesting agreement. Parameters: Param Type Default value Description options ProposeVestingAgreementConfig {} as ProposeVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"proposeVestingAgreement"},{"location":"api/classes/VestingSchemeWrapper/#revokesigntocancel","text":"\u25ba revokeSignToCancel (options?: RevokeSignToCancelVestingAgreementConfig ): Promise . ArcTransactionResult Defined in wrappers/vestingScheme.ts:195 Revoke vote for cancelling a vesting agreement Parameters: Param Type Default value Description options RevokeSignToCancelVestingAgreementConfig {} as RevokeSignToCancelVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"revokeSignToCancel"},{"location":"api/classes/VestingSchemeWrapper/#setparameters","text":"\u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/vestingScheme.ts:310 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/VestingSchemeWrapper/#signtocancel","text":"\u25ba signToCancel (options?: SignToCancelVestingAgreementConfig ): Promise . ArcTransactionResult Defined in wrappers/vestingScheme.ts:173 Sign to cancel a vesting agreement Parameters: Param Type Default value Description options SignToCancelVestingAgreementConfig {} as SignToCancelVestingAgreementConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"signToCancel"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/","text":"API Reference VoteInOrganizationSchemeWrapper Class: VoteInOrganizationSchemeWrapper Hierarchy \u21b3 ProposalGeneratorBase \u21b3 VoteInOrganizationSchemeWrapper Implements IContractWrapper IUniversalSchemeWrapper Index Constructors constructor Properties NewVoteProposal ProposalDeleted ProposalExecuted VoteOnBehalf contract factory friendlyName name Accessors address Methods estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposal getVotableProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeVoteInOrganization setParameters Constructors \u2295 new VoteInOrganizationSchemeWrapper (solidityContract: any , web3EventService: Web3EventService ): VoteInOrganizationSchemeWrapper Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: VoteInOrganizationSchemeWrapper Properties NewVoteProposal \u25cf NewVoteProposal : EventFetcherFactory NewVoteProposalEventResult Defined in wrappers/voteInOrganizationScheme.ts:31 Events ProposalDeleted \u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/voteInOrganizationScheme.ts:33 ProposalExecuted \u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/voteInOrganizationScheme.ts:32 VoteOnBehalf \u25cf VoteOnBehalf : EventFetcherFactory VoteOnBehalfEventResult Defined in wrappers/voteInOrganizationScheme.ts:34 contract \u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper. factory \u25cf factory : IContractWrapperFactory VoteInOrganizationSchemeWrapper = VoteInOrganizationSchemeFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/voteInOrganizationScheme.ts:26 friendlyName \u25cf friendlyName : string = \"Vote In Organization Scheme\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/voteInOrganizationScheme.ts:25 name \u25cf name : string = \"VoteInOrganizationScheme\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/voteInOrganizationScheme.ts:24 Accessors address getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address Methods estimateGas \u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/voteInOrganizationScheme.ts:142 Returns: SchemePermissions getExecutedProposals \u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/voteInOrganizationScheme.ts:95 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult getParameters \u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/voteInOrganizationScheme.ts:154 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/voteInOrganizationScheme.ts:121 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/voteInOrganizationScheme.ts:150 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams getSchemeParametersHash \u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/voteInOrganizationScheme.ts:146 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions getVotableProposal \u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableVoteInOrganizationProposal Defined in wrappers/voteInOrganizationScheme.ts:113 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableVoteInOrganizationProposal getVotableProposals \u25ba getVotableProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableVoteInOrganizationProposal , NewVoteProposalEventResult Defined in wrappers/voteInOrganizationScheme.ts:74 EntityFetcherFactory for votable VoteInOrganizationProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableVoteInOrganizationProposal , NewVoteProposalEventResult getVotingMachine \u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper getVotingMachineAddress \u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this proposeVoteInOrganization \u25ba proposeVoteInOrganization (options?: VoteInOrganizationProposeVoteConfig ): Promise . ArcTransactionProposalResult Defined in wrappers/voteInOrganizationScheme.ts:40 Submit a proposal to vote on a proposal in another DAO. Parameters: Param Type Default value Description options VoteInOrganizationProposeVoteConfig {} as VoteInOrganizationProposeVoteConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult setParameters \u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/voteInOrganizationScheme.ts:128 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"VoteInOrganizationSchemeWrapper"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#class-voteinorganizationschemewrapper","text":"","title":"Class: VoteInOrganizationSchemeWrapper"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#hierarchy","text":"\u21b3 ProposalGeneratorBase \u21b3 VoteInOrganizationSchemeWrapper","title":"Hierarchy"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#implements","text":"IContractWrapper IUniversalSchemeWrapper","title":"Implements"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#index","text":"","title":"Index"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#properties","text":"NewVoteProposal ProposalDeleted ProposalExecuted VoteOnBehalf contract factory friendlyName name","title":"Properties"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#accessors","text":"address","title":"Accessors"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#methods","text":"estimateGas getDefaultPermissions getExecutedProposals getParameters getParametersArray getParametersHash getSchemeParameters getSchemeParametersHash getSchemePermissions getVotableProposal getVotableProposals getVotingMachine getVotingMachineAddress hydrateFromAt hydrateFromDeployed hydrateFromNew proposeVoteInOrganization setParameters","title":"Methods"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#new-voteinorganizationschemewrappersoliditycontract-any-web3eventservice-web3eventservice-voteinorganizationschemewrapper","text":"Inherited from ProposalGeneratorBase . constructor Overrides ContractWrapperBase . constructor Defined in proposalGeneratorBase.ts:10 Parameters: Param Type Description solidityContract any - web3EventService Web3EventService - Returns: VoteInOrganizationSchemeWrapper","title":"\u2295 new VoteInOrganizationSchemeWrapper(solidityContract: any, web3EventService: Web3EventService): VoteInOrganizationSchemeWrapper"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#properties_1","text":"","title":"Properties"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#newvoteproposal","text":"\u25cf NewVoteProposal : EventFetcherFactory NewVoteProposalEventResult Defined in wrappers/voteInOrganizationScheme.ts:31 Events","title":"NewVoteProposal"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#proposaldeleted","text":"\u25cf ProposalDeleted : EventFetcherFactory ProposalDeletedEventResult Defined in wrappers/voteInOrganizationScheme.ts:33","title":"ProposalDeleted"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#proposalexecuted","text":"\u25cf ProposalExecuted : EventFetcherFactory SchemeProposalExecutedEventResult Defined in wrappers/voteInOrganizationScheme.ts:32","title":"ProposalExecuted"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#voteonbehalf","text":"\u25cf VoteOnBehalf : EventFetcherFactory VoteOnBehalfEventResult Defined in wrappers/voteInOrganizationScheme.ts:34","title":"VoteOnBehalf"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#contract","text":"\u25cf contract : any Implementation of IUniversalSchemeWrapper . contract Inherited from ContractWrapperBase . contract Defined in contractWrapperBase.ts:66 The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.","title":"contract"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory VoteInOrganizationSchemeWrapper = VoteInOrganizationSchemeFactory Implementation of IUniversalSchemeWrapper . factory Overrides ContractWrapperBase . factory Defined in wrappers/voteInOrganizationScheme.ts:26","title":"factory"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#friendlyname","text":"\u25cf friendlyName : string = \"Vote In Organization Scheme\" Implementation of IUniversalSchemeWrapper . friendlyName Overrides ContractWrapperBase . friendlyName Defined in wrappers/voteInOrganizationScheme.ts:25","title":"friendlyName"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#name","text":"\u25cf name : string = \"VoteInOrganizationScheme\" Implementation of IUniversalSchemeWrapper . name Overrides ContractWrapperBase . name Defined in wrappers/voteInOrganizationScheme.ts:24","title":"name"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#accessors_1","text":"","title":"Accessors"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#address","text":"getaddress(): Address Inherited from ContractWrapperBase . address Defined in contractWrapperBase.ts:61 The address of the contract Returns: Address","title":"address"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#methods_1","text":"","title":"Methods"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#estimategas","text":"\u25ba estimateGas (func: ITruffleContractFunction , params: Array . any , web3Params?: any ): Promise . number Inherited from ContractWrapperBase . estimateGas Defined in contractWrapperBase.ts:168 Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3. Parameters: Param Type Default value Description func ITruffleContractFunction - The function params Array . any - The parameters to send to the function web3Params any {} The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op. Returns: Promise . number","title":"estimateGas"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Implementation of IUniversalSchemeWrapper . getDefaultPermissions Defined in wrappers/voteInOrganizationScheme.ts:142 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getexecutedproposals","text":"\u25ba getExecutedProposals (avatarAddress: Address ): EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult Defined in wrappers/voteInOrganizationScheme.ts:95 EntityFetcherFactory for executed proposals. Parameters: Param Type Description avatarAddress Address - Returns: EntityFetcherFactory SchemeProposalExecuted , SchemeProposalExecutedEventResult","title":"getExecutedProposals"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getParameters Overrides ContractWrapperBase . getParameters Defined in wrappers/voteInOrganizationScheme.ts:154 Parameters: Param Type Description paramsHash Hash - Returns: Promise . StandardSchemeParams","title":"getParameters"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Implementation of IUniversalSchemeWrapper . getParametersArray Inherited from ContractWrapperBase . getParametersArray Defined in contractWrapperBase.ts:155 Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct. Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getparametershash","text":"\u25ba getParametersHash (params: StandardSchemeParams ): Promise . Hash Defined in wrappers/voteInOrganizationScheme.ts:121 Parameters: Param Type Description params StandardSchemeParams - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . StandardSchemeParams Implementation of IUniversalSchemeWrapper . getSchemeParameters Defined in wrappers/voteInOrganizationScheme.ts:150 Parameters: Param Type Description avatarAddress Address - Returns: Promise . StandardSchemeParams","title":"getSchemeParameters"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getschemeparametershash","text":"\u25ba getSchemeParametersHash (avatarAddress: Address ): Promise . Hash Inherited from ContractWrapperBase . getSchemeParametersHash Defined in contractWrapperBase.ts:144 Given an avatar address, returns the schemes parameters hash Parameters: Param Type Description avatarAddress Address - Returns: Promise . Hash","title":"getSchemeParametersHash"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Implementation of IUniversalSchemeWrapper . getSchemePermissions Defined in wrappers/voteInOrganizationScheme.ts:146 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getvotableproposal","text":"\u25ba getVotableProposal (avatarAddress: Address , proposalId: Hash ): Promise . VotableVoteInOrganizationProposal Defined in wrappers/voteInOrganizationScheme.ts:113 Parameters: Param Type Description avatarAddress Address - proposalId Hash - Returns: Promise . VotableVoteInOrganizationProposal","title":"getVotableProposal"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getvotableproposals","text":"\u25ba getVotableProposals (avatarAddress: Address ): Promise . EntityFetcherFactory VotableVoteInOrganizationProposal , NewVoteProposalEventResult Defined in wrappers/voteInOrganizationScheme.ts:74 EntityFetcherFactory for votable VoteInOrganizationProposal. Parameters: Param Type Description avatarAddress Address - Returns: Promise . EntityFetcherFactory VotableVoteInOrganizationProposal , NewVoteProposalEventResult","title":"getVotableProposals"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getvotingmachine","text":"\u25ba getVotingMachine (avatarAddress: Address ): Promise . IntVoteInterfaceWrapper Inherited from ProposalGeneratorBase . getVotingMachine Defined in proposalGeneratorBase.ts:30 Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . IntVoteInterfaceWrapper","title":"getVotingMachine"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#getvotingmachineaddress","text":"\u25ba getVotingMachineAddress (avatarAddress: Address ): Promise . Address Inherited from ProposalGeneratorBase . getVotingMachineAddress Defined in proposalGeneratorBase.ts:22 Return the address of the voting machine for this scheme as registered with the given avatar. Parameters: Param Type Description avatarAddress Address - Returns: Promise . Address","title":"getVotingMachineAddress"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromAt Inherited from ContractWrapperBase . hydrateFromAt Defined in contractWrapperBase.ts:100 Initialize from a given address on the current network. Parameters: Param Type Description address string of the deployed contract Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromAt"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromDeployed Inherited from ContractWrapperBase . hydrateFromDeployed Defined in contractWrapperBase.ts:118 Initialize as it was migrated by Arc.js on the current network. Returns: Promise . IContractWrapper this or undefined if not found","title":"hydrateFromDeployed"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . IContractWrapper Implementation of IUniversalSchemeWrapper . hydrateFromNew Inherited from ContractWrapperBase . hydrateFromNew Defined in contractWrapperBase.ts:81 Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net. Parameters: Param Type Description rest Array . any - Returns: Promise . IContractWrapper this","title":"hydrateFromNew"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#proposevoteinorganization","text":"\u25ba proposeVoteInOrganization (options?: VoteInOrganizationProposeVoteConfig ): Promise . ArcTransactionProposalResult Defined in wrappers/voteInOrganizationScheme.ts:40 Submit a proposal to vote on a proposal in another DAO. Parameters: Param Type Default value Description options VoteInOrganizationProposeVoteConfig {} as VoteInOrganizationProposeVoteConfig TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"proposeVoteInOrganization"},{"location":"api/classes/VoteInOrganizationSchemeWrapper/#setparameters","text":"\u25ba setParameters (params: StandardSchemeParams TxGeneratingFunctionOptions ): Promise . ArcTransactionDataResult Hash Defined in wrappers/voteInOrganizationScheme.ts:128 Parameters: Param Type Description params StandardSchemeParams TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/classes/Web3EventService/","text":"API Reference Web3EventService Class: Web3EventService Support for working with events that originate from Arc contracts and are served up by Web3. For more information, see Web3 Events . Index Methods createEntityFetcherFactory createEventFetcherFactory Methods createEntityFetcherFactory \u25ba createEntityFetcherFactory TEntity,TEventArgs(eventFetcherFactory: EventFetcherFactory TEventArgs , transformEventCallback: TransformEventCallback TEntity , TEventArgs , baseArgFilter?: any ): EntityFetcherFactory TEntity , TEventArgs Defined in web3EventService.ts:154 Converts a EventFetcherFactory TEventArgs into a EntityFetcherFactory TEntity, TEventArgs . So whenever a web3 event is received by the given EventFetcherFactory , we transform the TEventArgs into TEntities . Note that the callback parameter of EntityFetcher.get is optional; you may alternatively obtain the promise of a Array TEntity from the return value of get . See Arc Web3 Events in Arc.js . Type parameters: TEntity TEventArgs Parameters: Param Type Default value Description eventFetcherFactory EventFetcherFactory TEventArgs - - transformEventCallback TransformEventCallback TEntity , TEventArgs - Function to convert an instance of TEventArgs intothe promise of an instance of TEntity. If it returns undefined then no entityis returned for that event, so this is a programatic way in which eventscan be filtered. baseArgFilter any {} arg filter to always merge into any supplied argFilter. Returns: EntityFetcherFactory TEntity , TEventArgs createEventFetcherFactory \u25ba createEventFetcherFactory TEventArgs(baseEvent: any , preProcessEvent?: PreProcessEventCallback TEventArgs , baseArgFilter?: any ): EventFetcherFactory TEventArgs Defined in web3EventService.ts:32 Returns a function that creates an EventFetcher . For subclasses to use to create their event handlers. This is identical to what you get with Truffle, except with enhancements. Note that the callback parameter of EventFetcher.get is optional; you may alternatively obtain the promise of a Array TEventArgs from the return value of get . For more information, see Web3 Events . type : TEventArgs - name of the event args (EventResult) interface, like NewProposalEventResult Type parameters: TEventArgs Parameters: Param Type Default value Description baseEvent any - the event from the Truffle contract. preProcessEvent PreProcessEventCallback TEventArgs - optionally supply this to modify the err and log arguments before they arepassed to the get / watch callback. baseArgFilter any {} arg filter to always merge into any supplied argFilter. Returns: EventFetcherFactory TEventArgs","title":"Web3EventService"},{"location":"api/classes/Web3EventService/#class-web3eventservice","text":"Support for working with events that originate from Arc contracts and are served up by Web3. For more information, see Web3 Events .","title":"Class: Web3EventService"},{"location":"api/classes/Web3EventService/#index","text":"","title":"Index"},{"location":"api/classes/Web3EventService/#methods","text":"createEntityFetcherFactory createEventFetcherFactory","title":"Methods"},{"location":"api/classes/Web3EventService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/Web3EventService/#createentityfetcherfactory","text":"\u25ba createEntityFetcherFactory TEntity,TEventArgs(eventFetcherFactory: EventFetcherFactory TEventArgs , transformEventCallback: TransformEventCallback TEntity , TEventArgs , baseArgFilter?: any ): EntityFetcherFactory TEntity , TEventArgs Defined in web3EventService.ts:154 Converts a EventFetcherFactory TEventArgs into a EntityFetcherFactory TEntity, TEventArgs . So whenever a web3 event is received by the given EventFetcherFactory , we transform the TEventArgs into TEntities . Note that the callback parameter of EntityFetcher.get is optional; you may alternatively obtain the promise of a Array TEntity from the return value of get . See Arc Web3 Events in Arc.js . Type parameters:","title":"createEntityFetcherFactory"},{"location":"api/classes/Web3EventService/#tentity","text":"","title":"TEntity"},{"location":"api/classes/Web3EventService/#teventargs","text":"Parameters: Param Type Default value Description eventFetcherFactory EventFetcherFactory TEventArgs - - transformEventCallback TransformEventCallback TEntity , TEventArgs - Function to convert an instance of TEventArgs intothe promise of an instance of TEntity. If it returns undefined then no entityis returned for that event, so this is a programatic way in which eventscan be filtered. baseArgFilter any {} arg filter to always merge into any supplied argFilter. Returns: EntityFetcherFactory TEntity , TEventArgs","title":"TEventArgs"},{"location":"api/classes/Web3EventService/#createeventfetcherfactory","text":"\u25ba createEventFetcherFactory TEventArgs(baseEvent: any , preProcessEvent?: PreProcessEventCallback TEventArgs , baseArgFilter?: any ): EventFetcherFactory TEventArgs Defined in web3EventService.ts:32 Returns a function that creates an EventFetcher . For subclasses to use to create their event handlers. This is identical to what you get with Truffle, except with enhancements. Note that the callback parameter of EventFetcher.get is optional; you may alternatively obtain the promise of a Array TEventArgs from the return value of get . For more information, see Web3 Events . type : TEventArgs - name of the event args (EventResult) interface, like NewProposalEventResult Type parameters:","title":"createEventFetcherFactory"},{"location":"api/classes/Web3EventService/#teventargs_1","text":"Parameters: Param Type Default value Description baseEvent any - the event from the Truffle contract. preProcessEvent PreProcessEventCallback TEventArgs - optionally supply this to modify the err and log arguments before they arepassed to the get / watch callback. baseArgFilter any {} arg filter to always merge into any supplied argFilter. Returns: EventFetcherFactory TEventArgs","title":"TEventArgs"},{"location":"api/classes/Web3EventSubscription/","text":"API Reference Web3EventSubscription Class: Web3EventSubscription Type parameters TEventArgs Implements IEventSubscription Index Constructors constructor Methods unsubscribe Constructors \u2295 new Web3EventSubscription (subscription: IEventSubscription , fetcher: EventFetcher TEventArgs ): Web3EventSubscription Defined in web3EventService.ts:585 Parameters: Param Type Description subscription IEventSubscription - fetcher EventFetcher TEventArgs - Returns: Web3EventSubscription Methods unsubscribe \u25ba unsubscribe (milliseconds?: number ): Promise . void Implementation of IEventSubscription . unsubscribe Defined in web3EventService.ts:595 Unsubscribe from all of the events Parameters: Param Type Default value Description milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"Web3EventSubscription"},{"location":"api/classes/Web3EventSubscription/#class-web3eventsubscription","text":"","title":"Class: Web3EventSubscription"},{"location":"api/classes/Web3EventSubscription/#type-parameters","text":"","title":"Type parameters"},{"location":"api/classes/Web3EventSubscription/#teventargs","text":"","title":"TEventArgs"},{"location":"api/classes/Web3EventSubscription/#implements","text":"IEventSubscription","title":"Implements"},{"location":"api/classes/Web3EventSubscription/#index","text":"","title":"Index"},{"location":"api/classes/Web3EventSubscription/#constructors","text":"constructor","title":"Constructors"},{"location":"api/classes/Web3EventSubscription/#methods","text":"unsubscribe","title":"Methods"},{"location":"api/classes/Web3EventSubscription/#constructors_1","text":"","title":"Constructors"},{"location":"api/classes/Web3EventSubscription/#new-web3eventsubscriptionsubscription-ieventsubscription-fetcher-eventfetcherteventargs-web3eventsubscription","text":"Defined in web3EventService.ts:585 Parameters: Param Type Description subscription IEventSubscription - fetcher EventFetcher TEventArgs - Returns: Web3EventSubscription","title":"\u2295 new Web3EventSubscription(subscription: IEventSubscription, fetcher: EventFetcherTEventArgs): Web3EventSubscription"},{"location":"api/classes/Web3EventSubscription/#methods_1","text":"","title":"Methods"},{"location":"api/classes/Web3EventSubscription/#unsubscribe","text":"\u25ba unsubscribe (milliseconds?: number ): Promise . void Implementation of IEventSubscription . unsubscribe Defined in web3EventService.ts:595 Unsubscribe from all of the events Parameters: Param Type Default value Description milliseconds number -1 number of milliseconds to timeout.Default is -1 which means not to timeout at all. Returns: Promise . void","title":"unsubscribe"},{"location":"api/classes/WrapperService/","text":"API Reference WrapperService Class: WrapperService Service that provides access to Arc.js contract wrapper classes and class factories. Index Properties factories wrappers wrappersByAddress wrappersByType Methods confirmContractType getContractWrapper initialize Properties \u00abStatic\u00bb factories \u25cf factories : ArcWrapperFactories = {} as ArcWrapperFactories Defined in wrapperService.ts:161 Wrapper factories by name. Use these when you want to do .at() or .new() . You can also use for deployed() , but the wrappers for deployed contracts are directly available from the wrappers and wrappersByType properties. \u00abStatic\u00bb wrappers \u25cf wrappers : ArcWrappers = {} as ArcWrappers Defined in wrapperService.ts:151 Wrappers by name, hydrated with contracts as deployed by the running version of Arc.js. \u00abStatic\u00bb wrappersByAddress \u25cf wrappersByAddress : Map . Address ,. IContractWrapper = new Map () Defined in wrapperService.ts:171 Map of contract wrappers keyed by address. For example: const wrapper = WrapperService.wrappersByAddress.get(anAddress); Currently only returns the wrappers for contracts that were deployed by the running version of Arc.js. \u00abStatic\u00bb wrappersByType \u25cf wrappersByType : ArcWrappersByType = {} as ArcWrappersByType Defined in wrapperService.ts:155 Contract wrapper factories grouped by type Methods \u00abStatic\u00bb confirmContractType \u25ba confirmContractType (contractWrapperFound: any ): Promise . boolean Defined in wrapperService.ts:301 Confirm the given contract wrapper wraps the same contract as it purports to, and is the one deployed in the running version of Arc.js. This will reject wrappers of different versions of contracts with the same name in Arc. Parameters: Param Type Description contractWrapperFound any - Returns: Promise . boolean \u00abStatic\u00bb getContractWrapper \u25ba getContractWrapper (contractName: string , address?: string ): Promise . IContractWrapper \u23ae undefined Defined in wrapperService.ts:278 Returns the promise of an Arc.js contract wrapper or undefined if not found. Most useful when you have both contract name and maybe the address and wish to most efficiently return the associated wrapper, or undefined when not found. Parameters: Param Type Description contractName string name of an Arc contract, like \"SchemeRegistrar\" address string optional Returns: Promise . IContractWrapper \u23ae undefined \u00abStatic\u00bb initialize \u25ba initialize (options?: WrapperServiceInitializeOptions ): Promise . void Defined in wrapperService.ts:179 initialize() must be called before any of the static properties will have values. It is called by ArcInitialize(), which in tur must be invoked by any application using Arc.js. Parameters: Param Type Description options WrapperServiceInitializeOptions - Returns: Promise . void","title":"WrapperService"},{"location":"api/classes/WrapperService/#class-wrapperservice","text":"Service that provides access to Arc.js contract wrapper classes and class factories.","title":"Class: WrapperService"},{"location":"api/classes/WrapperService/#index","text":"","title":"Index"},{"location":"api/classes/WrapperService/#properties","text":"factories wrappers wrappersByAddress wrappersByType","title":"Properties"},{"location":"api/classes/WrapperService/#methods","text":"confirmContractType getContractWrapper initialize","title":"Methods"},{"location":"api/classes/WrapperService/#properties_1","text":"","title":"Properties"},{"location":"api/classes/WrapperService/#static-factories","text":"\u25cf factories : ArcWrapperFactories = {} as ArcWrapperFactories Defined in wrapperService.ts:161 Wrapper factories by name. Use these when you want to do .at() or .new() . You can also use for deployed() , but the wrappers for deployed contracts are directly available from the wrappers and wrappersByType properties.","title":"\u00abStatic\u00bb factories"},{"location":"api/classes/WrapperService/#static-wrappers","text":"\u25cf wrappers : ArcWrappers = {} as ArcWrappers Defined in wrapperService.ts:151 Wrappers by name, hydrated with contracts as deployed by the running version of Arc.js.","title":"\u00abStatic\u00bb wrappers"},{"location":"api/classes/WrapperService/#static-wrappersbyaddress","text":"\u25cf wrappersByAddress : Map . Address ,. IContractWrapper = new Map () Defined in wrapperService.ts:171 Map of contract wrappers keyed by address. For example: const wrapper = WrapperService.wrappersByAddress.get(anAddress); Currently only returns the wrappers for contracts that were deployed by the running version of Arc.js.","title":"\u00abStatic\u00bb wrappersByAddress"},{"location":"api/classes/WrapperService/#static-wrappersbytype","text":"\u25cf wrappersByType : ArcWrappersByType = {} as ArcWrappersByType Defined in wrapperService.ts:155 Contract wrapper factories grouped by type","title":"\u00abStatic\u00bb wrappersByType"},{"location":"api/classes/WrapperService/#methods_1","text":"","title":"Methods"},{"location":"api/classes/WrapperService/#static-confirmcontracttype","text":"\u25ba confirmContractType (contractWrapperFound: any ): Promise . boolean Defined in wrapperService.ts:301 Confirm the given contract wrapper wraps the same contract as it purports to, and is the one deployed in the running version of Arc.js. This will reject wrappers of different versions of contracts with the same name in Arc. Parameters: Param Type Description contractWrapperFound any - Returns: Promise . boolean","title":"\u00abStatic\u00bb confirmContractType"},{"location":"api/classes/WrapperService/#static-getcontractwrapper","text":"\u25ba getContractWrapper (contractName: string , address?: string ): Promise . IContractWrapper \u23ae undefined Defined in wrapperService.ts:278 Returns the promise of an Arc.js contract wrapper or undefined if not found. Most useful when you have both contract name and maybe the address and wish to most efficiently return the associated wrapper, or undefined when not found. Parameters: Param Type Description contractName string name of an Arc contract, like \"SchemeRegistrar\" address string optional Returns: Promise . IContractWrapper \u23ae undefined","title":"\u00abStatic\u00bb getContractWrapper"},{"location":"api/classes/WrapperService/#static-initialize","text":"\u25ba initialize (options?: WrapperServiceInitializeOptions ): Promise . void Defined in wrapperService.ts:179 initialize() must be called before any of the static properties will have values. It is called by ArcInitialize(), which in tur must be invoked by any application using Arc.js. Parameters: Param Type Description options WrapperServiceInitializeOptions - Returns: Promise . void","title":"\u00abStatic\u00bb initialize"},{"location":"api/enums/BinaryVoteResult/","text":"API Reference BinaryVoteResult Enumeration: BinaryVoteResult Index Enumeration members Abstain No Yes Enumeration members Abstain Abstain : = 0 Defined in commonTypes.ts:8 No No : = 2 Defined in commonTypes.ts:10 Yes Yes : = 1 Defined in commonTypes.ts:9","title":"BinaryVoteResult"},{"location":"api/enums/BinaryVoteResult/#enumeration-binaryvoteresult","text":"","title":"Enumeration: BinaryVoteResult"},{"location":"api/enums/BinaryVoteResult/#index","text":"","title":"Index"},{"location":"api/enums/BinaryVoteResult/#enumeration-members","text":"Abstain No Yes","title":"Enumeration members"},{"location":"api/enums/BinaryVoteResult/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/BinaryVoteResult/#abstain","text":"Abstain : = 0 Defined in commonTypes.ts:8","title":"Abstain"},{"location":"api/enums/BinaryVoteResult/#no","text":"No : = 2 Defined in commonTypes.ts:10","title":"No"},{"location":"api/enums/BinaryVoteResult/#yes","text":"Yes : = 1 Defined in commonTypes.ts:9","title":"Yes"},{"location":"api/enums/ExecutionState/","text":"API Reference ExecutionState Enumeration: ExecutionState Index Enumeration members BoostedBarCrossed BoostedTimeOut None PreBoostedBarCrossed PreBoostedTimeOut Enumeration members BoostedBarCrossed BoostedBarCrossed : = 4 Defined in wrappers/genesisProtocol.ts:1258 BoostedTimeOut BoostedTimeOut : = 3 Defined in wrappers/genesisProtocol.ts:1257 None None : = 0 Defined in wrappers/genesisProtocol.ts:1254 PreBoostedBarCrossed PreBoostedBarCrossed : = 2 Defined in wrappers/genesisProtocol.ts:1256 PreBoostedTimeOut PreBoostedTimeOut : = 1 Defined in wrappers/genesisProtocol.ts:1255","title":"ExecutionState"},{"location":"api/enums/ExecutionState/#enumeration-executionstate","text":"","title":"Enumeration: ExecutionState"},{"location":"api/enums/ExecutionState/#index","text":"","title":"Index"},{"location":"api/enums/ExecutionState/#enumeration-members","text":"BoostedBarCrossed BoostedTimeOut None PreBoostedBarCrossed PreBoostedTimeOut","title":"Enumeration members"},{"location":"api/enums/ExecutionState/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/ExecutionState/#boostedbarcrossed","text":"BoostedBarCrossed : = 4 Defined in wrappers/genesisProtocol.ts:1258","title":"BoostedBarCrossed"},{"location":"api/enums/ExecutionState/#boostedtimeout","text":"BoostedTimeOut : = 3 Defined in wrappers/genesisProtocol.ts:1257","title":"BoostedTimeOut"},{"location":"api/enums/ExecutionState/#none","text":"None : = 0 Defined in wrappers/genesisProtocol.ts:1254","title":"None"},{"location":"api/enums/ExecutionState/#preboostedbarcrossed","text":"PreBoostedBarCrossed : = 2 Defined in wrappers/genesisProtocol.ts:1256","title":"PreBoostedBarCrossed"},{"location":"api/enums/ExecutionState/#preboostedtimeout","text":"PreBoostedTimeOut : = 1 Defined in wrappers/genesisProtocol.ts:1255","title":"PreBoostedTimeOut"},{"location":"api/enums/GlobalConstraintProposalType/","text":"API Reference GlobalConstraintProposalType Enumeration: GlobalConstraintProposalType Index Enumeration members Add Remove Enumeration members Add Add : = 1 Defined in wrappers/globalConstraintRegistrar.ts:300 Remove Remove : = 2 Defined in wrappers/globalConstraintRegistrar.ts:301","title":"GlobalConstraintProposalType"},{"location":"api/enums/GlobalConstraintProposalType/#enumeration-globalconstraintproposaltype","text":"","title":"Enumeration: GlobalConstraintProposalType"},{"location":"api/enums/GlobalConstraintProposalType/#index","text":"","title":"Index"},{"location":"api/enums/GlobalConstraintProposalType/#enumeration-members","text":"Add Remove","title":"Enumeration members"},{"location":"api/enums/GlobalConstraintProposalType/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/GlobalConstraintProposalType/#add","text":"Add : = 1 Defined in wrappers/globalConstraintRegistrar.ts:300","title":"Add"},{"location":"api/enums/GlobalConstraintProposalType/#remove","text":"Remove : = 2 Defined in wrappers/globalConstraintRegistrar.ts:301","title":"Remove"},{"location":"api/enums/LogLevel/","text":"API Reference LogLevel Enumeration: LogLevel Index Enumeration members all debug error info none warn Enumeration members all all : = 15 Defined in loggingService.ts:9 debug debug : = 4 Defined in loggingService.ts:7 error error : = 8 Defined in loggingService.ts:8 info info : = 1 Defined in loggingService.ts:5 none none : = 0 Defined in loggingService.ts:4 warn warn : = 2 Defined in loggingService.ts:6","title":"LogLevel"},{"location":"api/enums/LogLevel/#enumeration-loglevel","text":"","title":"Enumeration: LogLevel"},{"location":"api/enums/LogLevel/#index","text":"","title":"Index"},{"location":"api/enums/LogLevel/#enumeration-members","text":"all debug error info none warn","title":"Enumeration members"},{"location":"api/enums/LogLevel/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/LogLevel/#all","text":"all : = 15 Defined in loggingService.ts:9","title":"all"},{"location":"api/enums/LogLevel/#debug","text":"debug : = 4 Defined in loggingService.ts:7","title":"debug"},{"location":"api/enums/LogLevel/#error","text":"error : = 8 Defined in loggingService.ts:8","title":"error"},{"location":"api/enums/LogLevel/#info","text":"info : = 1 Defined in loggingService.ts:5","title":"info"},{"location":"api/enums/LogLevel/#none","text":"none : = 0 Defined in loggingService.ts:4","title":"none"},{"location":"api/enums/LogLevel/#warn","text":"warn : = 2 Defined in loggingService.ts:6","title":"warn"},{"location":"api/enums/ProposalState/","text":"API Reference ProposalState Enumeration: ProposalState Index Enumeration members Boosted Closed Executed None PreBoosted QuietEndingPeriod Enumeration members Boosted Boosted : Defined in wrappers/genesisProtocol.ts:1277 Closed Closed : Defined in wrappers/genesisProtocol.ts:1274 Executed Executed : Defined in wrappers/genesisProtocol.ts:1275 None None : Defined in wrappers/genesisProtocol.ts:1273 PreBoosted PreBoosted : Defined in wrappers/genesisProtocol.ts:1276 QuietEndingPeriod QuietEndingPeriod : Defined in wrappers/genesisProtocol.ts:1278","title":"ProposalState"},{"location":"api/enums/ProposalState/#enumeration-proposalstate","text":"","title":"Enumeration: ProposalState"},{"location":"api/enums/ProposalState/#index","text":"","title":"Index"},{"location":"api/enums/ProposalState/#enumeration-members","text":"Boosted Closed Executed None PreBoosted QuietEndingPeriod","title":"Enumeration members"},{"location":"api/enums/ProposalState/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/ProposalState/#boosted","text":"Boosted : Defined in wrappers/genesisProtocol.ts:1277","title":"Boosted"},{"location":"api/enums/ProposalState/#closed","text":"Closed : Defined in wrappers/genesisProtocol.ts:1274","title":"Closed"},{"location":"api/enums/ProposalState/#executed","text":"Executed : Defined in wrappers/genesisProtocol.ts:1275","title":"Executed"},{"location":"api/enums/ProposalState/#none","text":"None : Defined in wrappers/genesisProtocol.ts:1273","title":"None"},{"location":"api/enums/ProposalState/#preboosted","text":"PreBoosted : Defined in wrappers/genesisProtocol.ts:1276","title":"PreBoosted"},{"location":"api/enums/ProposalState/#quietendingperiod","text":"QuietEndingPeriod : Defined in wrappers/genesisProtocol.ts:1278","title":"QuietEndingPeriod"},{"location":"api/enums/RewardType/","text":"API Reference RewardType Enumeration: RewardType Index Enumeration members Eth ExternalToken NativeToken Reputation Enumeration members Eth Eth : = 2 Defined in wrappers/contributionReward.ts:561 ExternalToken ExternalToken : = 3 Defined in wrappers/contributionReward.ts:562 NativeToken NativeToken : = 1 Defined in wrappers/contributionReward.ts:560 Reputation Reputation : = 0 Defined in wrappers/contributionReward.ts:559","title":"RewardType"},{"location":"api/enums/RewardType/#enumeration-rewardtype","text":"","title":"Enumeration: RewardType"},{"location":"api/enums/RewardType/#index","text":"","title":"Index"},{"location":"api/enums/RewardType/#enumeration-members","text":"Eth ExternalToken NativeToken Reputation","title":"Enumeration members"},{"location":"api/enums/RewardType/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/RewardType/#eth","text":"Eth : = 2 Defined in wrappers/contributionReward.ts:561","title":"Eth"},{"location":"api/enums/RewardType/#externaltoken","text":"ExternalToken : = 3 Defined in wrappers/contributionReward.ts:562","title":"ExternalToken"},{"location":"api/enums/RewardType/#nativetoken","text":"NativeToken : = 1 Defined in wrappers/contributionReward.ts:560","title":"NativeToken"},{"location":"api/enums/RewardType/#reputation","text":"Reputation : = 0 Defined in wrappers/contributionReward.ts:559","title":"Reputation"},{"location":"api/enums/SchemePermissions/","text":"API Reference SchemePermissions Enumeration: SchemePermissions Index Enumeration members All CanAddRemoveGlobalConstraints CanCallDelegateCall CanRegisterSchemes CanUpgradeController IsRegistered None Functions fromString toString Enumeration members All All : = 31 Defined in commonTypes.ts:23 CanAddRemoveGlobalConstraints CanAddRemoveGlobalConstraints : = 4 Defined in commonTypes.ts:20 CanCallDelegateCall CanCallDelegateCall : = 16 Defined in commonTypes.ts:22 CanRegisterSchemes CanRegisterSchemes : = 2 Defined in commonTypes.ts:19 CanUpgradeController CanUpgradeController : = 8 Defined in commonTypes.ts:21 IsRegistered IsRegistered : = 1 Defined in commonTypes.ts:18 A scheme always automatically gets this bit when registered to a DAO None None : = 0 Defined in commonTypes.ts:14 Functions fromString \u25ba fromString (perms: string ): SchemePermissions Defined in commonTypes.ts:56 Parameters: Param Type Description perms string - Returns: SchemePermissions toString \u25ba toString (perms: SchemePermissions ): string Defined in commonTypes.ts:53 Parameters: Param Type Description perms SchemePermissions - Returns: string","title":"SchemePermissions"},{"location":"api/enums/SchemePermissions/#enumeration-schemepermissions","text":"","title":"Enumeration: SchemePermissions"},{"location":"api/enums/SchemePermissions/#index","text":"","title":"Index"},{"location":"api/enums/SchemePermissions/#enumeration-members","text":"All CanAddRemoveGlobalConstraints CanCallDelegateCall CanRegisterSchemes CanUpgradeController IsRegistered None","title":"Enumeration members"},{"location":"api/enums/SchemePermissions/#functions","text":"fromString toString","title":"Functions"},{"location":"api/enums/SchemePermissions/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/SchemePermissions/#all","text":"All : = 31 Defined in commonTypes.ts:23","title":"All"},{"location":"api/enums/SchemePermissions/#canaddremoveglobalconstraints","text":"CanAddRemoveGlobalConstraints : = 4 Defined in commonTypes.ts:20","title":"CanAddRemoveGlobalConstraints"},{"location":"api/enums/SchemePermissions/#cancalldelegatecall","text":"CanCallDelegateCall : = 16 Defined in commonTypes.ts:22","title":"CanCallDelegateCall"},{"location":"api/enums/SchemePermissions/#canregisterschemes","text":"CanRegisterSchemes : = 2 Defined in commonTypes.ts:19","title":"CanRegisterSchemes"},{"location":"api/enums/SchemePermissions/#canupgradecontroller","text":"CanUpgradeController : = 8 Defined in commonTypes.ts:21","title":"CanUpgradeController"},{"location":"api/enums/SchemePermissions/#isregistered","text":"IsRegistered : = 1 Defined in commonTypes.ts:18 A scheme always automatically gets this bit when registered to a DAO","title":"IsRegistered"},{"location":"api/enums/SchemePermissions/#none","text":"None : = 0 Defined in commonTypes.ts:14","title":"None"},{"location":"api/enums/SchemePermissions/#functions_1","text":"","title":"Functions"},{"location":"api/enums/SchemePermissions/#fromstring","text":"\u25ba fromString (perms: string ): SchemePermissions Defined in commonTypes.ts:56 Parameters: Param Type Description perms string - Returns: SchemePermissions","title":"fromString"},{"location":"api/enums/SchemePermissions/#tostring","text":"\u25ba toString (perms: SchemePermissions ): string Defined in commonTypes.ts:53 Parameters: Param Type Description perms SchemePermissions - Returns: string","title":"toString"},{"location":"api/enums/SchemeRegistrarProposalType/","text":"API Reference SchemeRegistrarProposalType Enumeration: SchemeRegistrarProposalType Index Enumeration members Add Remove Enumeration members Add Add : = 1 Defined in wrappers/schemeRegistrar.ts:361 Remove Remove : = 2 Defined in wrappers/schemeRegistrar.ts:362","title":"SchemeRegistrarProposalType"},{"location":"api/enums/SchemeRegistrarProposalType/#enumeration-schemeregistrarproposaltype","text":"","title":"Enumeration: SchemeRegistrarProposalType"},{"location":"api/enums/SchemeRegistrarProposalType/#index","text":"","title":"Index"},{"location":"api/enums/SchemeRegistrarProposalType/#enumeration-members","text":"Add Remove","title":"Enumeration members"},{"location":"api/enums/SchemeRegistrarProposalType/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/SchemeRegistrarProposalType/#add","text":"Add : = 1 Defined in wrappers/schemeRegistrar.ts:361","title":"Add"},{"location":"api/enums/SchemeRegistrarProposalType/#remove","text":"Remove : = 2 Defined in wrappers/schemeRegistrar.ts:362","title":"Remove"},{"location":"api/enums/TransactionStage/","text":"API Reference TransactionStage Enumeration: TransactionStage Index Enumeration members confirmed kickoff mined sent Enumeration members confirmed confirmed : Defined in transactionService.ts:602 kickoff kickoff : Defined in transactionService.ts:599 mined mined : Defined in transactionService.ts:601 sent sent : Defined in transactionService.ts:600","title":"TransactionStage"},{"location":"api/enums/TransactionStage/#enumeration-transactionstage","text":"","title":"Enumeration: TransactionStage"},{"location":"api/enums/TransactionStage/#index","text":"","title":"Index"},{"location":"api/enums/TransactionStage/#enumeration-members","text":"confirmed kickoff mined sent","title":"Enumeration members"},{"location":"api/enums/TransactionStage/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/TransactionStage/#confirmed","text":"confirmed : Defined in transactionService.ts:602","title":"confirmed"},{"location":"api/enums/TransactionStage/#kickoff","text":"kickoff : Defined in transactionService.ts:599","title":"kickoff"},{"location":"api/enums/TransactionStage/#mined","text":"mined : Defined in transactionService.ts:601","title":"mined"},{"location":"api/enums/TransactionStage/#sent","text":"sent : Defined in transactionService.ts:600","title":"sent"},{"location":"api/enums/UpgradeSchemeProposalType/","text":"API Reference UpgradeSchemeProposalType Enumeration: UpgradeSchemeProposalType Index Enumeration members Controller UpgradeScheme Enumeration members Controller Controller : = 1 Defined in wrappers/upgradeScheme.ts:288 UpgradeScheme UpgradeScheme : = 2 Defined in wrappers/upgradeScheme.ts:289","title":"UpgradeSchemeProposalType"},{"location":"api/enums/UpgradeSchemeProposalType/#enumeration-upgradeschemeproposaltype","text":"","title":"Enumeration: UpgradeSchemeProposalType"},{"location":"api/enums/UpgradeSchemeProposalType/#index","text":"","title":"Index"},{"location":"api/enums/UpgradeSchemeProposalType/#enumeration-members","text":"Controller UpgradeScheme","title":"Enumeration members"},{"location":"api/enums/UpgradeSchemeProposalType/#enumeration-members_1","text":"","title":"Enumeration members"},{"location":"api/enums/UpgradeSchemeProposalType/#controller","text":"Controller : = 1 Defined in wrappers/upgradeScheme.ts:288","title":"Controller"},{"location":"api/enums/UpgradeSchemeProposalType/#upgradescheme","text":"UpgradeScheme : = 2 Defined in wrappers/upgradeScheme.ts:289","title":"UpgradeScheme"},{"location":"api/interfaces/AVVoteProposalEventResult/","text":"API Reference AVVoteProposalEventResult Interface: AVVoteProposalEventResult Properties _isOwnerVote \u25cf _isOwnerVote : boolean Defined in wrappers/absoluteVote.ts:188 _proposalId \u25cf _proposalId : Hash Defined in wrappers/absoluteVote.ts:187 indexed","title":"AVVoteProposalEventResult"},{"location":"api/interfaces/AVVoteProposalEventResult/#interface-avvoteproposaleventresult","text":"","title":"Interface: AVVoteProposalEventResult"},{"location":"api/interfaces/AVVoteProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AVVoteProposalEventResult/#_isownervote","text":"\u25cf _isOwnerVote : boolean Defined in wrappers/absoluteVote.ts:188","title":"_isOwnerVote"},{"location":"api/interfaces/AVVoteProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/absoluteVote.ts:187 indexed","title":"_proposalId"},{"location":"api/interfaces/AbsoluteVoteParams/","text":"API Reference AbsoluteVoteParams Interface: AbsoluteVoteParams Properties \u00abOptional\u00bb ownerVote \u25cf ownerVote : boolean Defined in wrappers/absoluteVote.ts:172 reputation \u25cf reputation : string Defined in wrappers/absoluteVote.ts:173 \u00abOptional\u00bb votePerc \u25cf votePerc : number Defined in wrappers/absoluteVote.ts:174","title":"AbsoluteVoteParams"},{"location":"api/interfaces/AbsoluteVoteParams/#interface-absolutevoteparams","text":"","title":"Interface: AbsoluteVoteParams"},{"location":"api/interfaces/AbsoluteVoteParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AbsoluteVoteParams/#optional-ownervote","text":"\u25cf ownerVote : boolean Defined in wrappers/absoluteVote.ts:172","title":"\u00abOptional\u00bb ownerVote"},{"location":"api/interfaces/AbsoluteVoteParams/#reputation","text":"\u25cf reputation : string Defined in wrappers/absoluteVote.ts:173","title":"reputation"},{"location":"api/interfaces/AbsoluteVoteParams/#optional-voteperc","text":"\u25cf votePerc : number Defined in wrappers/absoluteVote.ts:174","title":"\u00abOptional\u00bb votePerc"},{"location":"api/interfaces/AbsoluteVoteParamsResult/","text":"API Reference AbsoluteVoteParamsResult Interface: AbsoluteVoteParamsResult Properties ownerVote \u25cf ownerVote : boolean Defined in wrappers/absoluteVote.ts:178 reputation \u25cf reputation : string Defined in wrappers/absoluteVote.ts:179 votePerc \u25cf votePerc : number Defined in wrappers/absoluteVote.ts:180","title":"AbsoluteVoteParamsResult"},{"location":"api/interfaces/AbsoluteVoteParamsResult/#interface-absolutevoteparamsresult","text":"","title":"Interface: AbsoluteVoteParamsResult"},{"location":"api/interfaces/AbsoluteVoteParamsResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AbsoluteVoteParamsResult/#ownervote","text":"\u25cf ownerVote : boolean Defined in wrappers/absoluteVote.ts:178","title":"ownerVote"},{"location":"api/interfaces/AbsoluteVoteParamsResult/#reputation","text":"\u25cf reputation : string Defined in wrappers/absoluteVote.ts:179","title":"reputation"},{"location":"api/interfaces/AbsoluteVoteParamsResult/#voteperc","text":"\u25cf votePerc : number Defined in wrappers/absoluteVote.ts:180","title":"votePerc"},{"location":"api/interfaces/Agreement/","text":"API Reference Agreement Interface: Agreement Hierarchy AgreementBase \u21b3 Agreement Properties agreementId \u25cf agreementId : number Defined in wrappers/vestingScheme.ts:615 amountPerPeriod \u25cf amountPerPeriod : BigNumber.BigNumber Inherited from AgreementBase . amountPerPeriod Defined in wrappers/vestingScheme.ts:619 beneficiaryAddress \u25cf beneficiaryAddress : Address Inherited from AgreementBase . beneficiaryAddress Defined in wrappers/vestingScheme.ts:620 cliffInPeriods \u25cf cliffInPeriods : BigNumber.BigNumber Inherited from AgreementBase . cliffInPeriods Defined in wrappers/vestingScheme.ts:621 collectedPeriods \u25cf collectedPeriods : BigNumber.BigNumber Inherited from AgreementBase . collectedPeriods Defined in wrappers/vestingScheme.ts:622 numOfAgreedPeriods \u25cf numOfAgreedPeriods : BigNumber.BigNumber Inherited from AgreementBase . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:623 periodLength \u25cf periodLength : BigNumber.BigNumber Inherited from AgreementBase . periodLength Defined in wrappers/vestingScheme.ts:624 returnOnCancelAddress \u25cf returnOnCancelAddress : Address Inherited from AgreementBase . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:625 signaturesReqToCancel \u25cf signaturesReqToCancel : BigNumber.BigNumber Inherited from AgreementBase . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:626 startingBlock \u25cf startingBlock : BigNumber.BigNumber Inherited from AgreementBase . startingBlock Defined in wrappers/vestingScheme.ts:627 tokenAddress \u25cf tokenAddress : Address Inherited from AgreementBase . tokenAddress Defined in wrappers/vestingScheme.ts:628","title":"Agreement"},{"location":"api/interfaces/Agreement/#interface-agreement","text":"","title":"Interface: Agreement"},{"location":"api/interfaces/Agreement/#hierarchy","text":"AgreementBase \u21b3 Agreement","title":"Hierarchy"},{"location":"api/interfaces/Agreement/#properties","text":"","title":"Properties"},{"location":"api/interfaces/Agreement/#agreementid","text":"\u25cf agreementId : number Defined in wrappers/vestingScheme.ts:615","title":"agreementId"},{"location":"api/interfaces/Agreement/#amountperperiod","text":"\u25cf amountPerPeriod : BigNumber.BigNumber Inherited from AgreementBase . amountPerPeriod Defined in wrappers/vestingScheme.ts:619","title":"amountPerPeriod"},{"location":"api/interfaces/Agreement/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Inherited from AgreementBase . beneficiaryAddress Defined in wrappers/vestingScheme.ts:620","title":"beneficiaryAddress"},{"location":"api/interfaces/Agreement/#cliffinperiods","text":"\u25cf cliffInPeriods : BigNumber.BigNumber Inherited from AgreementBase . cliffInPeriods Defined in wrappers/vestingScheme.ts:621","title":"cliffInPeriods"},{"location":"api/interfaces/Agreement/#collectedperiods","text":"\u25cf collectedPeriods : BigNumber.BigNumber Inherited from AgreementBase . collectedPeriods Defined in wrappers/vestingScheme.ts:622","title":"collectedPeriods"},{"location":"api/interfaces/Agreement/#numofagreedperiods","text":"\u25cf numOfAgreedPeriods : BigNumber.BigNumber Inherited from AgreementBase . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:623","title":"numOfAgreedPeriods"},{"location":"api/interfaces/Agreement/#periodlength","text":"\u25cf periodLength : BigNumber.BigNumber Inherited from AgreementBase . periodLength Defined in wrappers/vestingScheme.ts:624","title":"periodLength"},{"location":"api/interfaces/Agreement/#returnoncanceladdress","text":"\u25cf returnOnCancelAddress : Address Inherited from AgreementBase . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:625","title":"returnOnCancelAddress"},{"location":"api/interfaces/Agreement/#signaturesreqtocancel","text":"\u25cf signaturesReqToCancel : BigNumber.BigNumber Inherited from AgreementBase . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:626","title":"signaturesReqToCancel"},{"location":"api/interfaces/Agreement/#startingblock","text":"\u25cf startingBlock : BigNumber.BigNumber Inherited from AgreementBase . startingBlock Defined in wrappers/vestingScheme.ts:627","title":"startingBlock"},{"location":"api/interfaces/Agreement/#tokenaddress","text":"\u25cf tokenAddress : Address Inherited from AgreementBase . tokenAddress Defined in wrappers/vestingScheme.ts:628","title":"tokenAddress"},{"location":"api/interfaces/AgreementBase/","text":"API Reference AgreementBase Interface: AgreementBase Hierarchy AgreementBase \u21b3 AgreementProposal \u21b3 Agreement Properties amountPerPeriod \u25cf amountPerPeriod : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:619 beneficiaryAddress \u25cf beneficiaryAddress : Address Defined in wrappers/vestingScheme.ts:620 cliffInPeriods \u25cf cliffInPeriods : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:621 collectedPeriods \u25cf collectedPeriods : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:622 numOfAgreedPeriods \u25cf numOfAgreedPeriods : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:623 periodLength \u25cf periodLength : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:624 returnOnCancelAddress \u25cf returnOnCancelAddress : Address Defined in wrappers/vestingScheme.ts:625 signaturesReqToCancel \u25cf signaturesReqToCancel : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:626 startingBlock \u25cf startingBlock : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:627 tokenAddress \u25cf tokenAddress : Address Defined in wrappers/vestingScheme.ts:628","title":"AgreementBase"},{"location":"api/interfaces/AgreementBase/#interface-agreementbase","text":"","title":"Interface: AgreementBase"},{"location":"api/interfaces/AgreementBase/#hierarchy","text":"AgreementBase \u21b3 AgreementProposal \u21b3 Agreement","title":"Hierarchy"},{"location":"api/interfaces/AgreementBase/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AgreementBase/#amountperperiod","text":"\u25cf amountPerPeriod : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:619","title":"amountPerPeriod"},{"location":"api/interfaces/AgreementBase/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Defined in wrappers/vestingScheme.ts:620","title":"beneficiaryAddress"},{"location":"api/interfaces/AgreementBase/#cliffinperiods","text":"\u25cf cliffInPeriods : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:621","title":"cliffInPeriods"},{"location":"api/interfaces/AgreementBase/#collectedperiods","text":"\u25cf collectedPeriods : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:622","title":"collectedPeriods"},{"location":"api/interfaces/AgreementBase/#numofagreedperiods","text":"\u25cf numOfAgreedPeriods : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:623","title":"numOfAgreedPeriods"},{"location":"api/interfaces/AgreementBase/#periodlength","text":"\u25cf periodLength : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:624","title":"periodLength"},{"location":"api/interfaces/AgreementBase/#returnoncanceladdress","text":"\u25cf returnOnCancelAddress : Address Defined in wrappers/vestingScheme.ts:625","title":"returnOnCancelAddress"},{"location":"api/interfaces/AgreementBase/#signaturesreqtocancel","text":"\u25cf signaturesReqToCancel : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:626","title":"signaturesReqToCancel"},{"location":"api/interfaces/AgreementBase/#startingblock","text":"\u25cf startingBlock : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:627","title":"startingBlock"},{"location":"api/interfaces/AgreementBase/#tokenaddress","text":"\u25cf tokenAddress : Address Defined in wrappers/vestingScheme.ts:628","title":"tokenAddress"},{"location":"api/interfaces/AgreementCancelEventResult/","text":"API Reference AgreementCancelEventResult Interface: AgreementCancelEventResult Properties _agreementId \u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:500 indexed","title":"AgreementCancelEventResult"},{"location":"api/interfaces/AgreementCancelEventResult/#interface-agreementcanceleventresult","text":"","title":"Interface: AgreementCancelEventResult"},{"location":"api/interfaces/AgreementCancelEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AgreementCancelEventResult/#_agreementid","text":"\u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:500 indexed","title":"_agreementId"},{"location":"api/interfaces/AgreementProposal/","text":"API Reference AgreementProposal Interface: AgreementProposal Hierarchy AgreementBase \u21b3 AgreementProposal Properties amountPerPeriod \u25cf amountPerPeriod : BigNumber.BigNumber Inherited from AgreementBase . amountPerPeriod Defined in wrappers/vestingScheme.ts:619 beneficiaryAddress \u25cf beneficiaryAddress : Address Inherited from AgreementBase . beneficiaryAddress Defined in wrappers/vestingScheme.ts:620 cliffInPeriods \u25cf cliffInPeriods : BigNumber.BigNumber Inherited from AgreementBase . cliffInPeriods Defined in wrappers/vestingScheme.ts:621 collectedPeriods \u25cf collectedPeriods : BigNumber.BigNumber Inherited from AgreementBase . collectedPeriods Defined in wrappers/vestingScheme.ts:622 numOfAgreedPeriods \u25cf numOfAgreedPeriods : BigNumber.BigNumber Inherited from AgreementBase . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:623 periodLength \u25cf periodLength : BigNumber.BigNumber Inherited from AgreementBase . periodLength Defined in wrappers/vestingScheme.ts:624 proposalId \u25cf proposalId : Hash Defined in wrappers/vestingScheme.ts:611 indexed returnOnCancelAddress \u25cf returnOnCancelAddress : Address Inherited from AgreementBase . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:625 signaturesReqToCancel \u25cf signaturesReqToCancel : BigNumber.BigNumber Inherited from AgreementBase . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:626 startingBlock \u25cf startingBlock : BigNumber.BigNumber Inherited from AgreementBase . startingBlock Defined in wrappers/vestingScheme.ts:627 tokenAddress \u25cf tokenAddress : Address Inherited from AgreementBase . tokenAddress Defined in wrappers/vestingScheme.ts:628","title":"AgreementProposal"},{"location":"api/interfaces/AgreementProposal/#interface-agreementproposal","text":"","title":"Interface: AgreementProposal"},{"location":"api/interfaces/AgreementProposal/#hierarchy","text":"AgreementBase \u21b3 AgreementProposal","title":"Hierarchy"},{"location":"api/interfaces/AgreementProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AgreementProposal/#amountperperiod","text":"\u25cf amountPerPeriod : BigNumber.BigNumber Inherited from AgreementBase . amountPerPeriod Defined in wrappers/vestingScheme.ts:619","title":"amountPerPeriod"},{"location":"api/interfaces/AgreementProposal/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Inherited from AgreementBase . beneficiaryAddress Defined in wrappers/vestingScheme.ts:620","title":"beneficiaryAddress"},{"location":"api/interfaces/AgreementProposal/#cliffinperiods","text":"\u25cf cliffInPeriods : BigNumber.BigNumber Inherited from AgreementBase . cliffInPeriods Defined in wrappers/vestingScheme.ts:621","title":"cliffInPeriods"},{"location":"api/interfaces/AgreementProposal/#collectedperiods","text":"\u25cf collectedPeriods : BigNumber.BigNumber Inherited from AgreementBase . collectedPeriods Defined in wrappers/vestingScheme.ts:622","title":"collectedPeriods"},{"location":"api/interfaces/AgreementProposal/#numofagreedperiods","text":"\u25cf numOfAgreedPeriods : BigNumber.BigNumber Inherited from AgreementBase . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:623","title":"numOfAgreedPeriods"},{"location":"api/interfaces/AgreementProposal/#periodlength","text":"\u25cf periodLength : BigNumber.BigNumber Inherited from AgreementBase . periodLength Defined in wrappers/vestingScheme.ts:624","title":"periodLength"},{"location":"api/interfaces/AgreementProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/vestingScheme.ts:611 indexed","title":"proposalId"},{"location":"api/interfaces/AgreementProposal/#returnoncanceladdress","text":"\u25cf returnOnCancelAddress : Address Inherited from AgreementBase . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:625","title":"returnOnCancelAddress"},{"location":"api/interfaces/AgreementProposal/#signaturesreqtocancel","text":"\u25cf signaturesReqToCancel : BigNumber.BigNumber Inherited from AgreementBase . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:626","title":"signaturesReqToCancel"},{"location":"api/interfaces/AgreementProposal/#startingblock","text":"\u25cf startingBlock : BigNumber.BigNumber Inherited from AgreementBase . startingBlock Defined in wrappers/vestingScheme.ts:627","title":"startingBlock"},{"location":"api/interfaces/AgreementProposal/#tokenaddress","text":"\u25cf tokenAddress : Address Inherited from AgreementBase . tokenAddress Defined in wrappers/vestingScheme.ts:628","title":"tokenAddress"},{"location":"api/interfaces/AgreementProposalEventResult/","text":"API Reference AgreementProposalEventResult Interface: AgreementProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/vestingScheme.ts:449 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/vestingScheme.ts:453 indexed","title":"AgreementProposalEventResult"},{"location":"api/interfaces/AgreementProposalEventResult/#interface-agreementproposaleventresult","text":"","title":"Interface: AgreementProposalEventResult"},{"location":"api/interfaces/AgreementProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AgreementProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/vestingScheme.ts:449 indexed","title":"_avatar"},{"location":"api/interfaces/AgreementProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/vestingScheme.ts:453 indexed","title":"_proposalId"},{"location":"api/interfaces/AllowanceOptions/","text":"API Reference AllowanceOptions Interface: AllowanceOptions Properties owner \u25cf owner : Address Defined in wrappers/daoToken.ts:383 spender \u25cf spender : Address Defined in wrappers/daoToken.ts:384","title":"AllowanceOptions"},{"location":"api/interfaces/AllowanceOptions/#interface-allowanceoptions","text":"","title":"Interface: AllowanceOptions"},{"location":"api/interfaces/AllowanceOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/AllowanceOptions/#owner","text":"\u25cf owner : Address Defined in wrappers/daoToken.ts:383","title":"owner"},{"location":"api/interfaces/AllowanceOptions/#spender","text":"\u25cf spender : Address Defined in wrappers/daoToken.ts:384","title":"spender"},{"location":"api/interfaces/ApprovalEventResult/","text":"API Reference ApprovalEventResult Interface: ApprovalEventResult Properties owner \u25cf owner : Address Defined in wrappers/standardToken.ts:255 The account from which the tokens originated. indexed spender \u25cf spender : Address Defined in wrappers/standardToken.ts:260 The account that was approved-to and initiated the transfer on behalf of owner. indexed value \u25cf value : BigNumber Defined in wrappers/standardToken.ts:267 When the event is emitted by approve , then this is the amount that was requested for approval from spender by owner by the specific function call. When the event is emitted by increaseApproval or decreaseApproval , then this is the current net amount approved to transfer from spender by owner.","title":"ApprovalEventResult"},{"location":"api/interfaces/ApprovalEventResult/#interface-approvaleventresult","text":"","title":"Interface: ApprovalEventResult"},{"location":"api/interfaces/ApprovalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ApprovalEventResult/#owner","text":"\u25cf owner : Address Defined in wrappers/standardToken.ts:255 The account from which the tokens originated. indexed","title":"owner"},{"location":"api/interfaces/ApprovalEventResult/#spender","text":"\u25cf spender : Address Defined in wrappers/standardToken.ts:260 The account that was approved-to and initiated the transfer on behalf of owner. indexed","title":"spender"},{"location":"api/interfaces/ApprovalEventResult/#value","text":"\u25cf value : BigNumber Defined in wrappers/standardToken.ts:267 When the event is emitted by approve , then this is the amount that was requested for approval from spender by owner by the specific function call. When the event is emitted by increaseApproval or decreaseApproval , then this is the current net amount approved to transfer from spender by owner.","title":"value"},{"location":"api/interfaces/ApproveAndCallOptions/","text":"API Reference ApproveAndCallOptions Interface: ApproveAndCallOptions Hierarchy StandardTokenApproveOptions \u21b3 ApproveAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Inherited from StandardTokenApproveOptions . amount Defined in wrappers/standardToken.ts:237 Amount to approve to transfer. callData \u25cf callData : string Defined in wrappers/iErc827Token.ts:56 \u00abOptional\u00bb owner \u25cf owner : Address Inherited from StandardTokenApproveOptions . owner Defined in wrappers/standardToken.ts:242 The account that has the tokens to spend. Default is msg.sender. spender \u25cf spender : Address Inherited from StandardTokenApproveOptions . spender Defined in wrappers/standardToken.ts:247 The account that will initiate the transfer of tokens on behalf of the owner.","title":"ApproveAndCallOptions"},{"location":"api/interfaces/ApproveAndCallOptions/#interface-approveandcalloptions","text":"","title":"Interface: ApproveAndCallOptions"},{"location":"api/interfaces/ApproveAndCallOptions/#hierarchy","text":"StandardTokenApproveOptions \u21b3 ApproveAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/ApproveAndCallOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ApproveAndCallOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Inherited from StandardTokenApproveOptions . amount Defined in wrappers/standardToken.ts:237 Amount to approve to transfer.","title":"amount"},{"location":"api/interfaces/ApproveAndCallOptions/#calldata","text":"\u25cf callData : string Defined in wrappers/iErc827Token.ts:56","title":"callData"},{"location":"api/interfaces/ApproveAndCallOptions/#optional-owner","text":"\u25cf owner : Address Inherited from StandardTokenApproveOptions . owner Defined in wrappers/standardToken.ts:242 The account that has the tokens to spend. Default is msg.sender.","title":"\u00abOptional\u00bb owner"},{"location":"api/interfaces/ApproveAndCallOptions/#spender","text":"\u25cf spender : Address Inherited from StandardTokenApproveOptions . spender Defined in wrappers/standardToken.ts:247 The account that will initiate the transfer of tokens on behalf of the owner.","title":"spender"},{"location":"api/interfaces/ArcWrapperFactories/","text":"API Reference ArcWrapperFactories Interface: ArcWrapperFactories An object with property names being a contract key and property value as the corresponding wrapper factory (IContractWrapperFactory TWrapper). Properties AbsoluteVote \u25cf AbsoluteVote : IContractWrapperFactory AbsoluteVoteWrapper Defined in wrapperService.ts:76 ContributionReward \u25cf ContributionReward : IContractWrapperFactory ContributionRewardWrapper Defined in wrapperService.ts:77 DaoCreator \u25cf DaoCreator : IContractWrapperFactory DaoCreatorWrapper Defined in wrapperService.ts:78 DaoToken \u25cf DaoToken : IContractWrapperFactory DaoTokenWrapper Defined in wrapperService.ts:79 GenesisProtocol \u25cf GenesisProtocol : IContractWrapperFactory GenesisProtocolWrapper Defined in wrapperService.ts:80 GlobalConstraintRegistrar \u25cf GlobalConstraintRegistrar : IContractWrapperFactory GlobalConstraintRegistrarWrapper Defined in wrapperService.ts:81 IntVoteInterface \u25cf IntVoteInterface : IContractWrapperFactory IntVoteInterfaceWrapper Defined in wrapperService.ts:82 MintableToken \u25cf MintableToken : IContractWrapperFactory MintableTokenWrapper Defined in wrapperService.ts:83 Redeemer \u25cf Redeemer : IContractWrapperFactory RedeemerWrapper Defined in wrapperService.ts:84 Reputation \u25cf Reputation : IContractWrapperFactory ReputationWrapper Defined in wrapperService.ts:85 SchemeRegistrar \u25cf SchemeRegistrar : IContractWrapperFactory SchemeRegistrarWrapper Defined in wrapperService.ts:86 StandardToken \u25cf StandardToken : IContractWrapperFactory StandardTokenWrapper Defined in wrapperService.ts:87 TokenCapGC \u25cf TokenCapGC : IContractWrapperFactory TokenCapGCWrapper Defined in wrapperService.ts:88 UpgradeScheme \u25cf UpgradeScheme : IContractWrapperFactory UpgradeSchemeWrapper Defined in wrapperService.ts:89 VestingScheme \u25cf VestingScheme : IContractWrapperFactory VestingSchemeWrapper Defined in wrapperService.ts:90 VoteInOrganizationScheme \u25cf VoteInOrganizationScheme : IContractWrapperFactory VoteInOrganizationSchemeWrapper Defined in wrapperService.ts:91","title":"ArcWrapperFactories"},{"location":"api/interfaces/ArcWrapperFactories/#interface-arcwrapperfactories","text":"An object with property names being a contract key and property value as the corresponding wrapper factory (IContractWrapperFactory TWrapper).","title":"Interface: ArcWrapperFactories"},{"location":"api/interfaces/ArcWrapperFactories/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ArcWrapperFactories/#absolutevote","text":"\u25cf AbsoluteVote : IContractWrapperFactory AbsoluteVoteWrapper Defined in wrapperService.ts:76","title":"AbsoluteVote"},{"location":"api/interfaces/ArcWrapperFactories/#contributionreward","text":"\u25cf ContributionReward : IContractWrapperFactory ContributionRewardWrapper Defined in wrapperService.ts:77","title":"ContributionReward"},{"location":"api/interfaces/ArcWrapperFactories/#daocreator","text":"\u25cf DaoCreator : IContractWrapperFactory DaoCreatorWrapper Defined in wrapperService.ts:78","title":"DaoCreator"},{"location":"api/interfaces/ArcWrapperFactories/#daotoken","text":"\u25cf DaoToken : IContractWrapperFactory DaoTokenWrapper Defined in wrapperService.ts:79","title":"DaoToken"},{"location":"api/interfaces/ArcWrapperFactories/#genesisprotocol","text":"\u25cf GenesisProtocol : IContractWrapperFactory GenesisProtocolWrapper Defined in wrapperService.ts:80","title":"GenesisProtocol"},{"location":"api/interfaces/ArcWrapperFactories/#globalconstraintregistrar","text":"\u25cf GlobalConstraintRegistrar : IContractWrapperFactory GlobalConstraintRegistrarWrapper Defined in wrapperService.ts:81","title":"GlobalConstraintRegistrar"},{"location":"api/interfaces/ArcWrapperFactories/#intvoteinterface","text":"\u25cf IntVoteInterface : IContractWrapperFactory IntVoteInterfaceWrapper Defined in wrapperService.ts:82","title":"IntVoteInterface"},{"location":"api/interfaces/ArcWrapperFactories/#mintabletoken","text":"\u25cf MintableToken : IContractWrapperFactory MintableTokenWrapper Defined in wrapperService.ts:83","title":"MintableToken"},{"location":"api/interfaces/ArcWrapperFactories/#redeemer","text":"\u25cf Redeemer : IContractWrapperFactory RedeemerWrapper Defined in wrapperService.ts:84","title":"Redeemer"},{"location":"api/interfaces/ArcWrapperFactories/#reputation","text":"\u25cf Reputation : IContractWrapperFactory ReputationWrapper Defined in wrapperService.ts:85","title":"Reputation"},{"location":"api/interfaces/ArcWrapperFactories/#schemeregistrar","text":"\u25cf SchemeRegistrar : IContractWrapperFactory SchemeRegistrarWrapper Defined in wrapperService.ts:86","title":"SchemeRegistrar"},{"location":"api/interfaces/ArcWrapperFactories/#standardtoken","text":"\u25cf StandardToken : IContractWrapperFactory StandardTokenWrapper Defined in wrapperService.ts:87","title":"StandardToken"},{"location":"api/interfaces/ArcWrapperFactories/#tokencapgc","text":"\u25cf TokenCapGC : IContractWrapperFactory TokenCapGCWrapper Defined in wrapperService.ts:88","title":"TokenCapGC"},{"location":"api/interfaces/ArcWrapperFactories/#upgradescheme","text":"\u25cf UpgradeScheme : IContractWrapperFactory UpgradeSchemeWrapper Defined in wrapperService.ts:89","title":"UpgradeScheme"},{"location":"api/interfaces/ArcWrapperFactories/#vestingscheme","text":"\u25cf VestingScheme : IContractWrapperFactory VestingSchemeWrapper Defined in wrapperService.ts:90","title":"VestingScheme"},{"location":"api/interfaces/ArcWrapperFactories/#voteinorganizationscheme","text":"\u25cf VoteInOrganizationScheme : IContractWrapperFactory VoteInOrganizationSchemeWrapper Defined in wrapperService.ts:91","title":"VoteInOrganizationScheme"},{"location":"api/interfaces/ArcWrappers/","text":"API Reference ArcWrappers Interface: ArcWrappers An object with property names being a contract key and property value as the corresponding wrapper. Only deployed wrappers are included here. Other wrappers may be obtained via their factory. Properties AbsoluteVote \u25cf AbsoluteVote : AbsoluteVoteWrapper Defined in wrapperService.ts:100 ContributionReward \u25cf ContributionReward : ContributionRewardWrapper Defined in wrapperService.ts:101 DaoCreator \u25cf DaoCreator : DaoCreatorWrapper Defined in wrapperService.ts:102 GenesisProtocol \u25cf GenesisProtocol : GenesisProtocolWrapper Defined in wrapperService.ts:103 GlobalConstraintRegistrar \u25cf GlobalConstraintRegistrar : GlobalConstraintRegistrarWrapper Defined in wrapperService.ts:104 Redeemer \u25cf Redeemer : RedeemerWrapper Defined in wrapperService.ts:105 SchemeRegistrar \u25cf SchemeRegistrar : SchemeRegistrarWrapper Defined in wrapperService.ts:106 TokenCapGC \u25cf TokenCapGC : TokenCapGCWrapper Defined in wrapperService.ts:107 UpgradeScheme \u25cf UpgradeScheme : UpgradeSchemeWrapper Defined in wrapperService.ts:108 VestingScheme \u25cf VestingScheme : VestingSchemeWrapper Defined in wrapperService.ts:109 VoteInOrganizationScheme \u25cf VoteInOrganizationScheme : VoteInOrganizationSchemeWrapper Defined in wrapperService.ts:110","title":"ArcWrappers"},{"location":"api/interfaces/ArcWrappers/#interface-arcwrappers","text":"An object with property names being a contract key and property value as the corresponding wrapper. Only deployed wrappers are included here. Other wrappers may be obtained via their factory.","title":"Interface: ArcWrappers"},{"location":"api/interfaces/ArcWrappers/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ArcWrappers/#absolutevote","text":"\u25cf AbsoluteVote : AbsoluteVoteWrapper Defined in wrapperService.ts:100","title":"AbsoluteVote"},{"location":"api/interfaces/ArcWrappers/#contributionreward","text":"\u25cf ContributionReward : ContributionRewardWrapper Defined in wrapperService.ts:101","title":"ContributionReward"},{"location":"api/interfaces/ArcWrappers/#daocreator","text":"\u25cf DaoCreator : DaoCreatorWrapper Defined in wrapperService.ts:102","title":"DaoCreator"},{"location":"api/interfaces/ArcWrappers/#genesisprotocol","text":"\u25cf GenesisProtocol : GenesisProtocolWrapper Defined in wrapperService.ts:103","title":"GenesisProtocol"},{"location":"api/interfaces/ArcWrappers/#globalconstraintregistrar","text":"\u25cf GlobalConstraintRegistrar : GlobalConstraintRegistrarWrapper Defined in wrapperService.ts:104","title":"GlobalConstraintRegistrar"},{"location":"api/interfaces/ArcWrappers/#redeemer","text":"\u25cf Redeemer : RedeemerWrapper Defined in wrapperService.ts:105","title":"Redeemer"},{"location":"api/interfaces/ArcWrappers/#schemeregistrar","text":"\u25cf SchemeRegistrar : SchemeRegistrarWrapper Defined in wrapperService.ts:106","title":"SchemeRegistrar"},{"location":"api/interfaces/ArcWrappers/#tokencapgc","text":"\u25cf TokenCapGC : TokenCapGCWrapper Defined in wrapperService.ts:107","title":"TokenCapGC"},{"location":"api/interfaces/ArcWrappers/#upgradescheme","text":"\u25cf UpgradeScheme : UpgradeSchemeWrapper Defined in wrapperService.ts:108","title":"UpgradeScheme"},{"location":"api/interfaces/ArcWrappers/#vestingscheme","text":"\u25cf VestingScheme : VestingSchemeWrapper Defined in wrapperService.ts:109","title":"VestingScheme"},{"location":"api/interfaces/ArcWrappers/#voteinorganizationscheme","text":"\u25cf VoteInOrganizationScheme : VoteInOrganizationSchemeWrapper Defined in wrapperService.ts:110","title":"VoteInOrganizationScheme"},{"location":"api/interfaces/ArcWrappersByType/","text":"API Reference ArcWrappersByType Interface: ArcWrappersByType Arc.js wrapper factories grouped by type. Properties allWrappers \u25cf allWrappers : Array . IContractWrapper Defined in wrapperService.ts:120 All wrapped contracts globalConstraints \u25cf globalConstraints : Array . IContractWrapper Defined in wrapperService.ts:136 All wrapped global constraints nonUniversalSchemes \u25cf nonUniversalSchemes : Array . IContractWrapper Defined in wrapperService.ts:124 All wrapped non-universal schemes other \u25cf other : Array . IContractWrapper Defined in wrapperService.ts:140 Other types of wrappers universalSchemes \u25cf universalSchemes : Array . IUniversalSchemeWrapper Defined in wrapperService.ts:128 All wrapped universal schemes votingMachines \u25cf votingMachines : Array . IContractWrapper Defined in wrapperService.ts:132 All wrapped voting machines","title":"ArcWrappersByType"},{"location":"api/interfaces/ArcWrappersByType/#interface-arcwrappersbytype","text":"Arc.js wrapper factories grouped by type.","title":"Interface: ArcWrappersByType"},{"location":"api/interfaces/ArcWrappersByType/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ArcWrappersByType/#allwrappers","text":"\u25cf allWrappers : Array . IContractWrapper Defined in wrapperService.ts:120 All wrapped contracts","title":"allWrappers"},{"location":"api/interfaces/ArcWrappersByType/#globalconstraints","text":"\u25cf globalConstraints : Array . IContractWrapper Defined in wrapperService.ts:136 All wrapped global constraints","title":"globalConstraints"},{"location":"api/interfaces/ArcWrappersByType/#nonuniversalschemes","text":"\u25cf nonUniversalSchemes : Array . IContractWrapper Defined in wrapperService.ts:124 All wrapped non-universal schemes","title":"nonUniversalSchemes"},{"location":"api/interfaces/ArcWrappersByType/#other","text":"\u25cf other : Array . IContractWrapper Defined in wrapperService.ts:140 Other types of wrappers","title":"other"},{"location":"api/interfaces/ArcWrappersByType/#universalschemes","text":"\u25cf universalSchemes : Array . IUniversalSchemeWrapper Defined in wrapperService.ts:128 All wrapped universal schemes","title":"universalSchemes"},{"location":"api/interfaces/ArcWrappersByType/#votingmachines","text":"\u25cf votingMachines : Array . IContractWrapper Defined in wrapperService.ts:132 All wrapped voting machines","title":"votingMachines"},{"location":"api/interfaces/BurnEventResult/","text":"API Reference BurnEventResult Interface: BurnEventResult Properties burner \u25cf burner : Address Defined in wrappers/iBurnableToken.ts:31 Who burnt the tokens indexed value \u25cf value : BigNumber Defined in wrappers/iBurnableToken.ts:35 Amount burnt","title":"BurnEventResult"},{"location":"api/interfaces/BurnEventResult/#interface-burneventresult","text":"","title":"Interface: BurnEventResult"},{"location":"api/interfaces/BurnEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/BurnEventResult/#burner","text":"\u25cf burner : Address Defined in wrappers/iBurnableToken.ts:31 Who burnt the tokens indexed","title":"burner"},{"location":"api/interfaces/BurnEventResult/#value","text":"\u25cf value : BigNumber Defined in wrappers/iBurnableToken.ts:35 Amount burnt","title":"value"},{"location":"api/interfaces/BurnableTokenBurnOptions/","text":"API Reference BurnableTokenBurnOptions Interface: BurnableTokenBurnOptions Properties amount \u25cf amount : BigNumber Defined in wrappers/iBurnableToken.ts:23 Amount to burn","title":"BurnableTokenBurnOptions"},{"location":"api/interfaces/BurnableTokenBurnOptions/#interface-burnabletokenburnoptions","text":"","title":"Interface: BurnableTokenBurnOptions"},{"location":"api/interfaces/BurnableTokenBurnOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/BurnableTokenBurnOptions/#amount","text":"\u25cf amount : BigNumber Defined in wrappers/iBurnableToken.ts:23 Amount to burn","title":"amount"},{"location":"api/interfaces/CancelProposalEventResult/","text":"API Reference CancelProposalEventResult Interface: CancelProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:67 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:71 indexed","title":"CancelProposalEventResult"},{"location":"api/interfaces/CancelProposalEventResult/#interface-cancelproposaleventresult","text":"","title":"Interface: CancelProposalEventResult"},{"location":"api/interfaces/CancelProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/CancelProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:67 indexed","title":"_avatar"},{"location":"api/interfaces/CancelProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:71 indexed","title":"_proposalId"},{"location":"api/interfaces/CancelVotingEventResult/","text":"API Reference CancelVotingEventResult Interface: CancelVotingEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:78 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:82 indexed _voter \u25cf _voter : Address Defined in wrappers/iIntVoteInterface.ts:86 indexed","title":"CancelVotingEventResult"},{"location":"api/interfaces/CancelVotingEventResult/#interface-cancelvotingeventresult","text":"","title":"Interface: CancelVotingEventResult"},{"location":"api/interfaces/CancelVotingEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/CancelVotingEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:78 indexed","title":"_avatar"},{"location":"api/interfaces/CancelVotingEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:82 indexed","title":"_proposalId"},{"location":"api/interfaces/CancelVotingEventResult/#_voter","text":"\u25cf _voter : Address Defined in wrappers/iIntVoteInterface.ts:86 indexed","title":"_voter"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/","text":"API Reference ChangeApprovalAndCallOptions Interface: ChangeApprovalAndCallOptions Hierarchy StandardTokenChangeApprovalOptions \u21b3 ChangeApprovalAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Inherited from StandardTokenChangeApprovalOptions . amount Defined in wrappers/standardToken.ts:308 callData \u25cf callData : string Defined in wrappers/iErc827Token.ts:68 \u00abOptional\u00bb owner \u25cf owner : Address Inherited from StandardTokenChangeApprovalOptions . owner Defined in wrappers/standardToken.ts:313 The account that has the tokens to spend. Default is msg.sender. spender \u25cf spender : Address Inherited from StandardTokenChangeApprovalOptions . spender Defined in wrappers/standardToken.ts:318 The account that will initiate the transfer of tokens on behalf of the owner.","title":"ChangeApprovalAndCallOptions"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/#interface-changeapprovalandcalloptions","text":"","title":"Interface: ChangeApprovalAndCallOptions"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/#hierarchy","text":"StandardTokenChangeApprovalOptions \u21b3 ChangeApprovalAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Inherited from StandardTokenChangeApprovalOptions . amount Defined in wrappers/standardToken.ts:308","title":"amount"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/#calldata","text":"\u25cf callData : string Defined in wrappers/iErc827Token.ts:68","title":"callData"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/#optional-owner","text":"\u25cf owner : Address Inherited from StandardTokenChangeApprovalOptions . owner Defined in wrappers/standardToken.ts:313 The account that has the tokens to spend. Default is msg.sender.","title":"\u00abOptional\u00bb owner"},{"location":"api/interfaces/ChangeApprovalAndCallOptions/#spender","text":"\u25cf spender : Address Inherited from StandardTokenChangeApprovalOptions . spender Defined in wrappers/standardToken.ts:318 The account that will initiate the transfer of tokens on behalf of the owner.","title":"spender"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/","text":"API Reference ChangeUpgradeSchemeProposalEventResult Interface: ChangeUpgradeSchemeProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/upgradeScheme.ts:248 indexed _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/upgradeScheme.ts:252 indexed _newUpgradeScheme \u25cf _newUpgradeScheme : Address Defined in wrappers/upgradeScheme.ts:258 _params \u25cf _params : Hash Defined in wrappers/upgradeScheme.ts:253 _proposalId \u25cf _proposalId : Hash Defined in wrappers/upgradeScheme.ts:257 indexed","title":"ChangeUpgradeSchemeProposalEventResult"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/#interface-changeupgradeschemeproposaleventresult","text":"","title":"Interface: ChangeUpgradeSchemeProposalEventResult"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/upgradeScheme.ts:248 indexed","title":"_avatar"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/upgradeScheme.ts:252 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_newupgradescheme","text":"\u25cf _newUpgradeScheme : Address Defined in wrappers/upgradeScheme.ts:258","title":"_newUpgradeScheme"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_params","text":"\u25cf _params : Hash Defined in wrappers/upgradeScheme.ts:253","title":"_params"},{"location":"api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/upgradeScheme.ts:257 indexed","title":"_proposalId"},{"location":"api/interfaces/CollectEventResult/","text":"API Reference CollectEventResult Interface: CollectEventResult Properties _agreementId \u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:507 indexed","title":"CollectEventResult"},{"location":"api/interfaces/CollectEventResult/#interface-collecteventresult","text":"","title":"Interface: CollectEventResult"},{"location":"api/interfaces/CollectEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/CollectEventResult/#_agreementid","text":"\u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:507 indexed","title":"_agreementId"},{"location":"api/interfaces/CollectVestingAgreementConfig/","text":"API Reference CollectVestingAgreementConfig Interface: CollectVestingAgreementConfig Properties agreementId \u25cf agreementId : number Defined in wrappers/vestingScheme.ts:593 the agreementId","title":"CollectVestingAgreementConfig"},{"location":"api/interfaces/CollectVestingAgreementConfig/#interface-collectvestingagreementconfig","text":"","title":"Interface: CollectVestingAgreementConfig"},{"location":"api/interfaces/CollectVestingAgreementConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/CollectVestingAgreementConfig/#agreementid","text":"\u25cf agreementId : number Defined in wrappers/vestingScheme.ts:593 the agreementId","title":"agreementId"},{"location":"api/interfaces/CommonVestingAgreementConfig/","text":"API Reference CommonVestingAgreementConfig Interface: CommonVestingAgreementConfig Hierarchy CommonVestingAgreementConfig \u21b3 CreateVestingAgreementConfig \u21b3 ProposeVestingAgreementConfig Properties amountPerPeriod \u25cf amountPerPeriod : BigNumber.BigNumber \u23ae string Defined in wrappers/vestingScheme.ts:531 The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero. beneficiaryAddress \u25cf beneficiaryAddress : Address Defined in wrappers/vestingScheme.ts:514 Address of the recipient of the proposed agreement. cliffInPeriods \u25cf cliffInPeriods : number Defined in wrappers/vestingScheme.ts:547 The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero. numOfAgreedPeriods \u25cf numOfAgreedPeriods : number Defined in wrappers/vestingScheme.ts:541 maximum number of periods that can be paid out. Must be greater than zero. periodLength \u25cf periodLength : number Defined in wrappers/vestingScheme.ts:536 number of blocks in a period. Must be greater than zero. returnOnCancelAddress \u25cf returnOnCancelAddress : Address Defined in wrappers/vestingScheme.ts:518 Where to send the tokens in case of cancellation signaturesReqToCancel \u25cf signaturesReqToCancel : number Defined in wrappers/vestingScheme.ts:552 The number of signatures required to cancel agreement. See signToCancel. signers \u25cf signers : Array . Address Defined in wrappers/vestingScheme.ts:557 An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel. \u00abOptional\u00bb startingBlock \u25cf startingBlock : number Defined in wrappers/vestingScheme.ts:524 Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.","title":"CommonVestingAgreementConfig"},{"location":"api/interfaces/CommonVestingAgreementConfig/#interface-commonvestingagreementconfig","text":"","title":"Interface: CommonVestingAgreementConfig"},{"location":"api/interfaces/CommonVestingAgreementConfig/#hierarchy","text":"CommonVestingAgreementConfig \u21b3 CreateVestingAgreementConfig \u21b3 ProposeVestingAgreementConfig","title":"Hierarchy"},{"location":"api/interfaces/CommonVestingAgreementConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/CommonVestingAgreementConfig/#amountperperiod","text":"\u25cf amountPerPeriod : BigNumber.BigNumber \u23ae string Defined in wrappers/vestingScheme.ts:531 The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.","title":"amountPerPeriod"},{"location":"api/interfaces/CommonVestingAgreementConfig/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Defined in wrappers/vestingScheme.ts:514 Address of the recipient of the proposed agreement.","title":"beneficiaryAddress"},{"location":"api/interfaces/CommonVestingAgreementConfig/#cliffinperiods","text":"\u25cf cliffInPeriods : number Defined in wrappers/vestingScheme.ts:547 The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.","title":"cliffInPeriods"},{"location":"api/interfaces/CommonVestingAgreementConfig/#numofagreedperiods","text":"\u25cf numOfAgreedPeriods : number Defined in wrappers/vestingScheme.ts:541 maximum number of periods that can be paid out. Must be greater than zero.","title":"numOfAgreedPeriods"},{"location":"api/interfaces/CommonVestingAgreementConfig/#periodlength","text":"\u25cf periodLength : number Defined in wrappers/vestingScheme.ts:536 number of blocks in a period. Must be greater than zero.","title":"periodLength"},{"location":"api/interfaces/CommonVestingAgreementConfig/#returnoncanceladdress","text":"\u25cf returnOnCancelAddress : Address Defined in wrappers/vestingScheme.ts:518 Where to send the tokens in case of cancellation","title":"returnOnCancelAddress"},{"location":"api/interfaces/CommonVestingAgreementConfig/#signaturesreqtocancel","text":"\u25cf signaturesReqToCancel : number Defined in wrappers/vestingScheme.ts:552 The number of signatures required to cancel agreement. See signToCancel.","title":"signaturesReqToCancel"},{"location":"api/interfaces/CommonVestingAgreementConfig/#signers","text":"\u25cf signers : Array . Address Defined in wrappers/vestingScheme.ts:557 An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.","title":"signers"},{"location":"api/interfaces/CommonVestingAgreementConfig/#optional-startingblock","text":"\u25cf startingBlock : number Defined in wrappers/vestingScheme.ts:524 Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.","title":"\u00abOptional\u00bb startingBlock"},{"location":"api/interfaces/ContributionProposal/","text":"API Reference ContributionProposal Interface: ContributionProposal Properties beneficiaryAddress \u25cf beneficiaryAddress : Address Defined in wrappers/contributionReward.ts:590 contributionDescriptionHash \u25cf contributionDescriptionHash : Hash Defined in wrappers/contributionReward.ts:591 ethReward \u25cf ethReward : BigNumber Defined in wrappers/contributionReward.ts:592 executionTime \u25cf executionTime : number Defined in wrappers/contributionReward.ts:593 externalToken \u25cf externalToken : Address Defined in wrappers/contributionReward.ts:594 externalTokenReward \u25cf externalTokenReward : BigNumber Defined in wrappers/contributionReward.ts:595 nativeTokenReward \u25cf nativeTokenReward : BigNumber Defined in wrappers/contributionReward.ts:596 numberOfPeriods \u25cf numberOfPeriods : number Defined in wrappers/contributionReward.ts:597 periodLength \u25cf periodLength : number Defined in wrappers/contributionReward.ts:598 proposalId \u25cf proposalId : Hash Defined in wrappers/contributionReward.ts:589 reputationChange \u25cf reputationChange : BigNumber Defined in wrappers/contributionReward.ts:599","title":"ContributionProposal"},{"location":"api/interfaces/ContributionProposal/#interface-contributionproposal","text":"","title":"Interface: ContributionProposal"},{"location":"api/interfaces/ContributionProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ContributionProposal/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Defined in wrappers/contributionReward.ts:590","title":"beneficiaryAddress"},{"location":"api/interfaces/ContributionProposal/#contributiondescriptionhash","text":"\u25cf contributionDescriptionHash : Hash Defined in wrappers/contributionReward.ts:591","title":"contributionDescriptionHash"},{"location":"api/interfaces/ContributionProposal/#ethreward","text":"\u25cf ethReward : BigNumber Defined in wrappers/contributionReward.ts:592","title":"ethReward"},{"location":"api/interfaces/ContributionProposal/#executiontime","text":"\u25cf executionTime : number Defined in wrappers/contributionReward.ts:593","title":"executionTime"},{"location":"api/interfaces/ContributionProposal/#externaltoken","text":"\u25cf externalToken : Address Defined in wrappers/contributionReward.ts:594","title":"externalToken"},{"location":"api/interfaces/ContributionProposal/#externaltokenreward","text":"\u25cf externalTokenReward : BigNumber Defined in wrappers/contributionReward.ts:595","title":"externalTokenReward"},{"location":"api/interfaces/ContributionProposal/#nativetokenreward","text":"\u25cf nativeTokenReward : BigNumber Defined in wrappers/contributionReward.ts:596","title":"nativeTokenReward"},{"location":"api/interfaces/ContributionProposal/#numberofperiods","text":"\u25cf numberOfPeriods : number Defined in wrappers/contributionReward.ts:597","title":"numberOfPeriods"},{"location":"api/interfaces/ContributionProposal/#periodlength","text":"\u25cf periodLength : number Defined in wrappers/contributionReward.ts:598","title":"periodLength"},{"location":"api/interfaces/ContributionProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/contributionReward.ts:589","title":"proposalId"},{"location":"api/interfaces/ContributionProposal/#reputationchange","text":"\u25cf reputationChange : BigNumber Defined in wrappers/contributionReward.ts:599","title":"reputationChange"},{"location":"api/interfaces/ContributionRewardParams/","text":"API Reference ContributionRewardParams Interface: ContributionRewardParams Hierarchy StandardSchemeParams \u21b3 ContributionRewardParams Properties orgNativeTokenFee \u25cf orgNativeTokenFee : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:666 voteParametersHash \u25cf voteParametersHash : Hash Inherited from StandardSchemeParams . voteParametersHash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal. votingMachineAddress \u25cf votingMachineAddress : Address Inherited from StandardSchemeParams . votingMachineAddress Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"ContributionRewardParams"},{"location":"api/interfaces/ContributionRewardParams/#interface-contributionrewardparams","text":"","title":"Interface: ContributionRewardParams"},{"location":"api/interfaces/ContributionRewardParams/#hierarchy","text":"StandardSchemeParams \u21b3 ContributionRewardParams","title":"Hierarchy"},{"location":"api/interfaces/ContributionRewardParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ContributionRewardParams/#orgnativetokenfee","text":"\u25cf orgNativeTokenFee : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:666","title":"orgNativeTokenFee"},{"location":"api/interfaces/ContributionRewardParams/#voteparametershash","text":"\u25cf voteParametersHash : Hash Inherited from StandardSchemeParams . voteParametersHash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal.","title":"voteParametersHash"},{"location":"api/interfaces/ContributionRewardParams/#votingmachineaddress","text":"\u25cf votingMachineAddress : Address Inherited from StandardSchemeParams . votingMachineAddress Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"votingMachineAddress"},{"location":"api/interfaces/ContributionRewardParamsReturn/","text":"API Reference ContributionRewardParamsReturn Interface: ContributionRewardParamsReturn Hierarchy StandardSchemeParams \u21b3 ContributionRewardParamsReturn Properties orgNativeTokenFee \u25cf orgNativeTokenFee : BigNumber Defined in wrappers/contributionReward.ts:670 voteParametersHash \u25cf voteParametersHash : Hash Inherited from StandardSchemeParams . voteParametersHash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal. votingMachineAddress \u25cf votingMachineAddress : Address Inherited from StandardSchemeParams . votingMachineAddress Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"ContributionRewardParamsReturn"},{"location":"api/interfaces/ContributionRewardParamsReturn/#interface-contributionrewardparamsreturn","text":"","title":"Interface: ContributionRewardParamsReturn"},{"location":"api/interfaces/ContributionRewardParamsReturn/#hierarchy","text":"StandardSchemeParams \u21b3 ContributionRewardParamsReturn","title":"Hierarchy"},{"location":"api/interfaces/ContributionRewardParamsReturn/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ContributionRewardParamsReturn/#orgnativetokenfee","text":"\u25cf orgNativeTokenFee : BigNumber Defined in wrappers/contributionReward.ts:670","title":"orgNativeTokenFee"},{"location":"api/interfaces/ContributionRewardParamsReturn/#voteparametershash","text":"\u25cf voteParametersHash : Hash Inherited from StandardSchemeParams . voteParametersHash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal.","title":"voteParametersHash"},{"location":"api/interfaces/ContributionRewardParamsReturn/#votingmachineaddress","text":"\u25cf votingMachineAddress : Address Inherited from StandardSchemeParams . votingMachineAddress Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"votingMachineAddress"},{"location":"api/interfaces/ContributionRewardRedeemParams/","text":"API Reference ContributionRewardRedeemParams Interface: ContributionRewardRedeemParams Properties avatar \u25cf avatar : Address Defined in wrappers/contributionReward.ts:761 The avatar under which the proposal was made \u00abOptional\u00bb ethers \u25cf ethers : boolean Defined in wrappers/contributionReward.ts:776 true to reward ethers Default is false \u00abOptional\u00bb externalTokens \u25cf externalTokens : boolean Defined in wrappers/contributionReward.ts:781 true to reward external tokens Default is false \u00abOptional\u00bb nativeTokens \u25cf nativeTokens : boolean Defined in wrappers/contributionReward.ts:771 true to reward native tokens Default is false proposalId \u25cf proposalId : string Defined in wrappers/contributionReward.ts:757 The reward proposal \u00abOptional\u00bb reputation \u25cf reputation : boolean Defined in wrappers/contributionReward.ts:766 true to credit/debit reputation Default is false","title":"ContributionRewardRedeemParams"},{"location":"api/interfaces/ContributionRewardRedeemParams/#interface-contributionrewardredeemparams","text":"","title":"Interface: ContributionRewardRedeemParams"},{"location":"api/interfaces/ContributionRewardRedeemParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ContributionRewardRedeemParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/contributionReward.ts:761 The avatar under which the proposal was made","title":"avatar"},{"location":"api/interfaces/ContributionRewardRedeemParams/#optional-ethers","text":"\u25cf ethers : boolean Defined in wrappers/contributionReward.ts:776 true to reward ethers Default is false","title":"\u00abOptional\u00bb ethers"},{"location":"api/interfaces/ContributionRewardRedeemParams/#optional-externaltokens","text":"\u25cf externalTokens : boolean Defined in wrappers/contributionReward.ts:781 true to reward external tokens Default is false","title":"\u00abOptional\u00bb externalTokens"},{"location":"api/interfaces/ContributionRewardRedeemParams/#optional-nativetokens","text":"\u25cf nativeTokens : boolean Defined in wrappers/contributionReward.ts:771 true to reward native tokens Default is false","title":"\u00abOptional\u00bb nativeTokens"},{"location":"api/interfaces/ContributionRewardRedeemParams/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/contributionReward.ts:757 The reward proposal","title":"proposalId"},{"location":"api/interfaces/ContributionRewardRedeemParams/#optional-reputation","text":"\u25cf reputation : boolean Defined in wrappers/contributionReward.ts:766 true to credit/debit reputation Default is false","title":"\u00abOptional\u00bb reputation"},{"location":"api/interfaces/ContributionRewardSpecifiedRedemptionParams/","text":"API Reference ContributionRewardSpecifiedRedemptionParams Interface: ContributionRewardSpecifiedRedemptionParams Properties avatar \u25cf avatar : Address Defined in wrappers/contributionReward.ts:677 The avatar under which the proposal was made proposalId \u25cf proposalId : string Defined in wrappers/contributionReward.ts:681 The reward proposal","title":"ContributionRewardSpecifiedRedemptionParams"},{"location":"api/interfaces/ContributionRewardSpecifiedRedemptionParams/#interface-contributionrewardspecifiedredemptionparams","text":"","title":"Interface: ContributionRewardSpecifiedRedemptionParams"},{"location":"api/interfaces/ContributionRewardSpecifiedRedemptionParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ContributionRewardSpecifiedRedemptionParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/contributionReward.ts:677 The avatar under which the proposal was made","title":"avatar"},{"location":"api/interfaces/ContributionRewardSpecifiedRedemptionParams/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/contributionReward.ts:681 The reward proposal","title":"proposalId"},{"location":"api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/","text":"API Reference ControllerAddGlobalConstraintsEventLogEntry Interface: ControllerAddGlobalConstraintsEventLogEntry Properties _globalConstraint \u25cf _globalConstraint : Address Defined in dao.ts:425 _params \u25cf _params : Hash Defined in dao.ts:426","title":"ControllerAddGlobalConstraintsEventLogEntry"},{"location":"api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#interface-controlleraddglobalconstraintseventlogentry","text":"","title":"Interface: ControllerAddGlobalConstraintsEventLogEntry"},{"location":"api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#_globalconstraint","text":"\u25cf _globalConstraint : Address Defined in dao.ts:425","title":"_globalConstraint"},{"location":"api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#_params","text":"\u25cf _params : Hash Defined in dao.ts:426","title":"_params"},{"location":"api/interfaces/ControllerRegisterSchemeEventLogEntry/","text":"API Reference ControllerRegisterSchemeEventLogEntry Interface: ControllerRegisterSchemeEventLogEntry Properties _scheme \u25cf _scheme : Address Defined in dao.ts:430","title":"ControllerRegisterSchemeEventLogEntry"},{"location":"api/interfaces/ControllerRegisterSchemeEventLogEntry/#interface-controllerregisterschemeeventlogentry","text":"","title":"Interface: ControllerRegisterSchemeEventLogEntry"},{"location":"api/interfaces/ControllerRegisterSchemeEventLogEntry/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ControllerRegisterSchemeEventLogEntry/#_scheme","text":"\u25cf _scheme : Address Defined in dao.ts:430","title":"_scheme"},{"location":"api/interfaces/CreateVestingAgreementConfig/","text":"API Reference CreateVestingAgreementConfig Interface: CreateVestingAgreementConfig Hierarchy CommonVestingAgreementConfig \u21b3 CreateVestingAgreementConfig Properties amountPerPeriod \u25cf amountPerPeriod : BigNumber.BigNumber \u23ae string Inherited from CommonVestingAgreementConfig . amountPerPeriod Defined in wrappers/vestingScheme.ts:531 The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero. beneficiaryAddress \u25cf beneficiaryAddress : Address Inherited from CommonVestingAgreementConfig . beneficiaryAddress Defined in wrappers/vestingScheme.ts:514 Address of the recipient of the proposed agreement. cliffInPeriods \u25cf cliffInPeriods : number Inherited from CommonVestingAgreementConfig . cliffInPeriods Defined in wrappers/vestingScheme.ts:547 The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero. numOfAgreedPeriods \u25cf numOfAgreedPeriods : number Inherited from CommonVestingAgreementConfig . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:541 maximum number of periods that can be paid out. Must be greater than zero. periodLength \u25cf periodLength : number Inherited from CommonVestingAgreementConfig . periodLength Defined in wrappers/vestingScheme.ts:536 number of blocks in a period. Must be greater than zero. returnOnCancelAddress \u25cf returnOnCancelAddress : Address Inherited from CommonVestingAgreementConfig . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:518 Where to send the tokens in case of cancellation signaturesReqToCancel \u25cf signaturesReqToCancel : number Inherited from CommonVestingAgreementConfig . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:552 The number of signatures required to cancel agreement. See signToCancel. signers \u25cf signers : Array . Address Inherited from CommonVestingAgreementConfig . signers Defined in wrappers/vestingScheme.ts:557 An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel. \u00abOptional\u00bb startingBlock \u25cf startingBlock : number Inherited from CommonVestingAgreementConfig . startingBlock Defined in wrappers/vestingScheme.ts:524 Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero. token \u25cf token : string Defined in wrappers/vestingScheme.ts:565 The address of the token that will be used to pay for the creation of the agreement. The caller (msg.Sender) must have the funds to pay in that token.","title":"CreateVestingAgreementConfig"},{"location":"api/interfaces/CreateVestingAgreementConfig/#interface-createvestingagreementconfig","text":"","title":"Interface: CreateVestingAgreementConfig"},{"location":"api/interfaces/CreateVestingAgreementConfig/#hierarchy","text":"CommonVestingAgreementConfig \u21b3 CreateVestingAgreementConfig","title":"Hierarchy"},{"location":"api/interfaces/CreateVestingAgreementConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/CreateVestingAgreementConfig/#amountperperiod","text":"\u25cf amountPerPeriod : BigNumber.BigNumber \u23ae string Inherited from CommonVestingAgreementConfig . amountPerPeriod Defined in wrappers/vestingScheme.ts:531 The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.","title":"amountPerPeriod"},{"location":"api/interfaces/CreateVestingAgreementConfig/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Inherited from CommonVestingAgreementConfig . beneficiaryAddress Defined in wrappers/vestingScheme.ts:514 Address of the recipient of the proposed agreement.","title":"beneficiaryAddress"},{"location":"api/interfaces/CreateVestingAgreementConfig/#cliffinperiods","text":"\u25cf cliffInPeriods : number Inherited from CommonVestingAgreementConfig . cliffInPeriods Defined in wrappers/vestingScheme.ts:547 The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.","title":"cliffInPeriods"},{"location":"api/interfaces/CreateVestingAgreementConfig/#numofagreedperiods","text":"\u25cf numOfAgreedPeriods : number Inherited from CommonVestingAgreementConfig . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:541 maximum number of periods that can be paid out. Must be greater than zero.","title":"numOfAgreedPeriods"},{"location":"api/interfaces/CreateVestingAgreementConfig/#periodlength","text":"\u25cf periodLength : number Inherited from CommonVestingAgreementConfig . periodLength Defined in wrappers/vestingScheme.ts:536 number of blocks in a period. Must be greater than zero.","title":"periodLength"},{"location":"api/interfaces/CreateVestingAgreementConfig/#returnoncanceladdress","text":"\u25cf returnOnCancelAddress : Address Inherited from CommonVestingAgreementConfig . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:518 Where to send the tokens in case of cancellation","title":"returnOnCancelAddress"},{"location":"api/interfaces/CreateVestingAgreementConfig/#signaturesreqtocancel","text":"\u25cf signaturesReqToCancel : number Inherited from CommonVestingAgreementConfig . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:552 The number of signatures required to cancel agreement. See signToCancel.","title":"signaturesReqToCancel"},{"location":"api/interfaces/CreateVestingAgreementConfig/#signers","text":"\u25cf signers : Array . Address Inherited from CommonVestingAgreementConfig . signers Defined in wrappers/vestingScheme.ts:557 An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.","title":"signers"},{"location":"api/interfaces/CreateVestingAgreementConfig/#optional-startingblock","text":"\u25cf startingBlock : number Inherited from CommonVestingAgreementConfig . startingBlock Defined in wrappers/vestingScheme.ts:524 Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.","title":"\u00abOptional\u00bb startingBlock"},{"location":"api/interfaces/CreateVestingAgreementConfig/#token","text":"\u25cf token : string Defined in wrappers/vestingScheme.ts:565 The address of the token that will be used to pay for the creation of the agreement. The caller (msg.Sender) must have the funds to pay in that token.","title":"token"},{"location":"api/interfaces/DaoGlobalConstraintInfo/","text":"API Reference DaoGlobalConstraintInfo Interface: DaoGlobalConstraintInfo Returned from DAO.getGlobalConstraints Properties address \u25cf address : string Defined in dao.ts:413 Global constraint address paramsHash \u25cf paramsHash : string Defined in dao.ts:417 hash of the constraint parameters wrapper \u25cf wrapper : IContractWrapper Defined in dao.ts:421 Wrapper class for the constraint if it was deployed by the running version of Arc.js","title":"DaoGlobalConstraintInfo"},{"location":"api/interfaces/DaoGlobalConstraintInfo/#interface-daoglobalconstraintinfo","text":"Returned from DAO.getGlobalConstraints","title":"Interface: DaoGlobalConstraintInfo"},{"location":"api/interfaces/DaoGlobalConstraintInfo/#properties","text":"","title":"Properties"},{"location":"api/interfaces/DaoGlobalConstraintInfo/#address","text":"\u25cf address : string Defined in dao.ts:413 Global constraint address","title":"address"},{"location":"api/interfaces/DaoGlobalConstraintInfo/#paramshash","text":"\u25cf paramsHash : string Defined in dao.ts:417 hash of the constraint parameters","title":"paramsHash"},{"location":"api/interfaces/DaoGlobalConstraintInfo/#wrapper","text":"\u25cf wrapper : IContractWrapper Defined in dao.ts:421 Wrapper class for the constraint if it was deployed by the running version of Arc.js","title":"wrapper"},{"location":"api/interfaces/DaoSchemeInfo/","text":"API Reference DaoSchemeInfo Interface: DaoSchemeInfo Returned from DAO.getSchemes Properties address \u25cf address : string Defined in dao.ts:399 Scheme address \u00abOptional\u00bb wrapper \u25cf wrapper : IContractWrapper Defined in dao.ts:403 Wrapper class for the scheme if it was deployed by the running version of Arc.js","title":"DaoSchemeInfo"},{"location":"api/interfaces/DaoSchemeInfo/#interface-daoschemeinfo","text":"Returned from DAO.getSchemes","title":"Interface: DaoSchemeInfo"},{"location":"api/interfaces/DaoSchemeInfo/#properties","text":"","title":"Properties"},{"location":"api/interfaces/DaoSchemeInfo/#address","text":"\u25cf address : string Defined in dao.ts:399 Scheme address","title":"address"},{"location":"api/interfaces/DaoSchemeInfo/#optional-wrapper","text":"\u25cf wrapper : IContractWrapper Defined in dao.ts:403 Wrapper class for the scheme if it was deployed by the running version of Arc.js","title":"\u00abOptional\u00bb wrapper"},{"location":"api/interfaces/DaoTokenBurnOptions/","text":"API Reference DaoTokenBurnOptions Interface: DaoTokenBurnOptions Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/daoToken.ts:379 Amount to burn","title":"DaoTokenBurnOptions"},{"location":"api/interfaces/DaoTokenBurnOptions/#interface-daotokenburnoptions","text":"","title":"Interface: DaoTokenBurnOptions"},{"location":"api/interfaces/DaoTokenBurnOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/DaoTokenBurnOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/daoToken.ts:379 Amount to burn","title":"amount"},{"location":"api/interfaces/DaoTokenMintOptions/","text":"API Reference DaoTokenMintOptions Interface: DaoTokenMintOptions Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/daoToken.ts:372 Amount to mint recipient \u25cf recipient : Address Defined in wrappers/daoToken.ts:368 The token recipient","title":"DaoTokenMintOptions"},{"location":"api/interfaces/DaoTokenMintOptions/#interface-daotokenmintoptions","text":"","title":"Interface: DaoTokenMintOptions"},{"location":"api/interfaces/DaoTokenMintOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/DaoTokenMintOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/daoToken.ts:372 Amount to mint","title":"amount"},{"location":"api/interfaces/DaoTokenMintOptions/#recipient","text":"\u25cf recipient : Address Defined in wrappers/daoToken.ts:368 The token recipient","title":"recipient"},{"location":"api/interfaces/EntityFetcher/","text":"API Reference EntityFetcher Interface: EntityFetcher Returned by EntityFetcherFactory . Type parameters TDest TSrc Properties get \u25cf get : function Defined in web3EventService.ts:434 Get an array of TDest from Web3, given the filter supplied to the EntityFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of get . If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Type declaration \u25ba(callback?: EntityGetCallback TDest , requiredDepth?: number ): Promise . Array . TDest Parameters: Param Type Description callback EntityGetCallback TDest - requiredDepth number - Returns: Promise . Array . TDest subscribe \u25cf subscribe : function Defined in web3EventService.ts:453 Watch for TDest s from Web3, given the filter supplied to the EntityFetcherFactory. The Pub.Sub is published once per event firing. subscribe returns the subscription on which you must remember to call unsubscribe when you are done watching. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Supply whatever name you want for eventName . This enables you to scope event handlers across event types and schemes. Type declaration \u25ba(eventName: string , callback?: EntityWatchSubscriptionCallback TDest , requiredDepth?: number ): IEventSubscription Parameters: Param Type Description eventName string - callback EntityWatchSubscriptionCallback TDest - requiredDepth number - Returns: IEventSubscription watch \u25cf watch : function Defined in web3EventService.ts:441 Watch for TDest s from Web3, given the filter supplied to the EntityFetcherFactory. The callback is invoked once per event firing. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Type declaration \u25ba(callback: EntityWatchCallback TDest , requiredDepth?: number ): void Parameters: Param Type Description callback EntityWatchCallback TDest - requiredDepth number - Returns: void Methods stopWatching \u25ba stopWatching (callback?: fnVoid ): void Defined in web3EventService.ts:460 Stop watching the event. Parameters: Param Type Description callback fnVoid - Returns: void stopWatchingAsync \u25ba stopWatchingAsync (): Promise . void Defined in web3EventService.ts:465 Asynchronously stop watching the event, for environments where synchronous methods are not allowed. Returns: Promise . void","title":"EntityFetcher"},{"location":"api/interfaces/EntityFetcher/#interface-entityfetcher","text":"Returned by EntityFetcherFactory .","title":"Interface: EntityFetcher"},{"location":"api/interfaces/EntityFetcher/#type-parameters","text":"","title":"Type parameters"},{"location":"api/interfaces/EntityFetcher/#tdest","text":"","title":"TDest"},{"location":"api/interfaces/EntityFetcher/#tsrc","text":"","title":"TSrc"},{"location":"api/interfaces/EntityFetcher/#properties","text":"","title":"Properties"},{"location":"api/interfaces/EntityFetcher/#get","text":"\u25cf get : function Defined in web3EventService.ts:434 Get an array of TDest from Web3, given the filter supplied to the EntityFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of get . If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth.","title":"get"},{"location":"api/interfaces/EntityFetcher/#type-declaration","text":"\u25ba(callback?: EntityGetCallback TDest , requiredDepth?: number ): Promise . Array . TDest Parameters: Param Type Description callback EntityGetCallback TDest - requiredDepth number - Returns: Promise . Array . TDest","title":"Type declaration"},{"location":"api/interfaces/EntityFetcher/#subscribe","text":"\u25cf subscribe : function Defined in web3EventService.ts:453 Watch for TDest s from Web3, given the filter supplied to the EntityFetcherFactory. The Pub.Sub is published once per event firing. subscribe returns the subscription on which you must remember to call unsubscribe when you are done watching. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Supply whatever name you want for eventName . This enables you to scope event handlers across event types and schemes.","title":"subscribe"},{"location":"api/interfaces/EntityFetcher/#type-declaration_1","text":"\u25ba(eventName: string , callback?: EntityWatchSubscriptionCallback TDest , requiredDepth?: number ): IEventSubscription Parameters: Param Type Description eventName string - callback EntityWatchSubscriptionCallback TDest - requiredDepth number - Returns: IEventSubscription","title":"Type declaration"},{"location":"api/interfaces/EntityFetcher/#watch","text":"\u25cf watch : function Defined in web3EventService.ts:441 Watch for TDest s from Web3, given the filter supplied to the EntityFetcherFactory. The callback is invoked once per event firing. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth.","title":"watch"},{"location":"api/interfaces/EntityFetcher/#type-declaration_2","text":"\u25ba(callback: EntityWatchCallback TDest , requiredDepth?: number ): void Parameters: Param Type Description callback EntityWatchCallback TDest - requiredDepth number - Returns: void","title":"Type declaration"},{"location":"api/interfaces/EntityFetcher/#methods","text":"","title":"Methods"},{"location":"api/interfaces/EntityFetcher/#stopwatching","text":"\u25ba stopWatching (callback?: fnVoid ): void Defined in web3EventService.ts:460 Stop watching the event. Parameters: Param Type Description callback fnVoid - Returns: void","title":"stopWatching"},{"location":"api/interfaces/EntityFetcher/#stopwatchingasync","text":"\u25ba stopWatchingAsync (): Promise . void Defined in web3EventService.ts:465 Asynchronously stop watching the event, for environments where synchronous methods are not allowed. Returns: Promise . void","title":"stopWatchingAsync"},{"location":"api/interfaces/EventFetcher/","text":"API Reference EventFetcher Interface: EventFetcher Returned by EventFetcherFactory . See web3 documentation article for more information about events: https://github.com/ethereum/wiki/wiki/JavaScript-API#contract-events type : TEventArgs The type of the args object. Type parameters TEventArgs Properties get \u25cf get : function Defined in web3EventService.ts:519 Get an array of DecodedLogEntryEvent from Web3, given the filter supplied to the EventFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of get . If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Type declaration \u25ba(callback?: EventGetCallback TEventArgs , requiredDepth?: number ): Promise . Array . DecodedLogEntryEvent . TEventArgs Parameters: Param Type Description callback EventGetCallback TEventArgs - requiredDepth number - Returns: Promise . Array . DecodedLogEntryEvent . TEventArgs subscribe \u25cf subscribe : function Defined in web3EventService.ts:540 Watch for DecodedLogEntryEvent s from Web3, given the filter supplied to the EventFetcherFactory. The Pub.Sub is published once per event firing. subscribe returns the subscription on which you must remember to call unsubscribe when you are done watching. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Supply whatever name you want for eventName . This enables you to scope event handlers across event types and schemes. Type declaration \u25ba(eventName: string , callback?: EventWatchSubscriptionCallback TEventArgs , requiredDepth?: number ): IEventSubscription Parameters: Param Type Description eventName string - callback EventWatchSubscriptionCallback TEventArgs - requiredDepth number - Returns: IEventSubscription watch \u25cf watch : function Defined in web3EventService.ts:528 Watch for DecodedLogEntryEvent s from Web3, given the filter supplied to the EventFetcherFactory. The callback is invoked once per event firing. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Type declaration \u25ba(callback: EventWatchCallback TEventArgs , requiredDepth?: number ): void Parameters: Param Type Description callback EventWatchCallback TEventArgs - requiredDepth number - Returns: void Methods stopWatching \u25ba stopWatching (callback?: fnVoid ): void Defined in web3EventService.ts:547 Stop watching the event. Parameters: Param Type Description callback fnVoid - Returns: void stopWatchingAsync \u25ba stopWatchingAsync (): Promise . void Defined in web3EventService.ts:552 Asynchronously stop watching the event, for environments where synchronous methods are not allowed. Returns: Promise . void","title":"EventFetcher"},{"location":"api/interfaces/EventFetcher/#interface-eventfetcher","text":"Returned by EventFetcherFactory . See web3 documentation article for more information about events: https://github.com/ethereum/wiki/wiki/JavaScript-API#contract-events type : TEventArgs The type of the args object.","title":"Interface: EventFetcher"},{"location":"api/interfaces/EventFetcher/#type-parameters","text":"","title":"Type parameters"},{"location":"api/interfaces/EventFetcher/#teventargs","text":"","title":"TEventArgs"},{"location":"api/interfaces/EventFetcher/#properties","text":"","title":"Properties"},{"location":"api/interfaces/EventFetcher/#get","text":"\u25cf get : function Defined in web3EventService.ts:519 Get an array of DecodedLogEntryEvent from Web3, given the filter supplied to the EventFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of get . If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth.","title":"get"},{"location":"api/interfaces/EventFetcher/#type-declaration","text":"\u25ba(callback?: EventGetCallback TEventArgs , requiredDepth?: number ): Promise . Array . DecodedLogEntryEvent . TEventArgs Parameters: Param Type Description callback EventGetCallback TEventArgs - requiredDepth number - Returns: Promise . Array . DecodedLogEntryEvent . TEventArgs","title":"Type declaration"},{"location":"api/interfaces/EventFetcher/#subscribe","text":"\u25cf subscribe : function Defined in web3EventService.ts:540 Watch for DecodedLogEntryEvent s from Web3, given the filter supplied to the EventFetcherFactory. The Pub.Sub is published once per event firing. subscribe returns the subscription on which you must remember to call unsubscribe when you are done watching. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth. Supply whatever name you want for eventName . This enables you to scope event handlers across event types and schemes.","title":"subscribe"},{"location":"api/interfaces/EventFetcher/#type-declaration_1","text":"\u25ba(eventName: string , callback?: EventWatchSubscriptionCallback TEventArgs , requiredDepth?: number ): IEventSubscription Parameters: Param Type Description eventName string - callback EventWatchSubscriptionCallback TEventArgs - requiredDepth number - Returns: IEventSubscription","title":"Type declaration"},{"location":"api/interfaces/EventFetcher/#watch","text":"\u25cf watch : function Defined in web3EventService.ts:528 Watch for DecodedLogEntryEvent s from Web3, given the filter supplied to the EventFetcherFactory. The callback is invoked once per event firing. If requiredDepth is set then will not invoke the callback until the transaction has been mined to the requiredDepth.","title":"watch"},{"location":"api/interfaces/EventFetcher/#type-declaration_2","text":"\u25ba(callback: EventWatchCallback TEventArgs , requiredDepth?: number ): void Parameters: Param Type Description callback EventWatchCallback TEventArgs - requiredDepth number - Returns: void","title":"Type declaration"},{"location":"api/interfaces/EventFetcher/#methods","text":"","title":"Methods"},{"location":"api/interfaces/EventFetcher/#stopwatching","text":"\u25ba stopWatching (callback?: fnVoid ): void Defined in web3EventService.ts:547 Stop watching the event. Parameters: Param Type Description callback fnVoid - Returns: void","title":"stopWatching"},{"location":"api/interfaces/EventFetcher/#stopwatchingasync","text":"\u25ba stopWatchingAsync (): Promise . void Defined in web3EventService.ts:552 Asynchronously stop watching the event, for environments where synchronous methods are not allowed. Returns: Promise . void","title":"stopWatchingAsync"},{"location":"api/interfaces/EventFetcherFilterObject/","text":"API Reference EventFetcherFilterObject Interface: EventFetcherFilterObject Options supplied to EventFetcherFactory and thence to get and watch . Hierarchy EventFetcherFilterObject \u21b3 GetParticipantsOptions Properties \u00abOptional\u00bb address \u25cf address : string Defined in web3EventService.ts:576 \u00abOptional\u00bb fromBlock \u25cf fromBlock : number \u23ae string Defined in web3EventService.ts:574 \u00abOptional\u00bb suppressDups \u25cf suppressDups : boolean Defined in web3EventService.ts:582 true to suppress duplicate events (see https://github.com/ethereum/web3.js/issues/398) ). The default is true. \u00abOptional\u00bb toBlock \u25cf toBlock : number \u23ae string Defined in web3EventService.ts:575 \u00abOptional\u00bb topics \u25cf topics : Array . LogTopic Defined in web3EventService.ts:577","title":"EventFetcherFilterObject"},{"location":"api/interfaces/EventFetcherFilterObject/#interface-eventfetcherfilterobject","text":"Options supplied to EventFetcherFactory and thence to get and watch .","title":"Interface: EventFetcherFilterObject"},{"location":"api/interfaces/EventFetcherFilterObject/#hierarchy","text":"EventFetcherFilterObject \u21b3 GetParticipantsOptions","title":"Hierarchy"},{"location":"api/interfaces/EventFetcherFilterObject/#properties","text":"","title":"Properties"},{"location":"api/interfaces/EventFetcherFilterObject/#optional-address","text":"\u25cf address : string Defined in web3EventService.ts:576","title":"\u00abOptional\u00bb address"},{"location":"api/interfaces/EventFetcherFilterObject/#optional-fromblock","text":"\u25cf fromBlock : number \u23ae string Defined in web3EventService.ts:574","title":"\u00abOptional\u00bb fromBlock"},{"location":"api/interfaces/EventFetcherFilterObject/#optional-suppressdups","text":"\u25cf suppressDups : boolean Defined in web3EventService.ts:582 true to suppress duplicate events (see https://github.com/ethereum/web3.js/issues/398) ). The default is true.","title":"\u00abOptional\u00bb suppressDups"},{"location":"api/interfaces/EventFetcherFilterObject/#optional-toblock","text":"\u25cf toBlock : number \u23ae string Defined in web3EventService.ts:575","title":"\u00abOptional\u00bb toBlock"},{"location":"api/interfaces/EventFetcherFilterObject/#optional-topics","text":"\u25cf topics : Array . LogTopic Defined in web3EventService.ts:577","title":"\u00abOptional\u00bb topics"},{"location":"api/interfaces/EventHasPropertyId/","text":"API Reference EventHasPropertyId Interface: EventHasPropertyId Properties _proposalId \u25cf _proposalId : Hash Defined in proposalService.ts:136","title":"EventHasPropertyId"},{"location":"api/interfaces/EventHasPropertyId/#interface-eventhaspropertyid","text":"","title":"Interface: EventHasPropertyId"},{"location":"api/interfaces/EventHasPropertyId/#properties","text":"","title":"Properties"},{"location":"api/interfaces/EventHasPropertyId/#_proposalid","text":"\u25cf _proposalId : Hash Defined in proposalService.ts:136","title":"_proposalId"},{"location":"api/interfaces/EventPreProcessorReturn/","text":"API Reference EventPreProcessorReturn Interface: EventPreProcessorReturn Type parameters TEventArgs Properties error \u25cf error : Error Defined in web3EventService.ts:382 log \u25cf log : Array . DecodedLogEntryEvent . TEventArgs Defined in web3EventService.ts:382","title":"EventPreProcessorReturn"},{"location":"api/interfaces/EventPreProcessorReturn/#interface-eventpreprocessorreturn","text":"","title":"Interface: EventPreProcessorReturn"},{"location":"api/interfaces/EventPreProcessorReturn/#type-parameters","text":"","title":"Type parameters"},{"location":"api/interfaces/EventPreProcessorReturn/#teventargs","text":"","title":"TEventArgs"},{"location":"api/interfaces/EventPreProcessorReturn/#properties","text":"","title":"Properties"},{"location":"api/interfaces/EventPreProcessorReturn/#error","text":"\u25cf error : Error Defined in web3EventService.ts:382","title":"error"},{"location":"api/interfaces/EventPreProcessorReturn/#log","text":"\u25cf log : Array . DecodedLogEntryEvent . TEventArgs Defined in web3EventService.ts:382","title":"log"},{"location":"api/interfaces/ExecuteProposalEventResult/","text":"API Reference ExecuteProposalEventResult Interface: ExecuteProposalEventResult fired by voting machines Properties _avatar \u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:110 indexed _decision \u25cf _decision : BigNumber Defined in wrappers/iIntVoteInterface.ts:114 the vote choice that won. _proposalId \u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:118 indexed _totalReputation \u25cf _totalReputation : BigNumber Defined in wrappers/iIntVoteInterface.ts:122 The total reputation in the DAO at the time the proposal was executed","title":"ExecuteProposalEventResult"},{"location":"api/interfaces/ExecuteProposalEventResult/#interface-executeproposaleventresult","text":"fired by voting machines","title":"Interface: ExecuteProposalEventResult"},{"location":"api/interfaces/ExecuteProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ExecuteProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:110 indexed","title":"_avatar"},{"location":"api/interfaces/ExecuteProposalEventResult/#_decision","text":"\u25cf _decision : BigNumber Defined in wrappers/iIntVoteInterface.ts:114 the vote choice that won.","title":"_decision"},{"location":"api/interfaces/ExecuteProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:118 indexed","title":"_proposalId"},{"location":"api/interfaces/ExecuteProposalEventResult/#_totalreputation","text":"\u25cf _totalReputation : BigNumber Defined in wrappers/iIntVoteInterface.ts:122 The total reputation in the DAO at the time the proposal was executed","title":"_totalReputation"},{"location":"api/interfaces/ExecutedGenesisProposal/","text":"API Reference ExecutedGenesisProposal Interface: ExecutedGenesisProposal Hierarchy GenesisProtocolProposal \u21b3 ExecutedGenesisProposal Properties avatarAddress \u25cf avatarAddress : Address Inherited from GenesisProtocolProposal . avatarAddress Defined in wrappers/genesisProtocol.ts:1335 boostedPhaseTime \u25cf boostedPhaseTime : number Inherited from GenesisProtocolProposal . boostedPhaseTime Defined in wrappers/genesisProtocol.ts:1339 in seconds currentBoostedVotePeriodLimit \u25cf currentBoostedVotePeriodLimit : number Inherited from GenesisProtocolProposal . currentBoostedVotePeriodLimit Defined in wrappers/genesisProtocol.ts:1343 in seconds daoBountyRemain \u25cf daoBountyRemain : BigNumber Inherited from GenesisProtocolProposal . daoBountyRemain Defined in wrappers/genesisProtocol.ts:1344 decision \u25cf decision : BinaryVoteResult Defined in wrappers/genesisProtocol.ts:1326 executable \u25cf executable : Address Inherited from GenesisProtocolProposal . executable Defined in wrappers/genesisProtocol.ts:1345 executionState \u25cf executionState : ExecutionState Defined in wrappers/genesisProtocol.ts:1331 lostReputation \u25cf lostReputation : BigNumber Inherited from GenesisProtocolProposal . lostReputation Defined in wrappers/genesisProtocol.ts:1346 numOfChoices \u25cf numOfChoices : number Inherited from GenesisProtocolProposal . numOfChoices Defined in wrappers/genesisProtocol.ts:1347 paramsHash \u25cf paramsHash : Hash Inherited from GenesisProtocolProposal . paramsHash Defined in wrappers/genesisProtocol.ts:1348 proposalId \u25cf proposalId : Hash Inherited from GenesisProtocolProposal . proposalId Defined in wrappers/genesisProtocol.ts:1349 proposer \u25cf proposer : Address Inherited from GenesisProtocolProposal . proposer Defined in wrappers/genesisProtocol.ts:1350 state \u25cf state : ProposalState Inherited from GenesisProtocolProposal . state Defined in wrappers/genesisProtocol.ts:1351 submittedTime \u25cf submittedTime : number Inherited from GenesisProtocolProposal . submittedTime Defined in wrappers/genesisProtocol.ts:1355 in seconds totalReputation \u25cf totalReputation : BigNumber Defined in wrappers/genesisProtocol.ts:1330 total reputation in the DAO at the time the proposal is created in the voting machine votersStakes \u25cf votersStakes : BigNumber Inherited from GenesisProtocolProposal . votersStakes Defined in wrappers/genesisProtocol.ts:1356 winningVote \u25cf winningVote : number Inherited from GenesisProtocolProposal . winningVote Defined in wrappers/genesisProtocol.ts:1357","title":"ExecutedGenesisProposal"},{"location":"api/interfaces/ExecutedGenesisProposal/#interface-executedgenesisproposal","text":"","title":"Interface: ExecutedGenesisProposal"},{"location":"api/interfaces/ExecutedGenesisProposal/#hierarchy","text":"GenesisProtocolProposal \u21b3 ExecutedGenesisProposal","title":"Hierarchy"},{"location":"api/interfaces/ExecutedGenesisProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ExecutedGenesisProposal/#avataraddress","text":"\u25cf avatarAddress : Address Inherited from GenesisProtocolProposal . avatarAddress Defined in wrappers/genesisProtocol.ts:1335","title":"avatarAddress"},{"location":"api/interfaces/ExecutedGenesisProposal/#boostedphasetime","text":"\u25cf boostedPhaseTime : number Inherited from GenesisProtocolProposal . boostedPhaseTime Defined in wrappers/genesisProtocol.ts:1339 in seconds","title":"boostedPhaseTime"},{"location":"api/interfaces/ExecutedGenesisProposal/#currentboostedvoteperiodlimit","text":"\u25cf currentBoostedVotePeriodLimit : number Inherited from GenesisProtocolProposal . currentBoostedVotePeriodLimit Defined in wrappers/genesisProtocol.ts:1343 in seconds","title":"currentBoostedVotePeriodLimit"},{"location":"api/interfaces/ExecutedGenesisProposal/#daobountyremain","text":"\u25cf daoBountyRemain : BigNumber Inherited from GenesisProtocolProposal . daoBountyRemain Defined in wrappers/genesisProtocol.ts:1344","title":"daoBountyRemain"},{"location":"api/interfaces/ExecutedGenesisProposal/#decision","text":"\u25cf decision : BinaryVoteResult Defined in wrappers/genesisProtocol.ts:1326","title":"decision"},{"location":"api/interfaces/ExecutedGenesisProposal/#executable","text":"\u25cf executable : Address Inherited from GenesisProtocolProposal . executable Defined in wrappers/genesisProtocol.ts:1345","title":"executable"},{"location":"api/interfaces/ExecutedGenesisProposal/#executionstate","text":"\u25cf executionState : ExecutionState Defined in wrappers/genesisProtocol.ts:1331","title":"executionState"},{"location":"api/interfaces/ExecutedGenesisProposal/#lostreputation","text":"\u25cf lostReputation : BigNumber Inherited from GenesisProtocolProposal . lostReputation Defined in wrappers/genesisProtocol.ts:1346","title":"lostReputation"},{"location":"api/interfaces/ExecutedGenesisProposal/#numofchoices","text":"\u25cf numOfChoices : number Inherited from GenesisProtocolProposal . numOfChoices Defined in wrappers/genesisProtocol.ts:1347","title":"numOfChoices"},{"location":"api/interfaces/ExecutedGenesisProposal/#paramshash","text":"\u25cf paramsHash : Hash Inherited from GenesisProtocolProposal . paramsHash Defined in wrappers/genesisProtocol.ts:1348","title":"paramsHash"},{"location":"api/interfaces/ExecutedGenesisProposal/#proposalid","text":"\u25cf proposalId : Hash Inherited from GenesisProtocolProposal . proposalId Defined in wrappers/genesisProtocol.ts:1349","title":"proposalId"},{"location":"api/interfaces/ExecutedGenesisProposal/#proposer","text":"\u25cf proposer : Address Inherited from GenesisProtocolProposal . proposer Defined in wrappers/genesisProtocol.ts:1350","title":"proposer"},{"location":"api/interfaces/ExecutedGenesisProposal/#state","text":"\u25cf state : ProposalState Inherited from GenesisProtocolProposal . state Defined in wrappers/genesisProtocol.ts:1351","title":"state"},{"location":"api/interfaces/ExecutedGenesisProposal/#submittedtime","text":"\u25cf submittedTime : number Inherited from GenesisProtocolProposal . submittedTime Defined in wrappers/genesisProtocol.ts:1355 in seconds","title":"submittedTime"},{"location":"api/interfaces/ExecutedGenesisProposal/#totalreputation","text":"\u25cf totalReputation : BigNumber Defined in wrappers/genesisProtocol.ts:1330 total reputation in the DAO at the time the proposal is created in the voting machine","title":"totalReputation"},{"location":"api/interfaces/ExecutedGenesisProposal/#votersstakes","text":"\u25cf votersStakes : BigNumber Inherited from GenesisProtocolProposal . votersStakes Defined in wrappers/genesisProtocol.ts:1356","title":"votersStakes"},{"location":"api/interfaces/ExecutedGenesisProposal/#winningvote","text":"\u25cf winningVote : number Inherited from GenesisProtocolProposal . winningVote Defined in wrappers/genesisProtocol.ts:1357","title":"winningVote"},{"location":"api/interfaces/ExecutedProposal/","text":"API Reference ExecutedProposal Interface: ExecutedProposal Properties decision \u25cf decision : number Defined in proposalService.ts:152 the vote choice that won. proposalId \u25cf proposalId : Hash Defined in proposalService.ts:156 The id of the proposal that was executed. totalReputation \u25cf totalReputation : BigNumber Defined in proposalService.ts:160 The total reputation in the DAO at the time the proposal was executed","title":"ExecutedProposal"},{"location":"api/interfaces/ExecutedProposal/#interface-executedproposal","text":"","title":"Interface: ExecutedProposal"},{"location":"api/interfaces/ExecutedProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ExecutedProposal/#decision","text":"\u25cf decision : number Defined in proposalService.ts:152 the vote choice that won.","title":"decision"},{"location":"api/interfaces/ExecutedProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in proposalService.ts:156 The id of the proposal that was executed.","title":"proposalId"},{"location":"api/interfaces/ExecutedProposal/#totalreputation","text":"\u25cf totalReputation : BigNumber Defined in proposalService.ts:160 The total reputation in the DAO at the time the proposal was executed","title":"totalReputation"},{"location":"api/interfaces/ForgeOrgConfig/","text":"API Reference ForgeOrgConfig Interface: ForgeOrgConfig options for DaoCreator.forgeOrg Hierarchy ForgeOrgConfig \u21b3 NewDaoConfig Properties \u00abOptional\u00bb founders \u25cf founders : Array . FounderConfig Defined in wrappers/daoCreator.ts:569 Optional array describing founders. Default is []. name \u25cf name : string Defined in wrappers/daoCreator.ts:552 The name of the new DAO. \u00abOptional\u00bb tokenCap \u25cf tokenCap : BigNumber.BigNumber \u23ae string Defined in wrappers/daoCreator.ts:556 Optional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap. tokenName \u25cf tokenName : string Defined in wrappers/daoCreator.ts:560 The name of the token to be associated with the DAO tokenSymbol \u25cf tokenSymbol : string Defined in wrappers/daoCreator.ts:564 The symbol of the token to be associated with the DAO \u00abOptional\u00bb universalController \u25cf universalController : boolean Defined in wrappers/daoCreator.ts:574 true to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true.","title":"ForgeOrgConfig"},{"location":"api/interfaces/ForgeOrgConfig/#interface-forgeorgconfig","text":"options for DaoCreator.forgeOrg","title":"Interface: ForgeOrgConfig"},{"location":"api/interfaces/ForgeOrgConfig/#hierarchy","text":"ForgeOrgConfig \u21b3 NewDaoConfig","title":"Hierarchy"},{"location":"api/interfaces/ForgeOrgConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ForgeOrgConfig/#optional-founders","text":"\u25cf founders : Array . FounderConfig Defined in wrappers/daoCreator.ts:569 Optional array describing founders. Default is [].","title":"\u00abOptional\u00bb founders"},{"location":"api/interfaces/ForgeOrgConfig/#name","text":"\u25cf name : string Defined in wrappers/daoCreator.ts:552 The name of the new DAO.","title":"name"},{"location":"api/interfaces/ForgeOrgConfig/#optional-tokencap","text":"\u25cf tokenCap : BigNumber.BigNumber \u23ae string Defined in wrappers/daoCreator.ts:556 Optional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap.","title":"\u00abOptional\u00bb tokenCap"},{"location":"api/interfaces/ForgeOrgConfig/#tokenname","text":"\u25cf tokenName : string Defined in wrappers/daoCreator.ts:560 The name of the token to be associated with the DAO","title":"tokenName"},{"location":"api/interfaces/ForgeOrgConfig/#tokensymbol","text":"\u25cf tokenSymbol : string Defined in wrappers/daoCreator.ts:564 The symbol of the token to be associated with the DAO","title":"tokenSymbol"},{"location":"api/interfaces/ForgeOrgConfig/#optional-universalcontroller","text":"\u25cf universalController : boolean Defined in wrappers/daoCreator.ts:574 true to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true.","title":"\u00abOptional\u00bb universalController"},{"location":"api/interfaces/ForgedDaoInfo/","text":"API Reference ForgedDaoInfo Interface: ForgedDaoInfo Properties avatarAddress \u25cf avatarAddress : Address Defined in scripts/createGenesisDao.ts:34 daoCreatorInst \u25cf daoCreatorInst : any Defined in scripts/createGenesisDao.ts:36 orgName \u25cf orgName : string Defined in scripts/createGenesisDao.ts:35","title":"ForgedDaoInfo"},{"location":"api/interfaces/ForgedDaoInfo/#interface-forgeddaoinfo","text":"","title":"Interface: ForgedDaoInfo"},{"location":"api/interfaces/ForgedDaoInfo/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ForgedDaoInfo/#avataraddress","text":"\u25cf avatarAddress : Address Defined in scripts/createGenesisDao.ts:34","title":"avatarAddress"},{"location":"api/interfaces/ForgedDaoInfo/#daocreatorinst","text":"\u25cf daoCreatorInst : any Defined in scripts/createGenesisDao.ts:36","title":"daoCreatorInst"},{"location":"api/interfaces/ForgedDaoInfo/#orgname","text":"\u25cf orgName : string Defined in scripts/createGenesisDao.ts:35","title":"orgName"},{"location":"api/interfaces/FounderConfig/","text":"API Reference FounderConfig Interface: FounderConfig Properties address \u25cf address : string Defined in wrappers/daoCreator.ts:510 Founders' address reputation \u25cf reputation : string \u23ae BigNumber.BigNumber Defined in wrappers/daoCreator.ts:520 string | BigNumber reputation amount to be awarded to each founder. Should be given in Wei. tokens \u25cf tokens : string \u23ae BigNumber.BigNumber Defined in wrappers/daoCreator.ts:515 string | BigNumber token amount to be awarded to each founder. Should be given in Wei.","title":"FounderConfig"},{"location":"api/interfaces/FounderConfig/#interface-founderconfig","text":"","title":"Interface: FounderConfig"},{"location":"api/interfaces/FounderConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/FounderConfig/#address","text":"\u25cf address : string Defined in wrappers/daoCreator.ts:510 Founders' address","title":"address"},{"location":"api/interfaces/FounderConfig/#reputation","text":"\u25cf reputation : string \u23ae BigNumber.BigNumber Defined in wrappers/daoCreator.ts:520 string | BigNumber reputation amount to be awarded to each founder. Should be given in Wei.","title":"reputation"},{"location":"api/interfaces/FounderConfig/#tokens","text":"\u25cf tokens : string \u23ae BigNumber.BigNumber Defined in wrappers/daoCreator.ts:515 string | BigNumber token amount to be awarded to each founder. Should be given in Wei.","title":"tokens"},{"location":"api/interfaces/GPExecuteProposalEventResult/","text":"API Reference GPExecuteProposalEventResult Interface: GPExecuteProposalEventResult Properties _executionState \u25cf _executionState : BigNumber Defined in wrappers/genesisProtocol.ts:1269 _executionState.toNumber() will give you a value from the enum ExecutionState _proposalId \u25cf _proposalId : Hash Defined in wrappers/genesisProtocol.ts:1265 indexed","title":"GPExecuteProposalEventResult"},{"location":"api/interfaces/GPExecuteProposalEventResult/#interface-gpexecuteproposaleventresult","text":"","title":"Interface: GPExecuteProposalEventResult"},{"location":"api/interfaces/GPExecuteProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GPExecuteProposalEventResult/#_executionstate","text":"\u25cf _executionState : BigNumber Defined in wrappers/genesisProtocol.ts:1269 _executionState.toNumber() will give you a value from the enum ExecutionState","title":"_executionState"},{"location":"api/interfaces/GPExecuteProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/genesisProtocol.ts:1265 indexed","title":"_proposalId"},{"location":"api/interfaces/GenesisProtocolDaoTokenBalances/","text":"API Reference GenesisProtocolDaoTokenBalances Interface: GenesisProtocolDaoTokenBalances Properties nativeToken \u25cf nativeToken : any Defined in wrappers/genesisProtocol.ts:1289 The native token's truffle contract nativeTokenBalance \u25cf nativeTokenBalance : BigNumber Defined in wrappers/genesisProtocol.ts:1293 The avatar's balance off native tokens, in Wei stakingToken \u25cf stakingToken : any Defined in wrappers/genesisProtocol.ts:1297 The standard token's truffle contract stakingTokenBalance \u25cf stakingTokenBalance : BigNumber Defined in wrappers/genesisProtocol.ts:1301 The avatar's balance of staking tokens, in Wei","title":"GenesisProtocolDaoTokenBalances"},{"location":"api/interfaces/GenesisProtocolDaoTokenBalances/#interface-genesisprotocoldaotokenbalances","text":"","title":"Interface: GenesisProtocolDaoTokenBalances"},{"location":"api/interfaces/GenesisProtocolDaoTokenBalances/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GenesisProtocolDaoTokenBalances/#nativetoken","text":"\u25cf nativeToken : any Defined in wrappers/genesisProtocol.ts:1289 The native token's truffle contract","title":"nativeToken"},{"location":"api/interfaces/GenesisProtocolDaoTokenBalances/#nativetokenbalance","text":"\u25cf nativeTokenBalance : BigNumber Defined in wrappers/genesisProtocol.ts:1293 The avatar's balance off native tokens, in Wei","title":"nativeTokenBalance"},{"location":"api/interfaces/GenesisProtocolDaoTokenBalances/#stakingtoken","text":"\u25cf stakingToken : any Defined in wrappers/genesisProtocol.ts:1297 The standard token's truffle contract","title":"stakingToken"},{"location":"api/interfaces/GenesisProtocolDaoTokenBalances/#stakingtokenbalance","text":"\u25cf stakingTokenBalance : BigNumber Defined in wrappers/genesisProtocol.ts:1301 The avatar's balance of staking tokens, in Wei","title":"stakingTokenBalance"},{"location":"api/interfaces/GenesisProtocolParams/","text":"API Reference GenesisProtocolParams Interface: GenesisProtocolParams Properties boostedVotePeriodLimit \u25cf boostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:990 The time limit in seconds for a proposal to be in the boosted phase, inclusive of the quietEndingPeriod, in seconds. Default is 259200 (three days). daoBountyConst \u25cf daoBountyConst : number Defined in wrappers/genesisProtocol.ts:996 Multiple of a winning stake to be rewarded as bounty. Must be greater than stakerFeeRatioForVoters and less than 2*stakerFeeRatioForVoters. Default is 75. daoBountyLimit \u25cf daoBountyLimit : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1001 Upper bound on the total bounty amount on a proposal. Default is 100, converted to Wei. minimumStakingFee \u25cf minimumStakingFee : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1007 A floor on the staking fee which is normally computed using GenesisProtocolParams.stakerFeeRatioForVoters , in Wei. Default is 0. preBoostedVotePeriodLimit \u25cf preBoostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1015 The time limit in seconds that a proposal can be in the preBoosted phase before it will be automatically closed, in seconds, with a winning vote of NO, regardless of the actual value of the winning vote at the time expiration. Note an attempt must be made to execute before the proposal state will actually change. Default is 1814400 (three weeks). preBoostedVoteRequiredPercentage \u25cf preBoostedVoteRequiredPercentage : number Defined in wrappers/genesisProtocol.ts:1024 The percent of the DAO's total supply of reputation that, when exceeded by the amount of reputation behind a vote (yes or no), will result in the immediate execution of the proposal, during either the preboosted or boosted phases. Must be greater than zero and less than or equal to 100. Default is 50. proposingRepRewardConstA \u25cf proposingRepRewardConstA : number Defined in wrappers/genesisProtocol.ts:1030 Constant A in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5. proposingRepRewardConstB \u25cf proposingRepRewardConstB : number Defined in wrappers/genesisProtocol.ts:1036 Constant B in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5. quietEndingPeriod \u25cf quietEndingPeriod : number Defined in wrappers/genesisProtocol.ts:1046 The duration, in seconds, at the end of the boosted phase during which any vote that changes the outcome of a proposal will cause the boosted phase to be extended by the amount of the quietEndingPeriod. If the quietEndingPeriod expires then the proposal expires and may be executed. It is a moving window: If the winning vote switches during the quietEndingPeriod then it restarts at the point in time when the vote switched, thus extending the boosted period. Default is 86400 (one day). stakerFeeRatioForVoters \u25cf stakerFeeRatioForVoters : number Defined in wrappers/genesisProtocol.ts:1054 For executed proposals, the percentage of staked tokens that is rewarded to all voters, regardless of the vote outcome, the staked vote outcome, or how the voter voted. Voters share this amount in proportion to the amount of reputation they voted. Must be between 0 and 100. Default is 50. thresholdConstA \u25cf thresholdConstA : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1062 Constant A in the threshold calculation, in Wei. See GenesisProtocolWrapper.getThreshold . If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be between 0 and 100000000 (converted to Wei). Default is 7, converted to Wei. thresholdConstB \u25cf thresholdConstB : number Defined in wrappers/genesisProtocol.ts:1070 Constant B in the threshold calculation. See GenesisProtocolWrapper.getThreshold . If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be greater than zero and less than or equal to 100000000. Default is 3. votersGainRepRatioFromLostRep \u25cf votersGainRepRatioFromLostRep : number Defined in wrappers/genesisProtocol.ts:1077 The percentage of losing pre-boosted voters' lost reputation (see votersReputationLossRatio) rewarded to winning pre-boosted voters. Must be between 0 and 100. Default is 80. votersReputationLossRatio \u25cf votersReputationLossRatio : number Defined in wrappers/genesisProtocol.ts:1083 The percentage of reputation deducted from losing pre-boosted voters. Must be between 0 and 100. Default is 1.","title":"GenesisProtocolParams"},{"location":"api/interfaces/GenesisProtocolParams/#interface-genesisprotocolparams","text":"","title":"Interface: GenesisProtocolParams"},{"location":"api/interfaces/GenesisProtocolParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GenesisProtocolParams/#boostedvoteperiodlimit","text":"\u25cf boostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:990 The time limit in seconds for a proposal to be in the boosted phase, inclusive of the quietEndingPeriod, in seconds. Default is 259200 (three days).","title":"boostedVotePeriodLimit"},{"location":"api/interfaces/GenesisProtocolParams/#daobountyconst","text":"\u25cf daoBountyConst : number Defined in wrappers/genesisProtocol.ts:996 Multiple of a winning stake to be rewarded as bounty. Must be greater than stakerFeeRatioForVoters and less than 2*stakerFeeRatioForVoters. Default is 75.","title":"daoBountyConst"},{"location":"api/interfaces/GenesisProtocolParams/#daobountylimit","text":"\u25cf daoBountyLimit : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1001 Upper bound on the total bounty amount on a proposal. Default is 100, converted to Wei.","title":"daoBountyLimit"},{"location":"api/interfaces/GenesisProtocolParams/#minimumstakingfee","text":"\u25cf minimumStakingFee : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1007 A floor on the staking fee which is normally computed using GenesisProtocolParams.stakerFeeRatioForVoters , in Wei. Default is 0.","title":"minimumStakingFee"},{"location":"api/interfaces/GenesisProtocolParams/#preboostedvoteperiodlimit","text":"\u25cf preBoostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1015 The time limit in seconds that a proposal can be in the preBoosted phase before it will be automatically closed, in seconds, with a winning vote of NO, regardless of the actual value of the winning vote at the time expiration. Note an attempt must be made to execute before the proposal state will actually change. Default is 1814400 (three weeks).","title":"preBoostedVotePeriodLimit"},{"location":"api/interfaces/GenesisProtocolParams/#preboostedvoterequiredpercentage","text":"\u25cf preBoostedVoteRequiredPercentage : number Defined in wrappers/genesisProtocol.ts:1024 The percent of the DAO's total supply of reputation that, when exceeded by the amount of reputation behind a vote (yes or no), will result in the immediate execution of the proposal, during either the preboosted or boosted phases. Must be greater than zero and less than or equal to 100. Default is 50.","title":"preBoostedVoteRequiredPercentage"},{"location":"api/interfaces/GenesisProtocolParams/#proposingreprewardconsta","text":"\u25cf proposingRepRewardConstA : number Defined in wrappers/genesisProtocol.ts:1030 Constant A in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.","title":"proposingRepRewardConstA"},{"location":"api/interfaces/GenesisProtocolParams/#proposingreprewardconstb","text":"\u25cf proposingRepRewardConstB : number Defined in wrappers/genesisProtocol.ts:1036 Constant B in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.","title":"proposingRepRewardConstB"},{"location":"api/interfaces/GenesisProtocolParams/#quietendingperiod","text":"\u25cf quietEndingPeriod : number Defined in wrappers/genesisProtocol.ts:1046 The duration, in seconds, at the end of the boosted phase during which any vote that changes the outcome of a proposal will cause the boosted phase to be extended by the amount of the quietEndingPeriod. If the quietEndingPeriod expires then the proposal expires and may be executed. It is a moving window: If the winning vote switches during the quietEndingPeriod then it restarts at the point in time when the vote switched, thus extending the boosted period. Default is 86400 (one day).","title":"quietEndingPeriod"},{"location":"api/interfaces/GenesisProtocolParams/#stakerfeeratioforvoters","text":"\u25cf stakerFeeRatioForVoters : number Defined in wrappers/genesisProtocol.ts:1054 For executed proposals, the percentage of staked tokens that is rewarded to all voters, regardless of the vote outcome, the staked vote outcome, or how the voter voted. Voters share this amount in proportion to the amount of reputation they voted. Must be between 0 and 100. Default is 50.","title":"stakerFeeRatioForVoters"},{"location":"api/interfaces/GenesisProtocolParams/#thresholdconsta","text":"\u25cf thresholdConstA : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1062 Constant A in the threshold calculation, in Wei. See GenesisProtocolWrapper.getThreshold . If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be between 0 and 100000000 (converted to Wei). Default is 7, converted to Wei.","title":"thresholdConstA"},{"location":"api/interfaces/GenesisProtocolParams/#thresholdconstb","text":"\u25cf thresholdConstB : number Defined in wrappers/genesisProtocol.ts:1070 Constant B in the threshold calculation. See GenesisProtocolWrapper.getThreshold . If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be greater than zero and less than or equal to 100000000. Default is 3.","title":"thresholdConstB"},{"location":"api/interfaces/GenesisProtocolParams/#votersgainrepratiofromlostrep","text":"\u25cf votersGainRepRatioFromLostRep : number Defined in wrappers/genesisProtocol.ts:1077 The percentage of losing pre-boosted voters' lost reputation (see votersReputationLossRatio) rewarded to winning pre-boosted voters. Must be between 0 and 100. Default is 80.","title":"votersGainRepRatioFromLostRep"},{"location":"api/interfaces/GenesisProtocolParams/#votersreputationlossratio","text":"\u25cf votersReputationLossRatio : number Defined in wrappers/genesisProtocol.ts:1083 The percentage of reputation deducted from losing pre-boosted voters. Must be between 0 and 100. Default is 1.","title":"votersReputationLossRatio"},{"location":"api/interfaces/GenesisProtocolProposal/","text":"API Reference GenesisProtocolProposal Interface: GenesisProtocolProposal Hierarchy GenesisProtocolProposal \u21b3 ExecutedGenesisProposal Properties avatarAddress \u25cf avatarAddress : Address Defined in wrappers/genesisProtocol.ts:1335 boostedPhaseTime \u25cf boostedPhaseTime : number Defined in wrappers/genesisProtocol.ts:1339 in seconds currentBoostedVotePeriodLimit \u25cf currentBoostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1343 in seconds daoBountyRemain \u25cf daoBountyRemain : BigNumber Defined in wrappers/genesisProtocol.ts:1344 executable \u25cf executable : Address Defined in wrappers/genesisProtocol.ts:1345 lostReputation \u25cf lostReputation : BigNumber Defined in wrappers/genesisProtocol.ts:1346 numOfChoices \u25cf numOfChoices : number Defined in wrappers/genesisProtocol.ts:1347 paramsHash \u25cf paramsHash : Hash Defined in wrappers/genesisProtocol.ts:1348 proposalId \u25cf proposalId : Hash Defined in wrappers/genesisProtocol.ts:1349 proposer \u25cf proposer : Address Defined in wrappers/genesisProtocol.ts:1350 state \u25cf state : ProposalState Defined in wrappers/genesisProtocol.ts:1351 submittedTime \u25cf submittedTime : number Defined in wrappers/genesisProtocol.ts:1355 in seconds votersStakes \u25cf votersStakes : BigNumber Defined in wrappers/genesisProtocol.ts:1356 winningVote \u25cf winningVote : number Defined in wrappers/genesisProtocol.ts:1357","title":"GenesisProtocolProposal"},{"location":"api/interfaces/GenesisProtocolProposal/#interface-genesisprotocolproposal","text":"","title":"Interface: GenesisProtocolProposal"},{"location":"api/interfaces/GenesisProtocolProposal/#hierarchy","text":"GenesisProtocolProposal \u21b3 ExecutedGenesisProposal","title":"Hierarchy"},{"location":"api/interfaces/GenesisProtocolProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GenesisProtocolProposal/#avataraddress","text":"\u25cf avatarAddress : Address Defined in wrappers/genesisProtocol.ts:1335","title":"avatarAddress"},{"location":"api/interfaces/GenesisProtocolProposal/#boostedphasetime","text":"\u25cf boostedPhaseTime : number Defined in wrappers/genesisProtocol.ts:1339 in seconds","title":"boostedPhaseTime"},{"location":"api/interfaces/GenesisProtocolProposal/#currentboostedvoteperiodlimit","text":"\u25cf currentBoostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1343 in seconds","title":"currentBoostedVotePeriodLimit"},{"location":"api/interfaces/GenesisProtocolProposal/#daobountyremain","text":"\u25cf daoBountyRemain : BigNumber Defined in wrappers/genesisProtocol.ts:1344","title":"daoBountyRemain"},{"location":"api/interfaces/GenesisProtocolProposal/#executable","text":"\u25cf executable : Address Defined in wrappers/genesisProtocol.ts:1345","title":"executable"},{"location":"api/interfaces/GenesisProtocolProposal/#lostreputation","text":"\u25cf lostReputation : BigNumber Defined in wrappers/genesisProtocol.ts:1346","title":"lostReputation"},{"location":"api/interfaces/GenesisProtocolProposal/#numofchoices","text":"\u25cf numOfChoices : number Defined in wrappers/genesisProtocol.ts:1347","title":"numOfChoices"},{"location":"api/interfaces/GenesisProtocolProposal/#paramshash","text":"\u25cf paramsHash : Hash Defined in wrappers/genesisProtocol.ts:1348","title":"paramsHash"},{"location":"api/interfaces/GenesisProtocolProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/genesisProtocol.ts:1349","title":"proposalId"},{"location":"api/interfaces/GenesisProtocolProposal/#proposer","text":"\u25cf proposer : Address Defined in wrappers/genesisProtocol.ts:1350","title":"proposer"},{"location":"api/interfaces/GenesisProtocolProposal/#state","text":"\u25cf state : ProposalState Defined in wrappers/genesisProtocol.ts:1351","title":"state"},{"location":"api/interfaces/GenesisProtocolProposal/#submittedtime","text":"\u25cf submittedTime : number Defined in wrappers/genesisProtocol.ts:1355 in seconds","title":"submittedTime"},{"location":"api/interfaces/GenesisProtocolProposal/#votersstakes","text":"\u25cf votersStakes : BigNumber Defined in wrappers/genesisProtocol.ts:1356","title":"votersStakes"},{"location":"api/interfaces/GenesisProtocolProposal/#winningvote","text":"\u25cf winningVote : number Defined in wrappers/genesisProtocol.ts:1357","title":"winningVote"},{"location":"api/interfaces/GetAgreementParams/","text":"API Reference GetAgreementParams Interface: GetAgreementParams Properties \u00abOptional\u00bb agreementId \u25cf agreementId : number Defined in wrappers/vestingScheme.ts:604 Optional agreement Id avatar \u25cf avatar : Address Defined in wrappers/vestingScheme.ts:600 The address of the avatar","title":"GetAgreementParams"},{"location":"api/interfaces/GetAgreementParams/#interface-getagreementparams","text":"","title":"Interface: GetAgreementParams"},{"location":"api/interfaces/GetAgreementParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetAgreementParams/#optional-agreementid","text":"\u25cf agreementId : number Defined in wrappers/vestingScheme.ts:604 Optional agreement Id","title":"\u00abOptional\u00bb agreementId"},{"location":"api/interfaces/GetAgreementParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/vestingScheme.ts:600 The address of the avatar","title":"avatar"},{"location":"api/interfaces/GetAllowedRangeOfChoicesResult/","text":"API Reference GetAllowedRangeOfChoicesResult Interface: GetAllowedRangeOfChoicesResult Properties maxVote \u25cf maxVote : number Defined in wrappers/iIntVoteInterface.ts:147 minVote \u25cf minVote : number Defined in wrappers/iIntVoteInterface.ts:146","title":"GetAllowedRangeOfChoicesResult"},{"location":"api/interfaces/GetAllowedRangeOfChoicesResult/#interface-getallowedrangeofchoicesresult","text":"","title":"Interface: GetAllowedRangeOfChoicesResult"},{"location":"api/interfaces/GetAllowedRangeOfChoicesResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetAllowedRangeOfChoicesResult/#maxvote","text":"\u25cf maxVote : number Defined in wrappers/iIntVoteInterface.ts:147","title":"maxVote"},{"location":"api/interfaces/GetAllowedRangeOfChoicesResult/#minvote","text":"\u25cf minVote : number Defined in wrappers/iIntVoteInterface.ts:146","title":"minVote"},{"location":"api/interfaces/GetBeneficiaryRewardsParams/","text":"API Reference GetBeneficiaryRewardsParams Interface: GetBeneficiaryRewardsParams Properties avatar \u25cf avatar : Address Defined in wrappers/contributionReward.ts:688 The avatar under which the proposals were created beneficiaryAddress \u25cf beneficiaryAddress : string Defined in wrappers/contributionReward.ts:692 The agent who is to receive the rewards \u00abOptional\u00bb proposalId \u25cf proposalId : string Defined in wrappers/contributionReward.ts:696 Optionally filter on the given proposalId","title":"GetBeneficiaryRewardsParams"},{"location":"api/interfaces/GetBeneficiaryRewardsParams/#interface-getbeneficiaryrewardsparams","text":"","title":"Interface: GetBeneficiaryRewardsParams"},{"location":"api/interfaces/GetBeneficiaryRewardsParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetBeneficiaryRewardsParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/contributionReward.ts:688 The avatar under which the proposals were created","title":"avatar"},{"location":"api/interfaces/GetBeneficiaryRewardsParams/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : string Defined in wrappers/contributionReward.ts:692 The agent who is to receive the rewards","title":"beneficiaryAddress"},{"location":"api/interfaces/GetBeneficiaryRewardsParams/#optional-proposalid","text":"\u25cf proposalId : string Defined in wrappers/contributionReward.ts:696 Optionally filter on the given proposalId","title":"\u00abOptional\u00bb proposalId"},{"location":"api/interfaces/GetDaosOptions/","text":"API Reference GetDaosOptions Interface: GetDaosOptions Properties \u00abOptional\u00bb daoCreatorAddress \u25cf daoCreatorAddress : Address Defined in dao.ts:436","title":"GetDaosOptions"},{"location":"api/interfaces/GetDaosOptions/#interface-getdaosoptions","text":"","title":"Interface: GetDaosOptions"},{"location":"api/interfaces/GetDaosOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetDaosOptions/#optional-daocreatoraddress","text":"\u25cf daoCreatorAddress : Address Defined in dao.ts:436","title":"\u00abOptional\u00bb daoCreatorAddress"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/","text":"API Reference GetGenesisProtocolParamsResult Interface: GetGenesisProtocolParamsResult Properties boostedVotePeriodLimit \u25cf boostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1087 daoBountyConst \u25cf daoBountyConst : number Defined in wrappers/genesisProtocol.ts:1088 daoBountyLimit \u25cf daoBountyLimit : BigNumber Defined in wrappers/genesisProtocol.ts:1089 minimumStakingFee \u25cf minimumStakingFee : BigNumber Defined in wrappers/genesisProtocol.ts:1090 preBoostedVotePeriodLimit \u25cf preBoostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1091 preBoostedVoteRequiredPercentage \u25cf preBoostedVoteRequiredPercentage : number Defined in wrappers/genesisProtocol.ts:1092 proposingRepRewardConstA \u25cf proposingRepRewardConstA : number Defined in wrappers/genesisProtocol.ts:1093 proposingRepRewardConstB \u25cf proposingRepRewardConstB : number Defined in wrappers/genesisProtocol.ts:1094 quietEndingPeriod \u25cf quietEndingPeriod : number Defined in wrappers/genesisProtocol.ts:1095 stakerFeeRatioForVoters \u25cf stakerFeeRatioForVoters : number Defined in wrappers/genesisProtocol.ts:1096 thresholdConstA \u25cf thresholdConstA : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1097 thresholdConstB \u25cf thresholdConstB : number Defined in wrappers/genesisProtocol.ts:1098 votersGainRepRatioFromLostRep \u25cf votersGainRepRatioFromLostRep : number Defined in wrappers/genesisProtocol.ts:1099 votersReputationLossRatio \u25cf votersReputationLossRatio : number Defined in wrappers/genesisProtocol.ts:1100","title":"GetGenesisProtocolParamsResult"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#interface-getgenesisprotocolparamsresult","text":"","title":"Interface: GetGenesisProtocolParamsResult"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#boostedvoteperiodlimit","text":"\u25cf boostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1087","title":"boostedVotePeriodLimit"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#daobountyconst","text":"\u25cf daoBountyConst : number Defined in wrappers/genesisProtocol.ts:1088","title":"daoBountyConst"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#daobountylimit","text":"\u25cf daoBountyLimit : BigNumber Defined in wrappers/genesisProtocol.ts:1089","title":"daoBountyLimit"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#minimumstakingfee","text":"\u25cf minimumStakingFee : BigNumber Defined in wrappers/genesisProtocol.ts:1090","title":"minimumStakingFee"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#preboostedvoteperiodlimit","text":"\u25cf preBoostedVotePeriodLimit : number Defined in wrappers/genesisProtocol.ts:1091","title":"preBoostedVotePeriodLimit"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#preboostedvoterequiredpercentage","text":"\u25cf preBoostedVoteRequiredPercentage : number Defined in wrappers/genesisProtocol.ts:1092","title":"preBoostedVoteRequiredPercentage"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#proposingreprewardconsta","text":"\u25cf proposingRepRewardConstA : number Defined in wrappers/genesisProtocol.ts:1093","title":"proposingRepRewardConstA"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#proposingreprewardconstb","text":"\u25cf proposingRepRewardConstB : number Defined in wrappers/genesisProtocol.ts:1094","title":"proposingRepRewardConstB"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#quietendingperiod","text":"\u25cf quietEndingPeriod : number Defined in wrappers/genesisProtocol.ts:1095","title":"quietEndingPeriod"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#stakerfeeratioforvoters","text":"\u25cf stakerFeeRatioForVoters : number Defined in wrappers/genesisProtocol.ts:1096","title":"stakerFeeRatioForVoters"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#thresholdconsta","text":"\u25cf thresholdConstA : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1097","title":"thresholdConstA"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#thresholdconstb","text":"\u25cf thresholdConstB : number Defined in wrappers/genesisProtocol.ts:1098","title":"thresholdConstB"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#votersgainrepratiofromlostrep","text":"\u25cf votersGainRepRatioFromLostRep : number Defined in wrappers/genesisProtocol.ts:1099","title":"votersGainRepRatioFromLostRep"},{"location":"api/interfaces/GetGenesisProtocolParamsResult/#votersreputationlossratio","text":"\u25cf votersReputationLossRatio : number Defined in wrappers/genesisProtocol.ts:1100","title":"votersReputationLossRatio"},{"location":"api/interfaces/GetNumberOfChoicesConfig/","text":"API Reference GetNumberOfChoicesConfig Interface: GetNumberOfChoicesConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1379 unique hash of proposal index","title":"GetNumberOfChoicesConfig"},{"location":"api/interfaces/GetNumberOfChoicesConfig/#interface-getnumberofchoicesconfig","text":"","title":"Interface: GetNumberOfChoicesConfig"},{"location":"api/interfaces/GetNumberOfChoicesConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetNumberOfChoicesConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1379 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetParticipantsOptions/","text":"API Reference GetParticipantsOptions Interface: GetParticipantsOptions Hierarchy EventFetcherFilterObject \u21b3 GetParticipantsOptions Properties \u00abOptional\u00bb address \u25cf address : string Inherited from EventFetcherFilterObject . address Defined in web3EventService.ts:576 \u00abOptional\u00bb fromBlock \u25cf fromBlock : number \u23ae string Inherited from EventFetcherFilterObject . fromBlock Defined in web3EventService.ts:574 \u00abOptional\u00bb participantAddress \u25cf participantAddress : Address Defined in dao.ts:443 optional address of a single participant to filter on \u00abOptional\u00bb returnReputations \u25cf returnReputations : boolean Defined in dao.ts:447 true to retrieve and return the current reputation of each participant \u00abOptional\u00bb suppressDups \u25cf suppressDups : boolean Inherited from EventFetcherFilterObject . suppressDups Defined in web3EventService.ts:582 true to suppress duplicate events (see https://github.com/ethereum/web3.js/issues/398) ). The default is true. \u00abOptional\u00bb toBlock \u25cf toBlock : number \u23ae string Inherited from EventFetcherFilterObject . toBlock Defined in web3EventService.ts:575 \u00abOptional\u00bb topics \u25cf topics : Array . LogTopic Inherited from EventFetcherFilterObject . topics Defined in web3EventService.ts:577","title":"GetParticipantsOptions"},{"location":"api/interfaces/GetParticipantsOptions/#interface-getparticipantsoptions","text":"","title":"Interface: GetParticipantsOptions"},{"location":"api/interfaces/GetParticipantsOptions/#hierarchy","text":"EventFetcherFilterObject \u21b3 GetParticipantsOptions","title":"Hierarchy"},{"location":"api/interfaces/GetParticipantsOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetParticipantsOptions/#optional-address","text":"\u25cf address : string Inherited from EventFetcherFilterObject . address Defined in web3EventService.ts:576","title":"\u00abOptional\u00bb address"},{"location":"api/interfaces/GetParticipantsOptions/#optional-fromblock","text":"\u25cf fromBlock : number \u23ae string Inherited from EventFetcherFilterObject . fromBlock Defined in web3EventService.ts:574","title":"\u00abOptional\u00bb fromBlock"},{"location":"api/interfaces/GetParticipantsOptions/#optional-participantaddress","text":"\u25cf participantAddress : Address Defined in dao.ts:443 optional address of a single participant to filter on","title":"\u00abOptional\u00bb participantAddress"},{"location":"api/interfaces/GetParticipantsOptions/#optional-returnreputations","text":"\u25cf returnReputations : boolean Defined in dao.ts:447 true to retrieve and return the current reputation of each participant","title":"\u00abOptional\u00bb returnReputations"},{"location":"api/interfaces/GetParticipantsOptions/#optional-suppressdups","text":"\u25cf suppressDups : boolean Inherited from EventFetcherFilterObject . suppressDups Defined in web3EventService.ts:582 true to suppress duplicate events (see https://github.com/ethereum/web3.js/issues/398) ). The default is true.","title":"\u00abOptional\u00bb suppressDups"},{"location":"api/interfaces/GetParticipantsOptions/#optional-toblock","text":"\u25cf toBlock : number \u23ae string Inherited from EventFetcherFilterObject . toBlock Defined in web3EventService.ts:575","title":"\u00abOptional\u00bb toBlock"},{"location":"api/interfaces/GetParticipantsOptions/#optional-topics","text":"\u25cf topics : Array . LogTopic Inherited from EventFetcherFilterObject . topics Defined in web3EventService.ts:577","title":"\u00abOptional\u00bb topics"},{"location":"api/interfaces/GetProposalAvatarConfig/","text":"API Reference GetProposalAvatarConfig Interface: GetProposalAvatarConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1218 unique hash of proposal index","title":"GetProposalAvatarConfig"},{"location":"api/interfaces/GetProposalAvatarConfig/#interface-getproposalavatarconfig","text":"","title":"Interface: GetProposalAvatarConfig"},{"location":"api/interfaces/GetProposalAvatarConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetProposalAvatarConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1218 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetProposalEventsOptions/","text":"API Reference GetProposalEventsOptions Interface: GetProposalEventsOptions Type parameters TProposal TEventArgs : EventHasPropertyId Properties \u00abOptional\u00bb baseArgFilter \u25cf baseArgFilter : any Defined in proposalService.ts:177 Optional to filter events on the given filter, like { _avatar: [anAddress] } . This will be merged with any filter that the caller provides when creating the EntityFetcher. proposalsEventFetcher \u25cf proposalsEventFetcher : EventFetcherFactory TEventArgs Defined in proposalService.ts:167 Event fetcher to use to get or watch the event that supplies TEventArgs . transformEventCallback \u25cf transformEventCallback : TransformEventCallback TProposal , TEventArgs Defined in proposalService.ts:172 Returns Promise of TProposal given TEventArgs for the event. Return of undefined will be ignored, not passed-on to the caller. \u00abOptional\u00bb votableOnly \u25cf votableOnly : boolean Defined in proposalService.ts:181 True to only return votable proposals. Default is false. \u00abOptional\u00bb votingMachine \u25cf votingMachine : IntVoteInterfaceWrapper Defined in proposalService.ts:186 Used to determine whether proposals are votable. This is only required when votableOnly is set to true .","title":"GetProposalEventsOptions"},{"location":"api/interfaces/GetProposalEventsOptions/#interface-getproposaleventsoptions","text":"","title":"Interface: GetProposalEventsOptions"},{"location":"api/interfaces/GetProposalEventsOptions/#type-parameters","text":"","title":"Type parameters"},{"location":"api/interfaces/GetProposalEventsOptions/#tproposal","text":"","title":"TProposal"},{"location":"api/interfaces/GetProposalEventsOptions/#teventargs-eventhaspropertyid","text":"","title":"TEventArgs :  EventHasPropertyId"},{"location":"api/interfaces/GetProposalEventsOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetProposalEventsOptions/#optional-baseargfilter","text":"\u25cf baseArgFilter : any Defined in proposalService.ts:177 Optional to filter events on the given filter, like { _avatar: [anAddress] } . This will be merged with any filter that the caller provides when creating the EntityFetcher.","title":"\u00abOptional\u00bb baseArgFilter"},{"location":"api/interfaces/GetProposalEventsOptions/#proposalseventfetcher","text":"\u25cf proposalsEventFetcher : EventFetcherFactory TEventArgs Defined in proposalService.ts:167 Event fetcher to use to get or watch the event that supplies TEventArgs .","title":"proposalsEventFetcher"},{"location":"api/interfaces/GetProposalEventsOptions/#transformeventcallback","text":"\u25cf transformEventCallback : TransformEventCallback TProposal , TEventArgs Defined in proposalService.ts:172 Returns Promise of TProposal given TEventArgs for the event. Return of undefined will be ignored, not passed-on to the caller.","title":"transformEventCallback"},{"location":"api/interfaces/GetProposalEventsOptions/#optional-votableonly","text":"\u25cf votableOnly : boolean Defined in proposalService.ts:181 True to only return votable proposals. Default is false.","title":"\u00abOptional\u00bb votableOnly"},{"location":"api/interfaces/GetProposalEventsOptions/#optional-votingmachine","text":"\u25cf votingMachine : IntVoteInterfaceWrapper Defined in proposalService.ts:186 Used to determine whether proposals are votable. This is only required when votableOnly is set to true .","title":"\u00abOptional\u00bb votingMachine"},{"location":"api/interfaces/GetProposalStatusConfig/","text":"API Reference GetProposalStatusConfig Interface: GetProposalStatusConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1204 unique hash of proposal index","title":"GetProposalStatusConfig"},{"location":"api/interfaces/GetProposalStatusConfig/#interface-getproposalstatusconfig","text":"","title":"Interface: GetProposalStatusConfig"},{"location":"api/interfaces/GetProposalStatusConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetProposalStatusConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1204 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetProposalStatusResult/","text":"API Reference GetProposalStatusResult Interface: GetProposalStatusResult Properties preBoostedVotesNo \u25cf preBoostedVotesNo : BigNumber Defined in wrappers/genesisProtocol.ts:1112 Number of preboosted votes against preBoostedVotesYes \u25cf preBoostedVotesYes : BigNumber Defined in wrappers/genesisProtocol.ts:1116 Number of preboosted votes for stakesNo \u25cf stakesNo : BigNumber Defined in wrappers/genesisProtocol.ts:1120 Number of staking tokens staked against stakesYes \u25cf stakesYes : BigNumber Defined in wrappers/genesisProtocol.ts:1124 Number of staking tokens staked for totalStaked \u25cf totalStaked : BigNumber Defined in wrappers/genesisProtocol.ts:1132 Total number of staking tokens currently redeemable by everyone totalStakerStakes \u25cf totalStakerStakes : BigNumber Defined in wrappers/genesisProtocol.ts:1128 Number of staking tokens currently redeemable by stakers","title":"GetProposalStatusResult"},{"location":"api/interfaces/GetProposalStatusResult/#interface-getproposalstatusresult","text":"","title":"Interface: GetProposalStatusResult"},{"location":"api/interfaces/GetProposalStatusResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetProposalStatusResult/#preboostedvotesno","text":"\u25cf preBoostedVotesNo : BigNumber Defined in wrappers/genesisProtocol.ts:1112 Number of preboosted votes against","title":"preBoostedVotesNo"},{"location":"api/interfaces/GetProposalStatusResult/#preboostedvotesyes","text":"\u25cf preBoostedVotesYes : BigNumber Defined in wrappers/genesisProtocol.ts:1116 Number of preboosted votes for","title":"preBoostedVotesYes"},{"location":"api/interfaces/GetProposalStatusResult/#stakesno","text":"\u25cf stakesNo : BigNumber Defined in wrappers/genesisProtocol.ts:1120 Number of staking tokens staked against","title":"stakesNo"},{"location":"api/interfaces/GetProposalStatusResult/#stakesyes","text":"\u25cf stakesYes : BigNumber Defined in wrappers/genesisProtocol.ts:1124 Number of staking tokens staked for","title":"stakesYes"},{"location":"api/interfaces/GetProposalStatusResult/#totalstaked","text":"\u25cf totalStaked : BigNumber Defined in wrappers/genesisProtocol.ts:1132 Total number of staking tokens currently redeemable by everyone","title":"totalStaked"},{"location":"api/interfaces/GetProposalStatusResult/#totalstakerstakes","text":"\u25cf totalStakerStakes : BigNumber Defined in wrappers/genesisProtocol.ts:1128 Number of staking tokens currently redeemable by stakers","title":"totalStakerStakes"},{"location":"api/interfaces/GetScoreConfig/","text":"API Reference GetScoreConfig Interface: GetScoreConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1182 unique hash of proposal index","title":"GetScoreConfig"},{"location":"api/interfaces/GetScoreConfig/#interface-getscoreconfig","text":"","title":"Interface: GetScoreConfig"},{"location":"api/interfaces/GetScoreConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetScoreConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1182 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetScoreThresholdParamsConfig/","text":"API Reference GetScoreThresholdParamsConfig Interface: GetScoreThresholdParamsConfig Properties avatar \u25cf avatar : Address Defined in wrappers/genesisProtocol.ts:1225 the DAO's avatar address","title":"GetScoreThresholdParamsConfig"},{"location":"api/interfaces/GetScoreThresholdParamsConfig/#interface-getscorethresholdparamsconfig","text":"","title":"Interface: GetScoreThresholdParamsConfig"},{"location":"api/interfaces/GetScoreThresholdParamsConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetScoreThresholdParamsConfig/#avatar","text":"\u25cf avatar : Address Defined in wrappers/genesisProtocol.ts:1225 the DAO's avatar address","title":"avatar"},{"location":"api/interfaces/GetScoreThresholdParamsResult/","text":"API Reference GetScoreThresholdParamsResult Interface: GetScoreThresholdParamsResult Properties thresholdConstA \u25cf thresholdConstA : BigNumber Defined in wrappers/genesisProtocol.ts:1136 thresholdConstB \u25cf thresholdConstB : number Defined in wrappers/genesisProtocol.ts:1137","title":"GetScoreThresholdParamsResult"},{"location":"api/interfaces/GetScoreThresholdParamsResult/#interface-getscorethresholdparamsresult","text":"","title":"Interface: GetScoreThresholdParamsResult"},{"location":"api/interfaces/GetScoreThresholdParamsResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetScoreThresholdParamsResult/#thresholdconsta","text":"\u25cf thresholdConstA : BigNumber Defined in wrappers/genesisProtocol.ts:1136","title":"thresholdConstA"},{"location":"api/interfaces/GetScoreThresholdParamsResult/#thresholdconstb","text":"\u25cf thresholdConstB : number Defined in wrappers/genesisProtocol.ts:1137","title":"thresholdConstB"},{"location":"api/interfaces/GetStakerInfoConfig/","text":"API Reference GetStakerInfoConfig Interface: GetStakerInfoConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1232 unique hash of proposal index staker \u25cf staker : string Defined in wrappers/genesisProtocol.ts:1236 address of the staking agent","title":"GetStakerInfoConfig"},{"location":"api/interfaces/GetStakerInfoConfig/#interface-getstakerinfoconfig","text":"","title":"Interface: GetStakerInfoConfig"},{"location":"api/interfaces/GetStakerInfoConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetStakerInfoConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1232 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetStakerInfoConfig/#staker","text":"\u25cf staker : string Defined in wrappers/genesisProtocol.ts:1236 address of the staking agent","title":"staker"},{"location":"api/interfaces/GetStakerInfoResult/","text":"API Reference GetStakerInfoResult Interface: GetStakerInfoResult Properties stake \u25cf stake : BigNumber Defined in wrappers/genesisProtocol.ts:1142 vote \u25cf vote : number Defined in wrappers/genesisProtocol.ts:1141","title":"GetStakerInfoResult"},{"location":"api/interfaces/GetStakerInfoResult/#interface-getstakerinforesult","text":"","title":"Interface: GetStakerInfoResult"},{"location":"api/interfaces/GetStakerInfoResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetStakerInfoResult/#stake","text":"\u25cf stake : BigNumber Defined in wrappers/genesisProtocol.ts:1142","title":"stake"},{"location":"api/interfaces/GetStakerInfoResult/#vote","text":"\u25cf vote : number Defined in wrappers/genesisProtocol.ts:1141","title":"vote"},{"location":"api/interfaces/GetStateConfig/","text":"API Reference GetStateConfig Interface: GetStateConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1250 unique hash of proposal index","title":"GetStateConfig"},{"location":"api/interfaces/GetStateConfig/#interface-getstateconfig","text":"","title":"Interface: GetStateConfig"},{"location":"api/interfaces/GetStateConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetStateConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1250 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetThresholdConfig/","text":"API Reference GetThresholdConfig Interface: GetThresholdConfig Properties avatar \u25cf avatar : Address Defined in wrappers/genesisProtocol.ts:1189 the DAO's avatar address","title":"GetThresholdConfig"},{"location":"api/interfaces/GetThresholdConfig/#interface-getthresholdconfig","text":"","title":"Interface: GetThresholdConfig"},{"location":"api/interfaces/GetThresholdConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetThresholdConfig/#avatar","text":"\u25cf avatar : Address Defined in wrappers/genesisProtocol.ts:1189 the DAO's avatar address","title":"avatar"},{"location":"api/interfaces/GetTokenBalancesOptions/","text":"API Reference GetTokenBalancesOptions Interface: GetTokenBalancesOptions Properties avatarAddress \u25cf avatarAddress : Address Defined in wrappers/genesisProtocol.ts:1282 Defined in wrappers/genesisProtocol.ts:1372","title":"GetTokenBalancesOptions"},{"location":"api/interfaces/GetTokenBalancesOptions/#interface-gettokenbalancesoptions","text":"","title":"Interface: GetTokenBalancesOptions"},{"location":"api/interfaces/GetTokenBalancesOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetTokenBalancesOptions/#avataraddress","text":"\u25cf avatarAddress : Address Defined in wrappers/genesisProtocol.ts:1282 Defined in wrappers/genesisProtocol.ts:1372","title":"avatarAddress"},{"location":"api/interfaces/GetTokenCapGcParamsResult/","text":"API Reference GetTokenCapGcParamsResult Interface: GetTokenCapGcParamsResult Properties cap \u25cf cap : BigNumber Defined in wrappers/tokenCapGC.ts:70 token \u25cf token : Address Defined in wrappers/tokenCapGC.ts:71","title":"GetTokenCapGcParamsResult"},{"location":"api/interfaces/GetTokenCapGcParamsResult/#interface-gettokencapgcparamsresult","text":"","title":"Interface: GetTokenCapGcParamsResult"},{"location":"api/interfaces/GetTokenCapGcParamsResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetTokenCapGcParamsResult/#cap","text":"\u25cf cap : BigNumber Defined in wrappers/tokenCapGC.ts:70","title":"cap"},{"location":"api/interfaces/GetTokenCapGcParamsResult/#token","text":"\u25cf token : Address Defined in wrappers/tokenCapGC.ts:71","title":"token"},{"location":"api/interfaces/GetTotalReputationSupplyConfig/","text":"API Reference GetTotalReputationSupplyConfig Interface: GetTotalReputationSupplyConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1211 unique hash of proposal index","title":"GetTotalReputationSupplyConfig"},{"location":"api/interfaces/GetTotalReputationSupplyConfig/#interface-gettotalreputationsupplyconfig","text":"","title":"Interface: GetTotalReputationSupplyConfig"},{"location":"api/interfaces/GetTotalReputationSupplyConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetTotalReputationSupplyConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1211 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetVoteStatusConfig/","text":"API Reference GetVoteStatusConfig Interface: GetVoteStatusConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1364 unique hash of proposal index vote \u25cf vote : number Defined in wrappers/genesisProtocol.ts:1368 the choice of vote, like 1 (YES) or 2 (NO).","title":"GetVoteStatusConfig"},{"location":"api/interfaces/GetVoteStatusConfig/#interface-getvotestatusconfig","text":"","title":"Interface: GetVoteStatusConfig"},{"location":"api/interfaces/GetVoteStatusConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetVoteStatusConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1364 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetVoteStatusConfig/#vote","text":"\u25cf vote : number Defined in wrappers/genesisProtocol.ts:1368 the choice of vote, like 1 (YES) or 2 (NO).","title":"vote"},{"location":"api/interfaces/GetVoterInfoConfig/","text":"API Reference GetVoterInfoConfig Interface: GetVoterInfoConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1196 unique hash of proposal index voter \u25cf voter : string Defined in wrappers/genesisProtocol.ts:1197","title":"GetVoterInfoConfig"},{"location":"api/interfaces/GetVoterInfoConfig/#interface-getvoterinfoconfig","text":"","title":"Interface: GetVoterInfoConfig"},{"location":"api/interfaces/GetVoterInfoConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetVoterInfoConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1196 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/GetVoterInfoConfig/#voter","text":"\u25cf voter : string Defined in wrappers/genesisProtocol.ts:1197","title":"voter"},{"location":"api/interfaces/GetVoterInfoResult/","text":"API Reference GetVoterInfoResult Interface: GetVoterInfoResult Properties reputation \u25cf reputation : BigNumber Defined in wrappers/genesisProtocol.ts:1105 vote \u25cf vote : number Defined in wrappers/genesisProtocol.ts:1104","title":"GetVoterInfoResult"},{"location":"api/interfaces/GetVoterInfoResult/#interface-getvoterinforesult","text":"","title":"Interface: GetVoterInfoResult"},{"location":"api/interfaces/GetVoterInfoResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetVoterInfoResult/#reputation","text":"\u25cf reputation : BigNumber Defined in wrappers/genesisProtocol.ts:1105","title":"reputation"},{"location":"api/interfaces/GetVoterInfoResult/#vote","text":"\u25cf vote : number Defined in wrappers/genesisProtocol.ts:1104","title":"vote"},{"location":"api/interfaces/GetWinningVoteConfig/","text":"API Reference GetWinningVoteConfig Interface: GetWinningVoteConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1243 unique hash of proposal index","title":"GetWinningVoteConfig"},{"location":"api/interfaces/GetWinningVoteConfig/#interface-getwinningvoteconfig","text":"","title":"Interface: GetWinningVoteConfig"},{"location":"api/interfaces/GetWinningVoteConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/GetWinningVoteConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1243 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/IBurnableTokenWrapper/","text":"API Reference IBurnableTokenWrapper Interface: IBurnableTokenWrapper Implemented by DaoTokenWrapper Properties Burn \u25cf Burn : EventFetcherFactory BurnEventResult Defined in wrappers/iBurnableToken.ts:10 Methods burn \u25ba burn (options: BurnableTokenBurnOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iBurnableToken.ts:16 Burn the given number of tokens Parameters: Param Type Description options BurnableTokenBurnOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"IBurnableTokenWrapper"},{"location":"api/interfaces/IBurnableTokenWrapper/#interface-iburnabletokenwrapper","text":"","title":"Interface: IBurnableTokenWrapper"},{"location":"api/interfaces/IBurnableTokenWrapper/#implemented-by","text":"DaoTokenWrapper","title":"Implemented by"},{"location":"api/interfaces/IBurnableTokenWrapper/#properties","text":"","title":"Properties"},{"location":"api/interfaces/IBurnableTokenWrapper/#burn","text":"\u25cf Burn : EventFetcherFactory BurnEventResult Defined in wrappers/iBurnableToken.ts:10","title":"Burn"},{"location":"api/interfaces/IBurnableTokenWrapper/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IBurnableTokenWrapper/#burn_1","text":"\u25ba burn (options: BurnableTokenBurnOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iBurnableToken.ts:16 Burn the given number of tokens Parameters: Param Type Description options BurnableTokenBurnOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"burn"},{"location":"api/interfaces/IConfigService/","text":"API Reference IConfigService Interface: IConfigService Methods get \u25ba get (setting: string ): any Defined in iConfigService.ts:2 Parameters: Param Type Description setting string - Returns: any set \u25ba set (setting: string , value: any ): void Defined in iConfigService.ts:3 Parameters: Param Type Description setting string - value any - Returns: void","title":"IConfigService"},{"location":"api/interfaces/IConfigService/#interface-iconfigservice","text":"","title":"Interface: IConfigService"},{"location":"api/interfaces/IConfigService/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IConfigService/#get","text":"\u25ba get (setting: string ): any Defined in iConfigService.ts:2 Parameters: Param Type Description setting string - Returns: any","title":"get"},{"location":"api/interfaces/IConfigService/#set","text":"\u25ba set (setting: string , value: any ): void Defined in iConfigService.ts:3 Parameters: Param Type Description setting string - value any - Returns: void","title":"set"},{"location":"api/interfaces/IContractWrapper/","text":"API Reference IContractWrapper Interface: IContractWrapper Hierarchy IContractWrapper \u21b3 ISchemeWrapper \u21b3 IVotingMachineWrapper Implemented by AbsoluteVoteWrapper ContractWrapperBase ContributionRewardWrapper DaoCreatorWrapper DaoTokenWrapper GenesisProtocolWrapper GlobalConstraintRegistrarWrapper IntVoteInterfaceWrapper MintableTokenWrapper ProposalGeneratorBase RedeemerWrapper ReputationWrapper SchemeRegistrarWrapper StandardTokenWrapper TokenCapGCWrapper UpgradeSchemeWrapper VestingSchemeWrapper VoteInOrganizationSchemeWrapper Properties address \u25cf address : Address Defined in iContractWrapperBase.ts:13 contract \u25cf contract : any Defined in iContractWrapperBase.ts:14 factory \u25cf factory : IContractWrapperFactory any Defined in iContractWrapperBase.ts:10 friendlyName \u25cf friendlyName : string Defined in iContractWrapperBase.ts:12 name \u25cf name : string Defined in iContractWrapperBase.ts:11 Methods hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . any Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . any Defined in iContractWrapperBase.ts:17 Returns: Promise . any hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . any Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"IContractWrapper"},{"location":"api/interfaces/IContractWrapper/#interface-icontractwrapper","text":"","title":"Interface: IContractWrapper"},{"location":"api/interfaces/IContractWrapper/#hierarchy","text":"IContractWrapper \u21b3 ISchemeWrapper \u21b3 IVotingMachineWrapper","title":"Hierarchy"},{"location":"api/interfaces/IContractWrapper/#implemented-by","text":"AbsoluteVoteWrapper ContractWrapperBase ContributionRewardWrapper DaoCreatorWrapper DaoTokenWrapper GenesisProtocolWrapper GlobalConstraintRegistrarWrapper IntVoteInterfaceWrapper MintableTokenWrapper ProposalGeneratorBase RedeemerWrapper ReputationWrapper SchemeRegistrarWrapper StandardTokenWrapper TokenCapGCWrapper UpgradeSchemeWrapper VestingSchemeWrapper VoteInOrganizationSchemeWrapper","title":"Implemented by"},{"location":"api/interfaces/IContractWrapper/#properties","text":"","title":"Properties"},{"location":"api/interfaces/IContractWrapper/#address","text":"\u25cf address : Address Defined in iContractWrapperBase.ts:13","title":"address"},{"location":"api/interfaces/IContractWrapper/#contract","text":"\u25cf contract : any Defined in iContractWrapperBase.ts:14","title":"contract"},{"location":"api/interfaces/IContractWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory any Defined in iContractWrapperBase.ts:10","title":"factory"},{"location":"api/interfaces/IContractWrapper/#friendlyname","text":"\u25cf friendlyName : string Defined in iContractWrapperBase.ts:12","title":"friendlyName"},{"location":"api/interfaces/IContractWrapper/#name","text":"\u25cf name : string Defined in iContractWrapperBase.ts:11","title":"name"},{"location":"api/interfaces/IContractWrapper/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IContractWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . any Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any","title":"hydrateFromAt"},{"location":"api/interfaces/IContractWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . any Defined in iContractWrapperBase.ts:17 Returns: Promise . any","title":"hydrateFromDeployed"},{"location":"api/interfaces/IContractWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . any Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"hydrateFromNew"},{"location":"api/interfaces/IContractWrapperFactory/","text":"API Reference IContractWrapperFactory Interface: IContractWrapperFactory Type parameters TWrapper : IContractWrapper Implemented by ContractWrapperFactory DaoCreatorFactoryType DaoTokenFactoryType GenesisProtocolFactoryType IntVoteInterfaceFactoryType MintableTokenFactoryType RedeemerFactoryType ReputationFactoryType StandardTokenFactoryType Properties at \u25cf at : function Defined in iContractWrapperBase.ts:51 Type declaration \u25ba(address: string ): Promise . TWrapper Parameters: Param Type Description address string - Returns: Promise . TWrapper deployed \u25cf deployed : function Defined in iContractWrapperBase.ts:52 Type declaration \u25ba(): Promise . TWrapper Returns: Promise . TWrapper new \u25cf new : function Defined in iContractWrapperBase.ts:50 Type declaration \u25ba(...rest: Array . any ): Promise . TWrapper Parameters: Param Type Description rest Array . any - Returns: Promise . TWrapper","title":"IContractWrapperFactory"},{"location":"api/interfaces/IContractWrapperFactory/#interface-icontractwrapperfactory","text":"","title":"Interface: IContractWrapperFactory"},{"location":"api/interfaces/IContractWrapperFactory/#type-parameters","text":"","title":"Type parameters"},{"location":"api/interfaces/IContractWrapperFactory/#twrapper-icontractwrapper","text":"","title":"TWrapper :  IContractWrapper"},{"location":"api/interfaces/IContractWrapperFactory/#implemented-by","text":"ContractWrapperFactory DaoCreatorFactoryType DaoTokenFactoryType GenesisProtocolFactoryType IntVoteInterfaceFactoryType MintableTokenFactoryType RedeemerFactoryType ReputationFactoryType StandardTokenFactoryType","title":"Implemented by"},{"location":"api/interfaces/IContractWrapperFactory/#properties","text":"","title":"Properties"},{"location":"api/interfaces/IContractWrapperFactory/#at","text":"\u25cf at : function Defined in iContractWrapperBase.ts:51","title":"at"},{"location":"api/interfaces/IContractWrapperFactory/#type-declaration","text":"\u25ba(address: string ): Promise . TWrapper Parameters: Param Type Description address string - Returns: Promise . TWrapper","title":"Type declaration"},{"location":"api/interfaces/IContractWrapperFactory/#deployed","text":"\u25cf deployed : function Defined in iContractWrapperBase.ts:52","title":"deployed"},{"location":"api/interfaces/IContractWrapperFactory/#type-declaration_1","text":"\u25ba(): Promise . TWrapper Returns: Promise . TWrapper","title":"Type declaration"},{"location":"api/interfaces/IContractWrapperFactory/#new","text":"\u25cf new : function Defined in iContractWrapperBase.ts:50","title":"new"},{"location":"api/interfaces/IContractWrapperFactory/#type-declaration_2","text":"\u25ba(...rest: Array . any ): Promise . TWrapper Parameters: Param Type Description rest Array . any - Returns: Promise . TWrapper","title":"Type declaration"},{"location":"api/interfaces/IErc827TokenWrapper/","text":"API Reference IErc827TokenWrapper Interface: IErc827TokenWrapper Implemented by DaoTokenWrapper Methods approveAndCall \u25ba approveAndCall (options: ApproveAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:19 Approve transfer of tokens by msg.sender (or onBehalfOf , if given) from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ApproveAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult decreaseApprovalAndCall \u25ba decreaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:51 Decrease the number of tokens approved that msg.sender (or onBehalfOf if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult increaseApprovalAndCall \u25ba increaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:42 Increase the number of tokens approved that msg.sender (or onBehalfOf , if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transferAndCall \u25ba transferAndCall (options: TransferAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:26 Transfer tokens from the current account to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult transferFromAndCall \u25ba transferFromAndCall (options: TransferFromAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:33 Transfer tokens from one address to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferFromAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"IErc827TokenWrapper"},{"location":"api/interfaces/IErc827TokenWrapper/#interface-ierc827tokenwrapper","text":"","title":"Interface: IErc827TokenWrapper"},{"location":"api/interfaces/IErc827TokenWrapper/#implemented-by","text":"DaoTokenWrapper","title":"Implemented by"},{"location":"api/interfaces/IErc827TokenWrapper/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IErc827TokenWrapper/#approveandcall","text":"\u25ba approveAndCall (options: ApproveAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:19 Approve transfer of tokens by msg.sender (or onBehalfOf , if given) from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ApproveAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"approveAndCall"},{"location":"api/interfaces/IErc827TokenWrapper/#decreaseapprovalandcall","text":"\u25ba decreaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:51 Decrease the number of tokens approved that msg.sender (or onBehalfOf if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"decreaseApprovalAndCall"},{"location":"api/interfaces/IErc827TokenWrapper/#increaseapprovalandcall","text":"\u25ba increaseApprovalAndCall (options: ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:42 Increase the number of tokens approved that msg.sender (or onBehalfOf , if given) may transfer from the given \"spender\". Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options ChangeApprovalAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"increaseApprovalAndCall"},{"location":"api/interfaces/IErc827TokenWrapper/#transferandcall","text":"\u25ba transferAndCall (options: TransferAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:26 Transfer tokens from the current account to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transferAndCall"},{"location":"api/interfaces/IErc827TokenWrapper/#transferfromandcall","text":"\u25ba transferFromAndCall (options: TransferFromAndCallOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iErc827Token.ts:33 Transfer tokens from one address to another. Then call the function specified by callData , all in a single transaction. Parameters: Param Type Description options TransferFromAndCallOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"transferFromAndCall"},{"location":"api/interfaces/IEventSubscription/","text":"API Reference IEventSubscription Interface: IEventSubscription Implemented by EventSubscription SubscriptionCollection Web3EventSubscription Methods unsubscribe \u25ba unsubscribe (milliseconds?: number ): Promise . void Defined in pubSubEventService.ts:200 Parameters: Param Type Description milliseconds number - Returns: Promise . void","title":"IEventSubscription"},{"location":"api/interfaces/IEventSubscription/#interface-ieventsubscription","text":"","title":"Interface: IEventSubscription"},{"location":"api/interfaces/IEventSubscription/#implemented-by","text":"EventSubscription SubscriptionCollection Web3EventSubscription","title":"Implemented by"},{"location":"api/interfaces/IEventSubscription/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IEventSubscription/#unsubscribe","text":"\u25ba unsubscribe (milliseconds?: number ): Promise . void Defined in pubSubEventService.ts:200 Parameters: Param Type Description milliseconds number - Returns: Promise . void","title":"unsubscribe"},{"location":"api/interfaces/IIntVoteInterface/","text":"API Reference IIntVoteInterface Interface: IIntVoteInterface The Arc contract IntVoteInterface . Implemented by AbsoluteVoteWrapper GenesisProtocolWrapper IntVoteInterfaceWrapper Properties CancelProposal \u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Defined in wrappers/iIntVoteInterface.ts:12 CancelVoting \u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Defined in wrappers/iIntVoteInterface.ts:15 ExecuteProposal \u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Defined in wrappers/iIntVoteInterface.ts:13 NewProposal \u25cf NewProposal : EventFetcherFactory NewProposalEventResult Defined in wrappers/iIntVoteInterface.ts:11 VoteProposal \u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Defined in wrappers/iIntVoteInterface.ts:14 address \u25cf address : Address Defined in wrappers/iIntVoteInterface.ts:17 Methods cancelProposal \u25ba cancelProposal (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:20 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult cancelVote \u25ba cancelVote (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:25 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult execute \u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:30 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult getNumberOfChoices \u25ba getNumberOfChoices (options: ProposalIdOption ): Promise . number Defined in wrappers/iIntVoteInterface.ts:26 Parameters: Param Type Description options ProposalIdOption - Returns: Promise . number isAbstainAllow \u25ba isAbstainAllow (): Promise . boolean Defined in wrappers/iIntVoteInterface.ts:29 Returns: Promise . boolean isVotable \u25ba isVotable (options: ProposalIdOption ): Promise . boolean Defined in wrappers/iIntVoteInterface.ts:27 Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean ownerVote \u25ba ownerVote (options: OwnerVoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:21 Parameters: Param Type Description options OwnerVoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult propose \u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Defined in wrappers/iIntVoteInterface.ts:19 Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult vote \u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:22 Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult voteStatus \u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Defined in wrappers/iIntVoteInterface.ts:28 Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber voteWithSpecifiedAmounts \u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:23 Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"IIntVoteInterface"},{"location":"api/interfaces/IIntVoteInterface/#interface-iintvoteinterface","text":"The Arc contract IntVoteInterface .","title":"Interface: IIntVoteInterface"},{"location":"api/interfaces/IIntVoteInterface/#implemented-by","text":"AbsoluteVoteWrapper GenesisProtocolWrapper IntVoteInterfaceWrapper","title":"Implemented by"},{"location":"api/interfaces/IIntVoteInterface/#properties","text":"","title":"Properties"},{"location":"api/interfaces/IIntVoteInterface/#cancelproposal","text":"\u25cf CancelProposal : EventFetcherFactory CancelProposalEventResult Defined in wrappers/iIntVoteInterface.ts:12","title":"CancelProposal"},{"location":"api/interfaces/IIntVoteInterface/#cancelvoting","text":"\u25cf CancelVoting : EventFetcherFactory CancelVotingEventResult Defined in wrappers/iIntVoteInterface.ts:15","title":"CancelVoting"},{"location":"api/interfaces/IIntVoteInterface/#executeproposal","text":"\u25cf ExecuteProposal : EventFetcherFactory ExecuteProposalEventResult Defined in wrappers/iIntVoteInterface.ts:13","title":"ExecuteProposal"},{"location":"api/interfaces/IIntVoteInterface/#newproposal","text":"\u25cf NewProposal : EventFetcherFactory NewProposalEventResult Defined in wrappers/iIntVoteInterface.ts:11","title":"NewProposal"},{"location":"api/interfaces/IIntVoteInterface/#voteproposal","text":"\u25cf VoteProposal : EventFetcherFactory VoteProposalEventResult Defined in wrappers/iIntVoteInterface.ts:14","title":"VoteProposal"},{"location":"api/interfaces/IIntVoteInterface/#address","text":"\u25cf address : Address Defined in wrappers/iIntVoteInterface.ts:17","title":"address"},{"location":"api/interfaces/IIntVoteInterface/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IIntVoteInterface/#cancelproposal_1","text":"\u25ba cancelProposal (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:20 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"cancelProposal"},{"location":"api/interfaces/IIntVoteInterface/#cancelvote","text":"\u25ba cancelVote (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:25 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"cancelVote"},{"location":"api/interfaces/IIntVoteInterface/#execute","text":"\u25ba execute (options: ProposalIdOption TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:30 Parameters: Param Type Description options ProposalIdOption TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"execute"},{"location":"api/interfaces/IIntVoteInterface/#getnumberofchoices","text":"\u25ba getNumberOfChoices (options: ProposalIdOption ): Promise . number Defined in wrappers/iIntVoteInterface.ts:26 Parameters: Param Type Description options ProposalIdOption - Returns: Promise . number","title":"getNumberOfChoices"},{"location":"api/interfaces/IIntVoteInterface/#isabstainallow","text":"\u25ba isAbstainAllow (): Promise . boolean Defined in wrappers/iIntVoteInterface.ts:29 Returns: Promise . boolean","title":"isAbstainAllow"},{"location":"api/interfaces/IIntVoteInterface/#isvotable","text":"\u25ba isVotable (options: ProposalIdOption ): Promise . boolean Defined in wrappers/iIntVoteInterface.ts:27 Parameters: Param Type Description options ProposalIdOption - Returns: Promise . boolean","title":"isVotable"},{"location":"api/interfaces/IIntVoteInterface/#ownervote","text":"\u25ba ownerVote (options: OwnerVoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:21 Parameters: Param Type Description options OwnerVoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"ownerVote"},{"location":"api/interfaces/IIntVoteInterface/#propose","text":"\u25ba propose (options: ProposeOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionProposalResult Defined in wrappers/iIntVoteInterface.ts:19 Parameters: Param Type Description options ProposeOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionProposalResult","title":"propose"},{"location":"api/interfaces/IIntVoteInterface/#vote","text":"\u25ba vote (options: VoteOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:22 Parameters: Param Type Description options VoteOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"vote"},{"location":"api/interfaces/IIntVoteInterface/#votestatus","text":"\u25ba voteStatus (options: VoteStatusOptions ): Promise . BigNumber Defined in wrappers/iIntVoteInterface.ts:28 Parameters: Param Type Description options VoteStatusOptions - Returns: Promise . BigNumber","title":"voteStatus"},{"location":"api/interfaces/IIntVoteInterface/#votewithspecifiedamounts","text":"\u25ba voteWithSpecifiedAmounts (options: VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ): Promise . ArcTransactionResult Defined in wrappers/iIntVoteInterface.ts:23 Parameters: Param Type Description options VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions - Returns: Promise . ArcTransactionResult","title":"voteWithSpecifiedAmounts"},{"location":"api/interfaces/ILogger/","text":"API Reference ILogger Interface: ILogger Methods debug \u25ba debug (message: string ): void Defined in loggingService.ts:18 Logs a debug message. Parameters: Param Type Description message string The message to log. Returns: void error \u25ba error (message: string ): void Defined in loggingService.ts:39 Logs an error. Parameters: Param Type Description message string The message to log. Returns: void info \u25ba info (message: string ): void Defined in loggingService.ts:25 Logs info. Parameters: Param Type Description message string The message to log. Returns: void warn \u25ba warn (message: string ): void Defined in loggingService.ts:32 Logs a warning. Parameters: Param Type Description message string The message to log. Returns: void","title":"ILogger"},{"location":"api/interfaces/ILogger/#interface-ilogger","text":"","title":"Interface: ILogger"},{"location":"api/interfaces/ILogger/#methods","text":"","title":"Methods"},{"location":"api/interfaces/ILogger/#debug","text":"\u25ba debug (message: string ): void Defined in loggingService.ts:18 Logs a debug message. Parameters: Param Type Description message string The message to log. Returns: void","title":"debug"},{"location":"api/interfaces/ILogger/#error","text":"\u25ba error (message: string ): void Defined in loggingService.ts:39 Logs an error. Parameters: Param Type Description message string The message to log. Returns: void","title":"error"},{"location":"api/interfaces/ILogger/#info","text":"\u25ba info (message: string ): void Defined in loggingService.ts:25 Logs info. Parameters: Param Type Description message string The message to log. Returns: void","title":"info"},{"location":"api/interfaces/ILogger/#warn","text":"\u25ba warn (message: string ): void Defined in loggingService.ts:32 Logs a warning. Parameters: Param Type Description message string The message to log. Returns: void","title":"warn"},{"location":"api/interfaces/ISchemeWrapper/","text":"API Reference ISchemeWrapper Interface: ISchemeWrapper The minimum requirements for a scheme that can be registered with a DAO/controller. Hierarchy IContractWrapper \u21b3 ISchemeWrapper \u21b3 IUniversalSchemeWrapper Properties address \u25cf address : Address Inherited from IContractWrapper . address Defined in iContractWrapperBase.ts:13 contract \u25cf contract : any Inherited from IContractWrapper . contract Defined in iContractWrapperBase.ts:14 factory \u25cf factory : IContractWrapperFactory any Inherited from IContractWrapper . factory Defined in iContractWrapperBase.ts:10 friendlyName \u25cf friendlyName : string Inherited from IContractWrapper . friendlyName Defined in iContractWrapperBase.ts:12 name \u25cf name : string Inherited from IContractWrapper . name Defined in iContractWrapperBase.ts:11 Methods getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Defined in iContractWrapperBase.ts:25 Returns: SchemePermissions getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Defined in iContractWrapperBase.ts:24 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . any Inherited from IContractWrapper . hydrateFromAt Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . any Inherited from IContractWrapper . hydrateFromDeployed Defined in iContractWrapperBase.ts:17 Returns: Promise . any hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . any Inherited from IContractWrapper . hydrateFromNew Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"ISchemeWrapper"},{"location":"api/interfaces/ISchemeWrapper/#interface-ischemewrapper","text":"The minimum requirements for a scheme that can be registered with a DAO/controller.","title":"Interface: ISchemeWrapper"},{"location":"api/interfaces/ISchemeWrapper/#hierarchy","text":"IContractWrapper \u21b3 ISchemeWrapper \u21b3 IUniversalSchemeWrapper","title":"Hierarchy"},{"location":"api/interfaces/ISchemeWrapper/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ISchemeWrapper/#address","text":"\u25cf address : Address Inherited from IContractWrapper . address Defined in iContractWrapperBase.ts:13","title":"address"},{"location":"api/interfaces/ISchemeWrapper/#contract","text":"\u25cf contract : any Inherited from IContractWrapper . contract Defined in iContractWrapperBase.ts:14","title":"contract"},{"location":"api/interfaces/ISchemeWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory any Inherited from IContractWrapper . factory Defined in iContractWrapperBase.ts:10","title":"factory"},{"location":"api/interfaces/ISchemeWrapper/#friendlyname","text":"\u25cf friendlyName : string Inherited from IContractWrapper . friendlyName Defined in iContractWrapperBase.ts:12","title":"friendlyName"},{"location":"api/interfaces/ISchemeWrapper/#name","text":"\u25cf name : string Inherited from IContractWrapper . name Defined in iContractWrapperBase.ts:11","title":"name"},{"location":"api/interfaces/ISchemeWrapper/#methods","text":"","title":"Methods"},{"location":"api/interfaces/ISchemeWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Defined in iContractWrapperBase.ts:25 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/interfaces/ISchemeWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Defined in iContractWrapperBase.ts:24 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/interfaces/ISchemeWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . any Inherited from IContractWrapper . hydrateFromAt Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any","title":"hydrateFromAt"},{"location":"api/interfaces/ISchemeWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . any Inherited from IContractWrapper . hydrateFromDeployed Defined in iContractWrapperBase.ts:17 Returns: Promise . any","title":"hydrateFromDeployed"},{"location":"api/interfaces/ISchemeWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . any Inherited from IContractWrapper . hydrateFromNew Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"hydrateFromNew"},{"location":"api/interfaces/ITruffleContractFunction/","text":"API Reference ITruffleContractFunction Interface: ITruffleContractFunction Hierarchy function \u21b3 ITruffleContractFunction Callable \u25ba __call (args?: Array . any ): Promise . Hash Defined in contractWrapperBase.ts:377 Parameters: Param Type Description args Array . any - Returns: Promise . Hash Properties estimateGas \u25cf estimateGas : function Defined in contractWrapperBase.ts:381 Type declaration \u25ba(args?: Array . any ): number Parameters: Param Type Description args Array . any - Returns: number sendTransaction \u25cf sendTransaction : function Defined in contractWrapperBase.ts:380 Type declaration \u25ba(args?: Array . any ): Promise . Hash Parameters: Param Type Description args Array . any - Returns: Promise . Hash","title":"ITruffleContractFunction"},{"location":"api/interfaces/ITruffleContractFunction/#interface-itrufflecontractfunction","text":"","title":"Interface: ITruffleContractFunction"},{"location":"api/interfaces/ITruffleContractFunction/#hierarchy","text":"function \u21b3 ITruffleContractFunction","title":"Hierarchy"},{"location":"api/interfaces/ITruffleContractFunction/#callable","text":"\u25ba __call (args?: Array . any ): Promise . Hash Defined in contractWrapperBase.ts:377 Parameters: Param Type Description args Array . any - Returns: Promise . Hash","title":"Callable"},{"location":"api/interfaces/ITruffleContractFunction/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ITruffleContractFunction/#estimategas","text":"\u25cf estimateGas : function Defined in contractWrapperBase.ts:381","title":"estimateGas"},{"location":"api/interfaces/ITruffleContractFunction/#type-declaration","text":"\u25ba(args?: Array . any ): number Parameters: Param Type Description args Array . any - Returns: number","title":"Type declaration"},{"location":"api/interfaces/ITruffleContractFunction/#sendtransaction","text":"\u25cf sendTransaction : function Defined in contractWrapperBase.ts:380","title":"sendTransaction"},{"location":"api/interfaces/ITruffleContractFunction/#type-declaration_1","text":"\u25ba(args?: Array . any ): Promise . Hash Parameters: Param Type Description args Array . any - Returns: Promise . Hash","title":"Type declaration"},{"location":"api/interfaces/IUniversalSchemeWrapper/","text":"API Reference IUniversalSchemeWrapper Interface: IUniversalSchemeWrapper The minimum requirements for a universal scheme. Hierarchy \u21b3 ISchemeWrapper \u21b3 IUniversalSchemeWrapper Implemented by ContributionRewardWrapper GenesisProtocolWrapper GlobalConstraintRegistrarWrapper SchemeRegistrarWrapper UpgradeSchemeWrapper VestingSchemeWrapper VoteInOrganizationSchemeWrapper Properties address \u25cf address : Address Inherited from IContractWrapper . address Defined in iContractWrapperBase.ts:13 contract \u25cf contract : any Inherited from IContractWrapper . contract Defined in iContractWrapperBase.ts:14 factory \u25cf factory : IContractWrapperFactory any Inherited from IContractWrapper . factory Defined in iContractWrapperBase.ts:10 friendlyName \u25cf friendlyName : string Inherited from IContractWrapper . friendlyName Defined in iContractWrapperBase.ts:12 name \u25cf name : string Inherited from IContractWrapper . name Defined in iContractWrapperBase.ts:11 Methods getDefaultPermissions \u25ba getDefaultPermissions (): SchemePermissions Inherited from ISchemeWrapper . getDefaultPermissions Defined in iContractWrapperBase.ts:25 Returns: SchemePermissions getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Defined in iContractWrapperBase.ts:32 Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Defined in iContractWrapperBase.ts:36 Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: any ): Promise . Hash Defined in iContractWrapperBase.ts:33 Parameters: Param Type Description params any - Returns: Promise . Hash getSchemeParameters \u25ba getSchemeParameters (avatarAddress: Address ): Promise . any Defined in iContractWrapperBase.ts:35 Parameters: Param Type Description avatarAddress Address - Returns: Promise . any getSchemePermissions \u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Inherited from ISchemeWrapper . getSchemePermissions Defined in iContractWrapperBase.ts:24 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . any Inherited from IContractWrapper . hydrateFromAt Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . any Inherited from IContractWrapper . hydrateFromDeployed Defined in iContractWrapperBase.ts:17 Returns: Promise . any hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . any Inherited from IContractWrapper . hydrateFromNew Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any setParameters \u25ba setParameters (params: any ): Promise . ArcTransactionDataResult Hash Defined in iContractWrapperBase.ts:34 Parameters: Param Type Description params any - Returns: Promise . ArcTransactionDataResult Hash","title":"IUniversalSchemeWrapper"},{"location":"api/interfaces/IUniversalSchemeWrapper/#interface-iuniversalschemewrapper","text":"The minimum requirements for a universal scheme.","title":"Interface: IUniversalSchemeWrapper"},{"location":"api/interfaces/IUniversalSchemeWrapper/#hierarchy","text":"\u21b3 ISchemeWrapper \u21b3 IUniversalSchemeWrapper","title":"Hierarchy"},{"location":"api/interfaces/IUniversalSchemeWrapper/#implemented-by","text":"ContributionRewardWrapper GenesisProtocolWrapper GlobalConstraintRegistrarWrapper SchemeRegistrarWrapper UpgradeSchemeWrapper VestingSchemeWrapper VoteInOrganizationSchemeWrapper","title":"Implemented by"},{"location":"api/interfaces/IUniversalSchemeWrapper/#properties","text":"","title":"Properties"},{"location":"api/interfaces/IUniversalSchemeWrapper/#address","text":"\u25cf address : Address Inherited from IContractWrapper . address Defined in iContractWrapperBase.ts:13","title":"address"},{"location":"api/interfaces/IUniversalSchemeWrapper/#contract","text":"\u25cf contract : any Inherited from IContractWrapper . contract Defined in iContractWrapperBase.ts:14","title":"contract"},{"location":"api/interfaces/IUniversalSchemeWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory any Inherited from IContractWrapper . factory Defined in iContractWrapperBase.ts:10","title":"factory"},{"location":"api/interfaces/IUniversalSchemeWrapper/#friendlyname","text":"\u25cf friendlyName : string Inherited from IContractWrapper . friendlyName Defined in iContractWrapperBase.ts:12","title":"friendlyName"},{"location":"api/interfaces/IUniversalSchemeWrapper/#name","text":"\u25cf name : string Inherited from IContractWrapper . name Defined in iContractWrapperBase.ts:11","title":"name"},{"location":"api/interfaces/IUniversalSchemeWrapper/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IUniversalSchemeWrapper/#getdefaultpermissions","text":"\u25ba getDefaultPermissions (): SchemePermissions Inherited from ISchemeWrapper . getDefaultPermissions Defined in iContractWrapperBase.ts:25 Returns: SchemePermissions","title":"getDefaultPermissions"},{"location":"api/interfaces/IUniversalSchemeWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Defined in iContractWrapperBase.ts:32 Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/interfaces/IUniversalSchemeWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Defined in iContractWrapperBase.ts:36 Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/interfaces/IUniversalSchemeWrapper/#getparametershash","text":"\u25ba getParametersHash (params: any ): Promise . Hash Defined in iContractWrapperBase.ts:33 Parameters: Param Type Description params any - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/interfaces/IUniversalSchemeWrapper/#getschemeparameters","text":"\u25ba getSchemeParameters (avatarAddress: Address ): Promise . any Defined in iContractWrapperBase.ts:35 Parameters: Param Type Description avatarAddress Address - Returns: Promise . any","title":"getSchemeParameters"},{"location":"api/interfaces/IUniversalSchemeWrapper/#getschemepermissions","text":"\u25ba getSchemePermissions (avatarAddress: Address ): Promise . SchemePermissions Inherited from ISchemeWrapper . getSchemePermissions Defined in iContractWrapperBase.ts:24 Parameters: Param Type Description avatarAddress Address - Returns: Promise . SchemePermissions","title":"getSchemePermissions"},{"location":"api/interfaces/IUniversalSchemeWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . any Inherited from IContractWrapper . hydrateFromAt Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any","title":"hydrateFromAt"},{"location":"api/interfaces/IUniversalSchemeWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . any Inherited from IContractWrapper . hydrateFromDeployed Defined in iContractWrapperBase.ts:17 Returns: Promise . any","title":"hydrateFromDeployed"},{"location":"api/interfaces/IUniversalSchemeWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . any Inherited from IContractWrapper . hydrateFromNew Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"hydrateFromNew"},{"location":"api/interfaces/IUniversalSchemeWrapper/#setparameters","text":"\u25ba setParameters (params: any ): Promise . ArcTransactionDataResult Hash Defined in iContractWrapperBase.ts:34 Parameters: Param Type Description params any - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/interfaces/IVotingMachineWrapper/","text":"API Reference IVotingMachineWrapper Interface: IVotingMachineWrapper The minimum requirements for a voting machine wrapper. Hierarchy IContractWrapper \u21b3 IVotingMachineWrapper Implemented by AbsoluteVoteWrapper GenesisProtocolWrapper Properties address \u25cf address : Address Inherited from IContractWrapper . address Defined in iContractWrapperBase.ts:13 contract \u25cf contract : any Inherited from IContractWrapper . contract Defined in iContractWrapperBase.ts:14 factory \u25cf factory : IContractWrapperFactory any Inherited from IContractWrapper . factory Defined in iContractWrapperBase.ts:10 friendlyName \u25cf friendlyName : string Inherited from IContractWrapper . friendlyName Defined in iContractWrapperBase.ts:12 name \u25cf name : string Inherited from IContractWrapper . name Defined in iContractWrapperBase.ts:11 Methods getParameters \u25ba getParameters (paramsHash: Hash ): Promise . any Defined in iContractWrapperBase.ts:43 Parameters: Param Type Description paramsHash Hash - Returns: Promise . any getParametersArray \u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Defined in iContractWrapperBase.ts:46 Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any getParametersHash \u25ba getParametersHash (params: any ): Promise . Hash Defined in iContractWrapperBase.ts:44 Parameters: Param Type Description params any - Returns: Promise . Hash hydrateFromAt \u25ba hydrateFromAt (address: string ): Promise . any Inherited from IContractWrapper . hydrateFromAt Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any hydrateFromDeployed \u25ba hydrateFromDeployed (): Promise . any Inherited from IContractWrapper . hydrateFromDeployed Defined in iContractWrapperBase.ts:17 Returns: Promise . any hydrateFromNew \u25ba hydrateFromNew (...rest: Array . any ): Promise . any Inherited from IContractWrapper . hydrateFromNew Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any setParameters \u25ba setParameters (params: any ): Promise . ArcTransactionDataResult Hash Defined in iContractWrapperBase.ts:45 Parameters: Param Type Description params any - Returns: Promise . ArcTransactionDataResult Hash","title":"IVotingMachineWrapper"},{"location":"api/interfaces/IVotingMachineWrapper/#interface-ivotingmachinewrapper","text":"The minimum requirements for a voting machine wrapper.","title":"Interface: IVotingMachineWrapper"},{"location":"api/interfaces/IVotingMachineWrapper/#hierarchy","text":"IContractWrapper \u21b3 IVotingMachineWrapper","title":"Hierarchy"},{"location":"api/interfaces/IVotingMachineWrapper/#implemented-by","text":"AbsoluteVoteWrapper GenesisProtocolWrapper","title":"Implemented by"},{"location":"api/interfaces/IVotingMachineWrapper/#properties","text":"","title":"Properties"},{"location":"api/interfaces/IVotingMachineWrapper/#address","text":"\u25cf address : Address Inherited from IContractWrapper . address Defined in iContractWrapperBase.ts:13","title":"address"},{"location":"api/interfaces/IVotingMachineWrapper/#contract","text":"\u25cf contract : any Inherited from IContractWrapper . contract Defined in iContractWrapperBase.ts:14","title":"contract"},{"location":"api/interfaces/IVotingMachineWrapper/#factory","text":"\u25cf factory : IContractWrapperFactory any Inherited from IContractWrapper . factory Defined in iContractWrapperBase.ts:10","title":"factory"},{"location":"api/interfaces/IVotingMachineWrapper/#friendlyname","text":"\u25cf friendlyName : string Inherited from IContractWrapper . friendlyName Defined in iContractWrapperBase.ts:12","title":"friendlyName"},{"location":"api/interfaces/IVotingMachineWrapper/#name","text":"\u25cf name : string Inherited from IContractWrapper . name Defined in iContractWrapperBase.ts:11","title":"name"},{"location":"api/interfaces/IVotingMachineWrapper/#methods","text":"","title":"Methods"},{"location":"api/interfaces/IVotingMachineWrapper/#getparameters","text":"\u25ba getParameters (paramsHash: Hash ): Promise . any Defined in iContractWrapperBase.ts:43 Parameters: Param Type Description paramsHash Hash - Returns: Promise . any","title":"getParameters"},{"location":"api/interfaces/IVotingMachineWrapper/#getparametersarray","text":"\u25ba getParametersArray (paramsHash: Hash ): Promise . Array . any Defined in iContractWrapperBase.ts:46 Parameters: Param Type Description paramsHash Hash - Returns: Promise . Array . any","title":"getParametersArray"},{"location":"api/interfaces/IVotingMachineWrapper/#getparametershash","text":"\u25ba getParametersHash (params: any ): Promise . Hash Defined in iContractWrapperBase.ts:44 Parameters: Param Type Description params any - Returns: Promise . Hash","title":"getParametersHash"},{"location":"api/interfaces/IVotingMachineWrapper/#hydratefromat","text":"\u25ba hydrateFromAt (address: string ): Promise . any Inherited from IContractWrapper . hydrateFromAt Defined in iContractWrapperBase.ts:16 Parameters: Param Type Description address string - Returns: Promise . any","title":"hydrateFromAt"},{"location":"api/interfaces/IVotingMachineWrapper/#hydratefromdeployed","text":"\u25ba hydrateFromDeployed (): Promise . any Inherited from IContractWrapper . hydrateFromDeployed Defined in iContractWrapperBase.ts:17 Returns: Promise . any","title":"hydrateFromDeployed"},{"location":"api/interfaces/IVotingMachineWrapper/#hydratefromnew","text":"\u25ba hydrateFromNew (...rest: Array . any ): Promise . any Inherited from IContractWrapper . hydrateFromNew Defined in iContractWrapperBase.ts:15 Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"hydrateFromNew"},{"location":"api/interfaces/IVotingMachineWrapper/#setparameters","text":"\u25ba setParameters (params: any ): Promise . ArcTransactionDataResult Hash Defined in iContractWrapperBase.ts:45 Parameters: Param Type Description params any - Returns: Promise . ArcTransactionDataResult Hash","title":"setParameters"},{"location":"api/interfaces/InitialSchemesSetEventResult/","text":"API Reference InitialSchemesSetEventResult Interface: InitialSchemesSetEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/daoCreator.ts:503","title":"InitialSchemesSetEventResult"},{"location":"api/interfaces/InitialSchemesSetEventResult/#interface-initialschemesseteventresult","text":"","title":"Interface: InitialSchemesSetEventResult"},{"location":"api/interfaces/InitialSchemesSetEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/InitialSchemesSetEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/daoCreator.ts:503","title":"_avatar"},{"location":"api/interfaces/InitializeArcOptions/","text":"API Reference InitializeArcOptions Interface: InitializeArcOptions Options for InitializeArcJs Hierarchy WrapperServiceInitializeOptions \u21b3 InitializeArcOptions Properties \u00abOptional\u00bb filter \u25cf filter : WrapperFilter Inherited from WrapperServiceInitializeOptions . filter Defined in wrapperService.ts:369 Optional filter to only initialize the contracts whose name is set to true . Any contracts that are omitted or set to false here will appear as null in WrapperService.wrappers and WrapperService.wrappersByType , and will not be available in WrapperService.wrappersByAddress . But their factories will still be available in WrapperService.factories . See Optimized Contract Loading for more information. \u00abOptional\u00bb useNetworkDefaultsFor \u25cf useNetworkDefaultsFor : string Defined in index.ts:67 Name of the network for which to use the defaults found in Arc.js/truffle.js. Overwrites config settings network, providerUrl and providerPort. See Network settings for more information. \u00abOptional\u00bb watchForAccountChanges \u25cf watchForAccountChanges : boolean Defined in index.ts:72 Set to true to watch for changes in the current user account. Default is false. See AccountService.initiateAccountWatch .","title":"InitializeArcOptions"},{"location":"api/interfaces/InitializeArcOptions/#interface-initializearcoptions","text":"Options for InitializeArcJs","title":"Interface: InitializeArcOptions"},{"location":"api/interfaces/InitializeArcOptions/#hierarchy","text":"WrapperServiceInitializeOptions \u21b3 InitializeArcOptions","title":"Hierarchy"},{"location":"api/interfaces/InitializeArcOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/InitializeArcOptions/#optional-filter","text":"\u25cf filter : WrapperFilter Inherited from WrapperServiceInitializeOptions . filter Defined in wrapperService.ts:369 Optional filter to only initialize the contracts whose name is set to true . Any contracts that are omitted or set to false here will appear as null in WrapperService.wrappers and WrapperService.wrappersByType , and will not be available in WrapperService.wrappersByAddress . But their factories will still be available in WrapperService.factories . See Optimized Contract Loading for more information.","title":"\u00abOptional\u00bb filter"},{"location":"api/interfaces/InitializeArcOptions/#optional-usenetworkdefaultsfor","text":"\u25cf useNetworkDefaultsFor : string Defined in index.ts:67 Name of the network for which to use the defaults found in Arc.js/truffle.js. Overwrites config settings network, providerUrl and providerPort. See Network settings for more information.","title":"\u00abOptional\u00bb useNetworkDefaultsFor"},{"location":"api/interfaces/InitializeArcOptions/#optional-watchforaccountchanges","text":"\u25cf watchForAccountChanges : boolean Defined in index.ts:72 Set to true to watch for changes in the current user account. Default is false. See AccountService.initiateAccountWatch .","title":"\u00abOptional\u00bb watchForAccountChanges"},{"location":"api/interfaces/MintEventResult/","text":"API Reference MintEventResult Interface: MintEventResult Properties amount \u25cf amount : BigNumber Defined in wrappers/mintableToken.ts:153 Amount minted to \u25cf to : Address Defined in wrappers/mintableToken.ts:149 The token recipient indexed","title":"MintEventResult"},{"location":"api/interfaces/MintEventResult/#interface-minteventresult","text":"","title":"Interface: MintEventResult"},{"location":"api/interfaces/MintEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/MintEventResult/#amount","text":"\u25cf amount : BigNumber Defined in wrappers/mintableToken.ts:153 Amount minted","title":"amount"},{"location":"api/interfaces/MintEventResult/#to","text":"\u25cf to : Address Defined in wrappers/mintableToken.ts:149 The token recipient indexed","title":"to"},{"location":"api/interfaces/MintFinishedEventResult/","text":"API Reference MintFinishedEventResult Interface: MintFinishedEventResult","title":"MintFinishedEventResult"},{"location":"api/interfaces/MintFinishedEventResult/#interface-mintfinishedeventresult","text":"","title":"Interface: MintFinishedEventResult"},{"location":"api/interfaces/MintableTokenMintOptions/","text":"API Reference MintableTokenMintOptions Interface: MintableTokenMintOptions Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/mintableToken.ts:141 Amount to mint recipient \u25cf recipient : Address Defined in wrappers/mintableToken.ts:137 The token recipient","title":"MintableTokenMintOptions"},{"location":"api/interfaces/MintableTokenMintOptions/#interface-mintabletokenmintoptions","text":"","title":"Interface: MintableTokenMintOptions"},{"location":"api/interfaces/MintableTokenMintOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/MintableTokenMintOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/mintableToken.ts:141 Amount to mint","title":"amount"},{"location":"api/interfaces/MintableTokenMintOptions/#recipient","text":"\u25cf recipient : Address Defined in wrappers/mintableToken.ts:137 The token recipient","title":"recipient"},{"location":"api/interfaces/NewContributionProposalEventResult/","text":"API Reference NewContributionProposalEventResult Interface: NewContributionProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/contributionReward.ts:572 indexed _beneficiary \u25cf _beneficiary : Address Defined in wrappers/contributionReward.ts:573 _contributionDescription \u25cf _contributionDescription : Hash Defined in wrappers/contributionReward.ts:574 _externalToken \u25cf _externalToken : Address Defined in wrappers/contributionReward.ts:575 _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/contributionReward.ts:579 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/contributionReward.ts:583 indexed _reputationChange \u25cf _reputationChange : BigNumber Defined in wrappers/contributionReward.ts:584 _rewards \u25cf _rewards : Array . BigNumber Defined in wrappers/contributionReward.ts:585","title":"NewContributionProposalEventResult"},{"location":"api/interfaces/NewContributionProposalEventResult/#interface-newcontributionproposaleventresult","text":"","title":"Interface: NewContributionProposalEventResult"},{"location":"api/interfaces/NewContributionProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewContributionProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/contributionReward.ts:572 indexed","title":"_avatar"},{"location":"api/interfaces/NewContributionProposalEventResult/#_beneficiary","text":"\u25cf _beneficiary : Address Defined in wrappers/contributionReward.ts:573","title":"_beneficiary"},{"location":"api/interfaces/NewContributionProposalEventResult/#_contributiondescription","text":"\u25cf _contributionDescription : Hash Defined in wrappers/contributionReward.ts:574","title":"_contributionDescription"},{"location":"api/interfaces/NewContributionProposalEventResult/#_externaltoken","text":"\u25cf _externalToken : Address Defined in wrappers/contributionReward.ts:575","title":"_externalToken"},{"location":"api/interfaces/NewContributionProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/contributionReward.ts:579 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/NewContributionProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/contributionReward.ts:583 indexed","title":"_proposalId"},{"location":"api/interfaces/NewContributionProposalEventResult/#_reputationchange","text":"\u25cf _reputationChange : BigNumber Defined in wrappers/contributionReward.ts:584","title":"_reputationChange"},{"location":"api/interfaces/NewContributionProposalEventResult/#_rewards","text":"\u25cf _rewards : Array . BigNumber Defined in wrappers/contributionReward.ts:585","title":"_rewards"},{"location":"api/interfaces/NewDaoConfig/","text":"API Reference NewDaoConfig Interface: NewDaoConfig Hierarchy ForgeOrgConfig SchemesConfig \u21b3 NewDaoConfig Properties \u00abOptional\u00bb daoCreatorAddress \u25cf daoCreatorAddress : Address Defined in dao.ts:389 Address of a DaoCreator to use. Default is the Arc DaoCreator supplied in this release of Arc.js. If given, the current Arc.js wrapper class must be compatible with Arc contract at the given address. \u00abOptional\u00bb founders \u25cf founders : Array . FounderConfig Inherited from ForgeOrgConfig . founders Defined in wrappers/daoCreator.ts:569 Optional array describing founders. Default is []. name \u25cf name : string Inherited from ForgeOrgConfig . name Defined in wrappers/daoCreator.ts:552 The name of the new DAO. \u00abOptional\u00bb schemes \u25cf schemes : Array . SchemeConfig Inherited from SchemesConfig . schemes Defined in wrappers/daoCreator.ts:639 Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar. \u00abOptional\u00bb tokenCap \u25cf tokenCap : BigNumber.BigNumber \u23ae string Inherited from ForgeOrgConfig . tokenCap Defined in wrappers/daoCreator.ts:556 Optional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap. tokenName \u25cf tokenName : string Inherited from ForgeOrgConfig . tokenName Defined in wrappers/daoCreator.ts:560 The name of the token to be associated with the DAO tokenSymbol \u25cf tokenSymbol : string Inherited from ForgeOrgConfig . tokenSymbol Defined in wrappers/daoCreator.ts:564 The symbol of the token to be associated with the DAO \u00abOptional\u00bb universalController \u25cf universalController : boolean Inherited from ForgeOrgConfig . universalController Defined in wrappers/daoCreator.ts:574 true to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true. \u00abOptional\u00bb votingMachineParams \u25cf votingMachineParams : NewDaoVotingMachineConfig Inherited from SchemesConfig . votingMachineParams Defined in wrappers/daoCreator.ts:633 Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters. New schemes will be created these voting machine parameters unless overrideen by the SchemeConfig . This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are described in NewDaoVotingMachineConfig .","title":"NewDaoConfig"},{"location":"api/interfaces/NewDaoConfig/#interface-newdaoconfig","text":"","title":"Interface: NewDaoConfig"},{"location":"api/interfaces/NewDaoConfig/#hierarchy","text":"ForgeOrgConfig SchemesConfig \u21b3 NewDaoConfig","title":"Hierarchy"},{"location":"api/interfaces/NewDaoConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewDaoConfig/#optional-daocreatoraddress","text":"\u25cf daoCreatorAddress : Address Defined in dao.ts:389 Address of a DaoCreator to use. Default is the Arc DaoCreator supplied in this release of Arc.js. If given, the current Arc.js wrapper class must be compatible with Arc contract at the given address.","title":"\u00abOptional\u00bb daoCreatorAddress"},{"location":"api/interfaces/NewDaoConfig/#optional-founders","text":"\u25cf founders : Array . FounderConfig Inherited from ForgeOrgConfig . founders Defined in wrappers/daoCreator.ts:569 Optional array describing founders. Default is [].","title":"\u00abOptional\u00bb founders"},{"location":"api/interfaces/NewDaoConfig/#name","text":"\u25cf name : string Inherited from ForgeOrgConfig . name Defined in wrappers/daoCreator.ts:552 The name of the new DAO.","title":"name"},{"location":"api/interfaces/NewDaoConfig/#optional-schemes","text":"\u25cf schemes : Array . SchemeConfig Inherited from SchemesConfig . schemes Defined in wrappers/daoCreator.ts:639 Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.","title":"\u00abOptional\u00bb schemes"},{"location":"api/interfaces/NewDaoConfig/#optional-tokencap","text":"\u25cf tokenCap : BigNumber.BigNumber \u23ae string Inherited from ForgeOrgConfig . tokenCap Defined in wrappers/daoCreator.ts:556 Optional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap.","title":"\u00abOptional\u00bb tokenCap"},{"location":"api/interfaces/NewDaoConfig/#tokenname","text":"\u25cf tokenName : string Inherited from ForgeOrgConfig . tokenName Defined in wrappers/daoCreator.ts:560 The name of the token to be associated with the DAO","title":"tokenName"},{"location":"api/interfaces/NewDaoConfig/#tokensymbol","text":"\u25cf tokenSymbol : string Inherited from ForgeOrgConfig . tokenSymbol Defined in wrappers/daoCreator.ts:564 The symbol of the token to be associated with the DAO","title":"tokenSymbol"},{"location":"api/interfaces/NewDaoConfig/#optional-universalcontroller","text":"\u25cf universalController : boolean Inherited from ForgeOrgConfig . universalController Defined in wrappers/daoCreator.ts:574 true to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true.","title":"\u00abOptional\u00bb universalController"},{"location":"api/interfaces/NewDaoConfig/#optional-votingmachineparams","text":"\u25cf votingMachineParams : NewDaoVotingMachineConfig Inherited from SchemesConfig . votingMachineParams Defined in wrappers/daoCreator.ts:633 Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters. New schemes will be created these voting machine parameters unless overrideen by the SchemeConfig . This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are described in NewDaoVotingMachineConfig .","title":"\u00abOptional\u00bb votingMachineParams"},{"location":"api/interfaces/NewDaoVotingMachineConfig/","text":"API Reference NewDaoVotingMachineConfig Interface: NewDaoVotingMachineConfig Indexable [x: string ]: any You can add your voting-machine-specific parameters here, like ownerVote, votePerc, etc Properties \u00abOptional\u00bb reputation \u25cf reputation : string Defined in wrappers/daoCreator.ts:528 Optional Reputation address. Default is the new DAO's native reputation. \u00abOptional\u00bb votingMachineAddress \u25cf votingMachineAddress : string Defined in wrappers/daoCreator.ts:538 Optional VotingMachine address Default is that of AbsoluteVote \u00abOptional\u00bb votingMachineName \u25cf votingMachineName : string Defined in wrappers/daoCreator.ts:533 Optional VotingMachine name Default is AbsoluteVote","title":"NewDaoVotingMachineConfig"},{"location":"api/interfaces/NewDaoVotingMachineConfig/#interface-newdaovotingmachineconfig","text":"","title":"Interface: NewDaoVotingMachineConfig"},{"location":"api/interfaces/NewDaoVotingMachineConfig/#indexable","text":"[x: string ]: any You can add your voting-machine-specific parameters here, like ownerVote, votePerc, etc","title":"Indexable"},{"location":"api/interfaces/NewDaoVotingMachineConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewDaoVotingMachineConfig/#optional-reputation","text":"\u25cf reputation : string Defined in wrappers/daoCreator.ts:528 Optional Reputation address. Default is the new DAO's native reputation.","title":"\u00abOptional\u00bb reputation"},{"location":"api/interfaces/NewDaoVotingMachineConfig/#optional-votingmachineaddress","text":"\u25cf votingMachineAddress : string Defined in wrappers/daoCreator.ts:538 Optional VotingMachine address Default is that of AbsoluteVote","title":"\u00abOptional\u00bb votingMachineAddress"},{"location":"api/interfaces/NewDaoVotingMachineConfig/#optional-votingmachinename","text":"\u25cf votingMachineName : string Defined in wrappers/daoCreator.ts:533 Optional VotingMachine name Default is AbsoluteVote","title":"\u00abOptional\u00bb votingMachineName"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/","text":"API Reference NewGlobalConstraintsProposalEventResult Interface: NewGlobalConstraintsProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:239 indexed _gc \u25cf _gc : Address Defined in wrappers/globalConstraintRegistrar.ts:244 _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/globalConstraintRegistrar.ts:243 indexed _params \u25cf _params : Hash Defined in wrappers/globalConstraintRegistrar.ts:245 _proposalId \u25cf _proposalId : Hash Defined in wrappers/globalConstraintRegistrar.ts:249 indexed _voteToRemoveParams \u25cf _voteToRemoveParams : Hash Defined in wrappers/globalConstraintRegistrar.ts:250","title":"NewGlobalConstraintsProposalEventResult"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#interface-newglobalconstraintsproposaleventresult","text":"","title":"Interface: NewGlobalConstraintsProposalEventResult"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:239 indexed","title":"_avatar"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#_gc","text":"\u25cf _gc : Address Defined in wrappers/globalConstraintRegistrar.ts:244","title":"_gc"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/globalConstraintRegistrar.ts:243 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#_params","text":"\u25cf _params : Hash Defined in wrappers/globalConstraintRegistrar.ts:245","title":"_params"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/globalConstraintRegistrar.ts:249 indexed","title":"_proposalId"},{"location":"api/interfaces/NewGlobalConstraintsProposalEventResult/#_votetoremoveparams","text":"\u25cf _voteToRemoveParams : Hash Defined in wrappers/globalConstraintRegistrar.ts:250","title":"_voteToRemoveParams"},{"location":"api/interfaces/NewOrgEventResult/","text":"API Reference NewOrgEventResult Interface: NewOrgEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/daoCreator.ts:500","title":"NewOrgEventResult"},{"location":"api/interfaces/NewOrgEventResult/#interface-neworgeventresult","text":"","title":"Interface: NewOrgEventResult"},{"location":"api/interfaces/NewOrgEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewOrgEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/daoCreator.ts:500","title":"_avatar"},{"location":"api/interfaces/NewProposalEventResult/","text":"API Reference NewProposalEventResult Interface: NewProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:93 indexed _numOfChoices \u25cf _numOfChoices : BigNumber Defined in wrappers/iIntVoteInterface.ts:94 _paramsHash \u25cf _paramsHash : Hash Defined in wrappers/iIntVoteInterface.ts:95 _proposalId \u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:99 indexed _proposer \u25cf _proposer : Address Defined in wrappers/iIntVoteInterface.ts:100","title":"NewProposalEventResult"},{"location":"api/interfaces/NewProposalEventResult/#interface-newproposaleventresult","text":"","title":"Interface: NewProposalEventResult"},{"location":"api/interfaces/NewProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:93 indexed","title":"_avatar"},{"location":"api/interfaces/NewProposalEventResult/#_numofchoices","text":"\u25cf _numOfChoices : BigNumber Defined in wrappers/iIntVoteInterface.ts:94","title":"_numOfChoices"},{"location":"api/interfaces/NewProposalEventResult/#_paramshash","text":"\u25cf _paramsHash : Hash Defined in wrappers/iIntVoteInterface.ts:95","title":"_paramsHash"},{"location":"api/interfaces/NewProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:99 indexed","title":"_proposalId"},{"location":"api/interfaces/NewProposalEventResult/#_proposer","text":"\u25cf _proposer : Address Defined in wrappers/iIntVoteInterface.ts:100","title":"_proposer"},{"location":"api/interfaces/NewSchemeProposalEventResult/","text":"API Reference NewSchemeProposalEventResult Interface: NewSchemeProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/schemeRegistrar.ts:278 indexed _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/schemeRegistrar.ts:282 indexed _parametersHash \u25cf _parametersHash : Hash Defined in wrappers/schemeRegistrar.ts:284 _permissions \u25cf _permissions : string Defined in wrappers/schemeRegistrar.ts:283 _proposalId \u25cf _proposalId : Hash Defined in wrappers/schemeRegistrar.ts:288 indexed _scheme \u25cf _scheme : Address Defined in wrappers/schemeRegistrar.ts:289","title":"NewSchemeProposalEventResult"},{"location":"api/interfaces/NewSchemeProposalEventResult/#interface-newschemeproposaleventresult","text":"","title":"Interface: NewSchemeProposalEventResult"},{"location":"api/interfaces/NewSchemeProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewSchemeProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/schemeRegistrar.ts:278 indexed","title":"_avatar"},{"location":"api/interfaces/NewSchemeProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/schemeRegistrar.ts:282 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/NewSchemeProposalEventResult/#_parametershash","text":"\u25cf _parametersHash : Hash Defined in wrappers/schemeRegistrar.ts:284","title":"_parametersHash"},{"location":"api/interfaces/NewSchemeProposalEventResult/#_permissions","text":"\u25cf _permissions : string Defined in wrappers/schemeRegistrar.ts:283","title":"_permissions"},{"location":"api/interfaces/NewSchemeProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/schemeRegistrar.ts:288 indexed","title":"_proposalId"},{"location":"api/interfaces/NewSchemeProposalEventResult/#_scheme","text":"\u25cf _scheme : Address Defined in wrappers/schemeRegistrar.ts:289","title":"_scheme"},{"location":"api/interfaces/NewUpgradeProposalEventResult/","text":"API Reference NewUpgradeProposalEventResult Interface: NewUpgradeProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/upgradeScheme.ts:232 indexed _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/upgradeScheme.ts:236 indexed _newController \u25cf _newController : Address Defined in wrappers/upgradeScheme.ts:237 _proposalId \u25cf _proposalId : Hash Defined in wrappers/upgradeScheme.ts:241 indexed","title":"NewUpgradeProposalEventResult"},{"location":"api/interfaces/NewUpgradeProposalEventResult/#interface-newupgradeproposaleventresult","text":"","title":"Interface: NewUpgradeProposalEventResult"},{"location":"api/interfaces/NewUpgradeProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewUpgradeProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/upgradeScheme.ts:232 indexed","title":"_avatar"},{"location":"api/interfaces/NewUpgradeProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/upgradeScheme.ts:236 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/NewUpgradeProposalEventResult/#_newcontroller","text":"\u25cf _newController : Address Defined in wrappers/upgradeScheme.ts:237","title":"_newController"},{"location":"api/interfaces/NewUpgradeProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/upgradeScheme.ts:241 indexed","title":"_proposalId"},{"location":"api/interfaces/NewVestedAgreementEventResult/","text":"API Reference NewVestedAgreementEventResult Interface: NewVestedAgreementEventResult Properties _agreementId \u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:460 indexed","title":"NewVestedAgreementEventResult"},{"location":"api/interfaces/NewVestedAgreementEventResult/#interface-newvestedagreementeventresult","text":"","title":"Interface: NewVestedAgreementEventResult"},{"location":"api/interfaces/NewVestedAgreementEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewVestedAgreementEventResult/#_agreementid","text":"\u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:460 indexed","title":"_agreementId"},{"location":"api/interfaces/NewVoteProposalEventResult/","text":"API Reference NewVoteProposalEventResult Interface: NewVoteProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/voteInOrganizationScheme.ts:220 indexed _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/voteInOrganizationScheme.ts:224 indexed _originalIntVote \u25cf _originalIntVote : Address Defined in wrappers/voteInOrganizationScheme.ts:225 _originalNumOfChoices \u25cf _originalNumOfChoices : BigNumber Defined in wrappers/voteInOrganizationScheme.ts:227 _originalProposalId \u25cf _originalProposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:226 _proposalId \u25cf _proposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:231 indexed","title":"NewVoteProposalEventResult"},{"location":"api/interfaces/NewVoteProposalEventResult/#interface-newvoteproposaleventresult","text":"","title":"Interface: NewVoteProposalEventResult"},{"location":"api/interfaces/NewVoteProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/NewVoteProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/voteInOrganizationScheme.ts:220 indexed","title":"_avatar"},{"location":"api/interfaces/NewVoteProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/voteInOrganizationScheme.ts:224 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/NewVoteProposalEventResult/#_originalintvote","text":"\u25cf _originalIntVote : Address Defined in wrappers/voteInOrganizationScheme.ts:225","title":"_originalIntVote"},{"location":"api/interfaces/NewVoteProposalEventResult/#_originalnumofchoices","text":"\u25cf _originalNumOfChoices : BigNumber Defined in wrappers/voteInOrganizationScheme.ts:227","title":"_originalNumOfChoices"},{"location":"api/interfaces/NewVoteProposalEventResult/#_originalproposalid","text":"\u25cf _originalProposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:226","title":"_originalProposalId"},{"location":"api/interfaces/NewVoteProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:231 indexed","title":"_proposalId"},{"location":"api/interfaces/OwnerVoteOptions/","text":"API Reference OwnerVoteOptions Interface: OwnerVoteOptions Hierarchy ProposalIdOption \u21b3 OwnerVoteOptions Properties proposalId \u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60 vote \u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:42 voterAddress \u25cf voterAddress : Address Defined in wrappers/iIntVoteInterface.ts:43","title":"OwnerVoteOptions"},{"location":"api/interfaces/OwnerVoteOptions/#interface-ownervoteoptions","text":"","title":"Interface: OwnerVoteOptions"},{"location":"api/interfaces/OwnerVoteOptions/#hierarchy","text":"ProposalIdOption \u21b3 OwnerVoteOptions","title":"Hierarchy"},{"location":"api/interfaces/OwnerVoteOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/OwnerVoteOptions/#proposalid","text":"\u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60","title":"proposalId"},{"location":"api/interfaces/OwnerVoteOptions/#vote","text":"\u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:42","title":"vote"},{"location":"api/interfaces/OwnerVoteOptions/#voteraddress","text":"\u25cf voterAddress : Address Defined in wrappers/iIntVoteInterface.ts:43","title":"voterAddress"},{"location":"api/interfaces/Participant/","text":"API Reference Participant Interface: Participant Properties address \u25cf address : Address Defined in dao.ts:451 \u00abOptional\u00bb reputation \u25cf reputation : BigNumber Defined in dao.ts:452","title":"Participant"},{"location":"api/interfaces/Participant/#interface-participant","text":"","title":"Interface: Participant"},{"location":"api/interfaces/Participant/#properties","text":"","title":"Properties"},{"location":"api/interfaces/Participant/#address","text":"\u25cf address : Address Defined in dao.ts:451","title":"address"},{"location":"api/interfaces/Participant/#optional-reputation","text":"\u25cf reputation : BigNumber Defined in dao.ts:452","title":"\u00abOptional\u00bb reputation"},{"location":"api/interfaces/ProposalDeletedEventResult/","text":"API Reference ProposalDeletedEventResult Interface: ProposalDeletedEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:8 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:12 indexed","title":"ProposalDeletedEventResult"},{"location":"api/interfaces/ProposalDeletedEventResult/#interface-proposaldeletedeventresult","text":"","title":"Interface: ProposalDeletedEventResult"},{"location":"api/interfaces/ProposalDeletedEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposalDeletedEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:8 indexed","title":"_avatar"},{"location":"api/interfaces/ProposalDeletedEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:12 indexed","title":"_proposalId"},{"location":"api/interfaces/ProposalEntity/","text":"API Reference ProposalEntity Interface: ProposalEntity Properties votingMachine \u25cf votingMachine : IntVoteInterfaceWrapper Defined in proposalService.ts:190","title":"ProposalEntity"},{"location":"api/interfaces/ProposalEntity/#interface-proposalentity","text":"","title":"Interface: ProposalEntity"},{"location":"api/interfaces/ProposalEntity/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposalEntity/#votingmachine","text":"\u25cf votingMachine : IntVoteInterfaceWrapper Defined in proposalService.ts:190","title":"votingMachine"},{"location":"api/interfaces/ProposalExecutedEventResult/","text":"API Reference ProposalExecutedEventResult Interface: ProposalExecutedEventResult fired by schemes Properties _avatar \u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:22 indexed _param \u25cf _param : number Defined in wrappers/commonEventInterfaces.ts:23 _proposalId \u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:27 indexed","title":"ProposalExecutedEventResult"},{"location":"api/interfaces/ProposalExecutedEventResult/#interface-proposalexecutedeventresult","text":"fired by schemes","title":"Interface: ProposalExecutedEventResult"},{"location":"api/interfaces/ProposalExecutedEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposalExecutedEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:22 indexed","title":"_avatar"},{"location":"api/interfaces/ProposalExecutedEventResult/#_param","text":"\u25cf _param : number Defined in wrappers/commonEventInterfaces.ts:23","title":"_param"},{"location":"api/interfaces/ProposalExecutedEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:27 indexed","title":"_proposalId"},{"location":"api/interfaces/ProposalIdOption/","text":"API Reference ProposalIdOption Interface: ProposalIdOption Hierarchy ProposalIdOption \u21b3 OwnerVoteOptions \u21b3 VoteOptions \u21b3 VoteWithSpecifiedAmountsOptions \u21b3 VoteStatusOptions Properties proposalId \u25cf proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:60","title":"ProposalIdOption"},{"location":"api/interfaces/ProposalIdOption/#interface-proposalidoption","text":"","title":"Interface: ProposalIdOption"},{"location":"api/interfaces/ProposalIdOption/#hierarchy","text":"ProposalIdOption \u21b3 OwnerVoteOptions \u21b3 VoteOptions \u21b3 VoteWithSpecifiedAmountsOptions \u21b3 VoteStatusOptions","title":"Hierarchy"},{"location":"api/interfaces/ProposalIdOption/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposalIdOption/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:60","title":"proposalId"},{"location":"api/interfaces/ProposalRewards/","text":"API Reference ProposalRewards Interface: ProposalRewards Properties ethAvailableToReward \u25cf ethAvailableToReward : BigNumber Defined in wrappers/contributionReward.ts:606 The amount of ETH the DAO currently has on hand to reward. ethReward \u25cf ethReward : BigNumber Defined in wrappers/contributionReward.ts:610 The total ETH reward ethRewardRedeemable \u25cf ethRewardRedeemable : BigNumber Defined in wrappers/contributionReward.ts:618 The currently-redeemable external token reward ethRewardUnredeemed \u25cf ethRewardUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:614 The total unredeemed amount of ETH externalTokenReward \u25cf externalTokenReward : BigNumber Defined in wrappers/contributionReward.ts:626 The total external token reward externalTokenRewardRedeemable \u25cf externalTokenRewardRedeemable : BigNumber Defined in wrappers/contributionReward.ts:634 The currently-redeemable external token reward externalTokenRewardUnredeemed \u25cf externalTokenRewardUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:630 The total unredeemed number of external tokens externalTokensAvailableToReward \u25cf externalTokensAvailableToReward : BigNumber Defined in wrappers/contributionReward.ts:622 The amount of external tokens the DAO currently has on hand to reward. nativeTokenReward \u25cf nativeTokenReward : BigNumber Defined in wrappers/contributionReward.ts:638 The total native token reward nativeTokenRewardRedeemable \u25cf nativeTokenRewardRedeemable : BigNumber Defined in wrappers/contributionReward.ts:646 The currently-redeemable native token reward nativeTokenRewardUnredeemed \u25cf nativeTokenRewardUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:642 The total unredeemed number of native tokens proposalId \u25cf proposalId : Hash Defined in wrappers/contributionReward.ts:650 The proposal Id reputationChange \u25cf reputationChange : BigNumber Defined in wrappers/contributionReward.ts:654 The total reputation reward reputationChangeRedeemable \u25cf reputationChangeRedeemable : BigNumber Defined in wrappers/contributionReward.ts:662 The currently-redeemable reputation reward reputationChangeUnredeemed \u25cf reputationChangeUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:658 The total unredeemed amount of reputation","title":"ProposalRewards"},{"location":"api/interfaces/ProposalRewards/#interface-proposalrewards","text":"","title":"Interface: ProposalRewards"},{"location":"api/interfaces/ProposalRewards/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposalRewards/#ethavailabletoreward","text":"\u25cf ethAvailableToReward : BigNumber Defined in wrappers/contributionReward.ts:606 The amount of ETH the DAO currently has on hand to reward.","title":"ethAvailableToReward"},{"location":"api/interfaces/ProposalRewards/#ethreward","text":"\u25cf ethReward : BigNumber Defined in wrappers/contributionReward.ts:610 The total ETH reward","title":"ethReward"},{"location":"api/interfaces/ProposalRewards/#ethrewardredeemable","text":"\u25cf ethRewardRedeemable : BigNumber Defined in wrappers/contributionReward.ts:618 The currently-redeemable external token reward","title":"ethRewardRedeemable"},{"location":"api/interfaces/ProposalRewards/#ethrewardunredeemed","text":"\u25cf ethRewardUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:614 The total unredeemed amount of ETH","title":"ethRewardUnredeemed"},{"location":"api/interfaces/ProposalRewards/#externaltokenreward","text":"\u25cf externalTokenReward : BigNumber Defined in wrappers/contributionReward.ts:626 The total external token reward","title":"externalTokenReward"},{"location":"api/interfaces/ProposalRewards/#externaltokenrewardredeemable","text":"\u25cf externalTokenRewardRedeemable : BigNumber Defined in wrappers/contributionReward.ts:634 The currently-redeemable external token reward","title":"externalTokenRewardRedeemable"},{"location":"api/interfaces/ProposalRewards/#externaltokenrewardunredeemed","text":"\u25cf externalTokenRewardUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:630 The total unredeemed number of external tokens","title":"externalTokenRewardUnredeemed"},{"location":"api/interfaces/ProposalRewards/#externaltokensavailabletoreward","text":"\u25cf externalTokensAvailableToReward : BigNumber Defined in wrappers/contributionReward.ts:622 The amount of external tokens the DAO currently has on hand to reward.","title":"externalTokensAvailableToReward"},{"location":"api/interfaces/ProposalRewards/#nativetokenreward","text":"\u25cf nativeTokenReward : BigNumber Defined in wrappers/contributionReward.ts:638 The total native token reward","title":"nativeTokenReward"},{"location":"api/interfaces/ProposalRewards/#nativetokenrewardredeemable","text":"\u25cf nativeTokenRewardRedeemable : BigNumber Defined in wrappers/contributionReward.ts:646 The currently-redeemable native token reward","title":"nativeTokenRewardRedeemable"},{"location":"api/interfaces/ProposalRewards/#nativetokenrewardunredeemed","text":"\u25cf nativeTokenRewardUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:642 The total unredeemed number of native tokens","title":"nativeTokenRewardUnredeemed"},{"location":"api/interfaces/ProposalRewards/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/contributionReward.ts:650 The proposal Id","title":"proposalId"},{"location":"api/interfaces/ProposalRewards/#reputationchange","text":"\u25cf reputationChange : BigNumber Defined in wrappers/contributionReward.ts:654 The total reputation reward","title":"reputationChange"},{"location":"api/interfaces/ProposalRewards/#reputationchangeredeemable","text":"\u25cf reputationChangeRedeemable : BigNumber Defined in wrappers/contributionReward.ts:662 The currently-redeemable reputation reward","title":"reputationChangeRedeemable"},{"location":"api/interfaces/ProposalRewards/#reputationchangeunredeemed","text":"\u25cf reputationChangeUnredeemed : BigNumber Defined in wrappers/contributionReward.ts:658 The total unredeemed amount of reputation","title":"reputationChangeUnredeemed"},{"location":"api/interfaces/ProposeContributionRewardParams/","text":"API Reference ProposeContributionRewardParams Interface: ProposeContributionRewardParams Properties avatar \u25cf avatar : Address Defined in wrappers/contributionReward.ts:703 avatar address beneficiaryAddress \u25cf beneficiaryAddress : string Defined in wrappers/contributionReward.ts:750 beneficiary address description \u25cf description : string Defined in wrappers/contributionReward.ts:707 description of the constraint \u00abOptional\u00bb ethReward \u25cf ethReward : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:724 Reward per period, in ethers. Must be = 0. In Wei. Default is 0; \u00abOptional\u00bb externalToken \u25cf externalToken : string Defined in wrappers/contributionReward.ts:746 The address of the external token (for externalTokenReward) Only required when externalTokenReward is non-zero. \u00abOptional\u00bb externalTokenReward \u25cf externalTokenReward : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:730 Reward per period in the given external token. Must be = 0. In Wei. Default is 0; \u00abOptional\u00bb nativeTokenReward \u25cf nativeTokenReward : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:718 Reward in tokens per period, in the DAO's native token. Must be = 0. In Wei. Default is 0; numberOfPeriods \u25cf numberOfPeriods : number Defined in wrappers/contributionReward.ts:741 Maximum number of periods that can be paid out. Must be 0. periodLength \u25cf periodLength : number Defined in wrappers/contributionReward.ts:736 The number of blocks in a period. Must be = 0. If zero then the rewards will be redeemable immediately upon proposal execution. \u00abOptional\u00bb reputationChange \u25cf reputationChange : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:712 Amount of reputation change requested, per period. Can be negative. In Wei. Default is 0;","title":"ProposeContributionRewardParams"},{"location":"api/interfaces/ProposeContributionRewardParams/#interface-proposecontributionrewardparams","text":"","title":"Interface: ProposeContributionRewardParams"},{"location":"api/interfaces/ProposeContributionRewardParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeContributionRewardParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/contributionReward.ts:703 avatar address","title":"avatar"},{"location":"api/interfaces/ProposeContributionRewardParams/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : string Defined in wrappers/contributionReward.ts:750 beneficiary address","title":"beneficiaryAddress"},{"location":"api/interfaces/ProposeContributionRewardParams/#description","text":"\u25cf description : string Defined in wrappers/contributionReward.ts:707 description of the constraint","title":"description"},{"location":"api/interfaces/ProposeContributionRewardParams/#optional-ethreward","text":"\u25cf ethReward : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:724 Reward per period, in ethers. Must be = 0. In Wei. Default is 0;","title":"\u00abOptional\u00bb ethReward"},{"location":"api/interfaces/ProposeContributionRewardParams/#optional-externaltoken","text":"\u25cf externalToken : string Defined in wrappers/contributionReward.ts:746 The address of the external token (for externalTokenReward) Only required when externalTokenReward is non-zero.","title":"\u00abOptional\u00bb externalToken"},{"location":"api/interfaces/ProposeContributionRewardParams/#optional-externaltokenreward","text":"\u25cf externalTokenReward : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:730 Reward per period in the given external token. Must be = 0. In Wei. Default is 0;","title":"\u00abOptional\u00bb externalTokenReward"},{"location":"api/interfaces/ProposeContributionRewardParams/#optional-nativetokenreward","text":"\u25cf nativeTokenReward : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:718 Reward in tokens per period, in the DAO's native token. Must be = 0. In Wei. Default is 0;","title":"\u00abOptional\u00bb nativeTokenReward"},{"location":"api/interfaces/ProposeContributionRewardParams/#numberofperiods","text":"\u25cf numberOfPeriods : number Defined in wrappers/contributionReward.ts:741 Maximum number of periods that can be paid out. Must be 0.","title":"numberOfPeriods"},{"location":"api/interfaces/ProposeContributionRewardParams/#periodlength","text":"\u25cf periodLength : number Defined in wrappers/contributionReward.ts:736 The number of blocks in a period. Must be = 0. If zero then the rewards will be redeemable immediately upon proposal execution.","title":"periodLength"},{"location":"api/interfaces/ProposeContributionRewardParams/#optional-reputationchange","text":"\u25cf reputationChange : BigNumber \u23ae string Defined in wrappers/contributionReward.ts:712 Amount of reputation change requested, per period. Can be negative. In Wei. Default is 0;","title":"\u00abOptional\u00bb reputationChange"},{"location":"api/interfaces/ProposeControllerParams/","text":"API Reference ProposeControllerParams Interface: ProposeControllerParams Properties avatar \u25cf avatar : Address Defined in wrappers/upgradeScheme.ts:280 avatar address controller \u25cf controller : string Defined in wrappers/upgradeScheme.ts:284 controller address","title":"ProposeControllerParams"},{"location":"api/interfaces/ProposeControllerParams/#interface-proposecontrollerparams","text":"","title":"Interface: ProposeControllerParams"},{"location":"api/interfaces/ProposeControllerParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeControllerParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/upgradeScheme.ts:280 avatar address","title":"avatar"},{"location":"api/interfaces/ProposeControllerParams/#controller","text":"\u25cf controller : string Defined in wrappers/upgradeScheme.ts:284 controller address","title":"controller"},{"location":"api/interfaces/ProposeOptions/","text":"API Reference ProposeOptions Interface: ProposeOptions Properties avatarAddress \u25cf avatarAddress : Address Defined in wrappers/iIntVoteInterface.ts:34 executable \u25cf executable : Address Defined in wrappers/iIntVoteInterface.ts:35 numOfChoices \u25cf numOfChoices : number Defined in wrappers/iIntVoteInterface.ts:36 \u00abOptional\u00bb proposalParameters \u25cf proposalParameters : Hash Defined in wrappers/iIntVoteInterface.ts:38 \u00abOptional\u00bb proposerAddress \u25cf proposerAddress : Address Defined in wrappers/iIntVoteInterface.ts:37","title":"ProposeOptions"},{"location":"api/interfaces/ProposeOptions/#interface-proposeoptions","text":"","title":"Interface: ProposeOptions"},{"location":"api/interfaces/ProposeOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeOptions/#avataraddress","text":"\u25cf avatarAddress : Address Defined in wrappers/iIntVoteInterface.ts:34","title":"avatarAddress"},{"location":"api/interfaces/ProposeOptions/#executable","text":"\u25cf executable : Address Defined in wrappers/iIntVoteInterface.ts:35","title":"executable"},{"location":"api/interfaces/ProposeOptions/#numofchoices","text":"\u25cf numOfChoices : number Defined in wrappers/iIntVoteInterface.ts:36","title":"numOfChoices"},{"location":"api/interfaces/ProposeOptions/#optional-proposalparameters","text":"\u25cf proposalParameters : Hash Defined in wrappers/iIntVoteInterface.ts:38","title":"\u00abOptional\u00bb proposalParameters"},{"location":"api/interfaces/ProposeOptions/#optional-proposeraddress","text":"\u25cf proposerAddress : Address Defined in wrappers/iIntVoteInterface.ts:37","title":"\u00abOptional\u00bb proposerAddress"},{"location":"api/interfaces/ProposeToAddModifyGlobalConstraintParams/","text":"API Reference ProposeToAddModifyGlobalConstraintParams Interface: ProposeToAddModifyGlobalConstraintParams Properties avatar \u25cf avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:273 avatar address globalConstraint \u25cf globalConstraint : string Defined in wrappers/globalConstraintRegistrar.ts:277 the address of the global constraint to add globalConstraintParametersHash \u25cf globalConstraintParametersHash : string Defined in wrappers/globalConstraintRegistrar.ts:281 hash of the parameters of the global contraint votingMachineHash \u25cf votingMachineHash : string Defined in wrappers/globalConstraintRegistrar.ts:285 voting machine to use when voting to remove the global constraint","title":"ProposeToAddModifyGlobalConstraintParams"},{"location":"api/interfaces/ProposeToAddModifyGlobalConstraintParams/#interface-proposetoaddmodifyglobalconstraintparams","text":"","title":"Interface: ProposeToAddModifyGlobalConstraintParams"},{"location":"api/interfaces/ProposeToAddModifyGlobalConstraintParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeToAddModifyGlobalConstraintParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:273 avatar address","title":"avatar"},{"location":"api/interfaces/ProposeToAddModifyGlobalConstraintParams/#globalconstraint","text":"\u25cf globalConstraint : string Defined in wrappers/globalConstraintRegistrar.ts:277 the address of the global constraint to add","title":"globalConstraint"},{"location":"api/interfaces/ProposeToAddModifyGlobalConstraintParams/#globalconstraintparametershash","text":"\u25cf globalConstraintParametersHash : string Defined in wrappers/globalConstraintRegistrar.ts:281 hash of the parameters of the global contraint","title":"globalConstraintParametersHash"},{"location":"api/interfaces/ProposeToAddModifyGlobalConstraintParams/#votingmachinehash","text":"\u25cf votingMachineHash : string Defined in wrappers/globalConstraintRegistrar.ts:285 voting machine to use when voting to remove the global constraint","title":"votingMachineHash"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/","text":"API Reference ProposeToAddModifySchemeParams Interface: ProposeToAddModifySchemeParams Properties avatar \u25cf avatar : Address Defined in wrappers/schemeRegistrar.ts:312 avatar address \u00abOptional\u00bb permissions \u25cf permissions : SchemePermissions \u23ae null Defined in wrappers/schemeRegistrar.ts:336 Optionally supply values from SchemePermissions or DefaultSchemePermissions. This value is manditory for non-Arc schemes. For Arc schemes the default is taken from DefaultSchemePermissions for the scheme given by schemeName. \u00abOptional\u00bb schemeAddress \u25cf schemeAddress : Address Defined in wrappers/schemeRegistrar.ts:318 Optional scheme address. Supply this if you are submitting a non-Arc scheme or wish to use a different Arc scheme than the default. In the latter case, you must also supply the schemeName. \u00abOptional\u00bb schemeName \u25cf schemeName : string \u23ae null Defined in wrappers/schemeRegistrar.ts:323 Scheme name, like \"SchemeRegistrar\" or \"ContributionReward\". Not required if you are registering a non-arc scheme. schemeParametersHash \u25cf schemeParametersHash : string Defined in wrappers/schemeRegistrar.ts:327 Fash of scheme parameters. These must be already registered with the new scheme.","title":"ProposeToAddModifySchemeParams"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/#interface-proposetoaddmodifyschemeparams","text":"","title":"Interface: ProposeToAddModifySchemeParams"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/schemeRegistrar.ts:312 avatar address","title":"avatar"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/#optional-permissions","text":"\u25cf permissions : SchemePermissions \u23ae null Defined in wrappers/schemeRegistrar.ts:336 Optionally supply values from SchemePermissions or DefaultSchemePermissions. This value is manditory for non-Arc schemes. For Arc schemes the default is taken from DefaultSchemePermissions for the scheme given by schemeName.","title":"\u00abOptional\u00bb permissions"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/#optional-schemeaddress","text":"\u25cf schemeAddress : Address Defined in wrappers/schemeRegistrar.ts:318 Optional scheme address. Supply this if you are submitting a non-Arc scheme or wish to use a different Arc scheme than the default. In the latter case, you must also supply the schemeName.","title":"\u00abOptional\u00bb schemeAddress"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/#optional-schemename","text":"\u25cf schemeName : string \u23ae null Defined in wrappers/schemeRegistrar.ts:323 Scheme name, like \"SchemeRegistrar\" or \"ContributionReward\". Not required if you are registering a non-arc scheme.","title":"\u00abOptional\u00bb schemeName"},{"location":"api/interfaces/ProposeToAddModifySchemeParams/#schemeparametershash","text":"\u25cf schemeParametersHash : string Defined in wrappers/schemeRegistrar.ts:327 Fash of scheme parameters. These must be already registered with the new scheme.","title":"schemeParametersHash"},{"location":"api/interfaces/ProposeToRemoveGlobalConstraintParams/","text":"API Reference ProposeToRemoveGlobalConstraintParams Interface: ProposeToRemoveGlobalConstraintParams Properties avatar \u25cf avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:292 avatar address globalConstraintAddress \u25cf globalConstraintAddress : Address Defined in wrappers/globalConstraintRegistrar.ts:296 the address of the global constraint to remove","title":"ProposeToRemoveGlobalConstraintParams"},{"location":"api/interfaces/ProposeToRemoveGlobalConstraintParams/#interface-proposetoremoveglobalconstraintparams","text":"","title":"Interface: ProposeToRemoveGlobalConstraintParams"},{"location":"api/interfaces/ProposeToRemoveGlobalConstraintParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeToRemoveGlobalConstraintParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:292 avatar address","title":"avatar"},{"location":"api/interfaces/ProposeToRemoveGlobalConstraintParams/#globalconstraintaddress","text":"\u25cf globalConstraintAddress : Address Defined in wrappers/globalConstraintRegistrar.ts:296 the address of the global constraint to remove","title":"globalConstraintAddress"},{"location":"api/interfaces/ProposeToRemoveSchemeParams/","text":"API Reference ProposeToRemoveSchemeParams Interface: ProposeToRemoveSchemeParams Properties avatar \u25cf avatar : Address Defined in wrappers/schemeRegistrar.ts:343 avatar address schemeAddress \u25cf schemeAddress : string Defined in wrappers/schemeRegistrar.ts:347 the address of the global constraint to remove","title":"ProposeToRemoveSchemeParams"},{"location":"api/interfaces/ProposeToRemoveSchemeParams/#interface-proposetoremoveschemeparams","text":"","title":"Interface: ProposeToRemoveSchemeParams"},{"location":"api/interfaces/ProposeToRemoveSchemeParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeToRemoveSchemeParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/schemeRegistrar.ts:343 avatar address","title":"avatar"},{"location":"api/interfaces/ProposeToRemoveSchemeParams/#schemeaddress","text":"\u25cf schemeAddress : string Defined in wrappers/schemeRegistrar.ts:347 the address of the global constraint to remove","title":"schemeAddress"},{"location":"api/interfaces/ProposeUpgradingSchemeParams/","text":"API Reference ProposeUpgradingSchemeParams Interface: ProposeUpgradingSchemeParams Properties avatar \u25cf avatar : Address Defined in wrappers/upgradeScheme.ts:265 avatar address scheme \u25cf scheme : string Defined in wrappers/upgradeScheme.ts:269 upgrading scheme address schemeParametersHash \u25cf schemeParametersHash : string Defined in wrappers/upgradeScheme.ts:273 hash of the parameters of the upgrading scheme. These must be already registered with the new scheme.","title":"ProposeUpgradingSchemeParams"},{"location":"api/interfaces/ProposeUpgradingSchemeParams/#interface-proposeupgradingschemeparams","text":"","title":"Interface: ProposeUpgradingSchemeParams"},{"location":"api/interfaces/ProposeUpgradingSchemeParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeUpgradingSchemeParams/#avatar","text":"\u25cf avatar : Address Defined in wrappers/upgradeScheme.ts:265 avatar address","title":"avatar"},{"location":"api/interfaces/ProposeUpgradingSchemeParams/#scheme","text":"\u25cf scheme : string Defined in wrappers/upgradeScheme.ts:269 upgrading scheme address","title":"scheme"},{"location":"api/interfaces/ProposeUpgradingSchemeParams/#schemeparametershash","text":"\u25cf schemeParametersHash : string Defined in wrappers/upgradeScheme.ts:273 hash of the parameters of the upgrading scheme. These must be already registered with the new scheme.","title":"schemeParametersHash"},{"location":"api/interfaces/ProposeVestingAgreementConfig/","text":"API Reference ProposeVestingAgreementConfig Interface: ProposeVestingAgreementConfig Hierarchy CommonVestingAgreementConfig \u21b3 ProposeVestingAgreementConfig Properties amountPerPeriod \u25cf amountPerPeriod : BigNumber.BigNumber \u23ae string Inherited from CommonVestingAgreementConfig . amountPerPeriod Defined in wrappers/vestingScheme.ts:531 The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero. avatar \u25cf avatar : Address Defined in wrappers/vestingScheme.ts:572 The address of the avatar in which the proposal is being be made. beneficiaryAddress \u25cf beneficiaryAddress : Address Inherited from CommonVestingAgreementConfig . beneficiaryAddress Defined in wrappers/vestingScheme.ts:514 Address of the recipient of the proposed agreement. cliffInPeriods \u25cf cliffInPeriods : number Inherited from CommonVestingAgreementConfig . cliffInPeriods Defined in wrappers/vestingScheme.ts:547 The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero. numOfAgreedPeriods \u25cf numOfAgreedPeriods : number Inherited from CommonVestingAgreementConfig . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:541 maximum number of periods that can be paid out. Must be greater than zero. periodLength \u25cf periodLength : number Inherited from CommonVestingAgreementConfig . periodLength Defined in wrappers/vestingScheme.ts:536 number of blocks in a period. Must be greater than zero. returnOnCancelAddress \u25cf returnOnCancelAddress : Address Inherited from CommonVestingAgreementConfig . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:518 Where to send the tokens in case of cancellation signaturesReqToCancel \u25cf signaturesReqToCancel : number Inherited from CommonVestingAgreementConfig . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:552 The number of signatures required to cancel agreement. See signToCancel. signers \u25cf signers : Array . Address Inherited from CommonVestingAgreementConfig . signers Defined in wrappers/vestingScheme.ts:557 An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel. \u00abOptional\u00bb startingBlock \u25cf startingBlock : number Inherited from CommonVestingAgreementConfig . startingBlock Defined in wrappers/vestingScheme.ts:524 Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.","title":"ProposeVestingAgreementConfig"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#interface-proposevestingagreementconfig","text":"","title":"Interface: ProposeVestingAgreementConfig"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#hierarchy","text":"CommonVestingAgreementConfig \u21b3 ProposeVestingAgreementConfig","title":"Hierarchy"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#amountperperiod","text":"\u25cf amountPerPeriod : BigNumber.BigNumber \u23ae string Inherited from CommonVestingAgreementConfig . amountPerPeriod Defined in wrappers/vestingScheme.ts:531 The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.","title":"amountPerPeriod"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#avatar","text":"\u25cf avatar : Address Defined in wrappers/vestingScheme.ts:572 The address of the avatar in which the proposal is being be made.","title":"avatar"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Inherited from CommonVestingAgreementConfig . beneficiaryAddress Defined in wrappers/vestingScheme.ts:514 Address of the recipient of the proposed agreement.","title":"beneficiaryAddress"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#cliffinperiods","text":"\u25cf cliffInPeriods : number Inherited from CommonVestingAgreementConfig . cliffInPeriods Defined in wrappers/vestingScheme.ts:547 The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.","title":"cliffInPeriods"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#numofagreedperiods","text":"\u25cf numOfAgreedPeriods : number Inherited from CommonVestingAgreementConfig . numOfAgreedPeriods Defined in wrappers/vestingScheme.ts:541 maximum number of periods that can be paid out. Must be greater than zero.","title":"numOfAgreedPeriods"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#periodlength","text":"\u25cf periodLength : number Inherited from CommonVestingAgreementConfig . periodLength Defined in wrappers/vestingScheme.ts:536 number of blocks in a period. Must be greater than zero.","title":"periodLength"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#returnoncanceladdress","text":"\u25cf returnOnCancelAddress : Address Inherited from CommonVestingAgreementConfig . returnOnCancelAddress Defined in wrappers/vestingScheme.ts:518 Where to send the tokens in case of cancellation","title":"returnOnCancelAddress"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#signaturesreqtocancel","text":"\u25cf signaturesReqToCancel : number Inherited from CommonVestingAgreementConfig . signaturesReqToCancel Defined in wrappers/vestingScheme.ts:552 The number of signatures required to cancel agreement. See signToCancel.","title":"signaturesReqToCancel"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#signers","text":"\u25cf signers : Array . Address Inherited from CommonVestingAgreementConfig . signers Defined in wrappers/vestingScheme.ts:557 An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.","title":"signers"},{"location":"api/interfaces/ProposeVestingAgreementConfig/#optional-startingblock","text":"\u25cf startingBlock : number Inherited from CommonVestingAgreementConfig . startingBlock Defined in wrappers/vestingScheme.ts:524 Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.","title":"\u00abOptional\u00bb startingBlock"},{"location":"api/interfaces/ProposedVestedAgreementEventResult/","text":"API Reference ProposedVestedAgreementEventResult Interface: ProposedVestedAgreementEventResult Properties _agreementId \u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:467 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/vestingScheme.ts:471 indexed","title":"ProposedVestedAgreementEventResult"},{"location":"api/interfaces/ProposedVestedAgreementEventResult/#interface-proposedvestedagreementeventresult","text":"","title":"Interface: ProposedVestedAgreementEventResult"},{"location":"api/interfaces/ProposedVestedAgreementEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ProposedVestedAgreementEventResult/#_agreementid","text":"\u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:467 indexed","title":"_agreementId"},{"location":"api/interfaces/ProposedVestedAgreementEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/vestingScheme.ts:471 indexed","title":"_proposalId"},{"location":"api/interfaces/RedeeemableResult/","text":"API Reference RedeeemableResult Interface: RedeeemableResult Properties contributionRewardEther \u25cf contributionRewardEther : boolean Defined in wrappers/redeemer.ts:114 contributionRewardExternalToken \u25cf contributionRewardExternalToken : boolean Defined in wrappers/redeemer.ts:115 contributionRewardNativeToken \u25cf contributionRewardNativeToken : boolean Defined in wrappers/redeemer.ts:116 contributionRewardReputation \u25cf contributionRewardReputation : boolean Defined in wrappers/redeemer.ts:117 daoStakingBountyPotentialReward \u25cf daoStakingBountyPotentialReward : BigNumber Defined in wrappers/redeemer.ts:119 daoStakingBountyReward \u25cf daoStakingBountyReward : BigNumber Defined in wrappers/redeemer.ts:118 proposalExecuted \u25cf proposalExecuted : boolean Defined in wrappers/redeemer.ts:120 proposalId \u25cf proposalId : Hash Defined in wrappers/redeemer.ts:121 proposerReputationAmount \u25cf proposerReputationAmount : BigNumber Defined in wrappers/redeemer.ts:122 stakerReputationAmount \u25cf stakerReputationAmount : BigNumber Defined in wrappers/redeemer.ts:123 stakerTokenAmount \u25cf stakerTokenAmount : BigNumber Defined in wrappers/redeemer.ts:124 voterReputationAmount \u25cf voterReputationAmount : BigNumber Defined in wrappers/redeemer.ts:125 voterTokenAmount \u25cf voterTokenAmount : BigNumber Defined in wrappers/redeemer.ts:126","title":"RedeeemableResult"},{"location":"api/interfaces/RedeeemableResult/#interface-redeeemableresult","text":"","title":"Interface: RedeeemableResult"},{"location":"api/interfaces/RedeeemableResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RedeeemableResult/#contributionrewardether","text":"\u25cf contributionRewardEther : boolean Defined in wrappers/redeemer.ts:114","title":"contributionRewardEther"},{"location":"api/interfaces/RedeeemableResult/#contributionrewardexternaltoken","text":"\u25cf contributionRewardExternalToken : boolean Defined in wrappers/redeemer.ts:115","title":"contributionRewardExternalToken"},{"location":"api/interfaces/RedeeemableResult/#contributionrewardnativetoken","text":"\u25cf contributionRewardNativeToken : boolean Defined in wrappers/redeemer.ts:116","title":"contributionRewardNativeToken"},{"location":"api/interfaces/RedeeemableResult/#contributionrewardreputation","text":"\u25cf contributionRewardReputation : boolean Defined in wrappers/redeemer.ts:117","title":"contributionRewardReputation"},{"location":"api/interfaces/RedeeemableResult/#daostakingbountypotentialreward","text":"\u25cf daoStakingBountyPotentialReward : BigNumber Defined in wrappers/redeemer.ts:119","title":"daoStakingBountyPotentialReward"},{"location":"api/interfaces/RedeeemableResult/#daostakingbountyreward","text":"\u25cf daoStakingBountyReward : BigNumber Defined in wrappers/redeemer.ts:118","title":"daoStakingBountyReward"},{"location":"api/interfaces/RedeeemableResult/#proposalexecuted","text":"\u25cf proposalExecuted : boolean Defined in wrappers/redeemer.ts:120","title":"proposalExecuted"},{"location":"api/interfaces/RedeeemableResult/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/redeemer.ts:121","title":"proposalId"},{"location":"api/interfaces/RedeeemableResult/#proposerreputationamount","text":"\u25cf proposerReputationAmount : BigNumber Defined in wrappers/redeemer.ts:122","title":"proposerReputationAmount"},{"location":"api/interfaces/RedeeemableResult/#stakerreputationamount","text":"\u25cf stakerReputationAmount : BigNumber Defined in wrappers/redeemer.ts:123","title":"stakerReputationAmount"},{"location":"api/interfaces/RedeeemableResult/#stakertokenamount","text":"\u25cf stakerTokenAmount : BigNumber Defined in wrappers/redeemer.ts:124","title":"stakerTokenAmount"},{"location":"api/interfaces/RedeeemableResult/#voterreputationamount","text":"\u25cf voterReputationAmount : BigNumber Defined in wrappers/redeemer.ts:125","title":"voterReputationAmount"},{"location":"api/interfaces/RedeeemableResult/#votertokenamount","text":"\u25cf voterTokenAmount : BigNumber Defined in wrappers/redeemer.ts:126","title":"voterTokenAmount"},{"location":"api/interfaces/RedeemConfig/","text":"API Reference RedeemConfig Interface: RedeemConfig Properties beneficiaryAddress \u25cf beneficiaryAddress : Address Defined in wrappers/genesisProtocol.ts:1168 agent to whom to award the proposal payoffs proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1164 unique hash of proposal index","title":"RedeemConfig"},{"location":"api/interfaces/RedeemConfig/#interface-redeemconfig","text":"","title":"Interface: RedeemConfig"},{"location":"api/interfaces/RedeemConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RedeemConfig/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Defined in wrappers/genesisProtocol.ts:1168 agent to whom to award the proposal payoffs","title":"beneficiaryAddress"},{"location":"api/interfaces/RedeemConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1164 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/RedeemEventResult/","text":"API Reference RedeemEventResult Interface: RedeemEventResult Properties _amount \u25cf _amount : BigNumber Defined in wrappers/commonEventInterfaces.ts:34 the amount redeemed _avatar \u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:39 avatar address indexed _beneficiary \u25cf _beneficiary : Address Defined in wrappers/commonEventInterfaces.ts:43 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:47 indexed","title":"RedeemEventResult"},{"location":"api/interfaces/RedeemEventResult/#interface-redeemeventresult","text":"","title":"Interface: RedeemEventResult"},{"location":"api/interfaces/RedeemEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RedeemEventResult/#_amount","text":"\u25cf _amount : BigNumber Defined in wrappers/commonEventInterfaces.ts:34 the amount redeemed","title":"_amount"},{"location":"api/interfaces/RedeemEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:39 avatar address indexed","title":"_avatar"},{"location":"api/interfaces/RedeemEventResult/#_beneficiary","text":"\u25cf _beneficiary : Address Defined in wrappers/commonEventInterfaces.ts:43 indexed","title":"_beneficiary"},{"location":"api/interfaces/RedeemEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:47 indexed","title":"_proposalId"},{"location":"api/interfaces/RedeemerOptions/","text":"API Reference RedeemerOptions Interface: RedeemerOptions Properties avatarAddress \u25cf avatarAddress : Address Defined in wrappers/redeemer.ts:130 beneficiaryAddress \u25cf beneficiaryAddress : Address Defined in wrappers/redeemer.ts:131 proposalId \u25cf proposalId : Hash Defined in wrappers/redeemer.ts:132","title":"RedeemerOptions"},{"location":"api/interfaces/RedeemerOptions/#interface-redeemeroptions","text":"","title":"Interface: RedeemerOptions"},{"location":"api/interfaces/RedeemerOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RedeemerOptions/#avataraddress","text":"\u25cf avatarAddress : Address Defined in wrappers/redeemer.ts:130","title":"avatarAddress"},{"location":"api/interfaces/RedeemerOptions/#beneficiaryaddress","text":"\u25cf beneficiaryAddress : Address Defined in wrappers/redeemer.ts:131","title":"beneficiaryAddress"},{"location":"api/interfaces/RedeemerOptions/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/redeemer.ts:132","title":"proposalId"},{"location":"api/interfaces/RedeemerRedeemEventResult/","text":"API Reference RedeemerRedeemEventResult Interface: RedeemerRedeemEventResult Properties _contributionRewardEther \u25cf _contributionRewardEther : boolean Defined in wrappers/redeemer.ts:136 _contributionRewardExternalToken \u25cf _contributionRewardExternalToken : boolean Defined in wrappers/redeemer.ts:137 _contributionRewardNativeToken \u25cf _contributionRewardNativeToken : boolean Defined in wrappers/redeemer.ts:138 _contributionRewardReputation \u25cf _contributionRewardReputation : boolean Defined in wrappers/redeemer.ts:139 _execute \u25cf _execute : boolean Defined in wrappers/redeemer.ts:143 indexed _genesisProtocolDaoBounty \u25cf _genesisProtocolDaoBounty : boolean Defined in wrappers/redeemer.ts:145 _genesisProtocolRedeem \u25cf _genesisProtocolRedeem : boolean Defined in wrappers/redeemer.ts:144 _proposalId \u25cf _proposalId : Hash Defined in wrappers/redeemer.ts:146","title":"RedeemerRedeemEventResult"},{"location":"api/interfaces/RedeemerRedeemEventResult/#interface-redeemerredeemeventresult","text":"","title":"Interface: RedeemerRedeemEventResult"},{"location":"api/interfaces/RedeemerRedeemEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_contributionrewardether","text":"\u25cf _contributionRewardEther : boolean Defined in wrappers/redeemer.ts:136","title":"_contributionRewardEther"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_contributionrewardexternaltoken","text":"\u25cf _contributionRewardExternalToken : boolean Defined in wrappers/redeemer.ts:137","title":"_contributionRewardExternalToken"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_contributionrewardnativetoken","text":"\u25cf _contributionRewardNativeToken : boolean Defined in wrappers/redeemer.ts:138","title":"_contributionRewardNativeToken"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_contributionrewardreputation","text":"\u25cf _contributionRewardReputation : boolean Defined in wrappers/redeemer.ts:139","title":"_contributionRewardReputation"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_execute","text":"\u25cf _execute : boolean Defined in wrappers/redeemer.ts:143 indexed","title":"_execute"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_genesisprotocoldaobounty","text":"\u25cf _genesisProtocolDaoBounty : boolean Defined in wrappers/redeemer.ts:145","title":"_genesisProtocolDaoBounty"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_genesisprotocolredeem","text":"\u25cf _genesisProtocolRedeem : boolean Defined in wrappers/redeemer.ts:144","title":"_genesisProtocolRedeem"},{"location":"api/interfaces/RedeemerRedeemEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/redeemer.ts:146","title":"_proposalId"},{"location":"api/interfaces/RefreshReputationEventResult/","text":"API Reference RefreshReputationEventResult Interface: RefreshReputationEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/absoluteVote.ts:199 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/absoluteVote.ts:195 indexed _reputation \u25cf _reputation : BigNumber Defined in wrappers/absoluteVote.ts:205 _voter \u25cf _voter : Address Defined in wrappers/absoluteVote.ts:203 indexed","title":"RefreshReputationEventResult"},{"location":"api/interfaces/RefreshReputationEventResult/#interface-refreshreputationeventresult","text":"","title":"Interface: RefreshReputationEventResult"},{"location":"api/interfaces/RefreshReputationEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RefreshReputationEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/absoluteVote.ts:199 indexed","title":"_avatar"},{"location":"api/interfaces/RefreshReputationEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/absoluteVote.ts:195 indexed","title":"_proposalId"},{"location":"api/interfaces/RefreshReputationEventResult/#_reputation","text":"\u25cf _reputation : BigNumber Defined in wrappers/absoluteVote.ts:205","title":"_reputation"},{"location":"api/interfaces/RefreshReputationEventResult/#_voter","text":"\u25cf _voter : Address Defined in wrappers/absoluteVote.ts:203 indexed","title":"_voter"},{"location":"api/interfaces/RemoveGlobalConstraintsProposalEventResult/","text":"API Reference RemoveGlobalConstraintsProposalEventResult Interface: RemoveGlobalConstraintsProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:257 indexed _gc \u25cf _gc : Address Defined in wrappers/globalConstraintRegistrar.ts:258 _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/globalConstraintRegistrar.ts:262 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/globalConstraintRegistrar.ts:266 indexed","title":"RemoveGlobalConstraintsProposalEventResult"},{"location":"api/interfaces/RemoveGlobalConstraintsProposalEventResult/#interface-removeglobalconstraintsproposaleventresult","text":"","title":"Interface: RemoveGlobalConstraintsProposalEventResult"},{"location":"api/interfaces/RemoveGlobalConstraintsProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/globalConstraintRegistrar.ts:257 indexed","title":"_avatar"},{"location":"api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_gc","text":"\u25cf _gc : Address Defined in wrappers/globalConstraintRegistrar.ts:258","title":"_gc"},{"location":"api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/globalConstraintRegistrar.ts:262 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/globalConstraintRegistrar.ts:266 indexed","title":"_proposalId"},{"location":"api/interfaces/RemoveSchemeProposalEventResult/","text":"API Reference RemoveSchemeProposalEventResult Interface: RemoveSchemeProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/schemeRegistrar.ts:296 indexed _intVoteInterface \u25cf _intVoteInterface : Address Defined in wrappers/schemeRegistrar.ts:300 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/schemeRegistrar.ts:304 indexed _scheme \u25cf _scheme : Address Defined in wrappers/schemeRegistrar.ts:305","title":"RemoveSchemeProposalEventResult"},{"location":"api/interfaces/RemoveSchemeProposalEventResult/#interface-removeschemeproposaleventresult","text":"","title":"Interface: RemoveSchemeProposalEventResult"},{"location":"api/interfaces/RemoveSchemeProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RemoveSchemeProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/schemeRegistrar.ts:296 indexed","title":"_avatar"},{"location":"api/interfaces/RemoveSchemeProposalEventResult/#_intvoteinterface","text":"\u25cf _intVoteInterface : Address Defined in wrappers/schemeRegistrar.ts:300 indexed","title":"_intVoteInterface"},{"location":"api/interfaces/RemoveSchemeProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/schemeRegistrar.ts:304 indexed","title":"_proposalId"},{"location":"api/interfaces/RemoveSchemeProposalEventResult/#_scheme","text":"\u25cf _scheme : Address Defined in wrappers/schemeRegistrar.ts:305","title":"_scheme"},{"location":"api/interfaces/ReputationBurnEventResult/","text":"API Reference ReputationBurnEventResult Interface: ReputationBurnEventResult Properties _amount \u25cf _amount : BigNumber Defined in wrappers/reputation.ts:150 Amount burnt _from \u25cf _from : Address Defined in wrappers/reputation.ts:146 Whose reputation was burnt indexed","title":"ReputationBurnEventResult"},{"location":"api/interfaces/ReputationBurnEventResult/#interface-reputationburneventresult","text":"","title":"Interface: ReputationBurnEventResult"},{"location":"api/interfaces/ReputationBurnEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ReputationBurnEventResult/#_amount","text":"\u25cf _amount : BigNumber Defined in wrappers/reputation.ts:150 Amount burnt","title":"_amount"},{"location":"api/interfaces/ReputationBurnEventResult/#_from","text":"\u25cf _from : Address Defined in wrappers/reputation.ts:146 Whose reputation was burnt indexed","title":"_from"},{"location":"api/interfaces/ReputationBurnOptions/","text":"API Reference ReputationBurnOptions Interface: ReputationBurnOptions Properties amount \u25cf amount : BigNumber Defined in wrappers/reputation.ts:126 Amount to mint from \u25cf from : BigNumber Defined in wrappers/reputation.ts:122","title":"ReputationBurnOptions"},{"location":"api/interfaces/ReputationBurnOptions/#interface-reputationburnoptions","text":"","title":"Interface: ReputationBurnOptions"},{"location":"api/interfaces/ReputationBurnOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ReputationBurnOptions/#amount","text":"\u25cf amount : BigNumber Defined in wrappers/reputation.ts:126 Amount to mint","title":"amount"},{"location":"api/interfaces/ReputationBurnOptions/#from","text":"\u25cf from : BigNumber Defined in wrappers/reputation.ts:122","title":"from"},{"location":"api/interfaces/ReputationMintEventResult/","text":"API Reference ReputationMintEventResult Interface: ReputationMintEventResult Properties _amount \u25cf _amount : BigNumber Defined in wrappers/reputation.ts:138 Amount minted _to \u25cf _to : Address Defined in wrappers/reputation.ts:134 The recipient of reputation indexed","title":"ReputationMintEventResult"},{"location":"api/interfaces/ReputationMintEventResult/#interface-reputationminteventresult","text":"","title":"Interface: ReputationMintEventResult"},{"location":"api/interfaces/ReputationMintEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ReputationMintEventResult/#_amount","text":"\u25cf _amount : BigNumber Defined in wrappers/reputation.ts:138 Amount minted","title":"_amount"},{"location":"api/interfaces/ReputationMintEventResult/#_to","text":"\u25cf _to : Address Defined in wrappers/reputation.ts:134 The recipient of reputation indexed","title":"_to"},{"location":"api/interfaces/ReputationMintOptions/","text":"API Reference ReputationMintOptions Interface: ReputationMintOptions Properties amount \u25cf amount : BigNumber Defined in wrappers/reputation.ts:118 Amount to mint recipient \u25cf recipient : Address Defined in wrappers/reputation.ts:114 The token recipient","title":"ReputationMintOptions"},{"location":"api/interfaces/ReputationMintOptions/#interface-reputationmintoptions","text":"","title":"Interface: ReputationMintOptions"},{"location":"api/interfaces/ReputationMintOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ReputationMintOptions/#amount","text":"\u25cf amount : BigNumber Defined in wrappers/reputation.ts:118 Amount to mint","title":"amount"},{"location":"api/interfaces/ReputationMintOptions/#recipient","text":"\u25cf recipient : Address Defined in wrappers/reputation.ts:114 The token recipient","title":"recipient"},{"location":"api/interfaces/RevokeSignToCancelAgreementEventResult/","text":"API Reference RevokeSignToCancelAgreementEventResult Interface: RevokeSignToCancelAgreementEventResult Properties _agreementId \u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:489 indexed _signer \u25cf _signer : Address Defined in wrappers/vestingScheme.ts:493 indexed","title":"RevokeSignToCancelAgreementEventResult"},{"location":"api/interfaces/RevokeSignToCancelAgreementEventResult/#interface-revokesigntocancelagreementeventresult","text":"","title":"Interface: RevokeSignToCancelAgreementEventResult"},{"location":"api/interfaces/RevokeSignToCancelAgreementEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RevokeSignToCancelAgreementEventResult/#_agreementid","text":"\u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:489 indexed","title":"_agreementId"},{"location":"api/interfaces/RevokeSignToCancelAgreementEventResult/#_signer","text":"\u25cf _signer : Address Defined in wrappers/vestingScheme.ts:493 indexed","title":"_signer"},{"location":"api/interfaces/RevokeSignToCancelVestingAgreementConfig/","text":"API Reference RevokeSignToCancelVestingAgreementConfig Interface: RevokeSignToCancelVestingAgreementConfig Properties agreementId \u25cf agreementId : number Defined in wrappers/vestingScheme.ts:586 the agreementId","title":"RevokeSignToCancelVestingAgreementConfig"},{"location":"api/interfaces/RevokeSignToCancelVestingAgreementConfig/#interface-revokesigntocancelvestingagreementconfig","text":"","title":"Interface: RevokeSignToCancelVestingAgreementConfig"},{"location":"api/interfaces/RevokeSignToCancelVestingAgreementConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/RevokeSignToCancelVestingAgreementConfig/#agreementid","text":"\u25cf agreementId : number Defined in wrappers/vestingScheme.ts:586 the agreementId","title":"agreementId"},{"location":"api/interfaces/SchemeConfig/","text":"API Reference SchemeConfig Interface: SchemeConfig Configuration of an Arc scheme that you want to automatically register with a new DAO. Indexable [x: string ]: any You can add other scheme parameters here. For example, ContributionReward requires orgNativeTokenFee. SchemeRegistrar has voteRemoveParametersHash. Properties \u00abOptional\u00bb address \u25cf address : string Defined in wrappers/daoCreator.ts:589 Scheme address if you don't want to use the scheme deployed in this release of Arc.js, or if it is a non-Arc scheme. \u00abOptional\u00bb name \u25cf name : string Defined in wrappers/daoCreator.ts:584 The name of the Arc scheme. Omit this only if it is a non-Arc scheme. \u00abOptional\u00bb parametersHash \u25cf parametersHash : Hash Defined in wrappers/daoCreator.ts:619 Optional scheme parameters hash for schemes, particularly for schemes that are not wrapped in Arc.js. If this is supplied, then any other parameters (either in x or votingMachineParams) are ignored. \u00abOptional\u00bb permissions \u25cf permissions : SchemePermissions Defined in wrappers/daoCreator.ts:596 Extra permissions on the scheme. The minimum permissions for the scheme will be enforced (or'd with anything you supply). See ContractWrapperBase.getDefaultPermissions for what this string should look like. \u00abOptional\u00bb votingMachineParams \u25cf votingMachineParams : NewDaoVotingMachineConfig Defined in wrappers/daoCreator.ts:608 Optional votingMachine parameters if you have not supplied them in ForgeOrgConfig or want to override them. Note it costs more gas to add them here. New schemes will be created with these voting machine parameters and the DAO's native reputation contract. This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are those of whatever voting machine is the default for DaoCreator. The default default VotingMachine is AbsoluteVote.","title":"SchemeConfig"},{"location":"api/interfaces/SchemeConfig/#interface-schemeconfig","text":"Configuration of an Arc scheme that you want to automatically register with a new DAO.","title":"Interface: SchemeConfig"},{"location":"api/interfaces/SchemeConfig/#indexable","text":"[x: string ]: any You can add other scheme parameters here. For example, ContributionReward requires orgNativeTokenFee. SchemeRegistrar has voteRemoveParametersHash.","title":"Indexable"},{"location":"api/interfaces/SchemeConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SchemeConfig/#optional-address","text":"\u25cf address : string Defined in wrappers/daoCreator.ts:589 Scheme address if you don't want to use the scheme deployed in this release of Arc.js, or if it is a non-Arc scheme.","title":"\u00abOptional\u00bb address"},{"location":"api/interfaces/SchemeConfig/#optional-name","text":"\u25cf name : string Defined in wrappers/daoCreator.ts:584 The name of the Arc scheme. Omit this only if it is a non-Arc scheme.","title":"\u00abOptional\u00bb name"},{"location":"api/interfaces/SchemeConfig/#optional-parametershash","text":"\u25cf parametersHash : Hash Defined in wrappers/daoCreator.ts:619 Optional scheme parameters hash for schemes, particularly for schemes that are not wrapped in Arc.js. If this is supplied, then any other parameters (either in x or votingMachineParams) are ignored.","title":"\u00abOptional\u00bb parametersHash"},{"location":"api/interfaces/SchemeConfig/#optional-permissions","text":"\u25cf permissions : SchemePermissions Defined in wrappers/daoCreator.ts:596 Extra permissions on the scheme. The minimum permissions for the scheme will be enforced (or'd with anything you supply). See ContractWrapperBase.getDefaultPermissions for what this string should look like.","title":"\u00abOptional\u00bb permissions"},{"location":"api/interfaces/SchemeConfig/#optional-votingmachineparams","text":"\u25cf votingMachineParams : NewDaoVotingMachineConfig Defined in wrappers/daoCreator.ts:608 Optional votingMachine parameters if you have not supplied them in ForgeOrgConfig or want to override them. Note it costs more gas to add them here. New schemes will be created with these voting machine parameters and the DAO's native reputation contract. This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are those of whatever voting machine is the default for DaoCreator. The default default VotingMachine is AbsoluteVote.","title":"\u00abOptional\u00bb votingMachineParams"},{"location":"api/interfaces/SchemeProposalExecuted/","text":"API Reference SchemeProposalExecuted Interface: SchemeProposalExecuted fired by schemes Hierarchy SchemeProposalExecuted \u21b3 VestingSchemeSchemeProposalExecuted Properties avatarAddress \u25cf avatarAddress : Address Defined in wrappers/commonEventInterfaces.ts:54 proposalId \u25cf proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:56 winningVote \u25cf winningVote : number Defined in wrappers/commonEventInterfaces.ts:55","title":"SchemeProposalExecuted"},{"location":"api/interfaces/SchemeProposalExecuted/#interface-schemeproposalexecuted","text":"fired by schemes","title":"Interface: SchemeProposalExecuted"},{"location":"api/interfaces/SchemeProposalExecuted/#hierarchy","text":"SchemeProposalExecuted \u21b3 VestingSchemeSchemeProposalExecuted","title":"Hierarchy"},{"location":"api/interfaces/SchemeProposalExecuted/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SchemeProposalExecuted/#avataraddress","text":"\u25cf avatarAddress : Address Defined in wrappers/commonEventInterfaces.ts:54","title":"avatarAddress"},{"location":"api/interfaces/SchemeProposalExecuted/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:56","title":"proposalId"},{"location":"api/interfaces/SchemeProposalExecuted/#winningvote","text":"\u25cf winningVote : number Defined in wrappers/commonEventInterfaces.ts:55","title":"winningVote"},{"location":"api/interfaces/SchemeProposalExecutedEventResult/","text":"API Reference SchemeProposalExecutedEventResult Interface: SchemeProposalExecutedEventResult fired by schemes Properties _avatar \u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:66 indexed _param \u25cf _param : number Defined in wrappers/commonEventInterfaces.ts:70 typically the winning vote _proposalId \u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:74 indexed","title":"SchemeProposalExecutedEventResult"},{"location":"api/interfaces/SchemeProposalExecutedEventResult/#interface-schemeproposalexecutedeventresult","text":"fired by schemes","title":"Interface: SchemeProposalExecutedEventResult"},{"location":"api/interfaces/SchemeProposalExecutedEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SchemeProposalExecutedEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/commonEventInterfaces.ts:66 indexed","title":"_avatar"},{"location":"api/interfaces/SchemeProposalExecutedEventResult/#_param","text":"\u25cf _param : number Defined in wrappers/commonEventInterfaces.ts:70 typically the winning vote","title":"_param"},{"location":"api/interfaces/SchemeProposalExecutedEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/commonEventInterfaces.ts:74 indexed","title":"_proposalId"},{"location":"api/interfaces/SchemeRegistrarParams/","text":"API Reference SchemeRegistrarParams Interface: SchemeRegistrarParams Hierarchy StandardSchemeParams \u21b3 SchemeRegistrarParams Properties voteParametersHash \u25cf voteParametersHash : Hash Inherited from StandardSchemeParams . voteParametersHash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal. \u00abOptional\u00bb voteRemoveParametersHash \u25cf voteRemoveParametersHash : Hash Defined in wrappers/schemeRegistrar.ts:357 Optional hash of voting machine parameters to use when voting on a proposal to unregister a scheme that is being registered. Default is the value of voteParametersHash. votingMachineAddress \u25cf votingMachineAddress : Address Inherited from StandardSchemeParams . votingMachineAddress Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"SchemeRegistrarParams"},{"location":"api/interfaces/SchemeRegistrarParams/#interface-schemeregistrarparams","text":"","title":"Interface: SchemeRegistrarParams"},{"location":"api/interfaces/SchemeRegistrarParams/#hierarchy","text":"StandardSchemeParams \u21b3 SchemeRegistrarParams","title":"Hierarchy"},{"location":"api/interfaces/SchemeRegistrarParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SchemeRegistrarParams/#voteparametershash","text":"\u25cf voteParametersHash : Hash Inherited from StandardSchemeParams . voteParametersHash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal.","title":"voteParametersHash"},{"location":"api/interfaces/SchemeRegistrarParams/#optional-voteremoveparametershash","text":"\u25cf voteRemoveParametersHash : Hash Defined in wrappers/schemeRegistrar.ts:357 Optional hash of voting machine parameters to use when voting on a proposal to unregister a scheme that is being registered. Default is the value of voteParametersHash.","title":"\u00abOptional\u00bb voteRemoveParametersHash"},{"location":"api/interfaces/SchemeRegistrarParams/#votingmachineaddress","text":"\u25cf votingMachineAddress : Address Inherited from StandardSchemeParams . votingMachineAddress Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"votingMachineAddress"},{"location":"api/interfaces/SchemesConfig/","text":"API Reference SchemesConfig Interface: SchemesConfig Hierarchy SchemesConfig \u21b3 SetSchemesConfig \u21b3 NewDaoConfig Properties \u00abOptional\u00bb schemes \u25cf schemes : Array . SchemeConfig Defined in wrappers/daoCreator.ts:639 Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar. \u00abOptional\u00bb votingMachineParams \u25cf votingMachineParams : NewDaoVotingMachineConfig Defined in wrappers/daoCreator.ts:633 Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters. New schemes will be created these voting machine parameters unless overrideen by the SchemeConfig . This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are described in NewDaoVotingMachineConfig .","title":"SchemesConfig"},{"location":"api/interfaces/SchemesConfig/#interface-schemesconfig","text":"","title":"Interface: SchemesConfig"},{"location":"api/interfaces/SchemesConfig/#hierarchy","text":"SchemesConfig \u21b3 SetSchemesConfig \u21b3 NewDaoConfig","title":"Hierarchy"},{"location":"api/interfaces/SchemesConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SchemesConfig/#optional-schemes","text":"\u25cf schemes : Array . SchemeConfig Defined in wrappers/daoCreator.ts:639 Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.","title":"\u00abOptional\u00bb schemes"},{"location":"api/interfaces/SchemesConfig/#optional-votingmachineparams","text":"\u25cf votingMachineParams : NewDaoVotingMachineConfig Defined in wrappers/daoCreator.ts:633 Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters. New schemes will be created these voting machine parameters unless overrideen by the SchemeConfig . This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are described in NewDaoVotingMachineConfig .","title":"\u00abOptional\u00bb votingMachineParams"},{"location":"api/interfaces/SetSchemesConfig/","text":"API Reference SetSchemesConfig Interface: SetSchemesConfig Hierarchy SchemesConfig TxGeneratingFunctionOptions \u21b3 SetSchemesConfig Properties avatar \u25cf avatar : Address Defined in wrappers/daoCreator.ts:646 avatar address \u00abOptional\u00bb schemes \u25cf schemes : Array . SchemeConfig Inherited from SchemesConfig . schemes Defined in wrappers/daoCreator.ts:639 Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar. \u00abOptional\u00bb txEventContext \u25cf txEventContext : TxEventContext Inherited from TxGeneratingFunctionOptions.txEventContext Defined in transactionService.ts:675 \u00abOptional\u00bb votingMachineParams \u25cf votingMachineParams : NewDaoVotingMachineConfig Inherited from SchemesConfig . votingMachineParams Defined in wrappers/daoCreator.ts:633 Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters. New schemes will be created these voting machine parameters unless overrideen by the SchemeConfig . This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are described in NewDaoVotingMachineConfig .","title":"SetSchemesConfig"},{"location":"api/interfaces/SetSchemesConfig/#interface-setschemesconfig","text":"","title":"Interface: SetSchemesConfig"},{"location":"api/interfaces/SetSchemesConfig/#hierarchy","text":"SchemesConfig TxGeneratingFunctionOptions \u21b3 SetSchemesConfig","title":"Hierarchy"},{"location":"api/interfaces/SetSchemesConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SetSchemesConfig/#avatar","text":"\u25cf avatar : Address Defined in wrappers/daoCreator.ts:646 avatar address","title":"avatar"},{"location":"api/interfaces/SetSchemesConfig/#optional-schemes","text":"\u25cf schemes : Array . SchemeConfig Inherited from SchemesConfig . schemes Defined in wrappers/daoCreator.ts:639 Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.","title":"\u00abOptional\u00bb schemes"},{"location":"api/interfaces/SetSchemesConfig/#optional-txeventcontext","text":"\u25cf txEventContext : TxEventContext Inherited from TxGeneratingFunctionOptions.txEventContext Defined in transactionService.ts:675","title":"\u00abOptional\u00bb txEventContext"},{"location":"api/interfaces/SetSchemesConfig/#optional-votingmachineparams","text":"\u25cf votingMachineParams : NewDaoVotingMachineConfig Inherited from SchemesConfig . votingMachineParams Defined in wrappers/daoCreator.ts:633 Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters. New schemes will be created these voting machine parameters unless overrideen by the SchemeConfig . This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters. Defaults are described in NewDaoVotingMachineConfig .","title":"\u00abOptional\u00bb votingMachineParams"},{"location":"api/interfaces/ShouldBoostConfig/","text":"API Reference ShouldBoostConfig Interface: ShouldBoostConfig Properties proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1175 unique hash of proposal index","title":"ShouldBoostConfig"},{"location":"api/interfaces/ShouldBoostConfig/#interface-shouldboostconfig","text":"","title":"Interface: ShouldBoostConfig"},{"location":"api/interfaces/ShouldBoostConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/ShouldBoostConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1175 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/SignToCancelAgreementEventResult/","text":"API Reference SignToCancelAgreementEventResult Interface: SignToCancelAgreementEventResult Properties _agreementId \u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:478 indexed _signer \u25cf _signer : Address Defined in wrappers/vestingScheme.ts:482 indexed","title":"SignToCancelAgreementEventResult"},{"location":"api/interfaces/SignToCancelAgreementEventResult/#interface-signtocancelagreementeventresult","text":"","title":"Interface: SignToCancelAgreementEventResult"},{"location":"api/interfaces/SignToCancelAgreementEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SignToCancelAgreementEventResult/#_agreementid","text":"\u25cf _agreementId : BigNumber.BigNumber Defined in wrappers/vestingScheme.ts:478 indexed","title":"_agreementId"},{"location":"api/interfaces/SignToCancelAgreementEventResult/#_signer","text":"\u25cf _signer : Address Defined in wrappers/vestingScheme.ts:482 indexed","title":"_signer"},{"location":"api/interfaces/SignToCancelVestingAgreementConfig/","text":"API Reference SignToCancelVestingAgreementConfig Interface: SignToCancelVestingAgreementConfig Properties agreementId \u25cf agreementId : number Defined in wrappers/vestingScheme.ts:579 the agreementId","title":"SignToCancelVestingAgreementConfig"},{"location":"api/interfaces/SignToCancelVestingAgreementConfig/#interface-signtocancelvestingagreementconfig","text":"","title":"Interface: SignToCancelVestingAgreementConfig"},{"location":"api/interfaces/SignToCancelVestingAgreementConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/SignToCancelVestingAgreementConfig/#agreementid","text":"\u25cf agreementId : number Defined in wrappers/vestingScheme.ts:579 the agreementId","title":"agreementId"},{"location":"api/interfaces/StakeConfig/","text":"API Reference StakeConfig Interface: StakeConfig Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1149 token amount to stake on the outcome resulting in this vote, in Wei proposalId \u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1153 unique hash of proposal index vote \u25cf vote : number Defined in wrappers/genesisProtocol.ts:1157 the choice of vote. Can be 1 (YES) or 2 (NO).","title":"StakeConfig"},{"location":"api/interfaces/StakeConfig/#interface-stakeconfig","text":"","title":"Interface: StakeConfig"},{"location":"api/interfaces/StakeConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StakeConfig/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/genesisProtocol.ts:1149 token amount to stake on the outcome resulting in this vote, in Wei","title":"amount"},{"location":"api/interfaces/StakeConfig/#proposalid","text":"\u25cf proposalId : string Defined in wrappers/genesisProtocol.ts:1153 unique hash of proposal index","title":"proposalId"},{"location":"api/interfaces/StakeConfig/#vote","text":"\u25cf vote : number Defined in wrappers/genesisProtocol.ts:1157 the choice of vote. Can be 1 (YES) or 2 (NO).","title":"vote"},{"location":"api/interfaces/StakeEventResult/","text":"API Reference StakeEventResult Interface: StakeEventResult Properties _amount \u25cf _amount : BigNumber Defined in wrappers/genesisProtocol.ts:968 _avatar \u25cf _avatar : Address Defined in wrappers/genesisProtocol.ts:972 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/genesisProtocol.ts:976 indexed _staker \u25cf _staker : Address Defined in wrappers/genesisProtocol.ts:981 indexed _vote \u25cf _vote : number Defined in wrappers/genesisProtocol.ts:977","title":"StakeEventResult"},{"location":"api/interfaces/StakeEventResult/#interface-stakeeventresult","text":"","title":"Interface: StakeEventResult"},{"location":"api/interfaces/StakeEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StakeEventResult/#_amount","text":"\u25cf _amount : BigNumber Defined in wrappers/genesisProtocol.ts:968","title":"_amount"},{"location":"api/interfaces/StakeEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/genesisProtocol.ts:972 indexed","title":"_avatar"},{"location":"api/interfaces/StakeEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/genesisProtocol.ts:976 indexed","title":"_proposalId"},{"location":"api/interfaces/StakeEventResult/#_staker","text":"\u25cf _staker : Address Defined in wrappers/genesisProtocol.ts:981 indexed","title":"_staker"},{"location":"api/interfaces/StakeEventResult/#_vote","text":"\u25cf _vote : number Defined in wrappers/genesisProtocol.ts:977","title":"_vote"},{"location":"api/interfaces/StandardSchemeParams/","text":"API Reference StandardSchemeParams Interface: StandardSchemeParams Common scheme parameters for schemes that are able to create proposals. Hierarchy StandardSchemeParams \u21b3 ContributionRewardParams \u21b3 ContributionRewardParamsReturn \u21b3 SchemeRegistrarParams Properties voteParametersHash \u25cf voteParametersHash : Hash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal. votingMachineAddress \u25cf votingMachineAddress : Address Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"StandardSchemeParams"},{"location":"api/interfaces/StandardSchemeParams/#interface-standardschemeparams","text":"Common scheme parameters for schemes that are able to create proposals.","title":"Interface: StandardSchemeParams"},{"location":"api/interfaces/StandardSchemeParams/#hierarchy","text":"StandardSchemeParams \u21b3 ContributionRewardParams \u21b3 ContributionRewardParamsReturn \u21b3 SchemeRegistrarParams","title":"Hierarchy"},{"location":"api/interfaces/StandardSchemeParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StandardSchemeParams/#voteparametershash","text":"\u25cf voteParametersHash : Hash Defined in iContractWrapperBase.ts:198 Hash of the voting machine parameters to use when voting on a proposal.","title":"voteParametersHash"},{"location":"api/interfaces/StandardSchemeParams/#votingmachineaddress","text":"\u25cf votingMachineAddress : Address Defined in iContractWrapperBase.ts:202 Address of the voting machine to use when voting on a proposal.","title":"votingMachineAddress"},{"location":"api/interfaces/StandardTokenAllowanceOptions/","text":"API Reference StandardTokenAllowanceOptions Interface: StandardTokenAllowanceOptions Properties owner \u25cf owner : Address Defined in wrappers/standardToken.ts:299 The account that has the tokens to spend. spender \u25cf spender : Address Defined in wrappers/standardToken.ts:304 The account that will initiate the transfer of tokens on behalf of the owner.","title":"StandardTokenAllowanceOptions"},{"location":"api/interfaces/StandardTokenAllowanceOptions/#interface-standardtokenallowanceoptions","text":"","title":"Interface: StandardTokenAllowanceOptions"},{"location":"api/interfaces/StandardTokenAllowanceOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StandardTokenAllowanceOptions/#owner","text":"\u25cf owner : Address Defined in wrappers/standardToken.ts:299 The account that has the tokens to spend.","title":"owner"},{"location":"api/interfaces/StandardTokenAllowanceOptions/#spender","text":"\u25cf spender : Address Defined in wrappers/standardToken.ts:304 The account that will initiate the transfer of tokens on behalf of the owner.","title":"spender"},{"location":"api/interfaces/StandardTokenApproveOptions/","text":"API Reference StandardTokenApproveOptions Interface: StandardTokenApproveOptions Hierarchy StandardTokenApproveOptions \u21b3 ApproveAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:237 Amount to approve to transfer. \u00abOptional\u00bb owner \u25cf owner : Address Defined in wrappers/standardToken.ts:242 The account that has the tokens to spend. Default is msg.sender. spender \u25cf spender : Address Defined in wrappers/standardToken.ts:247 The account that will initiate the transfer of tokens on behalf of the owner.","title":"StandardTokenApproveOptions"},{"location":"api/interfaces/StandardTokenApproveOptions/#interface-standardtokenapproveoptions","text":"","title":"Interface: StandardTokenApproveOptions"},{"location":"api/interfaces/StandardTokenApproveOptions/#hierarchy","text":"StandardTokenApproveOptions \u21b3 ApproveAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/StandardTokenApproveOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StandardTokenApproveOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:237 Amount to approve to transfer.","title":"amount"},{"location":"api/interfaces/StandardTokenApproveOptions/#optional-owner","text":"\u25cf owner : Address Defined in wrappers/standardToken.ts:242 The account that has the tokens to spend. Default is msg.sender.","title":"\u00abOptional\u00bb owner"},{"location":"api/interfaces/StandardTokenApproveOptions/#spender","text":"\u25cf spender : Address Defined in wrappers/standardToken.ts:247 The account that will initiate the transfer of tokens on behalf of the owner.","title":"spender"},{"location":"api/interfaces/StandardTokenChangeApprovalOptions/","text":"API Reference StandardTokenChangeApprovalOptions Interface: StandardTokenChangeApprovalOptions Hierarchy StandardTokenChangeApprovalOptions \u21b3 ChangeApprovalAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:308 \u00abOptional\u00bb owner \u25cf owner : Address Defined in wrappers/standardToken.ts:313 The account that has the tokens to spend. Default is msg.sender. spender \u25cf spender : Address Defined in wrappers/standardToken.ts:318 The account that will initiate the transfer of tokens on behalf of the owner.","title":"StandardTokenChangeApprovalOptions"},{"location":"api/interfaces/StandardTokenChangeApprovalOptions/#interface-standardtokenchangeapprovaloptions","text":"","title":"Interface: StandardTokenChangeApprovalOptions"},{"location":"api/interfaces/StandardTokenChangeApprovalOptions/#hierarchy","text":"StandardTokenChangeApprovalOptions \u21b3 ChangeApprovalAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/StandardTokenChangeApprovalOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StandardTokenChangeApprovalOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:308","title":"amount"},{"location":"api/interfaces/StandardTokenChangeApprovalOptions/#optional-owner","text":"\u25cf owner : Address Defined in wrappers/standardToken.ts:313 The account that has the tokens to spend. Default is msg.sender.","title":"\u00abOptional\u00bb owner"},{"location":"api/interfaces/StandardTokenChangeApprovalOptions/#spender","text":"\u25cf spender : Address Defined in wrappers/standardToken.ts:318 The account that will initiate the transfer of tokens on behalf of the owner.","title":"spender"},{"location":"api/interfaces/StandardTokenTransferFromOptions/","text":"API Reference StandardTokenTransferFromOptions Interface: StandardTokenTransferFromOptions Hierarchy StandardTokenTransferFromOptions \u21b3 TransferFromAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:290 from \u25cf from : Address Defined in wrappers/standardToken.ts:291 to \u25cf to : Address Defined in wrappers/standardToken.ts:292","title":"StandardTokenTransferFromOptions"},{"location":"api/interfaces/StandardTokenTransferFromOptions/#interface-standardtokentransferfromoptions","text":"","title":"Interface: StandardTokenTransferFromOptions"},{"location":"api/interfaces/StandardTokenTransferFromOptions/#hierarchy","text":"StandardTokenTransferFromOptions \u21b3 TransferFromAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/StandardTokenTransferFromOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StandardTokenTransferFromOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:290","title":"amount"},{"location":"api/interfaces/StandardTokenTransferFromOptions/#from","text":"\u25cf from : Address Defined in wrappers/standardToken.ts:291","title":"from"},{"location":"api/interfaces/StandardTokenTransferFromOptions/#to","text":"\u25cf to : Address Defined in wrappers/standardToken.ts:292","title":"to"},{"location":"api/interfaces/StandardTokenTransferOptions/","text":"API Reference StandardTokenTransferOptions Interface: StandardTokenTransferOptions Hierarchy StandardTokenTransferOptions \u21b3 TransferAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:285 to \u25cf to : Address Defined in wrappers/standardToken.ts:286","title":"StandardTokenTransferOptions"},{"location":"api/interfaces/StandardTokenTransferOptions/#interface-standardtokentransferoptions","text":"","title":"Interface: StandardTokenTransferOptions"},{"location":"api/interfaces/StandardTokenTransferOptions/#hierarchy","text":"StandardTokenTransferOptions \u21b3 TransferAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/StandardTokenTransferOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/StandardTokenTransferOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Defined in wrappers/standardToken.ts:285","title":"amount"},{"location":"api/interfaces/StandardTokenTransferOptions/#to","text":"\u25cf to : Address Defined in wrappers/standardToken.ts:286","title":"to"},{"location":"api/interfaces/TokenCapGcParams/","text":"API Reference TokenCapGcParams Interface: TokenCapGcParams Properties cap \u25cf cap : BigNumber \u23ae string Defined in wrappers/tokenCapGC.ts:65 token \u25cf token : Address Defined in wrappers/tokenCapGC.ts:66","title":"TokenCapGcParams"},{"location":"api/interfaces/TokenCapGcParams/#interface-tokencapgcparams","text":"","title":"Interface: TokenCapGcParams"},{"location":"api/interfaces/TokenCapGcParams/#properties","text":"","title":"Properties"},{"location":"api/interfaces/TokenCapGcParams/#cap","text":"\u25cf cap : BigNumber \u23ae string Defined in wrappers/tokenCapGC.ts:65","title":"cap"},{"location":"api/interfaces/TokenCapGcParams/#token","text":"\u25cf token : Address Defined in wrappers/tokenCapGC.ts:66","title":"token"},{"location":"api/interfaces/TransactionReceiptTruffle/","text":"API Reference TransactionReceiptTruffle Interface: TransactionReceiptTruffle The bundle of logs, TransactionReceipt and other information as returned by Truffle after invoking a contract function that causes a transaction. Properties logs \u25cf logs : Array . any Defined in transactionService.ts:683 receipt \u25cf receipt : TransactionReceipt Defined in transactionService.ts:684 transactionHash \u25cf transactionHash : Hash Defined in transactionService.ts:685","title":"TransactionReceiptTruffle"},{"location":"api/interfaces/TransactionReceiptTruffle/#interface-transactionreceipttruffle","text":"The bundle of logs, TransactionReceipt and other information as returned by Truffle after invoking a contract function that causes a transaction.","title":"Interface: TransactionReceiptTruffle"},{"location":"api/interfaces/TransactionReceiptTruffle/#properties","text":"","title":"Properties"},{"location":"api/interfaces/TransactionReceiptTruffle/#logs","text":"\u25cf logs : Array . any Defined in transactionService.ts:683","title":"logs"},{"location":"api/interfaces/TransactionReceiptTruffle/#receipt","text":"\u25cf receipt : TransactionReceipt Defined in transactionService.ts:684","title":"receipt"},{"location":"api/interfaces/TransactionReceiptTruffle/#transactionhash","text":"\u25cf transactionHash : Hash Defined in transactionService.ts:685","title":"transactionHash"},{"location":"api/interfaces/TransactionReceiptsEventInfo/","text":"API Reference TransactionReceiptsEventInfo Interface: TransactionReceiptsEventInfo Information supplied to the event callback when the event is published. Otherwise known as the \"payload\". Properties \u00abOptional\u00bb error \u25cf error : Error Defined in transactionService.ts:646 Error when a failure has occured. Supplied by the \".failed\" events. functionName \u25cf functionName : string Defined in transactionService.ts:623 The name of the function that is generating the transactions and these events. invocationKey \u25cf invocationKey : number Defined in transactionService.ts:614 A value that is unique to the invocation of the function that is generating the transaction. It is useful for grouping events by a single function invocation. \u00abOptional\u00bb options \u25cf options : any Defined in transactionService.ts:619 The options that were passed to the function that is generating the transaction, if any. In most cases this will have default values filled in. tx \u25cf tx : Hash \u23ae null Defined in transactionService.ts:629 The transaction hash id. Note that the transaction may not necessarily have completed successfully in the case of errors or rejection. Will be null in kickoff events. txCount \u25cf txCount : number Defined in transactionService.ts:638 The total expected number of transactions. txReceipt \u25cf txReceipt : TransactionReceiptTruffle \u23ae null Defined in transactionService.ts:634 The TransactionReceiptTruffle once the transaction has been mined. Will be null in kickoff and sent events. txStage \u25cf txStage : TransactionStage Defined in transactionService.ts:642 Stage of the transaction. Can be kickoff , sent , mined or confirmed .","title":"TransactionReceiptsEventInfo"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#interface-transactionreceiptseventinfo","text":"Information supplied to the event callback when the event is published. Otherwise known as the \"payload\".","title":"Interface: TransactionReceiptsEventInfo"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#properties","text":"","title":"Properties"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#optional-error","text":"\u25cf error : Error Defined in transactionService.ts:646 Error when a failure has occured. Supplied by the \".failed\" events.","title":"\u00abOptional\u00bb error"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#functionname","text":"\u25cf functionName : string Defined in transactionService.ts:623 The name of the function that is generating the transactions and these events.","title":"functionName"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#invocationkey","text":"\u25cf invocationKey : number Defined in transactionService.ts:614 A value that is unique to the invocation of the function that is generating the transaction. It is useful for grouping events by a single function invocation.","title":"invocationKey"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#optional-options","text":"\u25cf options : any Defined in transactionService.ts:619 The options that were passed to the function that is generating the transaction, if any. In most cases this will have default values filled in.","title":"\u00abOptional\u00bb options"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#tx","text":"\u25cf tx : Hash \u23ae null Defined in transactionService.ts:629 The transaction hash id. Note that the transaction may not necessarily have completed successfully in the case of errors or rejection. Will be null in kickoff events.","title":"tx"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#txcount","text":"\u25cf txCount : number Defined in transactionService.ts:638 The total expected number of transactions.","title":"txCount"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#txreceipt","text":"\u25cf txReceipt : TransactionReceiptTruffle \u23ae null Defined in transactionService.ts:634 The TransactionReceiptTruffle once the transaction has been mined. Will be null in kickoff and sent events.","title":"txReceipt"},{"location":"api/interfaces/TransactionReceiptsEventInfo/#txstage","text":"\u25cf txStage : TransactionStage Defined in transactionService.ts:642 Stage of the transaction. Can be kickoff , sent , mined or confirmed .","title":"txStage"},{"location":"api/interfaces/TransferAndCallOptions/","text":"API Reference TransferAndCallOptions Interface: TransferAndCallOptions Hierarchy StandardTokenTransferOptions \u21b3 TransferAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Inherited from StandardTokenTransferOptions . amount Defined in wrappers/standardToken.ts:285 callData \u25cf callData : string Defined in wrappers/iErc827Token.ts:60 to \u25cf to : Address Inherited from StandardTokenTransferOptions . to Defined in wrappers/standardToken.ts:286","title":"TransferAndCallOptions"},{"location":"api/interfaces/TransferAndCallOptions/#interface-transferandcalloptions","text":"","title":"Interface: TransferAndCallOptions"},{"location":"api/interfaces/TransferAndCallOptions/#hierarchy","text":"StandardTokenTransferOptions \u21b3 TransferAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/TransferAndCallOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/TransferAndCallOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Inherited from StandardTokenTransferOptions . amount Defined in wrappers/standardToken.ts:285","title":"amount"},{"location":"api/interfaces/TransferAndCallOptions/#calldata","text":"\u25cf callData : string Defined in wrappers/iErc827Token.ts:60","title":"callData"},{"location":"api/interfaces/TransferAndCallOptions/#to","text":"\u25cf to : Address Inherited from StandardTokenTransferOptions . to Defined in wrappers/standardToken.ts:286","title":"to"},{"location":"api/interfaces/TransferEventResult/","text":"API Reference TransferEventResult Interface: TransferEventResult Properties from \u25cf from : Address Defined in wrappers/standardToken.ts:275 msg.sender for transfer , from for transferFrom indexed to \u25cf to : Address Defined in wrappers/standardToken.ts:280 the recipient of the tokens indexed value \u25cf value : BigNumber Defined in wrappers/standardToken.ts:281","title":"TransferEventResult"},{"location":"api/interfaces/TransferEventResult/#interface-transfereventresult","text":"","title":"Interface: TransferEventResult"},{"location":"api/interfaces/TransferEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/TransferEventResult/#from","text":"\u25cf from : Address Defined in wrappers/standardToken.ts:275 msg.sender for transfer , from for transferFrom indexed","title":"from"},{"location":"api/interfaces/TransferEventResult/#to","text":"\u25cf to : Address Defined in wrappers/standardToken.ts:280 the recipient of the tokens indexed","title":"to"},{"location":"api/interfaces/TransferEventResult/#value","text":"\u25cf value : BigNumber Defined in wrappers/standardToken.ts:281","title":"value"},{"location":"api/interfaces/TransferFromAndCallOptions/","text":"API Reference TransferFromAndCallOptions Interface: TransferFromAndCallOptions Hierarchy StandardTokenTransferFromOptions \u21b3 TransferFromAndCallOptions Properties amount \u25cf amount : BigNumber \u23ae string Inherited from StandardTokenTransferFromOptions . amount Defined in wrappers/standardToken.ts:290 callData \u25cf callData : string Defined in wrappers/iErc827Token.ts:64 from \u25cf from : Address Inherited from StandardTokenTransferFromOptions . from Defined in wrappers/standardToken.ts:291 to \u25cf to : Address Inherited from StandardTokenTransferFromOptions . to Defined in wrappers/standardToken.ts:292","title":"TransferFromAndCallOptions"},{"location":"api/interfaces/TransferFromAndCallOptions/#interface-transferfromandcalloptions","text":"","title":"Interface: TransferFromAndCallOptions"},{"location":"api/interfaces/TransferFromAndCallOptions/#hierarchy","text":"StandardTokenTransferFromOptions \u21b3 TransferFromAndCallOptions","title":"Hierarchy"},{"location":"api/interfaces/TransferFromAndCallOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/TransferFromAndCallOptions/#amount","text":"\u25cf amount : BigNumber \u23ae string Inherited from StandardTokenTransferFromOptions . amount Defined in wrappers/standardToken.ts:290","title":"amount"},{"location":"api/interfaces/TransferFromAndCallOptions/#calldata","text":"\u25cf callData : string Defined in wrappers/iErc827Token.ts:64","title":"callData"},{"location":"api/interfaces/TransferFromAndCallOptions/#from","text":"\u25cf from : Address Inherited from StandardTokenTransferFromOptions . from Defined in wrappers/standardToken.ts:291","title":"from"},{"location":"api/interfaces/TransferFromAndCallOptions/#to","text":"\u25cf to : Address Inherited from StandardTokenTransferFromOptions . to Defined in wrappers/standardToken.ts:292","title":"to"},{"location":"api/interfaces/TruffleContract/","text":"API Reference TruffleContract Interface: TruffleContract Properties at \u25cf at : function Defined in commonTypes.ts:75 Returns a promise of an existing instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise. Type declaration \u25ba(address: string ): Promise . any Parameters: Param Type Description address string - Returns: Promise . any deployed \u25cf deployed : function Defined in commonTypes.ts:81 Returns a promise of the deployed instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise. Type declaration \u25ba(): Promise . any Returns: Promise . any new \u25cf new : function Defined in commonTypes.ts:69 Migrate a new instance of the contract. Returns promise of being migrated. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise. Type declaration \u25ba(...rest: Array . any ): Promise . any Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"TruffleContract"},{"location":"api/interfaces/TruffleContract/#interface-trufflecontract","text":"","title":"Interface: TruffleContract"},{"location":"api/interfaces/TruffleContract/#properties","text":"","title":"Properties"},{"location":"api/interfaces/TruffleContract/#at","text":"\u25cf at : function Defined in commonTypes.ts:75 Returns a promise of an existing instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.","title":"at"},{"location":"api/interfaces/TruffleContract/#type-declaration","text":"\u25ba(address: string ): Promise . any Parameters: Param Type Description address string - Returns: Promise . any","title":"Type declaration"},{"location":"api/interfaces/TruffleContract/#deployed","text":"\u25cf deployed : function Defined in commonTypes.ts:81 Returns a promise of the deployed instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.","title":"deployed"},{"location":"api/interfaces/TruffleContract/#type-declaration_1","text":"\u25ba(): Promise . any Returns: Promise . any","title":"Type declaration"},{"location":"api/interfaces/TruffleContract/#new","text":"\u25cf new : function Defined in commonTypes.ts:69 Migrate a new instance of the contract. Returns promise of being migrated. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.","title":"new"},{"location":"api/interfaces/TruffleContract/#type-declaration_2","text":"\u25ba(...rest: Array . any ): Promise . any Parameters: Param Type Description rest Array . any - Returns: Promise . any","title":"Type declaration"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/","text":"API Reference VestingSchemeSchemeProposalExecuted Interface: VestingSchemeSchemeProposalExecuted Hierarchy SchemeProposalExecuted \u21b3 VestingSchemeSchemeProposalExecuted Properties agreementId \u25cf agreementId : number Defined in wrappers/vestingScheme.ts:632 avatarAddress \u25cf avatarAddress : Address Inherited from SchemeProposalExecuted . avatarAddress Defined in wrappers/commonEventInterfaces.ts:54 proposalId \u25cf proposalId : Hash Inherited from SchemeProposalExecuted . proposalId Defined in wrappers/commonEventInterfaces.ts:56 winningVote \u25cf winningVote : number Inherited from SchemeProposalExecuted . winningVote Defined in wrappers/commonEventInterfaces.ts:55","title":"VestingSchemeSchemeProposalExecuted"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/#interface-vestingschemeschemeproposalexecuted","text":"","title":"Interface: VestingSchemeSchemeProposalExecuted"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/#hierarchy","text":"SchemeProposalExecuted \u21b3 VestingSchemeSchemeProposalExecuted","title":"Hierarchy"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/#agreementid","text":"\u25cf agreementId : number Defined in wrappers/vestingScheme.ts:632","title":"agreementId"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/#avataraddress","text":"\u25cf avatarAddress : Address Inherited from SchemeProposalExecuted . avatarAddress Defined in wrappers/commonEventInterfaces.ts:54","title":"avatarAddress"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/#proposalid","text":"\u25cf proposalId : Hash Inherited from SchemeProposalExecuted . proposalId Defined in wrappers/commonEventInterfaces.ts:56","title":"proposalId"},{"location":"api/interfaces/VestingSchemeSchemeProposalExecuted/#winningvote","text":"\u25cf winningVote : number Inherited from SchemeProposalExecuted . winningVote Defined in wrappers/commonEventInterfaces.ts:55","title":"winningVote"},{"location":"api/interfaces/VotableGlobalConstraintProposal/","text":"API Reference VotableGlobalConstraintProposal Interface: VotableGlobalConstraintProposal Properties constraintAddress \u25cf constraintAddress : Address Defined in wrappers/globalConstraintRegistrar.ts:308 Address of the global constraint paramsHash \u25cf paramsHash : Hash Defined in wrappers/globalConstraintRegistrar.ts:312 The global constraint's parameters proposalId \u25cf proposalId : Hash Defined in wrappers/globalConstraintRegistrar.ts:316 Hash of the proposalId proposalType \u25cf proposalType : GlobalConstraintProposalType Defined in wrappers/globalConstraintRegistrar.ts:320 Add or Remove voteToRemoveParamsHash \u25cf voteToRemoveParamsHash : Hash Defined in wrappers/globalConstraintRegistrar.ts:324 Hash of voting machine parameters to use when removing a global constraint","title":"VotableGlobalConstraintProposal"},{"location":"api/interfaces/VotableGlobalConstraintProposal/#interface-votableglobalconstraintproposal","text":"","title":"Interface: VotableGlobalConstraintProposal"},{"location":"api/interfaces/VotableGlobalConstraintProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VotableGlobalConstraintProposal/#constraintaddress","text":"\u25cf constraintAddress : Address Defined in wrappers/globalConstraintRegistrar.ts:308 Address of the global constraint","title":"constraintAddress"},{"location":"api/interfaces/VotableGlobalConstraintProposal/#paramshash","text":"\u25cf paramsHash : Hash Defined in wrappers/globalConstraintRegistrar.ts:312 The global constraint's parameters","title":"paramsHash"},{"location":"api/interfaces/VotableGlobalConstraintProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/globalConstraintRegistrar.ts:316 Hash of the proposalId","title":"proposalId"},{"location":"api/interfaces/VotableGlobalConstraintProposal/#proposaltype","text":"\u25cf proposalType : GlobalConstraintProposalType Defined in wrappers/globalConstraintRegistrar.ts:320 Add or Remove","title":"proposalType"},{"location":"api/interfaces/VotableGlobalConstraintProposal/#votetoremoveparamshash","text":"\u25cf voteToRemoveParamsHash : Hash Defined in wrappers/globalConstraintRegistrar.ts:324 Hash of voting machine parameters to use when removing a global constraint","title":"voteToRemoveParamsHash"},{"location":"api/interfaces/VotableProposal/","text":"API Reference VotableProposal Interface: VotableProposal Properties avatarAddress \u25cf avatarAddress : Address Defined in proposalService.ts:144 numOfChoices \u25cf numOfChoices : number Defined in proposalService.ts:140 paramsHash \u25cf paramsHash : Hash Defined in proposalService.ts:141 proposalId \u25cf proposalId : Hash Defined in proposalService.ts:142 proposerAddress \u25cf proposerAddress : Address Defined in proposalService.ts:143","title":"VotableProposal"},{"location":"api/interfaces/VotableProposal/#interface-votableproposal","text":"","title":"Interface: VotableProposal"},{"location":"api/interfaces/VotableProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VotableProposal/#avataraddress","text":"\u25cf avatarAddress : Address Defined in proposalService.ts:144","title":"avatarAddress"},{"location":"api/interfaces/VotableProposal/#numofchoices","text":"\u25cf numOfChoices : number Defined in proposalService.ts:140","title":"numOfChoices"},{"location":"api/interfaces/VotableProposal/#paramshash","text":"\u25cf paramsHash : Hash Defined in proposalService.ts:141","title":"paramsHash"},{"location":"api/interfaces/VotableProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in proposalService.ts:142","title":"proposalId"},{"location":"api/interfaces/VotableProposal/#proposeraddress","text":"\u25cf proposerAddress : Address Defined in proposalService.ts:143","title":"proposerAddress"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/","text":"API Reference VotableSchemeRegistrarProposal Interface: VotableSchemeRegistrarProposal Properties parametersHash \u25cf parametersHash : Hash Defined in wrappers/schemeRegistrar.ts:367 permissions \u25cf permissions : SchemePermissions Defined in wrappers/schemeRegistrar.ts:369 proposalId \u25cf proposalId : Hash Defined in wrappers/schemeRegistrar.ts:370 proposalType \u25cf proposalType : SchemeRegistrarProposalType Defined in wrappers/schemeRegistrar.ts:368 schemeAddress \u25cf schemeAddress : Address Defined in wrappers/schemeRegistrar.ts:366","title":"VotableSchemeRegistrarProposal"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/#interface-votableschemeregistrarproposal","text":"","title":"Interface: VotableSchemeRegistrarProposal"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/#parametershash","text":"\u25cf parametersHash : Hash Defined in wrappers/schemeRegistrar.ts:367","title":"parametersHash"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/#permissions","text":"\u25cf permissions : SchemePermissions Defined in wrappers/schemeRegistrar.ts:369","title":"permissions"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/schemeRegistrar.ts:370","title":"proposalId"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/#proposaltype","text":"\u25cf proposalType : SchemeRegistrarProposalType Defined in wrappers/schemeRegistrar.ts:368","title":"proposalType"},{"location":"api/interfaces/VotableSchemeRegistrarProposal/#schemeaddress","text":"\u25cf schemeAddress : Address Defined in wrappers/schemeRegistrar.ts:366","title":"schemeAddress"},{"location":"api/interfaces/VotableUpgradeSchemeProposal/","text":"API Reference VotableUpgradeSchemeProposal Interface: VotableUpgradeSchemeProposal Properties paramsUpgradingScheme \u25cf paramsUpgradingScheme : Hash Defined in wrappers/upgradeScheme.ts:297 proposalId \u25cf proposalId : Hash Defined in wrappers/upgradeScheme.ts:299 proposalType \u25cf proposalType : UpgradeSchemeProposalType Defined in wrappers/upgradeScheme.ts:298 upgradeContractAddress \u25cf upgradeContractAddress : Address Defined in wrappers/upgradeScheme.ts:296 Either a controller or an upgrade scheme.","title":"VotableUpgradeSchemeProposal"},{"location":"api/interfaces/VotableUpgradeSchemeProposal/#interface-votableupgradeschemeproposal","text":"","title":"Interface: VotableUpgradeSchemeProposal"},{"location":"api/interfaces/VotableUpgradeSchemeProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VotableUpgradeSchemeProposal/#paramsupgradingscheme","text":"\u25cf paramsUpgradingScheme : Hash Defined in wrappers/upgradeScheme.ts:297","title":"paramsUpgradingScheme"},{"location":"api/interfaces/VotableUpgradeSchemeProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/upgradeScheme.ts:299","title":"proposalId"},{"location":"api/interfaces/VotableUpgradeSchemeProposal/#proposaltype","text":"\u25cf proposalType : UpgradeSchemeProposalType Defined in wrappers/upgradeScheme.ts:298","title":"proposalType"},{"location":"api/interfaces/VotableUpgradeSchemeProposal/#upgradecontractaddress","text":"\u25cf upgradeContractAddress : Address Defined in wrappers/upgradeScheme.ts:296 Either a controller or an upgrade scheme.","title":"upgradeContractAddress"},{"location":"api/interfaces/VotableVoteInOrganizationProposal/","text":"API Reference VotableVoteInOrganizationProposal Interface: VotableVoteInOrganizationProposal Properties originalNumOfChoices \u25cf originalNumOfChoices : number Defined in wrappers/voteInOrganizationScheme.ts:211 originalProposalId \u25cf originalProposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:212 originalVotingMachineAddress \u25cf originalVotingMachineAddress : Address Defined in wrappers/voteInOrganizationScheme.ts:210 proposalId \u25cf proposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:213","title":"VotableVoteInOrganizationProposal"},{"location":"api/interfaces/VotableVoteInOrganizationProposal/#interface-votablevoteinorganizationproposal","text":"","title":"Interface: VotableVoteInOrganizationProposal"},{"location":"api/interfaces/VotableVoteInOrganizationProposal/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VotableVoteInOrganizationProposal/#originalnumofchoices","text":"\u25cf originalNumOfChoices : number Defined in wrappers/voteInOrganizationScheme.ts:211","title":"originalNumOfChoices"},{"location":"api/interfaces/VotableVoteInOrganizationProposal/#originalproposalid","text":"\u25cf originalProposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:212","title":"originalProposalId"},{"location":"api/interfaces/VotableVoteInOrganizationProposal/#originalvotingmachineaddress","text":"\u25cf originalVotingMachineAddress : Address Defined in wrappers/voteInOrganizationScheme.ts:210","title":"originalVotingMachineAddress"},{"location":"api/interfaces/VotableVoteInOrganizationProposal/#proposalid","text":"\u25cf proposalId : Hash Defined in wrappers/voteInOrganizationScheme.ts:213","title":"proposalId"},{"location":"api/interfaces/VoteInOrganizationProposeVoteConfig/","text":"API Reference VoteInOrganizationProposeVoteConfig Interface: VoteInOrganizationProposeVoteConfig Properties avatar \u25cf avatar : Address Defined in wrappers/voteInOrganizationScheme.ts:197 Avatar whose voters are being given the chance to vote on the original proposal. originalProposalId \u25cf originalProposalId : string Defined in wrappers/voteInOrganizationScheme.ts:206 Address of the \"original\" proposal for which the DAO's vote will cast. originalVotingMachineAddress \u25cf originalVotingMachineAddress : Address Defined in wrappers/voteInOrganizationScheme.ts:202 Address of the voting machine used by the original proposal. The voting machine must implement IntVoteInterface (as defined in Arc).","title":"VoteInOrganizationProposeVoteConfig"},{"location":"api/interfaces/VoteInOrganizationProposeVoteConfig/#interface-voteinorganizationproposevoteconfig","text":"","title":"Interface: VoteInOrganizationProposeVoteConfig"},{"location":"api/interfaces/VoteInOrganizationProposeVoteConfig/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VoteInOrganizationProposeVoteConfig/#avatar","text":"\u25cf avatar : Address Defined in wrappers/voteInOrganizationScheme.ts:197 Avatar whose voters are being given the chance to vote on the original proposal.","title":"avatar"},{"location":"api/interfaces/VoteInOrganizationProposeVoteConfig/#originalproposalid","text":"\u25cf originalProposalId : string Defined in wrappers/voteInOrganizationScheme.ts:206 Address of the \"original\" proposal for which the DAO's vote will cast.","title":"originalProposalId"},{"location":"api/interfaces/VoteInOrganizationProposeVoteConfig/#originalvotingmachineaddress","text":"\u25cf originalVotingMachineAddress : Address Defined in wrappers/voteInOrganizationScheme.ts:202 Address of the voting machine used by the original proposal. The voting machine must implement IntVoteInterface (as defined in Arc).","title":"originalVotingMachineAddress"},{"location":"api/interfaces/VoteOnBehalfEventResult/","text":"API Reference VoteOnBehalfEventResult Interface: VoteOnBehalfEventResult Properties _params \u25cf _params : Array . Hash Defined in wrappers/voteInOrganizationScheme.ts:190","title":"VoteOnBehalfEventResult"},{"location":"api/interfaces/VoteOnBehalfEventResult/#interface-voteonbehalfeventresult","text":"","title":"Interface: VoteOnBehalfEventResult"},{"location":"api/interfaces/VoteOnBehalfEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VoteOnBehalfEventResult/#_params","text":"\u25cf _params : Array . Hash Defined in wrappers/voteInOrganizationScheme.ts:190","title":"_params"},{"location":"api/interfaces/VoteOptions/","text":"API Reference VoteOptions Interface: VoteOptions Hierarchy ProposalIdOption \u21b3 VoteOptions Properties proposalId \u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60 vote \u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:47","title":"VoteOptions"},{"location":"api/interfaces/VoteOptions/#interface-voteoptions","text":"","title":"Interface: VoteOptions"},{"location":"api/interfaces/VoteOptions/#hierarchy","text":"ProposalIdOption \u21b3 VoteOptions","title":"Hierarchy"},{"location":"api/interfaces/VoteOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VoteOptions/#proposalid","text":"\u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60","title":"proposalId"},{"location":"api/interfaces/VoteOptions/#vote","text":"\u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:47","title":"vote"},{"location":"api/interfaces/VoteProposalEventResult/","text":"API Reference VoteProposalEventResult Interface: VoteProposalEventResult Properties _avatar \u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:129 indexed _proposalId \u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:133 indexed _reputation \u25cf _reputation : BigNumber Defined in wrappers/iIntVoteInterface.ts:134 _vote \u25cf _vote : number Defined in wrappers/iIntVoteInterface.ts:138 The choice of vote _voter \u25cf _voter : Address Defined in wrappers/iIntVoteInterface.ts:142 indexed","title":"VoteProposalEventResult"},{"location":"api/interfaces/VoteProposalEventResult/#interface-voteproposaleventresult","text":"","title":"Interface: VoteProposalEventResult"},{"location":"api/interfaces/VoteProposalEventResult/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VoteProposalEventResult/#_avatar","text":"\u25cf _avatar : Address Defined in wrappers/iIntVoteInterface.ts:129 indexed","title":"_avatar"},{"location":"api/interfaces/VoteProposalEventResult/#_proposalid","text":"\u25cf _proposalId : Hash Defined in wrappers/iIntVoteInterface.ts:133 indexed","title":"_proposalId"},{"location":"api/interfaces/VoteProposalEventResult/#_reputation","text":"\u25cf _reputation : BigNumber Defined in wrappers/iIntVoteInterface.ts:134","title":"_reputation"},{"location":"api/interfaces/VoteProposalEventResult/#_vote","text":"\u25cf _vote : number Defined in wrappers/iIntVoteInterface.ts:138 The choice of vote","title":"_vote"},{"location":"api/interfaces/VoteProposalEventResult/#_voter","text":"\u25cf _voter : Address Defined in wrappers/iIntVoteInterface.ts:142 indexed","title":"_voter"},{"location":"api/interfaces/VoteStatusOptions/","text":"API Reference VoteStatusOptions Interface: VoteStatusOptions Hierarchy ProposalIdOption \u21b3 VoteStatusOptions Properties proposalId \u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60 vote \u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:56","title":"VoteStatusOptions"},{"location":"api/interfaces/VoteStatusOptions/#interface-votestatusoptions","text":"","title":"Interface: VoteStatusOptions"},{"location":"api/interfaces/VoteStatusOptions/#hierarchy","text":"ProposalIdOption \u21b3 VoteStatusOptions","title":"Hierarchy"},{"location":"api/interfaces/VoteStatusOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VoteStatusOptions/#proposalid","text":"\u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60","title":"proposalId"},{"location":"api/interfaces/VoteStatusOptions/#vote","text":"\u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:56","title":"vote"},{"location":"api/interfaces/VoteWithSpecifiedAmountsOptions/","text":"API Reference VoteWithSpecifiedAmountsOptions Interface: VoteWithSpecifiedAmountsOptions Hierarchy ProposalIdOption \u21b3 VoteWithSpecifiedAmountsOptions Properties proposalId \u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60 reputation \u25cf reputation : BigNumber \u23ae string Defined in wrappers/iIntVoteInterface.ts:51 vote \u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:52","title":"VoteWithSpecifiedAmountsOptions"},{"location":"api/interfaces/VoteWithSpecifiedAmountsOptions/#interface-votewithspecifiedamountsoptions","text":"","title":"Interface: VoteWithSpecifiedAmountsOptions"},{"location":"api/interfaces/VoteWithSpecifiedAmountsOptions/#hierarchy","text":"ProposalIdOption \u21b3 VoteWithSpecifiedAmountsOptions","title":"Hierarchy"},{"location":"api/interfaces/VoteWithSpecifiedAmountsOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/VoteWithSpecifiedAmountsOptions/#proposalid","text":"\u25cf proposalId : Hash Inherited from ProposalIdOption . proposalId Defined in wrappers/iIntVoteInterface.ts:60","title":"proposalId"},{"location":"api/interfaces/VoteWithSpecifiedAmountsOptions/#reputation","text":"\u25cf reputation : BigNumber \u23ae string Defined in wrappers/iIntVoteInterface.ts:51","title":"reputation"},{"location":"api/interfaces/VoteWithSpecifiedAmountsOptions/#vote","text":"\u25cf vote : number Defined in wrappers/iIntVoteInterface.ts:52","title":"vote"},{"location":"api/interfaces/Web3EventFetcher/","text":"API Reference Web3EventFetcher Interface: Web3EventFetcher As implemented by Web3 Properties get \u25cf get : function Defined in web3EventService.ts:559 Type declaration \u25ba(callback: function ): void Parameters: Param Type Description callback function - Returns: void watch \u25cf watch : function Defined in web3EventService.ts:560 Type declaration \u25ba(callback: function ): void Parameters: Param Type Description callback function - Returns: void Methods stopWatching \u25ba stopWatching (callback?: fnVoid ): void Defined in web3EventService.ts:561 Parameters: Param Type Description callback fnVoid - Returns: void stopWatchingAsync \u25ba stopWatchingAsync (): Promise . void Defined in web3EventService.ts:562 Returns: Promise . void","title":"Web3EventFetcher"},{"location":"api/interfaces/Web3EventFetcher/#interface-web3eventfetcher","text":"As implemented by Web3","title":"Interface: Web3EventFetcher"},{"location":"api/interfaces/Web3EventFetcher/#properties","text":"","title":"Properties"},{"location":"api/interfaces/Web3EventFetcher/#get","text":"\u25cf get : function Defined in web3EventService.ts:559","title":"get"},{"location":"api/interfaces/Web3EventFetcher/#type-declaration","text":"\u25ba(callback: function ): void Parameters: Param Type Description callback function - Returns: void","title":"Type declaration"},{"location":"api/interfaces/Web3EventFetcher/#watch","text":"\u25cf watch : function Defined in web3EventService.ts:560","title":"watch"},{"location":"api/interfaces/Web3EventFetcher/#type-declaration_1","text":"\u25ba(callback: function ): void Parameters: Param Type Description callback function - Returns: void","title":"Type declaration"},{"location":"api/interfaces/Web3EventFetcher/#methods","text":"","title":"Methods"},{"location":"api/interfaces/Web3EventFetcher/#stopwatching","text":"\u25ba stopWatching (callback?: fnVoid ): void Defined in web3EventService.ts:561 Parameters: Param Type Description callback fnVoid - Returns: void","title":"stopWatching"},{"location":"api/interfaces/Web3EventFetcher/#stopwatchingasync","text":"\u25ba stopWatchingAsync (): Promise . void Defined in web3EventService.ts:562 Returns: Promise . void","title":"stopWatchingAsync"},{"location":"api/interfaces/WrapperFilter/","text":"API Reference WrapperFilter Interface: WrapperFilter Properties \u00abOptional\u00bb AbsoluteVote \u25cf AbsoluteVote : boolean Defined in wrapperService.ts:347 \u00abOptional\u00bb ContributionReward \u25cf ContributionReward : boolean Defined in wrapperService.ts:348 \u00abOptional\u00bb DaoCreator \u25cf DaoCreator : boolean Defined in wrapperService.ts:349 \u00abOptional\u00bb GenesisProtocol \u25cf GenesisProtocol : boolean Defined in wrapperService.ts:350 \u00abOptional\u00bb GlobalConstraintRegistrar \u25cf GlobalConstraintRegistrar : boolean Defined in wrapperService.ts:351 \u00abOptional\u00bb Redeemer \u25cf Redeemer : boolean Defined in wrapperService.ts:352 \u00abOptional\u00bb SchemeRegistrar \u25cf SchemeRegistrar : boolean Defined in wrapperService.ts:353 \u00abOptional\u00bb TokenCapGC \u25cf TokenCapGC : boolean Defined in wrapperService.ts:354 \u00abOptional\u00bb UpgradeScheme \u25cf UpgradeScheme : boolean Defined in wrapperService.ts:355 \u00abOptional\u00bb VestingScheme \u25cf VestingScheme : boolean Defined in wrapperService.ts:356 \u00abOptional\u00bb VoteInOrganizationScheme \u25cf VoteInOrganizationScheme : boolean Defined in wrapperService.ts:357","title":"WrapperFilter"},{"location":"api/interfaces/WrapperFilter/#interface-wrapperfilter","text":"","title":"Interface: WrapperFilter"},{"location":"api/interfaces/WrapperFilter/#properties","text":"","title":"Properties"},{"location":"api/interfaces/WrapperFilter/#optional-absolutevote","text":"\u25cf AbsoluteVote : boolean Defined in wrapperService.ts:347","title":"\u00abOptional\u00bb AbsoluteVote"},{"location":"api/interfaces/WrapperFilter/#optional-contributionreward","text":"\u25cf ContributionReward : boolean Defined in wrapperService.ts:348","title":"\u00abOptional\u00bb ContributionReward"},{"location":"api/interfaces/WrapperFilter/#optional-daocreator","text":"\u25cf DaoCreator : boolean Defined in wrapperService.ts:349","title":"\u00abOptional\u00bb DaoCreator"},{"location":"api/interfaces/WrapperFilter/#optional-genesisprotocol","text":"\u25cf GenesisProtocol : boolean Defined in wrapperService.ts:350","title":"\u00abOptional\u00bb GenesisProtocol"},{"location":"api/interfaces/WrapperFilter/#optional-globalconstraintregistrar","text":"\u25cf GlobalConstraintRegistrar : boolean Defined in wrapperService.ts:351","title":"\u00abOptional\u00bb GlobalConstraintRegistrar"},{"location":"api/interfaces/WrapperFilter/#optional-redeemer","text":"\u25cf Redeemer : boolean Defined in wrapperService.ts:352","title":"\u00abOptional\u00bb Redeemer"},{"location":"api/interfaces/WrapperFilter/#optional-schemeregistrar","text":"\u25cf SchemeRegistrar : boolean Defined in wrapperService.ts:353","title":"\u00abOptional\u00bb SchemeRegistrar"},{"location":"api/interfaces/WrapperFilter/#optional-tokencapgc","text":"\u25cf TokenCapGC : boolean Defined in wrapperService.ts:354","title":"\u00abOptional\u00bb TokenCapGC"},{"location":"api/interfaces/WrapperFilter/#optional-upgradescheme","text":"\u25cf UpgradeScheme : boolean Defined in wrapperService.ts:355","title":"\u00abOptional\u00bb UpgradeScheme"},{"location":"api/interfaces/WrapperFilter/#optional-vestingscheme","text":"\u25cf VestingScheme : boolean Defined in wrapperService.ts:356","title":"\u00abOptional\u00bb VestingScheme"},{"location":"api/interfaces/WrapperFilter/#optional-voteinorganizationscheme","text":"\u25cf VoteInOrganizationScheme : boolean Defined in wrapperService.ts:357","title":"\u00abOptional\u00bb VoteInOrganizationScheme"},{"location":"api/interfaces/WrapperServiceInitializeOptions/","text":"API Reference WrapperServiceInitializeOptions Interface: WrapperServiceInitializeOptions Hierarchy WrapperServiceInitializeOptions \u21b3 InitializeArcOptions Properties \u00abOptional\u00bb filter \u25cf filter : WrapperFilter Defined in wrapperService.ts:369 Optional filter to only initialize the contracts whose name is set to true . Any contracts that are omitted or set to false here will appear as null in WrapperService.wrappers and WrapperService.wrappersByType , and will not be available in WrapperService.wrappersByAddress . But their factories will still be available in WrapperService.factories . See Optimized Contract Loading for more information.","title":"WrapperServiceInitializeOptions"},{"location":"api/interfaces/WrapperServiceInitializeOptions/#interface-wrapperserviceinitializeoptions","text":"","title":"Interface: WrapperServiceInitializeOptions"},{"location":"api/interfaces/WrapperServiceInitializeOptions/#hierarchy","text":"WrapperServiceInitializeOptions \u21b3 InitializeArcOptions","title":"Hierarchy"},{"location":"api/interfaces/WrapperServiceInitializeOptions/#properties","text":"","title":"Properties"},{"location":"api/interfaces/WrapperServiceInitializeOptions/#optional-filter","text":"\u25cf filter : WrapperFilter Defined in wrapperService.ts:369 Optional filter to only initialize the contracts whose name is set to true . Any contracts that are omitted or set to false here will appear as null in WrapperService.wrappers and WrapperService.wrappersByType , and will not be available in WrapperService.wrappersByAddress . But their factories will still be available in WrapperService.factories . See Optimized Contract Loading for more information.","title":"\u00abOptional\u00bb filter"}]}