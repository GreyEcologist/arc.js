{
    "docs": [
        {
            "location": "/Home/", 
            "text": "DAOstack Arc.js\n\n\nDAOstack Arc.js\n sits just above \nDAOstack Arc\n on the DAOstack stack.  It is a library that facilitates javascript application access to the DAOstack Arc ethereum smart contracts.\n\n\nFor more information about Arc contracts and the entire DAOstack ecosystem, please refer to the \nArc documentation\n.\n\n\nInstallation\n\n\nEnsure that \nNodeJS\n, v9.4.0 or greater, is installed.\n\n\nInstall the npm package into your project:\n\n\n1\nnpm install @daostack/arc.js --save\n\n\n\n\n\n\nNow you can proceed with migrating contracts to a running testnet and configuring Arc.js in your application and environment.\n\n\nAPI Reference\n\n\nYou can find a \ndetailed reference for the entire Arc.js API here\n.  Read on here for step-by-step examples on how to get started with Arc.js.\n\n\nGetting Started\n\n\nThe following sections describe the basic steps for setting up Arc.js in your application. These steps basically involve:\n\n\n\n\nrunning a blockchain node.  We will use the ganache testnet as an example.\n\n\ndeploying the Arc contracts to the net\n\n\nusing the Arc.js code in your application\n\n\n\n\n\n\nNote\n\n\nAll of the script examples assume you are running the scripts in the root folder of your application.  If you happen to be running the scripts in the context of a cloned Arc.js repository, omit the prefix \nnpm explore @daostack/arc.js --\n. See \nWorking with Arc Contracts\n.\n\n\n\n\nSet up a Testnet with Arc Contracts\n\n\nArc.js runs against an Ethereum network where it assumes that the Arc contracts have been migrated.  Out of the box, Arc.js can find contracts migrated to the mainnet and to kovan. But for any other testnet, or to redeploy, you will need to tell it to migrate the Arc contracts to a testnet of your choice.  You can do this by running a few Arc.js scripts from the context of your application.\n\n\nTo deploy contracts to a Ganache testnet, run the following scripts:\n\n\nIn a separate shell window:\n\n1\nnpm explore @daostack/arc.js -- npm start ganache\n\n\n\n\n\nNow migrate the Arc contracts to Ganache:\n\n\n1\nnpm explore @daostack/arc.js -- npm start migrateContracts\n\n\n\n\n\n\nNow when your app uses Arc.js, it will be running against Ganache and the contracts you just migrated.\n\n\n\n\nNote\n\n\nSee \nWork with Arc Contracts\n and \nDeploy to Other Testnets\n.\n\n\n\n\nUse the Arc.js Library in your Code\n\n\nTypescript\n\n\nArc.js itself is written using Typescript. The Arc.js library includes Typescript type definitions defined in an index.d.ts.\n\n\nJavaScript\n\n\nThe javascript included in the Arc.js library is ES6 in a commonjs module format.\n\n\nImport Arc.js\n\n\nImport everything from ArcJs as follows:\n\n\n1\nimport\n \n*\n \nas\n \nArcJs\n \nfrom\n \n@daostack/arc.js\n;\n\n\n\n\n\n\n\nConfigure Arc.js\n\n\nRefer here for \ncomplete documentation on Arc.js configuration settings\n.\n\n\nInitialize Arc.js at Runtime\n\n\nYour application must invoke \nInitializeArcJs\n once at runtime before doing anything else.\n\n\n1\n2\n3\nimport\n \n{\n \nInitializeArcJs\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\n\nawait\n \nInitializeArcJs\n();\n\n\n\n\n\n\n\nMinimize contract loading\n\n\nBy default, \nInitializeArcJs\n will load all of the wrapped Arc contracts as deployed by the running version of Arc.js.  As this operation can be time-consuming, you may want to tell \nInitializeArcJs\n to only load the contracts that you expect to use.  The following is enough to create a new DAO with no schemes:\n\n\n1\n2\n3\n4\n5\n6\nawait\n \nInitializeArcJs\n({\n\n    \nfilter\n:\n \n{\n\n      \nAbsoluteVote\n:\n \ntrue\n,\n\n      \nDaoCreator\n:\n \ntrue\n,\n\n    \n}\n\n  \n});\n\n\n\n\n\n\n\nIf you want to add schemes to your DAO, you would include each scheme in the filter:\n\n\n1\n2\n3\n4\n5\n6\n7\nawait\n \nInitializeArcJs\n({\n\n    \nfilter\n:\n \n{\n\n      \nAbsoluteVote\n:\n \ntrue\n,\n\n      \nDaoCreator\n:\n \ntrue\n,\n\n      \nSchemeRegistrar\n:\n \ntrue\n,\n\n    \n}\n\n  \n});\n\n\n\n\n\n\n\nIf you are not creating DAOs and only want to use some schemes, then reference the schemes as well as whichever voting machine(s) the schemes are using:\n\n\n1\n2\n3\n4\n5\n6\nawait\n \nInitializeArcJs\n({\n\n    \nfilter\n:\n \n{\n\n      \nGenesisProtocol\n:\n \ntrue\n,\n\n      \nContributionReward\n:\n \ntrue\n,\n\n    \n}\n\n  \n});\n\n\n\n\n\n\n\nUse default network settings\n\n\nYou can use the Arc.js \nConfigService\n to set the provider host and port that web3 uses to connect your applicaton to the net when not using MetaMask.  You can also tell \nInitializeArcJs\n to just use default Arc.js settings for mainnet (live), kovan, ropsten and ganache.  Here is an example of telling Arc.js to use its default settings for Kovan:\n\n\n1\n2\n3\nawait\n \nInitializeArcJs\n({\n\n  \nuseNetworkDefaultsFor\n:\n \nkovan\n\n  \n});\n\n\n\n\n\n\n\n\n\nInfo\n\n\nFor safety, by default Arc.js specifies a different HTTP port for each network.  You will need to make sure that the testnet your application is using is listening on that port.  The port values are:\n\n\n\n\nNetwork\nPort\n\n\nGanache\n8545\n\n\nKovan\n8547\n\n\nRopsten\n8548\n\n\nLive (Mainnet)\n8546\n\n\n\n\n\n\nWorking with Arc Contracts\n\n\nNow that you've got Arc.js plugged into your application, configured, and contracts migrated to a running testnet, you are ready to start coding against DAOs and other Arc entities.\n\n\nYou will likely start by creating or referencing one or more DAOs.  Arc.js provides a class called \nDAO\n that facilitates creating and working with DAOs.  Refer here for \nall about the DAO class\n.\n\n\nOnce you have a DAO or set of DAOs, you can start working with them, most often using schemes to work with proposals. Arc.js facilitates working with proposals, schemes and other entities such as events, global constraints and voting machines by providing contract \"wrapper\" classes.  Refer here for \nall about Arc.js contract wrapper classes\n.\n\n\nWorking with Events\n\n\nArc.js supports events of various types that you can handle, including events from Arc contracts and events that enable you to track transaction as they occur.  Refer here for \nall about events in Arc.js\n.\n\n\nOther Service Classes\n\n\nArc.js provides a few \"service\" classes that can be helpful, including:\n\n\n\n\nConfigService\n - for working with Arc.js configuration settings. \nRead more here\n.\n\n\nLoggingService\n - for logging.  See also the \nlogLevel\n configuration setting\n.\n\n\nAvatarService\n - handy functions for getting information about an avatar (DAO).\n\n\nAccountService\n - for working with accounts, such as being notified when the default account changes (see \nAccount Changes\n)\n\n\nUtils\n - miscellaneous API for working with web3, truffle contracts and transactions.", 
            "title": "Overview"
        }, 
        {
            "location": "/Home/#daostack-arcjs", 
            "text": "DAOstack Arc.js  sits just above  DAOstack Arc  on the DAOstack stack.  It is a library that facilitates javascript application access to the DAOstack Arc ethereum smart contracts.  For more information about Arc contracts and the entire DAOstack ecosystem, please refer to the  Arc documentation .", 
            "title": "DAOstack Arc.js"
        }, 
        {
            "location": "/Home/#installation", 
            "text": "Ensure that  NodeJS , v9.4.0 or greater, is installed.  Install the npm package into your project:  1 npm install @daostack/arc.js --save   Now you can proceed with migrating contracts to a running testnet and configuring Arc.js in your application and environment.", 
            "title": "Installation"
        }, 
        {
            "location": "/Home/#api-reference", 
            "text": "You can find a  detailed reference for the entire Arc.js API here .  Read on here for step-by-step examples on how to get started with Arc.js.", 
            "title": "API Reference"
        }, 
        {
            "location": "/Home/#getting-started", 
            "text": "The following sections describe the basic steps for setting up Arc.js in your application. These steps basically involve:   running a blockchain node.  We will use the ganache testnet as an example.  deploying the Arc contracts to the net  using the Arc.js code in your application    Note  All of the script examples assume you are running the scripts in the root folder of your application.  If you happen to be running the scripts in the context of a cloned Arc.js repository, omit the prefix  npm explore @daostack/arc.js -- . See  Working with Arc Contracts .", 
            "title": "Getting Started"
        }, 
        {
            "location": "/Home/#set-up-a-testnet-with-arc-contracts", 
            "text": "Arc.js runs against an Ethereum network where it assumes that the Arc contracts have been migrated.  Out of the box, Arc.js can find contracts migrated to the mainnet and to kovan. But for any other testnet, or to redeploy, you will need to tell it to migrate the Arc contracts to a testnet of your choice.  You can do this by running a few Arc.js scripts from the context of your application.  To deploy contracts to a Ganache testnet, run the following scripts:  In a separate shell window: 1 npm explore @daostack/arc.js -- npm start ganache   Now migrate the Arc contracts to Ganache:  1 npm explore @daostack/arc.js -- npm start migrateContracts   Now when your app uses Arc.js, it will be running against Ganache and the contracts you just migrated.   Note  See  Work with Arc Contracts  and  Deploy to Other Testnets .", 
            "title": "Set up a Testnet with Arc Contracts"
        }, 
        {
            "location": "/Home/#use-the-arcjs-library-in-your-code", 
            "text": "", 
            "title": "Use the Arc.js Library in your Code"
        }, 
        {
            "location": "/Home/#typescript", 
            "text": "Arc.js itself is written using Typescript. The Arc.js library includes Typescript type definitions defined in an index.d.ts.", 
            "title": "Typescript"
        }, 
        {
            "location": "/Home/#javascript", 
            "text": "The javascript included in the Arc.js library is ES6 in a commonjs module format.", 
            "title": "JavaScript"
        }, 
        {
            "location": "/Home/#import-arcjs", 
            "text": "Import everything from ArcJs as follows:  1 import   *   as   ArcJs   from   @daostack/arc.js ;", 
            "title": "Import Arc.js"
        }, 
        {
            "location": "/Home/#configure-arcjs", 
            "text": "Refer here for  complete documentation on Arc.js configuration settings .", 
            "title": "Configure Arc.js"
        }, 
        {
            "location": "/Home/#initialize-arcjs-at-runtime", 
            "text": "Your application must invoke  InitializeArcJs  once at runtime before doing anything else.  1\n2\n3 import   {   InitializeArcJs   }   from   @daostack/arc.js ;  await   InitializeArcJs ();", 
            "title": "Initialize Arc.js at Runtime"
        }, 
        {
            "location": "/Home/#minimize-contract-loading", 
            "text": "By default,  InitializeArcJs  will load all of the wrapped Arc contracts as deployed by the running version of Arc.js.  As this operation can be time-consuming, you may want to tell  InitializeArcJs  to only load the contracts that you expect to use.  The following is enough to create a new DAO with no schemes:  1\n2\n3\n4\n5\n6 await   InitializeArcJs ({ \n     filter :   { \n       AbsoluteVote :   true , \n       DaoCreator :   true , \n     } \n   });    If you want to add schemes to your DAO, you would include each scheme in the filter:  1\n2\n3\n4\n5\n6\n7 await   InitializeArcJs ({ \n     filter :   { \n       AbsoluteVote :   true , \n       DaoCreator :   true , \n       SchemeRegistrar :   true , \n     } \n   });    If you are not creating DAOs and only want to use some schemes, then reference the schemes as well as whichever voting machine(s) the schemes are using:  1\n2\n3\n4\n5\n6 await   InitializeArcJs ({ \n     filter :   { \n       GenesisProtocol :   true , \n       ContributionReward :   true , \n     } \n   });", 
            "title": "Minimize contract loading"
        }, 
        {
            "location": "/Home/#use-default-network-settings", 
            "text": "You can use the Arc.js  ConfigService  to set the provider host and port that web3 uses to connect your applicaton to the net when not using MetaMask.  You can also tell  InitializeArcJs  to just use default Arc.js settings for mainnet (live), kovan, ropsten and ganache.  Here is an example of telling Arc.js to use its default settings for Kovan:  1\n2\n3 await   InitializeArcJs ({ \n   useNetworkDefaultsFor :   kovan \n   });     Info  For safety, by default Arc.js specifies a different HTTP port for each network.  You will need to make sure that the testnet your application is using is listening on that port.  The port values are:   Network Port  Ganache 8545  Kovan 8547  Ropsten 8548  Live (Mainnet) 8546", 
            "title": "Use default network settings"
        }, 
        {
            "location": "/Home/#working-with-arc-contracts", 
            "text": "Now that you've got Arc.js plugged into your application, configured, and contracts migrated to a running testnet, you are ready to start coding against DAOs and other Arc entities.  You will likely start by creating or referencing one or more DAOs.  Arc.js provides a class called  DAO  that facilitates creating and working with DAOs.  Refer here for  all about the DAO class .  Once you have a DAO or set of DAOs, you can start working with them, most often using schemes to work with proposals. Arc.js facilitates working with proposals, schemes and other entities such as events, global constraints and voting machines by providing contract \"wrapper\" classes.  Refer here for  all about Arc.js contract wrapper classes .", 
            "title": "Working with Arc Contracts"
        }, 
        {
            "location": "/Home/#working-with-events", 
            "text": "Arc.js supports events of various types that you can handle, including events from Arc contracts and events that enable you to track transaction as they occur.  Refer here for  all about events in Arc.js .", 
            "title": "Working with Events"
        }, 
        {
            "location": "/Home/#other-service-classes", 
            "text": "Arc.js provides a few \"service\" classes that can be helpful, including:   ConfigService  - for working with Arc.js configuration settings.  Read more here .  LoggingService  - for logging.  See also the  logLevel  configuration setting .  AvatarService  - handy functions for getting information about an avatar (DAO).  AccountService  - for working with accounts, such as being notified when the default account changes (see  Account Changes )  Utils  - miscellaneous API for working with web3, truffle contracts and transactions.", 
            "title": "Other Service Classes"
        }, 
        {
            "location": "/Configuration/", 
            "text": "Configuring Arc.js\n\n\nThe default configuration settings for Arc.js can be found in its \nconfig/default.json\n file.  Here is a description of the settings:\n\n\nautoApproveTokenTransfers\n\nAutomatically approve token transfers for operations that require the sender pay tokens to the scheme.  Examples: \nVestingScheme.create\n, \nGenesisProtocol.stake\n, and \nContributionReward.proposeContributionReward\n.  Default is true.\n\n\ndefaultVotingMachine\n\nThe voting machine used by default by \nDao.new\n when creating new DAOs.  Default is \"AbsoluteVote\".\n\n\nfoundersConfigurationLocation\n\nThe location of a custom founders json configuration file, including the name of the file.  The default points to \nfounders.json\n located in arc.js/migrations which defines default founders for ganache. If the value is given as a relative path, then it must be relative to arc.js/dist/migrations.  Refer here for \nmore about how to define founders\n.\n\n\nlogLevel\n\nThe level of logging.  Default is 9 (\nLogLevel.error | LogLevel.info\n).  The available log levels, which may be combined, are:\n\n\n1\n2\n3\n4\n5\n6\n  none = 0\n  info = 1\n  warn = 2\n  debug = 4\n  error = 8\n  all = 15\n\n\n\n\n\n\ncacheContractWrappers\n\n\ntrue\n to cache contract wrappers obtained using the contract wrapper factory methods \n.at\n and \n.new\n.  The cache is local, it does not persist across application instances.  The default is \nfalse\n.\n\n\nnetwork\n\nName of the blockchain network used during Arc contract migration.  Other information like url and port come from Arc.js's truffle.js file.  Default is \"ganache\".\n\n\nproviderPort\n\nThe port to use when connecting to the blockchain network at runtime.  Default is 8545.\n\n\nproviderUrl\n\nThe url to use when connecting to the blockchain network at runtime.  Default is http://127.0.0.1.\n\n\nObtain a configuration setting at runtime\n\n\n1\n2\nimport\n \n{\n \nConfigService\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nConfigService\n.\nget\n(\nnetwork\n);\n\n\n\n\n\n\n\nOverride a configuration setting at runtime\n\n\n1\n2\nimport\n \n{\n \nConfigService\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nConfigService\n.\nset\n(\nnetwork\n,\n \nkovan\n);\n\n\n\n\n\n\n\nEnvironment variables\n\n\nYou can override the default configuration settings by setting values on properties of \nnode.env\n (see \nhere\n) with the same name as the corresponding arc.js configuration setting, \nbut with \"arcjs_\" prepended to the name\n.  This enables you to use environment variables to control the arc.js configuration.", 
            "title": "Configuration"
        }, 
        {
            "location": "/Configuration/#configuring-arcjs", 
            "text": "The default configuration settings for Arc.js can be found in its  config/default.json  file.  Here is a description of the settings:  autoApproveTokenTransfers \nAutomatically approve token transfers for operations that require the sender pay tokens to the scheme.  Examples:  VestingScheme.create ,  GenesisProtocol.stake , and  ContributionReward.proposeContributionReward .  Default is true.  defaultVotingMachine \nThe voting machine used by default by  Dao.new  when creating new DAOs.  Default is \"AbsoluteVote\".  foundersConfigurationLocation \nThe location of a custom founders json configuration file, including the name of the file.  The default points to  founders.json  located in arc.js/migrations which defines default founders for ganache. If the value is given as a relative path, then it must be relative to arc.js/dist/migrations.  Refer here for  more about how to define founders .  logLevel \nThe level of logging.  Default is 9 ( LogLevel.error | LogLevel.info ).  The available log levels, which may be combined, are:  1\n2\n3\n4\n5\n6   none = 0\n  info = 1\n  warn = 2\n  debug = 4\n  error = 8\n  all = 15   cacheContractWrappers  true  to cache contract wrappers obtained using the contract wrapper factory methods  .at  and  .new .  The cache is local, it does not persist across application instances.  The default is  false .  network \nName of the blockchain network used during Arc contract migration.  Other information like url and port come from Arc.js's truffle.js file.  Default is \"ganache\".  providerPort \nThe port to use when connecting to the blockchain network at runtime.  Default is 8545.  providerUrl \nThe url to use when connecting to the blockchain network at runtime.  Default is http://127.0.0.1.", 
            "title": "Configuring Arc.js"
        }, 
        {
            "location": "/Configuration/#obtain-a-configuration-setting-at-runtime", 
            "text": "1\n2 import   {   ConfigService   }   from   @daostack/arc.js ;  ConfigService . get ( network );", 
            "title": "Obtain a configuration setting at runtime"
        }, 
        {
            "location": "/Configuration/#override-a-configuration-setting-at-runtime", 
            "text": "1\n2 import   {   ConfigService   }   from   @daostack/arc.js ;  ConfigService . set ( network ,   kovan );", 
            "title": "Override a configuration setting at runtime"
        }, 
        {
            "location": "/Configuration/#environment-variables", 
            "text": "You can override the default configuration settings by setting values on properties of  node.env  (see  here ) with the same name as the corresponding arc.js configuration setting,  but with \"arcjs_\" prepended to the name .  This enables you to use environment variables to control the arc.js configuration.", 
            "title": "Environment variables"
        }, 
        {
            "location": "/Daos/", 
            "text": "Working with DAOs\n\n\nArc.js provides a class called \nDAO\n that facilitates creating and working with DAOs.  Read on for more information about DAOs in DAOstack and the \nDAO\n class.\n\n\nAbout DAOs\n\n\nEvery DAO in DAOstack includes an avatar, a controller, a token, a reputation system, and zero or more schemes and global constraints.\n\n\nThe avatar\n is a public-facing part of the DAO that handles the interaction of the DAO with the rest of the world, for example interacting with other DAOs or paying third party agents.  A DAO is always referenced by the address of its avatar.\n\n\nThe controller\n is a central internal hub for all of the components of the DAO.  DAOstack documentation often refers to the various DAO components as \"organs\".\n\n\n\n\nNote\n\n\nAny contract or agent's address can be registered like a scheme with the controller and thus work directly with the controller.\n\n\n\n\nThe token\n is used as currency in operations like staking in \nGenesisProtocol\n, vesting agreements in \nVestingScheme\n and rewards in \nContributionReward\n.\n\n\nThe reputation system\n provides a kind of currency of influence. Reputation conveys influence in the DAO commenserate with the rules \nof the DAO, such as when voting and the nature of what causes it to be gained or lost.  Like tokens, reputation can be minted, but it cannot be transferred between agents.\n\n\nSchemes\n are public-facing contracts that any agent can use when they want perform primary functions relating to the DAOstack environment or respecting the domain of a particular DAO.  Refer here to \nmore about schemes\n.\n\n\nGlobal constraints\n use configured criteria to block actions attempted by the Controller that would violate a given constraint.  An example is \nTokenCapGC\n that limits the total supply of a given token to a certain maximum number.\n\n\nDAOs are extensible beyond the reusability of all Arc contracts: You can provide your own implementation of the controller, token, and any global constraints, voting machines and schemes you want.\n\n\n\n\nInfo\n\n\nRefer here for \nmore information about the architecture of DAOs\n.\n\n\n\n\n\n\nInfo\n\n\nRefer here for \nmore information about proposals\n.\n\n\n\n\nCreating a new DAO\n\n\n\n\nWhen creating a DAO you can configure its name, token, founders and schemes.  For schemes you configure their parameters, permissions and their voting machine.\n\n\nYou can call \nDAO.new\n to create a new DAO, passing it a \nconfiguration object\n.\n\n\nAlmost everything in the configuration has a default.  The following sections describe how to supply custom configurations.\n\n\n\n\nTip\n\n\nUnder the hood, \nDao.new\n uses the \nDaoCreatorWrapper\n class.\n\n\n\n\nCreating a new DAO with founders\n\n\nThe simplest example of how to create a new DAO adds one or more founders and no schemes. You add the founders by including a \"founders\" array.  This will automatically mint tokens and reputation to each founder:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \nfounders\n:\n \n[\n\n    \n{\n\n      \n// the current user account\n\n      \naddress\n:\n \naccounts\n[\n0\n],\n\n      \nreputation\n:\n \nweb3\n.\ntoWei\n(\n1000\n),\n\n      \ntokens\n:\n \nweb3\n.\ntoWei\n(\n40\n)\n\n    \n},\n\n    \n{\n\n      \naddress\n:\n \nfounder1Address\n,\n\n      \nreputation\n:\n \nweb3\n.\ntoWei\n(\n1000\n),\n\n      \ntokens\n:\n \nweb3\n.\ntoWei\n(\n40\n)\n\n    \n},\n\n    \n{\n\n      \naddress\n:\n \nfounder2Address\n,\n\n      \nreputation\n:\n \nweb3\n.\ntoWei\n(\n1000\n),\n\n      \ntokens\n:\n \nweb3\n.\ntoWei\n(\n40\n)\n\n    \n}\n\n  \n]\n\n\n});\n\n\n\n\n\n\n\nAnd voil\u00e0, you have created a new DAO with three founders in the DAO stack on Ethereum.  The returned object \nnewDao\n is an instance of \nDAO\n.\n\n\nBut though this DAO has founders with tokens and reputation who can thus make proposals and vote on them, there is still no way to make proposals, that is, no schemes, and thus nothing on which to vote.  The DAO needs some schemes, at minimum a \nSchemeRegistrar\n with which you can propose to add, modify or remove other schemes.\n\n\n\n\nNote\n\n\nIt is not possible to add or remove founders.  In fact, there is no retained sense of who they even were.  They are simply addresses you supply when you create a DAO and to whom will immediately be minted tokens and reputation.  You can later mint reputation or tokens to others... this would effectively be like adding them as founders.\n\n\n\n\nCreating a new DAO with schemes\n\n\nCreate a new DAO with schemes by including a \"schemes\" array.  The following example registers the schemes with all default parameters, permissions and voting machines.\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \nschemes\n:\n \n[\n\n    \n{\n \nname\n:\n \nSchemeRegistrar\n \n},\n\n    \n{\n \nname\n:\n \nUpgradeScheme\n \n},\n\n    \n{\n \nname\n:\n \nGlobalConstraintRegistrar\n \n}\n\n  \n]\n\n\n});\n\n\n\n\n\n\n\nPut the last two examples together and you have a DAO with founders and schemes and can start to realize the potential of a DAO in the DAOstack ecosystem.\n\n\n\n\nInfo\n\n\nRefer here to \nmore about schemes\n.\n\n\n\n\nWhat if we want to configure how voting will proceed when someone submits a proposal?\n\n\nCreating a new DAO overriding the default voting machine\n\n\nBy default, \nDAO.new\n configures each scheme with the \nAbsoluteVote\n voting machine and default voting parameter values.  The following example retains the default voting machine while overriding its parameters:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \nvotingMachineParams\n:\n \n{\n\n    \nvotePerc\n:\n \n45\n,\n\n    \nownerVote\n:\n \nfalse\n\n  \n}\n\n\n});\n\n\n\n\n\n\n\nHere we supply an alternate voting machine address, supplying it \nAbsoluteVote\n parameters:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \nvotingMachineParams\n:\n \n{\n\n    \nvotePerc\n:\n \n45\n,\n\n    \nownerVote\n:\nfalse\n\n    \nvotingMachineAddress\n:\n \nanAddress\n\n  \n}\n\n\n});\n\n\n\n\n\n\n\nHere we supply a different default voting machine (\nGenesisProtocol\n), with default voting parameters:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \nvotingMachineParams\n:\n \n{\n\n    \nvotingMachineName\n:\n \nGenesisProtocol\n\n  \n}\n\n\n});\n\n\n\n\n\n\n\nHere we override the default voting machine parameters on just one of the schemes:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \nschemes\n:\n \n[\n\n    \n{\n \nname\n:\n \nSchemeRegistrar\n \n},\n\n    \n{\n \nname\n:\n \nUpgradeScheme\n \n},\n\n    \n{\n\n      \nname\n:\n \nGlobalConstraintRegistrar\n,\n\n      \nvotingMachineParams\n:\n \n{\n\n        \nvotePerc\n:\n \n30\n,\n\n      \n}\n\n    \n}\n\n  \n]\n\n\n});\n\n\n\n\n\n\n\n\n\nTip\n\n\nIf you want change the default voting machine for all calls to \nDAO.new\n you can do it using the \nConfigService\n setting \ndefaultVotingMachine\n. See \nArc.js Configuration Settings\n.\n\n\n\n\n\n\nImportant\n\n\nIf you want to use \nGenesisProtocol\n on \nany\n scheme, you must also add it as scheme on the DAO itself (see \nCreating a new DAO with schemes\n).\n\n\n\n\nCreating a new DAO with a non-Universal Controller\n\n\nThere are two types of DAO controller: universal and non-universal.  The default is universal.  You can create a DAO using the DAOstack \nController\n contract by passing \nfalse\n for \nuniversalController\n:\n\n\n1\n2\n3\n4\n5\n6\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \nuniversalController\n:\n \nfalse\n\n\n});\n\n\n\n\n\n\n\n\n\nInfo\n\n\nFor more information about choosing between universal and non-universal controllers, see \nthis article\n.\n\n\n\n\nCreating a new DAO using a custom DaoCreator scheme\n\n\nArc supplies a contract for creating DAOs called \nDaoCreator\n.  But you don't have to rely on  \nDAOCreator\n if you prefer different functionality -- you can supply your own DAO creator scheme by passing its address in \ndaoCreatorScheme\n:\n\n\n1\n2\n3\n4\n5\n6\nconst\n \nnewDao\n \n=\n \nawait\n \nDAO\n.\nnew\n({\n\n  \nname\n:\n \nMy New DAO\n,\n\n  \ntokenName\n:\n \nMy new Token\n,\n\n  \ntokenSymbol\n:\n \nMNT\n,\n\n  \ndaoCreatorScheme\n:\n \nanAddress\n\n\n});\n\n\n\n\n\n\n\n\n\nNote\n\n\nYour DAO creator contract must, at least as a subset of its functionality, implement the same ABI as the Arc \nDaoCreator\n contract shipped with the running version of Arc.js.\n\n\n\n\nGet a previously-created DAO\n\n\nUse \nDAO.at\n to get a previously-created DAO using the avatar address:\n\n\n1\nconst\n \ndao\n \n=\n \nawait\n \nDAO\n.\nat\n(\ndaoAvatarAddress\n);\n\n\n\n\n\n\n\n\n\nInfo\n\n\nDAO.at\n will throw an exception if there is any problem loading the DAO.\n\n\n\n\nGet all the schemes registered to the DAO\n\n\n\n\nYou can obtain the addresses of all of the schemes that are registered with a DAO using \nDAO.getSchemes\n.  You will also get a contract wrapper if the scheme happens to be the one deployed by the running version of Arc.js:\n\n\n1\n2\n3\n4\n5\n6\n7\nconst\n \ndaoSchemeInfos\n \n=\n \nawait\n \nmyDao\n.\ngetSchemes\n();\n\n\nfor\n \n(\nlet\n \nschemeInfo\n \nof\n \ndaoSchemeInfos\n)\n \n{\n\n  \nconsole\n.\nlog\n(\n`scheme address: \n${\nschemeInfo\n.\naddress\n}\n`\n);\n\n  \nif\n \n(\nschemeInfo\n.\nwrapper\n)\n \n{\n\n    \nconsole\n.\nlog\n(\n`scheme name: \n${\nschemeInfo\n.\nwrapper\n.\nname\n}\n`\n);\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nOr info about a single scheme:\n\n\n1\n2\n3\n4\n5\n6\nconst\n \ndaoSchemeInfos\n \n=\n  \n=\n \nawait\n \nmyDao\n.\ngetSchemes\n(\nUpgradeScheme\n);\n\n\nconst\n \nupgradeSchemeInfo\n \n=\n \ndaoSchemeInfos\n[\n0\n];\n\n\nconsole\n.\nlog\n(\n`scheme address: \n${\nupgradeSchemeInfo\n.\naddress\n}\n`\n);\n\n\nif\n \n(\nupgradeSchemeInfo\n.\nwrapper\n)\n \n{\n\n  \nconsole\n.\nlog\n(\n`scheme name: \n${\nupgradeSchemeInfo\n.\nwrapper\n.\nname\n}\n`\n);\n\n\n}\n\n\n\n\n\n\n\nGet all the DAOs\n\n\nYou can obtain all of the DAOs that have been created by the DaoCreator that was deployed by the currently-running version of Arc.js:\n\n\n1\nconst\n \navatarAddresses\n \n=\n \nawait\n \nDAO\n.\ngetDaos\n();\n\n\n\n\n\n\n\nOr all of the DAOs created by a specific DaoCreator:\n\n\n1\nconst\n \navatarAddresses\n \n=\n \nawait\n \nDAO\n.\ngetDaos\n({\ndaoCreatorAddress\n:\n \nanAddress\n});\n\n\n\n\n\n\n\nYou can also watch as DAOs are, or have been, created using the \nEventFetcherFactory\n mechanism:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nconst\n \ndaoEventFetcherFactory\n \n=\n \nawait\n \nDAO\n.\ngetDaoCreationEvents\n();\n\n\nconst\n \nwatcher\n \n=\n \nawait\n \ndaoEventFetcherFactory\n({},\n \n{\n \nfromBlock\n: \n0\n \n}).\nwatch\n(\n\n  \nasync\n \n(\nerror\n: \nError\n,\n \naddressPromise\n: \nPromise\nAddress\n)\n:\n \nvoid\n \n=\n \n{\n\n    \nif\n \n(\n!\nerror\n)\n \n{\n\n        \nconst\n \naddress\n \n=\n \nawait\n \naddressPromise\n;\n\n        \nconst\n \ndao\n \n=\n \nawait\n \nDAO\n.\nat\n(\naddress\n);\n\n      \n}\n\n  \n}\n\n\n);\n\n\n\n\n\n\n\n\n\nNote\n\n\nLike with \nDAO.getDaos\n you can supply a \ndaoCreatorAddress\n in the options of \ngetDaoCreationEvents\n.", 
            "title": "DAOs"
        }, 
        {
            "location": "/Daos/#working-with-daos", 
            "text": "Arc.js provides a class called  DAO  that facilitates creating and working with DAOs.  Read on for more information about DAOs in DAOstack and the  DAO  class.", 
            "title": "Working with DAOs"
        }, 
        {
            "location": "/Daos/#about-daos", 
            "text": "Every DAO in DAOstack includes an avatar, a controller, a token, a reputation system, and zero or more schemes and global constraints.  The avatar  is a public-facing part of the DAO that handles the interaction of the DAO with the rest of the world, for example interacting with other DAOs or paying third party agents.  A DAO is always referenced by the address of its avatar.  The controller  is a central internal hub for all of the components of the DAO.  DAOstack documentation often refers to the various DAO components as \"organs\".   Note  Any contract or agent's address can be registered like a scheme with the controller and thus work directly with the controller.   The token  is used as currency in operations like staking in  GenesisProtocol , vesting agreements in  VestingScheme  and rewards in  ContributionReward .  The reputation system  provides a kind of currency of influence. Reputation conveys influence in the DAO commenserate with the rules \nof the DAO, such as when voting and the nature of what causes it to be gained or lost.  Like tokens, reputation can be minted, but it cannot be transferred between agents.  Schemes  are public-facing contracts that any agent can use when they want perform primary functions relating to the DAOstack environment or respecting the domain of a particular DAO.  Refer here to  more about schemes .  Global constraints  use configured criteria to block actions attempted by the Controller that would violate a given constraint.  An example is  TokenCapGC  that limits the total supply of a given token to a certain maximum number.  DAOs are extensible beyond the reusability of all Arc contracts: You can provide your own implementation of the controller, token, and any global constraints, voting machines and schemes you want.   Info  Refer here for  more information about the architecture of DAOs .    Info  Refer here for  more information about proposals .", 
            "title": "About DAOs"
        }, 
        {
            "location": "/Daos/#creating-a-new-dao", 
            "text": "When creating a DAO you can configure its name, token, founders and schemes.  For schemes you configure their parameters, permissions and their voting machine.  You can call  DAO.new  to create a new DAO, passing it a  configuration object .  Almost everything in the configuration has a default.  The following sections describe how to supply custom configurations.   Tip  Under the hood,  Dao.new  uses the  DaoCreatorWrapper  class.", 
            "title": "Creating a new DAO"
        }, 
        {
            "location": "/Daos/#creating-a-new-dao-with-founders", 
            "text": "The simplest example of how to create a new DAO adds one or more founders and no schemes. You add the founders by including a \"founders\" array.  This will automatically mint tokens and reputation to each founder:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   founders :   [ \n     { \n       // the current user account \n       address :   accounts [ 0 ], \n       reputation :   web3 . toWei ( 1000 ), \n       tokens :   web3 . toWei ( 40 ) \n     }, \n     { \n       address :   founder1Address , \n       reputation :   web3 . toWei ( 1000 ), \n       tokens :   web3 . toWei ( 40 ) \n     }, \n     { \n       address :   founder2Address , \n       reputation :   web3 . toWei ( 1000 ), \n       tokens :   web3 . toWei ( 40 ) \n     } \n   ]  });    And voil\u00e0, you have created a new DAO with three founders in the DAO stack on Ethereum.  The returned object  newDao  is an instance of  DAO .  But though this DAO has founders with tokens and reputation who can thus make proposals and vote on them, there is still no way to make proposals, that is, no schemes, and thus nothing on which to vote.  The DAO needs some schemes, at minimum a  SchemeRegistrar  with which you can propose to add, modify or remove other schemes.   Note  It is not possible to add or remove founders.  In fact, there is no retained sense of who they even were.  They are simply addresses you supply when you create a DAO and to whom will immediately be minted tokens and reputation.  You can later mint reputation or tokens to others... this would effectively be like adding them as founders.", 
            "title": "Creating a new DAO with founders"
        }, 
        {
            "location": "/Daos/#creating-a-new-dao-with-schemes", 
            "text": "Create a new DAO with schemes by including a \"schemes\" array.  The following example registers the schemes with all default parameters, permissions and voting machines.   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   schemes :   [ \n     {   name :   SchemeRegistrar   }, \n     {   name :   UpgradeScheme   }, \n     {   name :   GlobalConstraintRegistrar   } \n   ]  });    Put the last two examples together and you have a DAO with founders and schemes and can start to realize the potential of a DAO in the DAOstack ecosystem.   Info  Refer here to  more about schemes .   What if we want to configure how voting will proceed when someone submits a proposal?", 
            "title": "Creating a new DAO with schemes"
        }, 
        {
            "location": "/Daos/#creating-a-new-dao-overriding-the-default-voting-machine", 
            "text": "By default,  DAO.new  configures each scheme with the  AbsoluteVote  voting machine and default voting parameter values.  The following example retains the default voting machine while overriding its parameters:  1\n2\n3\n4\n5\n6\n7\n8\n9 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   votingMachineParams :   { \n     votePerc :   45 , \n     ownerVote :   false \n   }  });    Here we supply an alternate voting machine address, supplying it  AbsoluteVote  parameters:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   votingMachineParams :   { \n     votePerc :   45 , \n     ownerVote : false \n     votingMachineAddress :   anAddress \n   }  });    Here we supply a different default voting machine ( GenesisProtocol ), with default voting parameters:  1\n2\n3\n4\n5\n6\n7\n8 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   votingMachineParams :   { \n     votingMachineName :   GenesisProtocol \n   }  });    Here we override the default voting machine parameters on just one of the schemes:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   schemes :   [ \n     {   name :   SchemeRegistrar   }, \n     {   name :   UpgradeScheme   }, \n     { \n       name :   GlobalConstraintRegistrar , \n       votingMachineParams :   { \n         votePerc :   30 , \n       } \n     } \n   ]  });     Tip  If you want change the default voting machine for all calls to  DAO.new  you can do it using the  ConfigService  setting  defaultVotingMachine . See  Arc.js Configuration Settings .    Important  If you want to use  GenesisProtocol  on  any  scheme, you must also add it as scheme on the DAO itself (see  Creating a new DAO with schemes ).", 
            "title": "Creating a new DAO overriding the default voting machine"
        }, 
        {
            "location": "/Daos/#creating-a-new-dao-with-a-non-universal-controller", 
            "text": "There are two types of DAO controller: universal and non-universal.  The default is universal.  You can create a DAO using the DAOstack  Controller  contract by passing  false  for  universalController :  1\n2\n3\n4\n5\n6 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   universalController :   false  });     Info  For more information about choosing between universal and non-universal controllers, see  this article .", 
            "title": "Creating a new DAO with a non-Universal Controller"
        }, 
        {
            "location": "/Daos/#creating-a-new-dao-using-a-custom-daocreator-scheme", 
            "text": "Arc supplies a contract for creating DAOs called  DaoCreator .  But you don't have to rely on   DAOCreator  if you prefer different functionality -- you can supply your own DAO creator scheme by passing its address in  daoCreatorScheme :  1\n2\n3\n4\n5\n6 const   newDao   =   await   DAO . new ({ \n   name :   My New DAO , \n   tokenName :   My new Token , \n   tokenSymbol :   MNT , \n   daoCreatorScheme :   anAddress  });     Note  Your DAO creator contract must, at least as a subset of its functionality, implement the same ABI as the Arc  DaoCreator  contract shipped with the running version of Arc.js.", 
            "title": "Creating a new DAO using a custom DaoCreator scheme"
        }, 
        {
            "location": "/Daos/#get-a-previously-created-dao", 
            "text": "Use  DAO.at  to get a previously-created DAO using the avatar address:  1 const   dao   =   await   DAO . at ( daoAvatarAddress );     Info  DAO.at  will throw an exception if there is any problem loading the DAO.", 
            "title": "Get a previously-created DAO"
        }, 
        {
            "location": "/Daos/#get-all-the-schemes-registered-to-the-dao", 
            "text": "You can obtain the addresses of all of the schemes that are registered with a DAO using  DAO.getSchemes .  You will also get a contract wrapper if the scheme happens to be the one deployed by the running version of Arc.js:  1\n2\n3\n4\n5\n6\n7 const   daoSchemeInfos   =   await   myDao . getSchemes ();  for   ( let   schemeInfo   of   daoSchemeInfos )   { \n   console . log ( `scheme address:  ${ schemeInfo . address } ` ); \n   if   ( schemeInfo . wrapper )   { \n     console . log ( `scheme name:  ${ schemeInfo . wrapper . name } ` ); \n   }  }    Or info about a single scheme:  1\n2\n3\n4\n5\n6 const   daoSchemeInfos   =    =   await   myDao . getSchemes ( UpgradeScheme );  const   upgradeSchemeInfo   =   daoSchemeInfos [ 0 ];  console . log ( `scheme address:  ${ upgradeSchemeInfo . address } ` );  if   ( upgradeSchemeInfo . wrapper )   { \n   console . log ( `scheme name:  ${ upgradeSchemeInfo . wrapper . name } ` );  }", 
            "title": "Get all the schemes registered to the DAO"
        }, 
        {
            "location": "/Daos/#get-all-the-daos", 
            "text": "You can obtain all of the DAOs that have been created by the DaoCreator that was deployed by the currently-running version of Arc.js:  1 const   avatarAddresses   =   await   DAO . getDaos ();    Or all of the DAOs created by a specific DaoCreator:  1 const   avatarAddresses   =   await   DAO . getDaos ({ daoCreatorAddress :   anAddress });    You can also watch as DAOs are, or have been, created using the  EventFetcherFactory  mechanism:  1\n2\n3\n4\n5\n6\n7\n8\n9 const   daoEventFetcherFactory   =   await   DAO . getDaoCreationEvents ();  const   watcher   =   await   daoEventFetcherFactory ({},   {   fromBlock :  0   }). watch ( \n   async   ( error :  Error ,   addressPromise :  Promise Address ) :   void   =   { \n     if   ( ! error )   { \n         const   address   =   await   addressPromise ; \n         const   dao   =   await   DAO . at ( address ); \n       } \n   }  );     Note  Like with  DAO.getDaos  you can supply a  daoCreatorAddress  in the options of  getDaoCreationEvents .", 
            "title": "Get all the DAOs"
        }, 
        {
            "location": "/Wrappers/", 
            "text": "Using Arc Contract Wrappers\n\n\nOverview\n\n\nArc.js wraps several Arc contracts in a \"contract wrapper\" JavaScript class.  Every wrapper class inherits from \nContractWrapperBase\n providing a common set of functions and properties and specific helper functions for operations specific to the contract it wraps.\n\n\nEach wrapper contains a \ncontract\n property which is the original \"wrapped\" \nTruffle contract\n that you can use to access all of the Truffle functionality of the specific Arc contract being wrapped.\n\n\nEach wrapper also contains a \nfactory\n property.  This is the static instance of the wrapper factory class which is based on \nContractWrapperFactory\n (where \nTWrapper\n is the type (class) of the wrapper).  Each factory contains the static methods \nat(someAddress)\n, \nnew()\n and \ndeployed()\n that you can use to instantiate the associated wrapper class.\n\n\nEach wrapper includes the contract's events.  Refer here for more information about \nhow Arc.js wraps contract events\n.\n\n\nArc.js provides multiple ways to obtain contract wrappers, each optimal in particular use cases:\n\n\n\n\nget a deployed wrapper by the Arc contract name\n\n\nenumerate all of the deployed wrappers\n\n\nenumerate wrappers by contract type\n\n\nget a wrapper at a given address\n\n\ndeploy a new contract\n\n\n\n\nThe following sections describe what to do in each of the above use cases.\n\n\n\n\nKeep in mind\n\n\nIn Arc.js all token and reputation amounts should be expressed in Wei.\n\n\n\n\nGet a deployed wrapper by name\n\n\nYou can obtain, by its Arc contract name, any wrapper deployed by the running version of Arc.js:\n\n\n1\n2\nimport\n \n{\n \nContractWrappers\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \nupgradeScheme\n \n=\n \nContractWrappers\n.\nUpgradeScheme\n;\n\n\n\n\n\n\n\n\n\nTip\n\n\nContractWrappers\n is an alias for \nWrapperService.wrappers\n\n\n1\n2\nimport\n \n{\n \nWrapperService\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \nupgradeScheme\n \n=\n \nWrapperService\n.\nwrappers\n.\nUpgradeScheme\n;\n\n\n\n\n\n\n\n\nEnumerate all of the deployed wrappers\n\n\nYou can enumerate all of the wrappers of contracts deployed by the running version of Arc.js:\n\n\n1\n2\n3\n4\nimport\n \n{\n \nContractWrappers\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nfor\n \n(\nvar\n \nwrapper\n \nin\n \nContractWrappers\n)\n \n{\n\n  \nconsole\n.\nlog\n(\n`\n${\nwrapper\n.\nfriendlyName\n}\n is at \n${\nwrapper\n.\naddress\n}\n`\n);\n\n\n}\n\n\n\n\n\n\n\n\n\nTip\n\n\nContractWrappers\n is an alias for \nWrapperService.wrappers\n\n\n1\n2\n3\n4\n5\nimport\n \n{\n \nWrapperService\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nfor\n \n(\nvar\n \nwrapperName\n \nin\n \nWrapperService\n.\nwrappers\n)\n \n{\n\n  \nconst\n \nwrapper\n \n=\n \nWrapperService\n.\nwrappers\n[\nwrapperName\n];\n\n  \nconsole\n.\nlog\n(\n`\n${\nwrapper\n.\nfriendlyName\n}\n is at \n${\nwrapper\n.\naddress\n}\n`\n);\n\n\n}\n\n\n\n\n\n\n\n\n\n\nEnumerate wrappers by contract type\n\n\nArc contracts and associated Arc.js contract wrapper classes can be categorized as follows:\n\n\nSchemes\n\n\n\n\nContributionReward\n\n\nGenesisProtocol\n\n\nGlobalConstraintRegistrar\n\n\nSchemeRegistrar\n\n\nUpgradeScheme\n\n\nVestingScheme\n\n\nVoteInOrganizationScheme\n\n\n\n\nVoting Machines\n\n\n\n\nAbsoluteVote\n\n\nGenesisProtocol\n\n\n\n\nGlobal Constraints\n\n\n\n\nTokenCapGC\n\n\n\n\nOthers\n\n\n\n\nDaoCreator\n\n\nRedeemer\n\n\n\n\nYou can enumerate the wrappers in each category, for example, schemes:\n\n\n1\n2\n3\n4\nimport\n \n{\n \nContractWrappersByType\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nfor\n \n(\nvar\n \nschemeWrapper\n \nof\n \nContractWrappersByType\n.\nschemes\n)\n \n{\n\n  \nconsole\n.\nlog\n(\n`\n${\nschemeWrapper\n.\nfriendlyName\n}\n is at \n${\nschemeWrapper\n.\naddress\n}\n`\n);\n\n\n}\n\n\n\n\n\n\n\n\n\nTip\n\n\nContractWrappersByType\n is an alias for \nWrapperService.wrappersByType\n\n\n1\n2\n3\n4\n5\n6\nimport\n \n{\n \nWrapperService\n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \nwrapperTypes\n \n=\n \nWrapperService\n.\nwrappersByType\n;\n\n\n\nfor\n \n(\nvar\n \nschemeWrapper\n \nof\n \nwrapperTypes\n.\nschemes\n)\n \n{\n\n  \nconsole\n.\nlog\n(\n`\n${\nschemeWrapper\n.\nfriendlyName\n}\n is at \n${\nschemeWrapper\n.\naddress\n}\n`\n);\n\n\n}\n\n\n\n\n\n\n\n\n\n\nTip\n\n\nContractWrappersByType.allWrappers\n is an array of all of wrappers.\n\n\n\n\nGet a wrapper at a given address\n\n\nYou can use a wrapper's factory class to obtain a wrapper for a contract deployed to any given address:\n\n\n1\n2\nimport\n \n{\n \nUpgradeSchemeFactory\n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \nupgradeScheme\n \n=\n \nawait\n \nUpgradeSchemeFactory\n.\nat\n(\nsomeAddress\n);\n\n\n\n\n\n\n\n\n\nInfo\n\n\n.at\n will throw an exception if it can't find the contract at the given address.\n\n\n\n\n\n\nTip\n\n\nContractWrapperFactories\n is an alias for \nWrapperService.factories\n\n\n1\n2\n3\nimport\n \n{\n \nContractWrapperFactories\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \nupgradeScheme\n \n=\n \nawait\n \nContractWrapperFactories\n.\nUpgradeScheme\n.\nat\n(\nsomeAddress\n);\n\n\n}\n\n\n\n\n\n\n\n\nAnother way to get a wrapper at a given address is using \nWrapperService.getContractWrapper\n.  This is most useful when you have both contract name\nand address and wish to most efficiently return the associated wrapper, or undefined when not found:\n\n\n1\n2\n3\n4\nimport\n \n{\n \nWrapperService\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\n// returns undefined when not found, unlike the factory `.at` which throws an exception \n\n\nconst\n \nupgradeScheme\n \n=\n \nawait\n \nWrapperService\n.\ngetContractWrapper\n(\nUpgradeScheme\n,\n \nsomeAddress\n);\n\n\n}\n\n\n\n\n\n\n\nDeploy a new contract\n\n\nYou can use a wrapper's factory class to deploy a new instance of a contract and obtain a wrapper for it:\n\n\n1\n2\nimport\n \n{\n \nUpgradeSchemeFactory\n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \nnewUpgradeScheme\n \n=\n \nawait\n \nUpgradeSchemeFactory\n.\nnew\n();\n\n\n\n\n\n\n\n\n\nTip\n\n\nContractWrapperFactories\n is an alias for \nWrapperService.factories\n\n\n1\n2\n3\nimport\n \n{\n \nContractWrapperFactories\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \nnewUpgradeScheme\n \n=\n \nawait\n \nContractWrapperFactories\n.\nUpgradeScheme\n.\nnew\n();\n\n\n}\n\n\n\n\n\n\n\n\nObtain a DAO scheme's parameters\n\n\nAlthough you can always register your own schemes with a DAO, whether they be totally custom non-Arc schemes, or redeployed Arc schemes, by default a DAO is created with Arc schemes that are universal in the sense that the scheme's code is usable by any DAO with which the scheme can be registered.  But every scheme registered with a DAO is configured with a particular set of parameter values, and references such as proposals. All of these are stored in the DAO's own controller where each universal scheme is able to find them.  (If the controller is the Universal Controller then the parameters and data are keyed by the DAO's avatar address.)\n\n\nIf you want to obtain a DAO scheme's parameters, you can do it like this:\n\n\n1\nconst\n \nschemeParameters\n \n=\n \nschemeWrapper\n.\ngetSchemeParameters\n(\navatarAddress\n);\n\n\n\n\n\n\n\nThis will return an object containing the scheme's parameter values.  The object will be the same as that which one passes to \nschemeWrapper.setParameters\n when setting parameters on any contract.\n\n\nFor example, to obtain the voting machine address for a scheme that has one as a parameter:\n\n\n1\n2\nconst\n \nschemeParameters\n \n=\n \nschemeWrapper\n.\ngetSchemeParameters\n(\navatarAddress\n);\n\n\nconst\n \nvotingMachineAddress\n \n=\n \nschemeParameters\n.\nvotingMachineAddress\n;\n\n\n\n\n\n\n\nWorking with Events\n\n\nAll Arc.js wrappers publish events of various types that you can handle, including events from Arc contracts and events that enable you to track transaction as they occur.  Refer here for \nall about events in Arc.js\n.\n\n\nCan't Find What You Need?\n\n\nArc.js doesn't wrap every Arc contact nor give you a helper class for everything, but it does give you some more options described in the following sections.\n\n\nTruffle Contracts and Web3\n\n\nUnder the hood Arc.js uses Truffle contracts and Web3, and when you find that Arc.js doesn't directly provide you a piece of information or functionality that you need, you might be able to use them to find what you want.  You can get Web3 via \nUtils.getWeb3\n and Truffle contract associated with each contract wrapper instance via the \ncontract\n property on each wrapper class.\n\n\n\n\nInfo\n\n\nRead more about \nTruffle Contracts\n and \nWeb3\n\n\n\n\nUnwrapped Arc Contracts\n\n\nNot all Arc contracts have been given wrapper classes, for example, \nAvatar\n, \nUController\n and many more.  But using \nUtils.requireContract\n you can obtain a raw \nTruffle contract\n for any contract, enabling you to work with the contract just by providing the name of the Arc contract:\n\n\n1\n2\nimport\n \n{\n \nUtils\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\nconst\n \navatarTruffleContract\n \n=\n \nawait\n \nUtils\n.\nrequireContract\n(\nAvatar\n);\n\n\n\n\n\n\n\n\n\nInfo\n\n\nUtils.requireContract\n throws an exception when there is any problem creating the truffle contract object.", 
            "title": "Contract Wrappers"
        }, 
        {
            "location": "/Wrappers/#using-arc-contract-wrappers", 
            "text": "", 
            "title": "Using Arc Contract Wrappers"
        }, 
        {
            "location": "/Wrappers/#overview", 
            "text": "Arc.js wraps several Arc contracts in a \"contract wrapper\" JavaScript class.  Every wrapper class inherits from  ContractWrapperBase  providing a common set of functions and properties and specific helper functions for operations specific to the contract it wraps.  Each wrapper contains a  contract  property which is the original \"wrapped\"  Truffle contract  that you can use to access all of the Truffle functionality of the specific Arc contract being wrapped.  Each wrapper also contains a  factory  property.  This is the static instance of the wrapper factory class which is based on  ContractWrapperFactory  (where  TWrapper  is the type (class) of the wrapper).  Each factory contains the static methods  at(someAddress) ,  new()  and  deployed()  that you can use to instantiate the associated wrapper class.  Each wrapper includes the contract's events.  Refer here for more information about  how Arc.js wraps contract events .  Arc.js provides multiple ways to obtain contract wrappers, each optimal in particular use cases:   get a deployed wrapper by the Arc contract name  enumerate all of the deployed wrappers  enumerate wrappers by contract type  get a wrapper at a given address  deploy a new contract   The following sections describe what to do in each of the above use cases.   Keep in mind  In Arc.js all token and reputation amounts should be expressed in Wei.", 
            "title": "Overview"
        }, 
        {
            "location": "/Wrappers/#get-a-deployed-wrapper-by-name", 
            "text": "You can obtain, by its Arc contract name, any wrapper deployed by the running version of Arc.js:  1\n2 import   {   ContractWrappers   }   from   @daostack/arc.js ;  const   upgradeScheme   =   ContractWrappers . UpgradeScheme ;     Tip  ContractWrappers  is an alias for  WrapperService.wrappers  1\n2 import   {   WrapperService   }   from   @daostack/arc.js ;  const   upgradeScheme   =   WrapperService . wrappers . UpgradeScheme ;", 
            "title": "Get a deployed wrapper by name"
        }, 
        {
            "location": "/Wrappers/#enumerate-all-of-the-deployed-wrappers", 
            "text": "You can enumerate all of the wrappers of contracts deployed by the running version of Arc.js:  1\n2\n3\n4 import   {   ContractWrappers   }   from   @daostack/arc.js ;  for   ( var   wrapper   in   ContractWrappers )   { \n   console . log ( ` ${ wrapper . friendlyName }  is at  ${ wrapper . address } ` );  }     Tip  ContractWrappers  is an alias for  WrapperService.wrappers  1\n2\n3\n4\n5 import   {   WrapperService   }   from   @daostack/arc.js ;  for   ( var   wrapperName   in   WrapperService . wrappers )   { \n   const   wrapper   =   WrapperService . wrappers [ wrapperName ]; \n   console . log ( ` ${ wrapper . friendlyName }  is at  ${ wrapper . address } ` );  }", 
            "title": "Enumerate all of the deployed wrappers"
        }, 
        {
            "location": "/Wrappers/#enumerate-wrappers-by-contract-type", 
            "text": "Arc contracts and associated Arc.js contract wrapper classes can be categorized as follows:  Schemes   ContributionReward  GenesisProtocol  GlobalConstraintRegistrar  SchemeRegistrar  UpgradeScheme  VestingScheme  VoteInOrganizationScheme   Voting Machines   AbsoluteVote  GenesisProtocol   Global Constraints   TokenCapGC   Others   DaoCreator  Redeemer   You can enumerate the wrappers in each category, for example, schemes:  1\n2\n3\n4 import   {   ContractWrappersByType   }   from   @daostack/arc.js ;  for   ( var   schemeWrapper   of   ContractWrappersByType . schemes )   { \n   console . log ( ` ${ schemeWrapper . friendlyName }  is at  ${ schemeWrapper . address } ` );  }     Tip  ContractWrappersByType  is an alias for  WrapperService.wrappersByType  1\n2\n3\n4\n5\n6 import   {   WrapperService }   from   @daostack/arc.js ;  const   wrapperTypes   =   WrapperService . wrappersByType ;  for   ( var   schemeWrapper   of   wrapperTypes . schemes )   { \n   console . log ( ` ${ schemeWrapper . friendlyName }  is at  ${ schemeWrapper . address } ` );  }      Tip  ContractWrappersByType.allWrappers  is an array of all of wrappers.", 
            "title": "Enumerate wrappers by contract type"
        }, 
        {
            "location": "/Wrappers/#get-a-wrapper-at-a-given-address", 
            "text": "You can use a wrapper's factory class to obtain a wrapper for a contract deployed to any given address:  1\n2 import   {   UpgradeSchemeFactory }   from   @daostack/arc.js ;  const   upgradeScheme   =   await   UpgradeSchemeFactory . at ( someAddress );     Info  .at  will throw an exception if it can't find the contract at the given address.    Tip  ContractWrapperFactories  is an alias for  WrapperService.factories  1\n2\n3 import   {   ContractWrapperFactories   }   from   @daostack/arc.js ;  const   upgradeScheme   =   await   ContractWrapperFactories . UpgradeScheme . at ( someAddress );  }     Another way to get a wrapper at a given address is using  WrapperService.getContractWrapper .  This is most useful when you have both contract name\nand address and wish to most efficiently return the associated wrapper, or undefined when not found:  1\n2\n3\n4 import   {   WrapperService   }   from   @daostack/arc.js ;  // returns undefined when not found, unlike the factory `.at` which throws an exception   const   upgradeScheme   =   await   WrapperService . getContractWrapper ( UpgradeScheme ,   someAddress );  }", 
            "title": "Get a wrapper at a given address"
        }, 
        {
            "location": "/Wrappers/#deploy-a-new-contract", 
            "text": "You can use a wrapper's factory class to deploy a new instance of a contract and obtain a wrapper for it:  1\n2 import   {   UpgradeSchemeFactory }   from   @daostack/arc.js ;  const   newUpgradeScheme   =   await   UpgradeSchemeFactory . new ();     Tip  ContractWrapperFactories  is an alias for  WrapperService.factories  1\n2\n3 import   {   ContractWrapperFactories   }   from   @daostack/arc.js ;  const   newUpgradeScheme   =   await   ContractWrapperFactories . UpgradeScheme . new ();  }", 
            "title": "Deploy a new contract"
        }, 
        {
            "location": "/Wrappers/#obtain-a-dao-schemes-parameters", 
            "text": "Although you can always register your own schemes with a DAO, whether they be totally custom non-Arc schemes, or redeployed Arc schemes, by default a DAO is created with Arc schemes that are universal in the sense that the scheme's code is usable by any DAO with which the scheme can be registered.  But every scheme registered with a DAO is configured with a particular set of parameter values, and references such as proposals. All of these are stored in the DAO's own controller where each universal scheme is able to find them.  (If the controller is the Universal Controller then the parameters and data are keyed by the DAO's avatar address.)  If you want to obtain a DAO scheme's parameters, you can do it like this:  1 const   schemeParameters   =   schemeWrapper . getSchemeParameters ( avatarAddress );    This will return an object containing the scheme's parameter values.  The object will be the same as that which one passes to  schemeWrapper.setParameters  when setting parameters on any contract.  For example, to obtain the voting machine address for a scheme that has one as a parameter:  1\n2 const   schemeParameters   =   schemeWrapper . getSchemeParameters ( avatarAddress );  const   votingMachineAddress   =   schemeParameters . votingMachineAddress ;", 
            "title": "Obtain a DAO scheme's parameters"
        }, 
        {
            "location": "/Wrappers/#working-with-events", 
            "text": "All Arc.js wrappers publish events of various types that you can handle, including events from Arc contracts and events that enable you to track transaction as they occur.  Refer here for  all about events in Arc.js .", 
            "title": "Working with Events"
        }, 
        {
            "location": "/Wrappers/#cant-find-what-you-need", 
            "text": "Arc.js doesn't wrap every Arc contact nor give you a helper class for everything, but it does give you some more options described in the following sections.", 
            "title": "Can't Find What You Need?"
        }, 
        {
            "location": "/Wrappers/#truffle-contracts-and-web3", 
            "text": "Under the hood Arc.js uses Truffle contracts and Web3, and when you find that Arc.js doesn't directly provide you a piece of information or functionality that you need, you might be able to use them to find what you want.  You can get Web3 via  Utils.getWeb3  and Truffle contract associated with each contract wrapper instance via the  contract  property on each wrapper class.   Info  Read more about  Truffle Contracts  and  Web3", 
            "title": "Truffle Contracts and Web3"
        }, 
        {
            "location": "/Wrappers/#unwrapped-arc-contracts", 
            "text": "Not all Arc contracts have been given wrapper classes, for example,  Avatar ,  UController  and many more.  But using  Utils.requireContract  you can obtain a raw  Truffle contract  for any contract, enabling you to work with the contract just by providing the name of the Arc contract:  1\n2 import   {   Utils   }   from   @daostack/arc.js ;  const   avatarTruffleContract   =   await   Utils . requireContract ( Avatar );     Info  Utils.requireContract  throws an exception when there is any problem creating the truffle contract object.", 
            "title": "Unwrapped Arc Contracts"
        }, 
        {
            "location": "/Proposals/", 
            "text": "Working with Proposals and Schemes\n\n\nThe ability to create proposals, vote one's reputation and stake one's reputation and tokens on an outcome of a vote are fundamental to promoting coherence and collaboration within and between DAOs in the DAOstack ecosystem.\n\n\n\n\nInfo\n\n\nRefer here for more \nabout DAOs in Arc.js\n and \nabout DAOstack's vision for a DAO ecosystem\n.\n\n\n\n\nIt all starts with \"scheme\" contracts that generate proposals and supply a voting machine for each proposal.\n\n\n\n\nSchemes\n\n\nSchemes are public-facing contracts that any agent can use to interact with the DAOstack ecosystem and individual DAOs. You can use schemes for various tasks like creating a new DAO (\nDaoCreatorWrapper\n), running an ICO (\nSimpleICO\n) or managing a DAO registry (\nOrganizationRegister\n).\n\n\n\n\nNote\n\n\nSimpleICO\n and \nOrganizationRegister\n do not yet have \nwrapper classes\n in Arc.js.\n\n\n\n\nMost Arc schemes are specifically designed to generate proposals.\n\n\n\n\nInfo\n\n\nMore information about schemes:\n\n\n\n\nAll the schemes wrapped in Arc.js\n\n\nObtaining a list of schemes registered with a DAO\n\n\nUniversal Schemes in Arc\n\n\n\n\n\n\nProposals\n\n\nProposals are emergent ideas put up for a vote by a DAO. Voting on a proposal proceeds according to rules and parameters of \nvoting machines\n.  We use proposal-generating schemes to create proposals and supply them with a voting machine configured when the scheme was registered with the DAO's controller.\n\n\n\n\nNote\n\n\nAny scheme that works with proposals must be registered with a DAO's controller, either when you \ncreate the DAO\n or afterwards using the \nSchemeRegistrar\n.\n\n\n\n\nThe following table describes the various proposals you can create using scheme contract wrappers in Arc.js:\n\n\n\n\n\n\n\n\n\n\nProposal\n\n\nScheme Wrapper Class\n\n\nScheme Method\n\n\n\n\n\n\n\n\n\n\nPropose to reward an agent for contributions to the DAO\n\n\nContributionRewardWrapper\n\n\nproposeContributionReward\n\n\n\n\n\n\nPropose to add or modify a global constraint\n\n\nGlobalConstraintRegistrarWrapper\n\n\nproposeToAddModifyGlobalConstraint\n\n\n\n\n\n\nPropose to remove a global constraint\n\n\nGlobalConstraintRegistrarWrapper\n\n\nproposeToRemoveGlobalConstraint\n\n\n\n\n\n\nPropose to add or modify a scheme\n\n\nSchemeRegistrarWrapper\n\n\nproposeToAddModifyScheme\n\n\n\n\n\n\nPropose to remove a scheme\n\n\nSchemeRegistrarWrapper\n\n\nproposeToRemoveScheme\n\n\n\n\n\n\nPropose an alternative Controller for the DAO\n\n\nUpgradeSchemeWrapper\n\n\nproposeController\n\n\n\n\n\n\nPropse an alternative UpgradeScheme\n\n\nUpgradeSchemeWrapper\n\n\nproposeUpgradingScheme\n\n\n\n\n\n\nPropose a vesting agreement\n\n\nVestingSchemeWrapper\n\n\nproposeVestingAgreement\n\n\n\n\n\n\nPropose to vote for any proposal in another DAO\n\n\nVoteInOrganizationSchemeWrapper\n\n\nproposeVoteInOrganization\n\n\n\n\n\n\n\n\nEach of the scheme methods listed in the table above returns a promise of an \nArcTransactionProposalResult\n that will contain:\n\n\n\n\nproposalId\n - a Hash value that uniquely identifies a proposal, used to identify proposals everywhere where we refer to a proposal.\n\n\nvotingMachine\n - the voting machine for the proposal, as an \nIntVoteInterfaceWrapper\n, facilitating operations such as voting on the proposal. (see \nVoting Machines\n).\n\n\n\n\nProposals follow a lifecycle of creation and execution (execution is whatever happens when the voting process concludes). \nGenesisProtocal\n votes can expire.  You may find yourself wanting to keep track of a proposal's lifecycle, and for that you use events. The following section describes how.\n\n\n\n\nProposal Events\n\n\nEach scheme responsible for creating proposals enables you to track important events during a proposal's lifecycle (see the \ntable of proposal types above\n).  Voting machines do the same (see \nVoting Machines\n).\n\n\nEvery scheme provides \nEventFetcherFactory\ns that correspond directly to the events thrown by the scheme's Arc contract.  Proposal-generating schemes also provide special \nEntityFetcherFactory\ns that fetch entities about:\n\n\n\n\n\n\nVotable proposals\n - For each proposal type, the fetched entity will contain information about the proposal, plus an instance of \nIntVoteInterfaceWrapper\n for the proposal's voting machine, facilitating operations such as voting on the proposal.  See \ngetVotable[*]Proposals\n in each scheme.\n\n\n\n\n\n\nExecuted proposals\n - Some of the schemes provide additional information in the fetched entity, where additional information is available.  See \ngetExecutedProposals\n in each scheme.\n\n\n\n\n\n\n\n\nInfo\n\n\nSee \nEnhanced Web3 Events\n and \nEntities for Web3 Events\n for more information about these event-fetching interfaces.\n\n\n\n\nLike the schemes, the \nGenesisProtocol\n voting machine provides special \nEntityFetcherFactory\ns for fetching events about votable and executed proposals.  The fetched entity will contain additional information relevant to the proposal that you will not get via the scheme or \nIntVoteInterface\n events. See \nVotableGenesisProtocolProposals\n and \nExecutedProposals\n.\n\n\nSee more about voting machines below.\n\n\n\n\nVoting Machines\n\n\nVoting machines play an integral part in promoting coherence and collaboration within and between DAOs in the DAOstack ecosystem.  Which voting machine you choose to use for your DAO or DAO scheme, and how you configure it, can profoundly affect the emergent qualities of your organization.\n\n\nEvery proposal-generating scheme has an associated voting machine with appropriate configurations for the scheme.  Every proposal created by the scheme will use the scheme's voting machine.  \n\n\n\n\nTip\n\n\nFind more information about Arc voting machines in the \nArc documentation\n.\n\n\n\n\nArc.js wraps two Arc voting machines: \nAbsoluteVote\n and \nGenesisProtocol\n.  While each of these voting machines have their own individual API, they both implement a common Arc interface called \nIntVoteInterface\n.  \n\n\n\n\nInfo\n\n\nEach of the Arc.js voting machine contract wrapper classes implement a common base class called \nIntVoteInterfaceWrapper\n.\n\n\n\n\n\n\nNote\n\n\nArc has another voting machine contract called \nQuorumVote\n that Arc.js does not yet wrap.\n\n\n\n\nThe \nIntVoteInterfaceWrapper\n gives you the convenience of working with a voting machine wrapper without having to know which voting machine it is.  You may encounter \nIntVoteInterfaceWrapper\n in several places:\n\n\n\n\n\n\nYou can obtain an \nIntVoteInterfaceWrapper\n for the voting machine associated with any proposal-generating scheme using the scheme's \ngetVotingMachine\n method.\n\n\n\n\n\n\nEvery \nmethod that creates a proposal\n returns an \nIntVoteInterfaceWrapper\n in the \nArcTransactionProposalResult\n.\n\n\n\n\n\n\nEvery scheme's \nEntityFetcherFactory\n that returns votable proposals will supply an \nIntVoteInterfaceWrapper\n in the fetched entity.", 
            "title": "Schemes, Proposals and Voting Machines"
        }, 
        {
            "location": "/Proposals/#working-with-proposals-and-schemes", 
            "text": "The ability to create proposals, vote one's reputation and stake one's reputation and tokens on an outcome of a vote are fundamental to promoting coherence and collaboration within and between DAOs in the DAOstack ecosystem.   Info  Refer here for more  about DAOs in Arc.js  and  about DAOstack's vision for a DAO ecosystem .   It all starts with \"scheme\" contracts that generate proposals and supply a voting machine for each proposal.", 
            "title": "Working with Proposals and Schemes"
        }, 
        {
            "location": "/Proposals/#schemes", 
            "text": "Schemes are public-facing contracts that any agent can use to interact with the DAOstack ecosystem and individual DAOs. You can use schemes for various tasks like creating a new DAO ( DaoCreatorWrapper ), running an ICO ( SimpleICO ) or managing a DAO registry ( OrganizationRegister ).   Note  SimpleICO  and  OrganizationRegister  do not yet have  wrapper classes  in Arc.js.   Most Arc schemes are specifically designed to generate proposals.   Info  More information about schemes:   All the schemes wrapped in Arc.js  Obtaining a list of schemes registered with a DAO  Universal Schemes in Arc", 
            "title": "Schemes"
        }, 
        {
            "location": "/Proposals/#proposals", 
            "text": "Proposals are emergent ideas put up for a vote by a DAO. Voting on a proposal proceeds according to rules and parameters of  voting machines .  We use proposal-generating schemes to create proposals and supply them with a voting machine configured when the scheme was registered with the DAO's controller.   Note  Any scheme that works with proposals must be registered with a DAO's controller, either when you  create the DAO  or afterwards using the  SchemeRegistrar .   The following table describes the various proposals you can create using scheme contract wrappers in Arc.js:      Proposal  Scheme Wrapper Class  Scheme Method      Propose to reward an agent for contributions to the DAO  ContributionRewardWrapper  proposeContributionReward    Propose to add or modify a global constraint  GlobalConstraintRegistrarWrapper  proposeToAddModifyGlobalConstraint    Propose to remove a global constraint  GlobalConstraintRegistrarWrapper  proposeToRemoveGlobalConstraint    Propose to add or modify a scheme  SchemeRegistrarWrapper  proposeToAddModifyScheme    Propose to remove a scheme  SchemeRegistrarWrapper  proposeToRemoveScheme    Propose an alternative Controller for the DAO  UpgradeSchemeWrapper  proposeController    Propse an alternative UpgradeScheme  UpgradeSchemeWrapper  proposeUpgradingScheme    Propose a vesting agreement  VestingSchemeWrapper  proposeVestingAgreement    Propose to vote for any proposal in another DAO  VoteInOrganizationSchemeWrapper  proposeVoteInOrganization     Each of the scheme methods listed in the table above returns a promise of an  ArcTransactionProposalResult  that will contain:   proposalId  - a Hash value that uniquely identifies a proposal, used to identify proposals everywhere where we refer to a proposal.  votingMachine  - the voting machine for the proposal, as an  IntVoteInterfaceWrapper , facilitating operations such as voting on the proposal. (see  Voting Machines ).   Proposals follow a lifecycle of creation and execution (execution is whatever happens when the voting process concludes).  GenesisProtocal  votes can expire.  You may find yourself wanting to keep track of a proposal's lifecycle, and for that you use events. The following section describes how.", 
            "title": "Proposals"
        }, 
        {
            "location": "/Proposals/#proposal-events", 
            "text": "Each scheme responsible for creating proposals enables you to track important events during a proposal's lifecycle (see the  table of proposal types above ).  Voting machines do the same (see  Voting Machines ).  Every scheme provides  EventFetcherFactory s that correspond directly to the events thrown by the scheme's Arc contract.  Proposal-generating schemes also provide special  EntityFetcherFactory s that fetch entities about:    Votable proposals  - For each proposal type, the fetched entity will contain information about the proposal, plus an instance of  IntVoteInterfaceWrapper  for the proposal's voting machine, facilitating operations such as voting on the proposal.  See  getVotable[*]Proposals  in each scheme.    Executed proposals  - Some of the schemes provide additional information in the fetched entity, where additional information is available.  See  getExecutedProposals  in each scheme.     Info  See  Enhanced Web3 Events  and  Entities for Web3 Events  for more information about these event-fetching interfaces.   Like the schemes, the  GenesisProtocol  voting machine provides special  EntityFetcherFactory s for fetching events about votable and executed proposals.  The fetched entity will contain additional information relevant to the proposal that you will not get via the scheme or  IntVoteInterface  events. See  VotableGenesisProtocolProposals  and  ExecutedProposals .  See more about voting machines below.", 
            "title": "Proposal Events"
        }, 
        {
            "location": "/Proposals/#voting-machines", 
            "text": "Voting machines play an integral part in promoting coherence and collaboration within and between DAOs in the DAOstack ecosystem.  Which voting machine you choose to use for your DAO or DAO scheme, and how you configure it, can profoundly affect the emergent qualities of your organization.  Every proposal-generating scheme has an associated voting machine with appropriate configurations for the scheme.  Every proposal created by the scheme will use the scheme's voting machine.     Tip  Find more information about Arc voting machines in the  Arc documentation .   Arc.js wraps two Arc voting machines:  AbsoluteVote  and  GenesisProtocol .  While each of these voting machines have their own individual API, they both implement a common Arc interface called  IntVoteInterface .     Info  Each of the Arc.js voting machine contract wrapper classes implement a common base class called  IntVoteInterfaceWrapper .    Note  Arc has another voting machine contract called  QuorumVote  that Arc.js does not yet wrap.   The  IntVoteInterfaceWrapper  gives you the convenience of working with a voting machine wrapper without having to know which voting machine it is.  You may encounter  IntVoteInterfaceWrapper  in several places:    You can obtain an  IntVoteInterfaceWrapper  for the voting machine associated with any proposal-generating scheme using the scheme's  getVotingMachine  method.    Every  method that creates a proposal  returns an  IntVoteInterfaceWrapper  in the  ArcTransactionProposalResult .    Every scheme's  EntityFetcherFactory  that returns votable proposals will supply an  IntVoteInterfaceWrapper  in the fetched entity.", 
            "title": "Voting Machines"
        }, 
        {
            "location": "/Events/", 
            "text": "Events\n\n\nArc.js offers two types of event systems:  \nPub/Sub\n and \nWeb3\n.  The Pub/Sub system enables you to subscribe to various events published by Arc.js itself.  The Web3 system enables you to get and watch events as they originate from Arc contracts.\n\n\nThe Web3 events system also contains a hybrid of the two systems, enabling you to watch a Web3 event by subscribing to a Pub/Sub event.\n\n\n\n\nPub/Sub Events\n\n\nThe \nPubSubEventService\n provides a Pub/Sub event system that enables you to subscribe to various events published by Arc.js.\n\n\nUses of pub/sub events:\n\n\n\n\n\n\nTracking transactions as they complete  (see \nTransactions\n).\n\n\n\n\n\n\nBe notified whenever the current account changes (see \nAccount Changes\n).\n\n\n\n\n\n\nWatch events in the Web3 event system using the \nsubscribe\n function implemented by \nEventFetcher\n and \nEntityFetcher\n (see \nPub/Sub Web3 Events\n)\n\n\n\n\n\n\nThe following section describes how to subscribe to events.\n\n\n\n\nSubscribing to Events\n\n\nYou specify the event to which you want to subscribe using a string called the event \"topic\".\n\n\nEvent topics may be hierachically scoped by levels separated by periods ('.'). So for example: \n\n\n\n\n\"A.B.C\" subscribes to all \"A.B.C\" events\n\n\n\"A.B\" subscribes to all events prefixed by \"A.B\"\n\n\n\"A\" subscribes to all events prefixed by \"A\"\n\n\n\n\nUse \nPubSubEventService\n like this:\n\n\n1\n2\n3\n4\nconst\n \nsubscription\n \n=\n \nPubSubEventService\n.\nsubscribe\n(\naTopic\n,\n \n(\ntopic\n,\n \npayload\n)\n \n=\n\n\n{\n\n  \nconsole\n.\nlog\n(\n`received event \n${\ntopic\n}\n`\n \nwith\n:\n \n$\n{\npayload\n.\nsomeImportantProperty\n});\n\n\n})\n\n\n\n\n\n\n\nYou can subscribe to multiple events at once by passing the topics in an array:\n\n\n1\n2\n3\n4\n5\nconst\n \nsubscription\n \n=\n \nPubSubEventService\n.\nsubscribe\n(\n\n  \n[\naTopic 1\n,\n \naTopic 2\n],\n \n(\ntopic\n,\n \npayload\n)\n \n=\n\n\n{\n\n  \nconsole\n.\nlog\n(\n`received event \n${\ntopic\n}\n`\n \nwith\n:\n \n$\n{\npayload\n.\nsomeImportantProperty\n});\n\n\n})\n\n\n\n\n\n\n\nWhen you are done, be sure to unsubscribe to the event(s) or you risk memory leaks and excessive CPU usage:\n\n\n1\nsubscription\n.\nunsubscribe\n();\n\n\n\n\n\n\n\nOr unsubscribe by topic: \n\n\n1\nPubSubEventService\n.\nunsubscribe\n(\naTopic\n);\n\n\n\n\n\n\n\nOr by the callback you passed in when you subscribed:\n\n\n1\nPubSubEventService\n.\nunsubscribe\n(\naCallback\n);\n\n\n\n\n\n\n\n\n\nWeb3 Events\n\n\nWe refer to \"Web3 events\" as the events that originate from Arc contracts and are served up by Web3. (see the \nWeb3 documentation on contract events\n).\n\n\nArc.js exposes Web3 events in an format virtually the same as Web3, but with enhancements, or alternatively as entities that are simpler to use and may provide more information and functionality than the raw event.\n\n\nArc.js has a pub/sub event system accessible using the \nPubSubEventService\n.\n\n\nUses of pub/sub events:\n\n\n\n\n\n\nTrack transactions as they complete  (see \nTracking Transactions\n).\n\n\n\n\n\n\nBe notified whenever the current account changes (see \nAccount Changes\n).\n\n\n\n\n\n\n\n\nTracking Transactions\n\n\nYou can be notified about the phases in the lifecycle of Transactions. For more information, see \nTracking Transactions\n.\n\n\n\n\nEnhanced Web3 Events\n\n\nEvery Arc contract wrapper in Arc.js exposes all of the events fired by the wrapped contract,  events look just like those exposed by \nWeb3\n, so you can get, watch and filter these events in the same way you would using Web3 or Truffle.\n\n\nArc.js enhances these events in several ways:\n\n\n\n\nIf you are using TypeScript then the event data supplied to your callback will by typed, so you will see suggestions and errors in Intellisense and the TypeScript compiler.\n\n\nThe callback to \nget\n is invoked once for the entire array of fired events, always returning an array.  The callback to \nwatch\n is invoked once for each value, always returning the event.\n\n\nThe \nget\n method directly returns a promise of an array containing every event fetched, bypassing the need for a callback.\n\n\nOptionally you can use \nsubscribe\n instead of \nwatch\n to use the Pub/Sub event mechanism as an alternate means of watching events as they fire. See \nPub/Sub Web3 Events\n.\n\n\nYou need not worry about duplicate events, Arc.js eliminates them.  (Duplicate events can occur while the chain is in the process of settling down, a feature that can be suppressed if desired).\n\n\n\n\nThis enhanced event functionality is provided by \nWeb3EventService.createEventFetcherFactory(...)\n which returns an \nEventFetcherFactory\n function which returns an \nEventFetcher\n which gives you the \nget\n, \nwatch\n and \nsubscribe\n methods.\n\n\nHere is an example of the above flow, resulting in calling \nget\n without a callback to get all \nChangeUpgradeSchemeProposal\n events pertaining to a given DAO:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\nconst\n \nweb3EventService\n \n=\n \nnew\n \nWeb3EventService\n();\n\n\n\nconst\n \neventFetcherFactory\n \n=\n \n\nweb3EventService\n.\ncreateEventFetcherFactory\n(\nupgradeContract\n.\ncontract\n.\nChangeUpgradeSchemeProposal\n);\n\n\n\nconst\n \neventFetcher\n \n=\n \neventFetcherFactory\n(\n\n  \n{\n \n_avatar\n:\n \nsomeAddress\n \n},\n \n{\n \nfromBlock\n:\n \n0\n});\n\n\n\nconst\n \nevents\n \n=\n \nawait\n \neventFetcher\n.\nget\n();\n\n\n\nevents\n.\nforEach\n((\nevent\n)\n \n=\n \n{\n \nconsole\n.\nlog\n(\n`proposal id: \n${\nevent\n.\n_proposalId\n}\n`\n);\n \n}\n \n);\n\n\n\n\n\n\n\nAll of Arc.js contract wrappers already provide an \nEventFetcherFactory\n method for each of the Arc events in the contract they wrap.  So the code example given above becomes simpler:\n\n\n1\n2\n3\n4\n5\n6\nconst\n \neventFetcher\n \n=\n \nupgradeScheme\n.\nChangeUpgradeSchemeProposal\n(\n\n  \n{\n \n_avatar\n:\n \nsomeAddress\n \n},\n \n{\n \nfromBlock\n:\n \n0\n});\n\n\n\nconst\n \nevents\n \n=\n \nawait\n \neventFetcher\n.\nget\n();\n\n\n\nevents\n.\nforEach\n((\nevent\n)\n \n=\n \n{\n \nconsole\n.\nlog\n(\n`proposal id: \n${\nevent\n.\n_proposalId\n}\n`\n);\n \n}\n \n);\n\n\n\n\n\n\n\n\n\nEntities for Web3 Events\n\n\nYou can use \nWeb3EventService\n to turn any \nEventFetcherFactory\n into an \nEntityFetcherFactory\n providing cleaner and potentially richer entities than what you get from Web3 and \nEventFetcherFactory\n.\n\n\nThe \nEntityFetcherFactory\n creates an \nEntityFetcher\n which gives you the \nget\n, \nwatch\n and \nsubscribe\n methods.\n\n\nMaking extensive use of this feature, \nProposal-related events\n return custom object types (\"entities\") instead of the raw Web3 event data.\n\n\nWeb3 event entities can include any parts of the raw Web3 event information as well as additional relevant information and useful functions.\n\n\nHere is how you can turn \nChangeUpgradeSchemeProposal\n into an \nEntityFetcherFactory\n whose events give you the promise of an object (\"entity\") with a single \navatarAddress\n property:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\nconst\n \nentityFetcherFactory\n \n=\n \nweb3EventService\n.\ncreateEntityFetcherFactory\n(\n\n  \nupgradeScheme\n.\nChangeUpgradeSchemeProposal\n,\n\n  \n(\nevent\n)\n \n=\n \n{\n\n    \nreturn\n \nPromise\n.\nresolve\n({\n \navatarAddress\n:\n \nevent\n.\nargs\n.\n_avatar\n \n});\n\n  \n});\n\n\n\nconst\n \neventFetcher\n \n=\n \nentityFetcherFactory\n({},\n \n{\n \nfromBlock\n:\n \n0\n});\n\n\n\neventFetcher\n.\nwatch\n(\n\n  \n(\nerror\n,\n \nevent\n)\n \n=\n \n{\n \n    \nif\n \n(\n!\nerror\n)\n \n{\n\n      \nconsole\n.\nlog\n(\n`avatarAddress: \n${\nentity\n.\navatarAddress\n}\n`\n);\n \n    \n}\n\n\n);\n\n\n\n\n\n\n\nWhen you are done with fetching these events you can stop watching:\n\n\n1\neventFetcher\n.\nstopWatching\n();\n\n\n\n\n\n\n\n\n\nPub/Sub Web3 Events\n\n\nBoth \nEventFetcher\n and \nEntityFetcher\n provide a \nsubscribe\n function, sibling to \nget\n and \nwatch\n, that enables you specify the topic of a Pub/Sub event that will be published whenever the underlying Web3 event is fired.\n\n\nWhen you specify the topic for such a subscription you are effectively creating your own Pub/Sub event.  This gives you wide flexibility in scoping your event handling across different Arc.js contract wrappers and events, including leveraging the hierarchical structure that you can build into your topic strings.  Further, any number of your code components can use \nPubSubEventService.subscribe\n to subscribe to a single Pub/Sub Web3 event.  You just need to have called \nEntityFetcher.subscribe\n once to initiate fetching of the Web3 event and subsequent publishing to the given Pub/Sub topic.\n\n\nSee more about how to use Pub/Sub events \nhere\n.\n\n\n\n\nAccount Changes\n\n\nYou can be notified whenever the current account changes by setting \nInitializeArcOptions.watchForAccountChanges\n to \ntrue\n when you call \nInitializeArcJs\n, and then by calling \nsubscribeToAccountChanges\n. For more information, see \nAccountService\n.\n\n\nComparing Enhanced Web3 with Entity for Web3 Event Fetchers\n\n\nEnhanced Web3 (\nEventFetcherFactory\n) and entity (\nEntityFetcherFactory\n) events each have relative pros and cons.  \n\n\nEnhanced Web3 events give you all of the information that Web3 provides about an event.  These events closely match what you may be accustomed-to if you have been working with Web3 and Truffle.\n\n\nEntity events only give you an entity, a javascript object providing information about the event, but the event entities can include additional relevant information and useful functions that you won't get from the enhanced Web3 events.\n\n\nOtherwise there is little difference between the two.   They both enjoy the enhancments provided by Arc.js.\n\n\n\n\nNote\n\n\nIf you prefer to use the unenhanced events supplied by Web3 via Truffle, you can access them via the contract handler property \ncontract\n, which is the original \nTruffle contract\n.", 
            "title": "Events"
        }, 
        {
            "location": "/Events/#events", 
            "text": "Arc.js offers two types of event systems:   Pub/Sub  and  Web3 .  The Pub/Sub system enables you to subscribe to various events published by Arc.js itself.  The Web3 system enables you to get and watch events as they originate from Arc contracts.  The Web3 events system also contains a hybrid of the two systems, enabling you to watch a Web3 event by subscribing to a Pub/Sub event.", 
            "title": "Events"
        }, 
        {
            "location": "/Events/#pubsub-events", 
            "text": "The  PubSubEventService  provides a Pub/Sub event system that enables you to subscribe to various events published by Arc.js.  Uses of pub/sub events:    Tracking transactions as they complete  (see  Transactions ).    Be notified whenever the current account changes (see  Account Changes ).    Watch events in the Web3 event system using the  subscribe  function implemented by  EventFetcher  and  EntityFetcher  (see  Pub/Sub Web3 Events )    The following section describes how to subscribe to events.", 
            "title": "Pub/Sub Events"
        }, 
        {
            "location": "/Events/#subscribing-to-events", 
            "text": "You specify the event to which you want to subscribe using a string called the event \"topic\".  Event topics may be hierachically scoped by levels separated by periods ('.'). So for example:    \"A.B.C\" subscribes to all \"A.B.C\" events  \"A.B\" subscribes to all events prefixed by \"A.B\"  \"A\" subscribes to all events prefixed by \"A\"   Use  PubSubEventService  like this:  1\n2\n3\n4 const   subscription   =   PubSubEventService . subscribe ( aTopic ,   ( topic ,   payload )   =  { \n   console . log ( `received event  ${ topic } `   with :   $ { payload . someImportantProperty });  })    You can subscribe to multiple events at once by passing the topics in an array:  1\n2\n3\n4\n5 const   subscription   =   PubSubEventService . subscribe ( \n   [ aTopic 1 ,   aTopic 2 ],   ( topic ,   payload )   =  { \n   console . log ( `received event  ${ topic } `   with :   $ { payload . someImportantProperty });  })    When you are done, be sure to unsubscribe to the event(s) or you risk memory leaks and excessive CPU usage:  1 subscription . unsubscribe ();    Or unsubscribe by topic:   1 PubSubEventService . unsubscribe ( aTopic );    Or by the callback you passed in when you subscribed:  1 PubSubEventService . unsubscribe ( aCallback );", 
            "title": "Subscribing to Events"
        }, 
        {
            "location": "/Events/#web3-events", 
            "text": "We refer to \"Web3 events\" as the events that originate from Arc contracts and are served up by Web3. (see the  Web3 documentation on contract events ).  Arc.js exposes Web3 events in an format virtually the same as Web3, but with enhancements, or alternatively as entities that are simpler to use and may provide more information and functionality than the raw event.  Arc.js has a pub/sub event system accessible using the  PubSubEventService .  Uses of pub/sub events:    Track transactions as they complete  (see  Tracking Transactions ).    Be notified whenever the current account changes (see  Account Changes ).", 
            "title": "Web3 Events"
        }, 
        {
            "location": "/Events/#tracking-transactions", 
            "text": "You can be notified about the phases in the lifecycle of Transactions. For more information, see  Tracking Transactions .", 
            "title": "Tracking Transactions"
        }, 
        {
            "location": "/Events/#enhanced-web3-events", 
            "text": "Every Arc contract wrapper in Arc.js exposes all of the events fired by the wrapped contract,  events look just like those exposed by  Web3 , so you can get, watch and filter these events in the same way you would using Web3 or Truffle.  Arc.js enhances these events in several ways:   If you are using TypeScript then the event data supplied to your callback will by typed, so you will see suggestions and errors in Intellisense and the TypeScript compiler.  The callback to  get  is invoked once for the entire array of fired events, always returning an array.  The callback to  watch  is invoked once for each value, always returning the event.  The  get  method directly returns a promise of an array containing every event fetched, bypassing the need for a callback.  Optionally you can use  subscribe  instead of  watch  to use the Pub/Sub event mechanism as an alternate means of watching events as they fire. See  Pub/Sub Web3 Events .  You need not worry about duplicate events, Arc.js eliminates them.  (Duplicate events can occur while the chain is in the process of settling down, a feature that can be suppressed if desired).   This enhanced event functionality is provided by  Web3EventService.createEventFetcherFactory(...)  which returns an  EventFetcherFactory  function which returns an  EventFetcher  which gives you the  get ,  watch  and  subscribe  methods.  Here is an example of the above flow, resulting in calling  get  without a callback to get all  ChangeUpgradeSchemeProposal  events pertaining to a given DAO:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 const   web3EventService   =   new   Web3EventService ();  const   eventFetcherFactory   =   web3EventService . createEventFetcherFactory ( upgradeContract . contract . ChangeUpgradeSchemeProposal );  const   eventFetcher   =   eventFetcherFactory ( \n   {   _avatar :   someAddress   },   {   fromBlock :   0 });  const   events   =   await   eventFetcher . get ();  events . forEach (( event )   =   {   console . log ( `proposal id:  ${ event . _proposalId } ` );   }   );    All of Arc.js contract wrappers already provide an  EventFetcherFactory  method for each of the Arc events in the contract they wrap.  So the code example given above becomes simpler:  1\n2\n3\n4\n5\n6 const   eventFetcher   =   upgradeScheme . ChangeUpgradeSchemeProposal ( \n   {   _avatar :   someAddress   },   {   fromBlock :   0 });  const   events   =   await   eventFetcher . get ();  events . forEach (( event )   =   {   console . log ( `proposal id:  ${ event . _proposalId } ` );   }   );", 
            "title": "Enhanced Web3 Events"
        }, 
        {
            "location": "/Events/#entities-for-web3-events", 
            "text": "You can use  Web3EventService  to turn any  EventFetcherFactory  into an  EntityFetcherFactory  providing cleaner and potentially richer entities than what you get from Web3 and  EventFetcherFactory .  The  EntityFetcherFactory  creates an  EntityFetcher  which gives you the  get ,  watch  and  subscribe  methods.  Making extensive use of this feature,  Proposal-related events  return custom object types (\"entities\") instead of the raw Web3 event data.  Web3 event entities can include any parts of the raw Web3 event information as well as additional relevant information and useful functions.  Here is how you can turn  ChangeUpgradeSchemeProposal  into an  EntityFetcherFactory  whose events give you the promise of an object (\"entity\") with a single  avatarAddress  property:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 const   entityFetcherFactory   =   web3EventService . createEntityFetcherFactory ( \n   upgradeScheme . ChangeUpgradeSchemeProposal , \n   ( event )   =   { \n     return   Promise . resolve ({   avatarAddress :   event . args . _avatar   }); \n   });  const   eventFetcher   =   entityFetcherFactory ({},   {   fromBlock :   0 });  eventFetcher . watch ( \n   ( error ,   event )   =   {  \n     if   ( ! error )   { \n       console . log ( `avatarAddress:  ${ entity . avatarAddress } ` );  \n     }  );    When you are done with fetching these events you can stop watching:  1 eventFetcher . stopWatching ();", 
            "title": "Entities for Web3 Events"
        }, 
        {
            "location": "/Events/#pubsub-web3-events", 
            "text": "Both  EventFetcher  and  EntityFetcher  provide a  subscribe  function, sibling to  get  and  watch , that enables you specify the topic of a Pub/Sub event that will be published whenever the underlying Web3 event is fired.  When you specify the topic for such a subscription you are effectively creating your own Pub/Sub event.  This gives you wide flexibility in scoping your event handling across different Arc.js contract wrappers and events, including leveraging the hierarchical structure that you can build into your topic strings.  Further, any number of your code components can use  PubSubEventService.subscribe  to subscribe to a single Pub/Sub Web3 event.  You just need to have called  EntityFetcher.subscribe  once to initiate fetching of the Web3 event and subsequent publishing to the given Pub/Sub topic.  See more about how to use Pub/Sub events  here .", 
            "title": "Pub/Sub Web3 Events"
        }, 
        {
            "location": "/Events/#account-changes", 
            "text": "You can be notified whenever the current account changes by setting  InitializeArcOptions.watchForAccountChanges  to  true  when you call  InitializeArcJs , and then by calling  subscribeToAccountChanges . For more information, see  AccountService .", 
            "title": "Account Changes"
        }, 
        {
            "location": "/Events/#comparing-enhanced-web3-with-entity-for-web3-event-fetchers", 
            "text": "Enhanced Web3 ( EventFetcherFactory ) and entity ( EntityFetcherFactory ) events each have relative pros and cons.    Enhanced Web3 events give you all of the information that Web3 provides about an event.  These events closely match what you may be accustomed-to if you have been working with Web3 and Truffle.  Entity events only give you an entity, a javascript object providing information about the event, but the event entities can include additional relevant information and useful functions that you won't get from the enhanced Web3 events.  Otherwise there is little difference between the two.   They both enjoy the enhancments provided by Arc.js.   Note  If you prefer to use the unenhanced events supplied by Web3 via Truffle, you can access them via the contract handler property  contract , which is the original  Truffle contract .", 
            "title": "Comparing Enhanced Web3 with Entity for Web3 Event Fetchers"
        }, 
        {
            "location": "/Transactions/", 
            "text": "Tracking Transactions\n\n\nMany Arc.js functions cause transactions to be generated asynchronously in the chain, and each transaction proceeds asychronously through a \"lifecycle\" of state changes.  Each transaction requires manual attention from the application user, and depending on the speed of the net, there may be substantial delays before the result of a transaction becomes available.  Some operations may involve multiple transactions, with significant delays between each transaction until the operation has fully completed.\n\n\nSo you may wish to give the user a visual sense of progress during such a lengthy asynchronous process.\n\n\nUsing \nTransactionService\n, you can be notified when transactions are about to be generated, how many transactions there will be, and when each transaction has completed each phase in its lifecycle.\n\n\nFor example, out of all functions in Arc.js, \nDAO.new\n generates the most transactions.  Suppose you want to feed back to the user how many transaction to expect, and when each one has completed.  Here is how you can do that:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\nimport\n \n{\n \nTransactionService\n \n}\n \nfrom\n \n@daostack/arc.js\n;\n\n\n\nconst\n \nsubscription\n \n=\n \nTransactionService\n.\nsubscribe\n(\nTxTracking.DAO.new\n,\n \n  \n(\neventName\n: \nstring\n,\n \ntxEventInfo\n: \nTransactionReceiptsEventInfo\n)\n \n=\n \n{\n\n    \n// the options you passed into the function (DAO.new in this case)\n\n    \nconst\n \noptionsWithDefaults\n \n=\n \ntxEventInfo\n.\noptions\n;\n\n    \n// the expected number of transactions\n\n    \nconst\n \nexpectedNumTransactions\n \n=\n \ntxEventInfo\n.\ntxCount\n;\n\n    \n// a key that is unique to a single invocation of the function (DAO.new in this case)\n\n    \nconst\n \nuniqueInvocationKey\n \n=\n \ntxEventInfo\n.\ninvocationKey\n;\n\n    \n// Transaction hash for `sent` transaction.\n\n    \n// Will be null in the `kickoff` event.\n\n    \nconst\n \ntxHash\n \n=\n \ntxEventInfo\n.\ntx\n;\n\n    \n// TransactionReceiptTruffle for mined and confirmed transactions.\n\n    \n// Will be null in the `kickoff` and `sent` events.\n\n    \nconst\n \ntxReceipt\n \n=\n \ntxEventInfo\n.\ntxReceipt\n;\n\n    \n// Stage of the transaction.  See `TransactionStage`.\n\n    \nconst\n \nstage\n \n=\n \ntxEventInfo\n.\ntxStage\n;\n\n    \n// Error, if this is a failed transaction.\n\n    \nconst\n \nerror\n \n=\n \ntxEventInfo\n.\nerror\n;\n\n\n});\n\n\n\n\n\n\n\nNow you are ready to handle \"TxTracking.DAO.new\" events whenever you call \nDAO.new\n.\n\n\n\n\nImportant\n\n\nYou must unsubscribe to the subscription or you risk memory leaks and excessive CPU usage:\n\n1\nsubscription\n.\nunsubscribe\n();\n\n\n\n\n\n\n\n\nTo let you know in advance the expected count of transactions, a single \"kick-off\" event is published at the beginning of each function invocation and before any transactions have begun.  In that event, \ntxEventInfo.tx\n will be null.  The property \ntxEventInfo.uniqueInvocationKey\n uniquely identifies the \"thread\" of events associated with a single function invocation.\n\n\nYou can supply anything you want in the options passed to the invoked function.  The entire object will be passed back to you in the event callback (\ntxEventInfo.options\n, above). For example, you may desire a tighter coupling between the events and a specific function invocation, so for you the kick-off event and invocationKey may not suffice.  In that case you could generate a key like this:\n\n\n1\noptions\n.\nmyInvocationkey\n \n=\n \nTransactionService\n.\ngenerateInvocationKey\n(\nDAO.new\n);\n\n\n\n\n\n\n\n\n\nNote\n\n\nNote that every call to \ngenerateInvocationKey\n generates a unique value, regardless of the input. In any case, this is just a convenience method, you can use whatever means you want to generate a key.  \n\n\n\n\ntxEventInfo.options\n will usually contain the options you passed in, with default values added.  But in the case of \nDAO.new\n, it will not contain the default values.  If you need to see the default values for \nDAO.new\n then instead of subscribing to \"TxTracking.DAO.new\" you can subscribe to \"TxTracking.DaoCreator\" and receive events published by  \nDaoCreatorWrapper.forgeOrg\n and \nDaoCreatorWrapper.setSchemes\n.  This would otherwise be the same as subscribing to \"TxTracking.DAO.new\".\n\n\n\n\nTip\n\n\nSee more about how to use the Pub/Sub event system, including how to scope your subscriptions to whole sets of events, \nhere\n.\n\n\n\n\nTransaction Lifecycle\n\n\nAll transactions proceed through three stages:  sent, mined and confirmed.  In the example above, when we subscribed to \nTxTracking.DAO.new\n, we are actually subscribing to four distinct events: \n\n\n\n\nTxTracking.DAO.new.kickoff\n\n\nTxTracking.DAO.sent\n\n\nTxTracking.DAO.mined\n\n\nTxTracking.DAO.confirmed\n\n\n\n\nYou can identify the stage of the event using the the event name (topic) parameter of the callback, or by the \ntxStage\n property of the \ntxEventInfo\n (payload).  See the code example above.\n\n\nErrors may occur at any point in the lifecycle.  When they do you will receive an event with \".failed\" appended to the event name (topic) parameter of the callback,\nand the \nerror\n property will contain the \nError\n that describes what happened.  The txStage will represent the stage at which the error occurred, and you will receive no further events on the transaction.\n\n\nEstimating Gas Limits\n\n\nArc.js contains an experimental feature that automatically estimates the gas cost of any transaction executed using the contract wrappers.  The estimate will appear in a client like MetaMask, giving the user a more accurate sense of how much the transaction is going to cost when they are decided whether to approve the transaction, and putting fewer of the user's funds at risk in case of an error.\n\n\nThis feature is disabled by default.  You can enable it at any time with the following line:\n\n\n1\nConfigService\n.\nset\n(\nestimateGas\n,\n \ntrue\n);\n\n\n\n\n\n\n\nAnd you may similarly disable it at any time.", 
            "title": "Tracking Transactions"
        }, 
        {
            "location": "/Transactions/#tracking-transactions", 
            "text": "Many Arc.js functions cause transactions to be generated asynchronously in the chain, and each transaction proceeds asychronously through a \"lifecycle\" of state changes.  Each transaction requires manual attention from the application user, and depending on the speed of the net, there may be substantial delays before the result of a transaction becomes available.  Some operations may involve multiple transactions, with significant delays between each transaction until the operation has fully completed.  So you may wish to give the user a visual sense of progress during such a lengthy asynchronous process.  Using  TransactionService , you can be notified when transactions are about to be generated, how many transactions there will be, and when each transaction has completed each phase in its lifecycle.  For example, out of all functions in Arc.js,  DAO.new  generates the most transactions.  Suppose you want to feed back to the user how many transaction to expect, and when each one has completed.  Here is how you can do that:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21 import   {   TransactionService   }   from   @daostack/arc.js ;  const   subscription   =   TransactionService . subscribe ( TxTracking.DAO.new ,  \n   ( eventName :  string ,   txEventInfo :  TransactionReceiptsEventInfo )   =   { \n     // the options you passed into the function (DAO.new in this case) \n     const   optionsWithDefaults   =   txEventInfo . options ; \n     // the expected number of transactions \n     const   expectedNumTransactions   =   txEventInfo . txCount ; \n     // a key that is unique to a single invocation of the function (DAO.new in this case) \n     const   uniqueInvocationKey   =   txEventInfo . invocationKey ; \n     // Transaction hash for `sent` transaction. \n     // Will be null in the `kickoff` event. \n     const   txHash   =   txEventInfo . tx ; \n     // TransactionReceiptTruffle for mined and confirmed transactions. \n     // Will be null in the `kickoff` and `sent` events. \n     const   txReceipt   =   txEventInfo . txReceipt ; \n     // Stage of the transaction.  See `TransactionStage`. \n     const   stage   =   txEventInfo . txStage ; \n     // Error, if this is a failed transaction. \n     const   error   =   txEventInfo . error ;  });    Now you are ready to handle \"TxTracking.DAO.new\" events whenever you call  DAO.new .   Important  You must unsubscribe to the subscription or you risk memory leaks and excessive CPU usage: 1 subscription . unsubscribe ();     To let you know in advance the expected count of transactions, a single \"kick-off\" event is published at the beginning of each function invocation and before any transactions have begun.  In that event,  txEventInfo.tx  will be null.  The property  txEventInfo.uniqueInvocationKey  uniquely identifies the \"thread\" of events associated with a single function invocation.  You can supply anything you want in the options passed to the invoked function.  The entire object will be passed back to you in the event callback ( txEventInfo.options , above). For example, you may desire a tighter coupling between the events and a specific function invocation, so for you the kick-off event and invocationKey may not suffice.  In that case you could generate a key like this:  1 options . myInvocationkey   =   TransactionService . generateInvocationKey ( DAO.new );     Note  Note that every call to  generateInvocationKey  generates a unique value, regardless of the input. In any case, this is just a convenience method, you can use whatever means you want to generate a key.     txEventInfo.options  will usually contain the options you passed in, with default values added.  But in the case of  DAO.new , it will not contain the default values.  If you need to see the default values for  DAO.new  then instead of subscribing to \"TxTracking.DAO.new\" you can subscribe to \"TxTracking.DaoCreator\" and receive events published by   DaoCreatorWrapper.forgeOrg  and  DaoCreatorWrapper.setSchemes .  This would otherwise be the same as subscribing to \"TxTracking.DAO.new\".   Tip  See more about how to use the Pub/Sub event system, including how to scope your subscriptions to whole sets of events,  here .", 
            "title": "Tracking Transactions"
        }, 
        {
            "location": "/Transactions/#transaction-lifecycle", 
            "text": "All transactions proceed through three stages:  sent, mined and confirmed.  In the example above, when we subscribed to  TxTracking.DAO.new , we are actually subscribing to four distinct events:    TxTracking.DAO.new.kickoff  TxTracking.DAO.sent  TxTracking.DAO.mined  TxTracking.DAO.confirmed   You can identify the stage of the event using the the event name (topic) parameter of the callback, or by the  txStage  property of the  txEventInfo  (payload).  See the code example above.  Errors may occur at any point in the lifecycle.  When they do you will receive an event with \".failed\" appended to the event name (topic) parameter of the callback,\nand the  error  property will contain the  Error  that describes what happened.  The txStage will represent the stage at which the error occurred, and you will receive no further events on the transaction.", 
            "title": "Transaction Lifecycle"
        }, 
        {
            "location": "/Transactions/#estimating-gas-limits", 
            "text": "Arc.js contains an experimental feature that automatically estimates the gas cost of any transaction executed using the contract wrappers.  The estimate will appear in a client like MetaMask, giving the user a more accurate sense of how much the transaction is going to cost when they are decided whether to approve the transaction, and putting fewer of the user's funds at risk in case of an error.  This feature is disabled by default.  You can enable it at any time with the following line:  1 ConfigService . set ( estimateGas ,   true );    And you may similarly disable it at any time.", 
            "title": "Estimating Gas Limits"
        }, 
        {
            "location": "/Scripts/", 
            "text": "Working with Arc.js Scripts\n\n\nArc.js contains a set of scripts for building, publishing, running tests and migrating contracts to any network.  These scripts are meant to be accessible and readily usable by client applications.\n\n\nTypically an application will run an Arc.js script by prefixing \"\nnpm explore @daostack/arc.js --\n\" to the Arc.js script.  For example, to run the Arc.js script \nnpm start ganache\n from your application, you would run:\n\n\n1\nnpm explore @daostack/arc.js -- npm start ganache\n\n\n\n\n\n\nOtherwise, when running the scripts at the root of an Arc.js repo, you must omit the \nnpm explore @daostack/arc.js --\n so it looks like this.\n\n\n1\nnpm start ganache\n\n\n\n\n\n\n\n\nMore Scripts\n\n\nMore scripts than are described here are defined in the \npackage-scripts.js\n file.  The Arc.js package uses \nnps\n run these scripts. If you install \nnps\n globally you can substitute \nnpm start\n with \nnps\n, so, at the root of an Arc.js repo, it looks like this:\n\n\n1\nnps\n \nganache\n\n\n\n\n\n\n\n\n\nDeploying to Testnets\n\n\nRefer here for instructions on \nmigrating to Ganache\n and \nmigrating contracts to other test networks\n.\n\n\nRunning Against a Ganache Database\n\n\nIt can be very handy to run Arc.js tests or your application against a Ganache database that persists the state of the chain across instances of Ganache.  Refer here for \nhow to use a Ganache database\n.\n\n\nRun Lint\n\n\nRun lint on both library and test code like this:\n\n\n1\nnpm start lint\n\n\n\n\n\n\n\n\nInfo\n\n\nThe above script runs \nnpm start lint.code\n and \nnpm start lint.test\n\n\n\n\nTo lint and fix:\n\n\n1\nnpm start lint.andFix\n\n\n\n\n\n\n\n\nInfo\n\n\nYou can also fix code and test separately: \nnpm start lint.code.andFix\n and \nnpm start lint.test.andFix\n\n\n\n\nRun Tests\n\n\nTo run the Arc.js tests, run the following script in the Arc.js root folder, assuming you have already\n\ninstalled all the npm packages\n, and are \nrunning a testnet with migrated Arc contracts\n:\n\n\n1\nnpm start test\n\n\n\n\n\n\nThis script builds all of the code and runs all of the tests.\n\n\n\n\nInfo\n\n\nBoth application and test code are written in TypeScript.\n\n\n\n\nStop tests on the first failure\n\n\n1\nnpm start test.bail\n\n\n\n\n\n\nRun tests defined in a single test module\n\n\nSometimes you want to run just a single test module:\n\n\n1\nnpm start \ntest.run test-build/test/[filename]\n\n\n\n\n\n\n\nTo bail:\n\n\n1\nnpm start \ntest.run --bail test-build/test/[filename]\n\n\n\n\n\n\n\nUnlike \ntest\n, the script \ntest.run\n does not build the code first, it assumes the code has already been built, which you can do like this:\n\n\n1\nnpm start test.build", 
            "title": "Scripts"
        }, 
        {
            "location": "/Scripts/#working-with-arcjs-scripts", 
            "text": "Arc.js contains a set of scripts for building, publishing, running tests and migrating contracts to any network.  These scripts are meant to be accessible and readily usable by client applications.  Typically an application will run an Arc.js script by prefixing \" npm explore @daostack/arc.js -- \" to the Arc.js script.  For example, to run the Arc.js script  npm start ganache  from your application, you would run:  1 npm explore @daostack/arc.js -- npm start ganache   Otherwise, when running the scripts at the root of an Arc.js repo, you must omit the  npm explore @daostack/arc.js --  so it looks like this.  1 npm start ganache    More Scripts  More scripts than are described here are defined in the  package-scripts.js  file.  The Arc.js package uses  nps  run these scripts. If you install  nps  globally you can substitute  npm start  with  nps , so, at the root of an Arc.js repo, it looks like this:  1 nps   ganache", 
            "title": "Working with Arc.js Scripts"
        }, 
        {
            "location": "/Scripts/#deploying-to-testnets", 
            "text": "Refer here for instructions on  migrating to Ganache  and  migrating contracts to other test networks .", 
            "title": "Deploying to Testnets"
        }, 
        {
            "location": "/Scripts/#running-against-a-ganache-database", 
            "text": "It can be very handy to run Arc.js tests or your application against a Ganache database that persists the state of the chain across instances of Ganache.  Refer here for  how to use a Ganache database .", 
            "title": "Running Against a Ganache Database"
        }, 
        {
            "location": "/Scripts/#run-lint", 
            "text": "Run lint on both library and test code like this:  1 npm start lint    Info  The above script runs  npm start lint.code  and  npm start lint.test   To lint and fix:  1 npm start lint.andFix    Info  You can also fix code and test separately:  npm start lint.code.andFix  and  npm start lint.test.andFix", 
            "title": "Run Lint"
        }, 
        {
            "location": "/Scripts/#run-tests", 
            "text": "To run the Arc.js tests, run the following script in the Arc.js root folder, assuming you have already installed all the npm packages , and are  running a testnet with migrated Arc contracts :  1 npm start test   This script builds all of the code and runs all of the tests.   Info  Both application and test code are written in TypeScript.", 
            "title": "Run Tests"
        }, 
        {
            "location": "/Scripts/#stop-tests-on-the-first-failure", 
            "text": "1 npm start test.bail", 
            "title": "Stop tests on the first failure"
        }, 
        {
            "location": "/Scripts/#run-tests-defined-in-a-single-test-module", 
            "text": "Sometimes you want to run just a single test module:  1 npm start  test.run test-build/test/[filename]    To bail:  1 npm start  test.run --bail test-build/test/[filename]    Unlike  test , the script  test.run  does not build the code first, it assumes the code has already been built, which you can do like this:  1 npm start test.build", 
            "title": "Run tests defined in a single test module"
        }, 
        {
            "location": "/Migration/", 
            "text": "Migrations\n\n\nDeploying Contracts to a Specified Network\n\n\nTo deploy contracts to a specified network, follow these steps:\n\n\n\n\n\n\nSet the environment variable \narcjs_network\n to the name of the network (\"ganache\", \"kovan\", \"ropsten\", \"live\"). The default is \"ganache\".  Truffle will use this setting to find the specified settings in truffle.js in the Arc.js package.\n\n\n\n\n\n\nIf you are deploying to ganache, skip this step, otherwise:  Set the environment variable \narcjs_providerConfig\n to contain the path to a JSON file that contains specifications for how to connect to a node. The contents of the file should look like this:\n\n\n1\n2\n3\n4\n{\n  \nmnemonic\n : \na 12-word BIP39-compliant account mnemonic\n,\n  \nproviderUrl\n : \nexamples: http://127.0.0.1:8545 or https://[network].infura.io/[token]\n\n}\n\n\n\n\n\n\nAn account generated from the mnemonic will be unlocked for signing and accepting the transactions that are generated during the migration.\n\n\n\n\nWarning\n\n\nThe mnemonic won't work unless it confirms to \nBIP39\n.  You can generate a conformant mnemonic \nhere\n.\n\n\n\n\n\n\nInfo\n\n\nThe migration script will use the gas settings defined in the Arc.js file \narc.js/gasLimits.js\n.  The gas limit when migrating/creating Daos is computed dynamically as a function of the number of founders.\n\n\n\n\n\n\n\n\nProvide a list of Genesis DAO founders as described in \nconfiguring founders\n.\n\n\n\n\n\n\nIf deploying to ganache, then run \nnpm start ganache\n, or from your application: \nnpm explore @daostack/arc.js -- npm start ganache\n.\n\n\nOtherwise, make sure your node is all sync'd-up and listening at the providerUrl you supplied in step 2.\n\n\n\n\n\n\nrun \nnpm start migrateContracts\n, or from your application: \nnpm explore @daostack/arc.js -- npm start migrateContracts\n.\n\n\n\n\n\n\nOptional: If you want to create the Genesis DAO then run \nnpm start createGenesisDao\n, or from your application: \nnpm explore @daostack/arc.js -- npm start createGenesisDao\n.\n\n\n\n\nTip\n\n\nIf you want to migrate contracts and create the Genesis DAO all in a single script, you can run the script \nmigrateContracts.createGenesisDao\n.\n\n\n\n\n\n\n\n\nConfiguring Founders\n\n\nWhen migrating to any network besides ganache you will need to supply a list of founders for the Genesis DAO that is created by the Arc.js migration script.  You must define an environment variable named \narcjs_foundersConfigurationLocation\n that contains the path to a JSON file containing specifications for your founders. This JSON file defines a list of founders for one or more networks in a format that looks like the following (but with real addresses):\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n{\n\n  \nfounders\n:\n \n{\n\n    \nropsten\n:\n \n[\n\n      \n{\n\n        \naddress\n:\n \n0x1000000000000000000000000000000000000000\n,\n\n        \ntokens\n:\n \n1000\n,\n\n        \nreputation\n:\n \n1000\n\n      \n}\n\n    \n],\n\n    \nkovan\n:\n \n[\n\n      \n{\n\n        \naddress\n:\n \n0x1000000000000000000000000000000000000000\n,\n\n        \ntokens\n:\n \n1000\n,\n\n        \nreputation\n:\n \n1000\n\n      \n},\n\n      \n{\n\n        \naddress\n:\n \n0x1000000000000000000000000000000000000000\n,\n\n        \ntokens\n:\n \n1000\n,\n\n        \nreputation\n:\n \n1000\n\n      \n}\n\n    \n]\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\n\n\nInfo\n\n\nThe \ntokens\n amounts are in GDT for testnets, or GEN for \"live\", and the \nreputation\n are in units of the Genesis Reputation system.", 
            "title": "Contract Migration"
        }, 
        {
            "location": "/Migration/#migrations", 
            "text": "", 
            "title": "Migrations"
        }, 
        {
            "location": "/Migration/#deploying-contracts-to-a-specified-network", 
            "text": "To deploy contracts to a specified network, follow these steps:    Set the environment variable  arcjs_network  to the name of the network (\"ganache\", \"kovan\", \"ropsten\", \"live\"). The default is \"ganache\".  Truffle will use this setting to find the specified settings in truffle.js in the Arc.js package.    If you are deploying to ganache, skip this step, otherwise:  Set the environment variable  arcjs_providerConfig  to contain the path to a JSON file that contains specifications for how to connect to a node. The contents of the file should look like this:  1\n2\n3\n4 {\n   mnemonic  :  a 12-word BIP39-compliant account mnemonic ,\n   providerUrl  :  examples: http://127.0.0.1:8545 or https://[network].infura.io/[token] \n}   An account generated from the mnemonic will be unlocked for signing and accepting the transactions that are generated during the migration.   Warning  The mnemonic won't work unless it confirms to  BIP39 .  You can generate a conformant mnemonic  here .    Info  The migration script will use the gas settings defined in the Arc.js file  arc.js/gasLimits.js .  The gas limit when migrating/creating Daos is computed dynamically as a function of the number of founders.     Provide a list of Genesis DAO founders as described in  configuring founders .    If deploying to ganache, then run  npm start ganache , or from your application:  npm explore @daostack/arc.js -- npm start ganache .  Otherwise, make sure your node is all sync'd-up and listening at the providerUrl you supplied in step 2.    run  npm start migrateContracts , or from your application:  npm explore @daostack/arc.js -- npm start migrateContracts .    Optional: If you want to create the Genesis DAO then run  npm start createGenesisDao , or from your application:  npm explore @daostack/arc.js -- npm start createGenesisDao .   Tip  If you want to migrate contracts and create the Genesis DAO all in a single script, you can run the script  migrateContracts.createGenesisDao .", 
            "title": "Deploying Contracts to a Specified Network"
        }, 
        {
            "location": "/Migration/#configuring-founders", 
            "text": "When migrating to any network besides ganache you will need to supply a list of founders for the Genesis DAO that is created by the Arc.js migration script.  You must define an environment variable named  arcjs_foundersConfigurationLocation  that contains the path to a JSON file containing specifications for your founders. This JSON file defines a list of founders for one or more networks in a format that looks like the following (but with real addresses):   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 { \n   founders :   { \n     ropsten :   [ \n       { \n         address :   0x1000000000000000000000000000000000000000 , \n         tokens :   1000 , \n         reputation :   1000 \n       } \n     ], \n     kovan :   [ \n       { \n         address :   0x1000000000000000000000000000000000000000 , \n         tokens :   1000 , \n         reputation :   1000 \n       }, \n       { \n         address :   0x1000000000000000000000000000000000000000 , \n         tokens :   1000 , \n         reputation :   1000 \n       } \n     ] \n   }  }     Info  The  tokens  amounts are in GDT for testnets, or GEN for \"live\", and the  reputation  are in units of the Genesis Reputation system.", 
            "title": "Configuring Founders"
        }, 
        {
            "location": "/GanacheDb/", 
            "text": "Running Arc.js Against a Ganache database\n\n\nIt can be very handy to run Arc.js tests or your application against a Ganache database that is a snapshot of the chain at any given point. Here's how, assuming you are running the script from your application (which is why you see \"\nnpm explore @daostack/arc.js --\n\" prepended to each script command).\n\n\nNote that some of these instructions are very similar to what you see when \nnot\n running Ganache against a database\n.\n\n\nRun Ganache\n\n\nFirst you want to run Ganache with the appropriate flags that will create a database.\n\n\n1\n   npm explore @daostack/arc.js -- npm start ganacheDb\n\n\n\n\n\n\nMigrate the Arc Contracts\n\n\nThen migrate the Arc contracts \nreview the full documentation on migrating contracts\n:\n\n\n1\n   npm explore @daostack/arc.js -- npm start ganacheDb.migrateContracts\n\n\n\n\n\n\nTerminate Ganache\n\n\nTo let this be your snapshot, manually in your own OS, terminate the Ganache process you spawned above. You will see it running as a \"node\" process.\n\n\nZip the Ganache Database\n\n\nNow zip the database for later reuse to start from this point in the chain.\n\n\n1\n   npm explore @daostack/arc.js -- npm start ganacheDb.zip\n\n\n\n\n\n\nAt this point you can restart Ganache as above and it will commence from the point represented in the database. \n\n\nRestore Ganache Snapshot\n\n\nAfter running against the snapshot you may want to restart it, commencing at the point at which you \nzipped it\n.\n\n\nFirst make sure you have \nterminated Ganache\n, then unzip the database:\n\n\n1\n   npm explore @daostack/arc.js -- npm start ganacheDb.restoreFromZip\n\n\n\n\nNow when you restart ganacheDb it will be running against the previously-zipped database.\n\n\nStart Clean\n\n\nTo start again fully from scratch, an empty database, you can clean out the pre-existing database.  Note this can take a long time as there may be thousands of files to delete:\n\n\n1\n   npm explore @daostack/arc.js -- npm start ganacheDb.clean", 
            "title": "Using GanacheDb"
        }, 
        {
            "location": "/GanacheDb/#running-arcjs-against-a-ganache-database", 
            "text": "It can be very handy to run Arc.js tests or your application against a Ganache database that is a snapshot of the chain at any given point. Here's how, assuming you are running the script from your application (which is why you see \" npm explore @daostack/arc.js -- \" prepended to each script command).  Note that some of these instructions are very similar to what you see when  not  running Ganache against a database .", 
            "title": "Running Arc.js Against a Ganache database"
        }, 
        {
            "location": "/GanacheDb/#run-ganache", 
            "text": "First you want to run Ganache with the appropriate flags that will create a database.  1    npm explore @daostack/arc.js -- npm start ganacheDb", 
            "title": "Run Ganache"
        }, 
        {
            "location": "/GanacheDb/#migrate-the-arc-contracts", 
            "text": "Then migrate the Arc contracts  review the full documentation on migrating contracts :  1    npm explore @daostack/arc.js -- npm start ganacheDb.migrateContracts", 
            "title": "Migrate the Arc Contracts"
        }, 
        {
            "location": "/GanacheDb/#terminate-ganache", 
            "text": "To let this be your snapshot, manually in your own OS, terminate the Ganache process you spawned above. You will see it running as a \"node\" process.", 
            "title": "Terminate Ganache"
        }, 
        {
            "location": "/GanacheDb/#zip-the-ganache-database", 
            "text": "Now zip the database for later reuse to start from this point in the chain.  1    npm explore @daostack/arc.js -- npm start ganacheDb.zip   At this point you can restart Ganache as above and it will commence from the point represented in the database.", 
            "title": "Zip the Ganache Database"
        }, 
        {
            "location": "/GanacheDb/#restore-ganache-snapshot", 
            "text": "After running against the snapshot you may want to restart it, commencing at the point at which you  zipped it .  First make sure you have  terminated Ganache , then unzip the database:  1    npm explore @daostack/arc.js -- npm start ganacheDb.restoreFromZip  \nNow when you restart ganacheDb it will be running against the previously-zipped database.", 
            "title": "Restore Ganache Snapshot"
        }, 
        {
            "location": "/GanacheDb/#start-clean", 
            "text": "To start again fully from scratch, an empty database, you can clean out the pre-existing database.  Note this can take a long time as there may be thousands of files to delete:  1    npm explore @daostack/arc.js -- npm start ganacheDb.clean", 
            "title": "Start Clean"
        }, 
        {
            "location": "/api/README/", 
            "text": "API Reference\n\n\nIndex\n\n\nEnumerations\n\n\n\n\nBinaryVoteResult\n\n\nExecutionState\n\n\nGlobalConstraintProposalType\n\n\nLogLevel\n\n\nProposalState\n\n\nRewardType\n\n\nSchemePermissions\n\n\nSchemeRegistrarProposalType\n\n\nTransactionStage\n\n\nUpgradeSchemeProposalType\n\n\n\n\nClasses\n\n\n\n\nAbsoluteVoteWrapper\n\n\nAccountService\n\n\nArcTransactionAgreementResult\n\n\nArcTransactionDataResult\n\n\nArcTransactionProposalResult\n\n\nArcTransactionResult\n\n\nAvatarService\n\n\nConfigService\n\n\nContractWrapperBase\n\n\nContractWrapperFactory\n\n\nContributionRewardWrapper\n\n\nControllerService\n\n\nDAO\n\n\nDaoCreatorFactoryType\n\n\nDaoCreatorWrapper\n\n\nDaoTokenFactoryType\n\n\nDaoTokenWrapper\n\n\nDefaultSchemePermissions\n\n\nEventSubscription\n\n\nGenesisDaoCreator\n\n\nGenesisProtocolFactoryType\n\n\nGenesisProtocolWrapper\n\n\nGlobalConstraintRegistrarWrapper\n\n\nIntVoteInterfaceFactoryType\n\n\nIntVoteInterfaceWrapper\n\n\nLoggingService\n\n\nMintableTokenFactoryType\n\n\nMintableTokenWrapper\n\n\nPromiseEventService\n\n\nProposalGeneratorBase\n\n\nProposalService\n\n\nPubSubEventService\n\n\nRedeemerFactoryType\n\n\nRedeemerWrapper\n\n\nReputationFactoryType\n\n\nReputationWrapper\n\n\nSchemeRegistrarWrapper\n\n\nStandardTokenFactoryType\n\n\nStandardTokenWrapper\n\n\nSubscriptionCollection\n\n\nTokenCapGCWrapper\n\n\nTransactionService\n\n\nUpgradeSchemeWrapper\n\n\nUtils\n\n\nUtilsInternal\n\n\nVestingSchemeWrapper\n\n\nVoteInOrganizationSchemeWrapper\n\n\nWeb3EventService\n\n\nWeb3EventSubscription\n\n\nWrapperService\n\n\n\n\nInterfaces\n\n\n\n\nAVVoteProposalEventResult\n\n\nAbsoluteVoteParams\n\n\nAbsoluteVoteParamsResult\n\n\nAgreement\n\n\nAgreementBase\n\n\nAgreementCancelEventResult\n\n\nAgreementProposal\n\n\nAgreementProposalEventResult\n\n\nAllowanceOptions\n\n\nApprovalEventResult\n\n\nApproveAndCallOptions\n\n\nArcWrapperFactories\n\n\nArcWrappers\n\n\nArcWrappersByType\n\n\nBurnEventResult\n\n\nBurnableTokenBurnOptions\n\n\nCancelProposalEventResult\n\n\nCancelVotingEventResult\n\n\nChangeApprovalAndCallOptions\n\n\nChangeUpgradeSchemeProposalEventResult\n\n\nCollectEventResult\n\n\nCollectVestingAgreementConfig\n\n\nCommonVestingAgreementConfig\n\n\nContributionProposal\n\n\nContributionRewardParams\n\n\nContributionRewardParamsReturn\n\n\nContributionRewardRedeemParams\n\n\nContributionRewardSpecifiedRedemptionParams\n\n\nControllerAddGlobalConstraintsEventLogEntry\n\n\nControllerRegisterSchemeEventLogEntry\n\n\nCreateVestingAgreementConfig\n\n\nDaoGlobalConstraintInfo\n\n\nDaoSchemeInfo\n\n\nDaoTokenBurnOptions\n\n\nDaoTokenMintOptions\n\n\nEntityFetcher\n\n\nEventFetcher\n\n\nEventFetcherFilterObject\n\n\nEventHasPropertyId\n\n\nEventPreProcessorReturn\n\n\nExecuteProposalEventResult\n\n\nExecutedGenesisProposal\n\n\nExecutedProposal\n\n\nForgeOrgConfig\n\n\nForgedDaoInfo\n\n\nFounderConfig\n\n\nGPExecuteProposalEventResult\n\n\nGenesisProtocolDaoTokenBalances\n\n\nGenesisProtocolParams\n\n\nGenesisProtocolProposal\n\n\nGetAgreementParams\n\n\nGetAllowedRangeOfChoicesResult\n\n\nGetBeneficiaryRewardsParams\n\n\nGetDaosOptions\n\n\nGetGenesisProtocolParamsResult\n\n\nGetNumberOfChoicesConfig\n\n\nGetParticipantsOptions\n\n\nGetProposalAvatarConfig\n\n\nGetProposalEventsOptions\n\n\nGetProposalStatusConfig\n\n\nGetProposalStatusResult\n\n\nGetScoreConfig\n\n\nGetScoreThresholdParamsConfig\n\n\nGetScoreThresholdParamsResult\n\n\nGetStakerInfoConfig\n\n\nGetStakerInfoResult\n\n\nGetStateConfig\n\n\nGetThresholdConfig\n\n\nGetTokenBalancesOptions\n\n\nGetTokenCapGcParamsResult\n\n\nGetTotalReputationSupplyConfig\n\n\nGetVoteStatusConfig\n\n\nGetVoterInfoConfig\n\n\nGetVoterInfoResult\n\n\nGetWinningVoteConfig\n\n\nHasContract\n\n\nIBurnableTokenWrapper\n\n\nIConfigService\n\n\nIContractWrapperBase\n\n\nIContractWrapperFactory\n\n\nIErc827TokenWrapper\n\n\nIEventSubscription\n\n\nIIntVoteInterface\n\n\nILogger\n\n\nITruffleContractFunction\n\n\nInitialSchemesSetEventResult\n\n\nInitializeArcOptions\n\n\nMintEventResult\n\n\nMintFinishedEventResult\n\n\nMintableTokenMintOptions\n\n\nNewContributionProposalEventResult\n\n\nNewDaoConfig\n\n\nNewDaoVotingMachineConfig\n\n\nNewGlobalConstraintsProposalEventResult\n\n\nNewOrgEventResult\n\n\nNewProposalEventResult\n\n\nNewSchemeProposalEventResult\n\n\nNewUpgradeProposalEventResult\n\n\nNewVestedAgreementEventResult\n\n\nNewVoteProposalEventResult\n\n\nOwnerVoteOptions\n\n\nParticipant\n\n\nProposalDeletedEventResult\n\n\nProposalEntity\n\n\nProposalExecutedEventResult\n\n\nProposalIdOption\n\n\nProposalRewards\n\n\nProposeContributionRewardParams\n\n\nProposeControllerParams\n\n\nProposeOptions\n\n\nProposeToAddModifyGlobalConstraintParams\n\n\nProposeToAddModifySchemeParams\n\n\nProposeToRemoveGlobalConstraintParams\n\n\nProposeToRemoveSchemeParams\n\n\nProposeUpgradingSchemeParams\n\n\nProposeVestingAgreementConfig\n\n\nProposedVestedAgreementEventResult\n\n\nRedeeemableResult\n\n\nRedeemConfig\n\n\nRedeemEventResult\n\n\nRedeemerOptions\n\n\nRedeemerRedeemEventResult\n\n\nRefreshReputationEventResult\n\n\nRemoveGlobalConstraintsProposalEventResult\n\n\nRemoveSchemeProposalEventResult\n\n\nReputationBurnEventResult\n\n\nReputationBurnOptions\n\n\nReputationMintEventResult\n\n\nReputationMintOptions\n\n\nRevokeSignToCancelAgreementEventResult\n\n\nRevokeSignToCancelVestingAgreementConfig\n\n\nSchemeConfig\n\n\nSchemeProposalExecuted\n\n\nSchemeProposalExecutedEventResult\n\n\nSchemeRegistrarParams\n\n\nSchemeWrapper\n\n\nSchemesConfig\n\n\nSetSchemesConfig\n\n\nShouldBoostConfig\n\n\nSignToCancelAgreementEventResult\n\n\nSignToCancelVestingAgreementConfig\n\n\nStakeConfig\n\n\nStakeEventResult\n\n\nStandardSchemeParams\n\n\nStandardTokenAllowanceOptions\n\n\nStandardTokenApproveOptions\n\n\nStandardTokenChangeApprovalOptions\n\n\nStandardTokenTransferFromOptions\n\n\nStandardTokenTransferOptions\n\n\nTokenCapGcParams\n\n\nTransactionReceiptTruffle\n\n\nTransactionReceiptsEventInfo\n\n\nTransferAndCallOptions\n\n\nTransferEventResult\n\n\nTransferFromAndCallOptions\n\n\nTruffleContract\n\n\nVestingSchemeSchemeProposalExecuted\n\n\nVotableGlobalConstraintProposal\n\n\nVotableProposal\n\n\nVotableSchemeRegistrarProposal\n\n\nVotableUpgradeSchemeProposal\n\n\nVotableVoteInOrganizationProposal\n\n\nVoteInOrganizationProposeVoteConfig\n\n\nVoteOnBehalfEventResult\n\n\nVoteOptions\n\n\nVoteProposalEventResult\n\n\nVoteStatusOptions\n\n\nVoteWithSpecifiedAmountsOptions\n\n\nWeb3EventFetcher\n\n\nWrapperFilter\n\n\nWrapperServiceInitializeOptions\n\n\n\n\nType aliases\n\n\n\n\nAddress\n\n\nEntityFetcherFactory\n\n\nEntityGetCallback\n\n\nEntityWatchCallback\n\n\nEntityWatchSubscriptionCallback\n\n\nEventFetcherFactory\n\n\nEventGetCallback\n\n\nEventSubscriptionCallback\n\n\nEventSubscriptionKey\n\n\nEventWatchCallback\n\n\nEventWatchSubscriptionCallback\n\n\nHash\n\n\nPerDaoCallback\n\n\nPreProcessEventCallback\n\n\nTransformEventCallback\n\n\nTruffleContractFunction\n\n\nfnVoid\n\n\n\n\nVariables\n\n\n\n\nAbsoluteVoteFactory\n\n\nContractWrapperFactories\n\n\nContractWrappers\n\n\nContractWrappersByAddress\n\n\nContractWrappersByType\n\n\nContributionRewardFactory\n\n\nDaoCreatorFactory\n\n\nDaoTokenFactory\n\n\nGenesisProtocolFactory\n\n\nGlobalConstraintRegistrarFactory\n\n\nIntVoteInterfaceFactory\n\n\nMintableTokenFactory\n\n\nRedeemerFactory\n\n\nReputationFactory\n\n\nSchemeRegistrarFactory\n\n\nStandardTokenFactory\n\n\nTokenCapGCFactory\n\n\nUpgradeSchemeFactory\n\n\nVestingSchemeFactory\n\n\nVoteInOrganizationSchemeFactory\n\n\ncomputeForgeOrgGasLimit\n\n\n\n\nFunctions\n\n\n\n\nGetDefaultGenesisProtocolParameters\n\n\nInitializeArcJs\n\n\narcJsDeployer\n\n\n\n\n\n\nType aliases\n\n\n\n\nAddress\n\n\n\u03a4 Address\n:  \nstring\n \n\n\nDefined in \ncommonTypes.ts:5\n\n\n\n\n\n\nEntityFetcherFactory\n\n\n\u03a4 EntityFetcherFactory\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:393\n\n\nFunction that returns an \nEntityFetcher\nTEntity\n.\n\ntype\n: TEntity The type returns to the callback.\n\n\nType declaration\n\n\n\u25ba(argsFilter?: \nany\n, filterObject?: \nEventFetcherFilterObject\n, callback?: \nEntityWatchCallback\nTDest\n, requiredDepth?: \nnumber\n): \nEntityFetcher\nTDest\n, \nTSrc\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nargsFilter\n\n\nany\n\n\n-\n\n\n\n\n\n\nfilterObject\n\n\nEventFetcherFilterObject\n\n\n-\n\n\n\n\n\n\ncallback\n\n\nEntityWatchCallback\nTDest\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcher\nTDest\n, \nTSrc\n\n\n\n\n\n\nEntityGetCallback\n\n\n\u03a4 EntityGetCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:421\n\n\nType declaration\n\n\n\u25ba(error: \nError\n, entity: \nPromise\n.\nArray\n.\nTEntity\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nerror\n\n\nError\n\n\n-\n\n\n\n\n\n\nentity\n\n\nPromise\n.\nArray\n.\nTEntity\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nEntityWatchCallback\n\n\n\u03a4 EntityWatchCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:420\n\n\nType declaration\n\n\n\u25ba(error: \nError\n, entity: \nTEntity\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nerror\n\n\nError\n\n\n-\n\n\n\n\n\n\nentity\n\n\nTEntity\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nEntityWatchSubscriptionCallback\n\n\n\u03a4 EntityWatchSubscriptionCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:422\n\n\nType declaration\n\n\n\u25ba(eventName: \nstring\n, payload: \nTEntity\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\neventName\n\n\nstring\n\n\n-\n\n\n\n\n\n\npayload\n\n\nTEntity\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nEventFetcherFactory\n\n\n\u03a4 EventFetcherFactory\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:473\n\n\nFunction that returns an \nEventFetcher\nTEventArgs\n.\n\ntype\n: TEventArgs The type of the \nargs\n object.\n\n\nType declaration\n\n\n\u25ba(argsFilter?: \nany\n, filterObject?: \nEventFetcherFilterObject\n, callback?: \nEventWatchCallback\nTEventArgs\n, requiredDepth?: \nnumber\n): \nEventFetcher\nTEventArgs\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nargsFilter\n\n\nany\n\n\n-\n\n\n\n\n\n\nfilterObject\n\n\nEventFetcherFilterObject\n\n\n-\n\n\n\n\n\n\ncallback\n\n\nEventWatchCallback\nTEventArgs\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEventFetcher\nTEventArgs\n\n\n\n\n\n\nEventGetCallback\n\n\n\u03a4 EventGetCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:499\n\n\nType declaration\n\n\n\u25ba(error: \nError\n, args: \nArray\n.\nDecodedLogEntryEvent\n.\nTEventArgs\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nerror\n\n\nError\n\n\n-\n\n\n\n\n\n\nargs\n\n\nArray\n.\nDecodedLogEntryEvent\n.\nTEventArgs\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nEventSubscriptionCallback\n\n\n\u03a4 EventSubscriptionCallback\n:  \nfunction\n \n\n\nDefined in \npubSubEventService.ts:196\n\n\nType declaration\n\n\n\u25ba(topic: \nstring\n, payload: \nany\n): \nany\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopic\n\n\nstring\n\n\n-\n\n\n\n\n\n\npayload\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nany\n\n\n\n\n\n\nEventSubscriptionKey\n\n\n\u03a4 EventSubscriptionKey\n:  \nstring\n\u23ae\nEventSubscriptionCallback\n \n\n\nDefined in \npubSubEventService.ts:197\n\n\n\n\n\n\nEventWatchCallback\n\n\n\u03a4 EventWatchCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:497\n\n\nType declaration\n\n\n\u25ba(error: \nError\n, args: \nDecodedLogEntryEvent\n.\nTEventArgs\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nerror\n\n\nError\n\n\n-\n\n\n\n\n\n\nargs\n\n\nDecodedLogEntryEvent\n.\nTEventArgs\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nEventWatchSubscriptionCallback\n\n\n\u03a4 EventWatchSubscriptionCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:501\n\n\nType declaration\n\n\n\u25ba(eventName: \nstring\n, payload: \nDecodedLogEntryEvent\n.\nTEventArgs\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\neventName\n\n\nstring\n\n\n-\n\n\n\n\n\n\npayload\n\n\nDecodedLogEntryEvent\n.\nTEventArgs\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nHash\n\n\n\u03a4 Hash\n:  \nstring\n \n\n\nDefined in \ncommonTypes.ts:4\n\n\n\n\n\n\nPerDaoCallback\n\n\n\u03a4 PerDaoCallback\n:  \nfunction\n \n\n\nDefined in dao.ts:436\n\n\nType declaration\n\n\n\u25ba(avatarAddress: \nAddress\n): \nvoid\n\u23ae\nPromise\n.\nboolean\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\u23ae\nPromise\n.\nboolean\n\n\n\n\n\n\nPreProcessEventCallback\n\n\n\u03a4 PreProcessEventCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:383\n\n\nType declaration\n\n\n\u25ba(error: \nError\n, log: \nArray\n.\nDecodedLogEntryEvent\n.\nTEventArgs\n): \nEventPreProcessorReturn\nTEventArgs\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nerror\n\n\nError\n\n\n-\n\n\n\n\n\n\nlog\n\n\nArray\n.\nDecodedLogEntryEvent\n.\nTEventArgs\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEventPreProcessorReturn\nTEventArgs\n\n\n\n\n\n\nTransformEventCallback\n\n\n\u03a4 TransformEventCallback\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:386\n\n\nType declaration\n\n\n\u25ba(event: \nDecodedLogEntryEvent\n.\nTSrc\n): \nPromise\n.\nTDest\n\u23ae\nundefined\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nevent\n\n\nDecodedLogEntryEvent\n.\nTSrc\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTDest\n\u23ae\nundefined\n\n\n\n\n\n\nTruffleContractFunction\n\n\n\u03a4 TruffleContractFunction\n:  \nfunction\n \n\n\nDefined in \ncontractWrapperBase.ts:387\n\n\nType declaration\n\n\n\u25ba(args?: \nArray\n.\nany\n): \nPromise\n.\nHash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nargs\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nfnVoid\n\n\n\u03a4 fnVoid\n:  \nfunction\n \n\n\nDefined in \ncommonTypes.ts:3\n\n\nType declaration\n\n\n\u25ba(): \nvoid\n\n\nReturns:\n \nvoid\n\n\n\n\nVariables\n\n\n\n\n\u00abConst\u00bb AbsoluteVoteFactory\n\n\n\u25cf  AbsoluteVoteFactory\n:  \nContractWrapperFactory\nAbsoluteVoteWrapper\n  = \n  new ContractWrapperFactory(\"AbsoluteVote\", AbsoluteVoteWrapper, new Web3EventService())\n\n\nDefined in \nwrappers/absoluteVote.ts:166\n\n\n\n\n\n\n\u00abConst\u00bb ContractWrapperFactories\n\n\n\u25cf  ContractWrapperFactories\n:  \nArcWrapperFactories\n  =  WrapperService.factories\n\n\nDefined in \nwrapperService.ts:384\n\n\nfor quicker access to the contract wrapper factories\n\n\n\n\n\n\n\u00abConst\u00bb ContractWrappers\n\n\n\u25cf  ContractWrappers\n:  \nArcWrappers\n  =  WrapperService.wrappers\n\n\nDefined in \nwrapperService.ts:380\n\n\nfor quicker access to the contract wrappers\n\n\n\n\n\n\n\u00abConst\u00bb ContractWrappersByAddress\n\n\n\u25cf  ContractWrappersByAddress\n:  \nMap\n.\nAddress\n,.\nIContractWrapperBase\n  =  WrapperService.wrappersByAddress\n\n\nDefined in \nwrapperService.ts:392\n\n\nfor quicker access to the contract wrappers by address\n\n\n\n\n\n\n\u00abConst\u00bb ContractWrappersByType\n\n\n\u25cf  ContractWrappersByType\n:  \nArcWrappersByType\n  =  WrapperService.wrappersByType\n\n\nDefined in \nwrapperService.ts:388\n\n\nfor quicker access to the contract wrapper types\n\n\n\n\n\n\n\u00abConst\u00bb ContributionRewardFactory\n\n\n\u25cf  ContributionRewardFactory\n:  \nContractWrapperFactory\nContributionRewardWrapper\n  = \n  new ContractWrapperFactory(\"ContributionReward\", ContributionRewardWrapper, new Web3EventService())\n\n\nDefined in \nwrappers/contributionReward.ts:565\n\n\n\n\n\n\n\u00abConst\u00bb DaoCreatorFactory\n\n\n\u25cf  DaoCreatorFactory\n:  \nDaoCreatorFactoryType\n  = \n  new DaoCreatorFactoryType(\"DaoCreator\", DaoCreatorWrapper, new Web3EventService()) as DaoCreatorFactoryType\n\n\nDefined in \nwrappers/daoCreator.ts:365\n\n\n\n\n\n\n\u00abConst\u00bb DaoTokenFactory\n\n\n\u25cf  DaoTokenFactory\n:  \nDaoTokenFactoryType\n  = \n  new DaoTokenFactoryType(\n    \"DAOToken\",\n    DaoTokenWrapper,\n    new Web3EventService()) as DaoTokenFactoryType\n\n\nDefined in \nwrappers/daoToken.ts:358\n\n\n\n\n\n\n\u00abConst\u00bb GenesisProtocolFactory\n\n\n\u25cf  GenesisProtocolFactory\n:  \nGenesisProtocolFactoryType\n  = \n  new GenesisProtocolFactoryType(\n    \"GenesisProtocol\",\n    GenesisProtocolWrapper,\n    new Web3EventService()) as GenesisProtocolFactoryType\n\n\nDefined in \nwrappers/genesisProtocol.ts:959\n\n\n\n\n\n\n\u00abConst\u00bb GlobalConstraintRegistrarFactory\n\n\n\u25cf  GlobalConstraintRegistrarFactory\n:  \nContractWrapperFactory\nGlobalConstraintRegistrarWrapper\n  =  new ContractWrapperFactory(\n  \"GlobalConstraintRegistrar\", GlobalConstraintRegistrarWrapper, new Web3EventService())\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:232\n\n\n\n\n\n\n\u00abConst\u00bb IntVoteInterfaceFactory\n\n\n\u25cf  IntVoteInterfaceFactory\n:  \nIntVoteInterfaceFactoryType\n  = \n  new IntVoteInterfaceFactoryType(\n    \"IntVoteInterface\",\n    IntVoteInterfaceWrapper,\n    new Web3EventService()) as IntVoteInterfaceFactoryType\n\n\nDefined in \nwrappers/intVoteInterface.ts:382\n\n\n\n\n\n\n\u00abConst\u00bb MintableTokenFactory\n\n\n\u25cf  MintableTokenFactory\n:  \nMintableTokenFactoryType\n  = \n  new MintableTokenFactoryType(\n    \"MintableToken\",\n    MintableTokenWrapper,\n    new Web3EventService()) as MintableTokenFactoryType\n\n\nDefined in \nwrappers/mintableToken.ts:127\n\n\n\n\n\n\n\u00abConst\u00bb RedeemerFactory\n\n\n\u25cf  RedeemerFactory\n:  \nRedeemerFactoryType\n  = \n  new RedeemerFactoryType(\n    \"Redeemer\",\n    RedeemerWrapper,\n    new Web3EventService()) as RedeemerFactoryType\n\n\nDefined in \nwrappers/redeemer.ts:107\n\n\n\n\n\n\n\u00abConst\u00bb ReputationFactory\n\n\n\u25cf  ReputationFactory\n:  \nReputationFactoryType\n  = \n  new ReputationFactoryType(\n    \"Reputation\",\n    ReputationWrapper,\n    new Web3EventService()) as ReputationFactoryType\n\n\nDefined in \nwrappers/reputation.ts:104\n\n\n\n\n\n\n\u00abConst\u00bb SchemeRegistrarFactory\n\n\n\u25cf  SchemeRegistrarFactory\n:  \nContractWrapperFactory\nSchemeRegistrarWrapper\n  = \n  new ContractWrapperFactory(\"SchemeRegistrar\", SchemeRegistrarWrapper, new Web3EventService())\n\n\nDefined in \nwrappers/schemeRegistrar.ts:271\n\n\n\n\n\n\n\u00abConst\u00bb StandardTokenFactory\n\n\n\u25cf  StandardTokenFactory\n:  \nStandardTokenFactoryType\n  = \n  new StandardTokenFactoryType(\n    \"StandardToken\",\n    StandardTokenWrapper,\n    new Web3EventService()) as StandardTokenFactoryType\n\n\nDefined in \nwrappers/standardToken.ts:227\n\n\n\n\n\n\n\u00abConst\u00bb TokenCapGCFactory\n\n\n\u25cf  TokenCapGCFactory\n:  \nContractWrapperFactory\nTokenCapGCWrapper\n  = \n  new ContractWrapperFactory(\"TokenCapGC\", TokenCapGCWrapper, new Web3EventService())\n\n\nDefined in \nwrappers/tokenCapGC.ts:59\n\n\n\n\n\n\n\u00abConst\u00bb UpgradeSchemeFactory\n\n\n\u25cf  UpgradeSchemeFactory\n:  \nContractWrapperFactory\nUpgradeSchemeWrapper\n  = \n  new ContractWrapperFactory(\"UpgradeScheme\", UpgradeSchemeWrapper, new Web3EventService())\n\n\nDefined in \nwrappers/upgradeScheme.ts:225\n\n\n\n\n\n\n\u00abConst\u00bb VestingSchemeFactory\n\n\n\u25cf  VestingSchemeFactory\n:  \nContractWrapperFactory\nVestingSchemeWrapper\n  = \n  new ContractWrapperFactory(\"VestingScheme\", VestingSchemeWrapper, new Web3EventService())\n\n\nDefined in \nwrappers/vestingScheme.ts:442\n\n\n\n\n\n\n\u00abConst\u00bb VoteInOrganizationSchemeFactory\n\n\n\u25cf  VoteInOrganizationSchemeFactory\n:  \nContractWrapperFactory\nVoteInOrganizationSchemeWrapper\n  = \n  new ContractWrapperFactory(\n    \"VoteInOrganizationScheme\",\n    VoteInOrganizationSchemeWrapper,\n    new Web3EventService())\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:183\n\n\n\n\n\n\n\u00abConst\u00bb computeForgeOrgGasLimit\n\n\n\u25cf  computeForgeOrgGasLimit\n:  \nany\n  =  require(\"../gasLimits.js\").computeForgeOrgGasLimit\n\n\nDefined in index.ts:47\n\n\n\n\nFunctions\n\n\n\n\n\u00abConst\u00bb GetDefaultGenesisProtocolParameters\n\n\n\u25ba \nGetDefaultGenesisProtocolParameters\n(): \nPromise\n.\nGenesisProtocolParams\n\n\nDefined in \nwrappers/genesisProtocol.ts:1302\n\n\nReturns:\n \nPromise\n.\nGenesisProtocolParams\n\n\n\n\n\n\nInitializeArcJs\n\n\n\u25ba \nInitializeArcJs\n(options?: \nInitializeArcOptions\n): \nPromise\n.\nWeb3\n\n\nDefined in index.ts:78\n\n\nYou must call \nInitializeArcJs\n before doing anything else with Arc.js. Call it again whenever the current chain changes.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nInitializeArcOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nWeb3\n\nPromise of the \nWeb3\n object for the current chain.\n\n\n\n\n\n\n\u00abConst\u00bb arcJsDeployer\n\n\n\u25ba \narcJsDeployer\n(web3: \nWeb3\n, artifacts: \nany\n, deployer: \nany\n): \nvoid\n\n\nDefined in migrations/2_deploy_schemes.ts:14\n\n\nMigration callback\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nweb3\n\n\nWeb3\n\n\n-\n\n\n\n\n\n\nartifacts\n\n\nany\n\n\n-\n\n\n\n\n\n\ndeployer\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "Index"
        }, 
        {
            "location": "/api/README/#api-reference", 
            "text": "", 
            "title": "API Reference"
        }, 
        {
            "location": "/api/README/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/README/#enumerations", 
            "text": "BinaryVoteResult  ExecutionState  GlobalConstraintProposalType  LogLevel  ProposalState  RewardType  SchemePermissions  SchemeRegistrarProposalType  TransactionStage  UpgradeSchemeProposalType", 
            "title": "Enumerations"
        }, 
        {
            "location": "/api/README/#classes", 
            "text": "AbsoluteVoteWrapper  AccountService  ArcTransactionAgreementResult  ArcTransactionDataResult  ArcTransactionProposalResult  ArcTransactionResult  AvatarService  ConfigService  ContractWrapperBase  ContractWrapperFactory  ContributionRewardWrapper  ControllerService  DAO  DaoCreatorFactoryType  DaoCreatorWrapper  DaoTokenFactoryType  DaoTokenWrapper  DefaultSchemePermissions  EventSubscription  GenesisDaoCreator  GenesisProtocolFactoryType  GenesisProtocolWrapper  GlobalConstraintRegistrarWrapper  IntVoteInterfaceFactoryType  IntVoteInterfaceWrapper  LoggingService  MintableTokenFactoryType  MintableTokenWrapper  PromiseEventService  ProposalGeneratorBase  ProposalService  PubSubEventService  RedeemerFactoryType  RedeemerWrapper  ReputationFactoryType  ReputationWrapper  SchemeRegistrarWrapper  StandardTokenFactoryType  StandardTokenWrapper  SubscriptionCollection  TokenCapGCWrapper  TransactionService  UpgradeSchemeWrapper  Utils  UtilsInternal  VestingSchemeWrapper  VoteInOrganizationSchemeWrapper  Web3EventService  Web3EventSubscription  WrapperService", 
            "title": "Classes"
        }, 
        {
            "location": "/api/README/#interfaces", 
            "text": "AVVoteProposalEventResult  AbsoluteVoteParams  AbsoluteVoteParamsResult  Agreement  AgreementBase  AgreementCancelEventResult  AgreementProposal  AgreementProposalEventResult  AllowanceOptions  ApprovalEventResult  ApproveAndCallOptions  ArcWrapperFactories  ArcWrappers  ArcWrappersByType  BurnEventResult  BurnableTokenBurnOptions  CancelProposalEventResult  CancelVotingEventResult  ChangeApprovalAndCallOptions  ChangeUpgradeSchemeProposalEventResult  CollectEventResult  CollectVestingAgreementConfig  CommonVestingAgreementConfig  ContributionProposal  ContributionRewardParams  ContributionRewardParamsReturn  ContributionRewardRedeemParams  ContributionRewardSpecifiedRedemptionParams  ControllerAddGlobalConstraintsEventLogEntry  ControllerRegisterSchemeEventLogEntry  CreateVestingAgreementConfig  DaoGlobalConstraintInfo  DaoSchemeInfo  DaoTokenBurnOptions  DaoTokenMintOptions  EntityFetcher  EventFetcher  EventFetcherFilterObject  EventHasPropertyId  EventPreProcessorReturn  ExecuteProposalEventResult  ExecutedGenesisProposal  ExecutedProposal  ForgeOrgConfig  ForgedDaoInfo  FounderConfig  GPExecuteProposalEventResult  GenesisProtocolDaoTokenBalances  GenesisProtocolParams  GenesisProtocolProposal  GetAgreementParams  GetAllowedRangeOfChoicesResult  GetBeneficiaryRewardsParams  GetDaosOptions  GetGenesisProtocolParamsResult  GetNumberOfChoicesConfig  GetParticipantsOptions  GetProposalAvatarConfig  GetProposalEventsOptions  GetProposalStatusConfig  GetProposalStatusResult  GetScoreConfig  GetScoreThresholdParamsConfig  GetScoreThresholdParamsResult  GetStakerInfoConfig  GetStakerInfoResult  GetStateConfig  GetThresholdConfig  GetTokenBalancesOptions  GetTokenCapGcParamsResult  GetTotalReputationSupplyConfig  GetVoteStatusConfig  GetVoterInfoConfig  GetVoterInfoResult  GetWinningVoteConfig  HasContract  IBurnableTokenWrapper  IConfigService  IContractWrapperBase  IContractWrapperFactory  IErc827TokenWrapper  IEventSubscription  IIntVoteInterface  ILogger  ITruffleContractFunction  InitialSchemesSetEventResult  InitializeArcOptions  MintEventResult  MintFinishedEventResult  MintableTokenMintOptions  NewContributionProposalEventResult  NewDaoConfig  NewDaoVotingMachineConfig  NewGlobalConstraintsProposalEventResult  NewOrgEventResult  NewProposalEventResult  NewSchemeProposalEventResult  NewUpgradeProposalEventResult  NewVestedAgreementEventResult  NewVoteProposalEventResult  OwnerVoteOptions  Participant  ProposalDeletedEventResult  ProposalEntity  ProposalExecutedEventResult  ProposalIdOption  ProposalRewards  ProposeContributionRewardParams  ProposeControllerParams  ProposeOptions  ProposeToAddModifyGlobalConstraintParams  ProposeToAddModifySchemeParams  ProposeToRemoveGlobalConstraintParams  ProposeToRemoveSchemeParams  ProposeUpgradingSchemeParams  ProposeVestingAgreementConfig  ProposedVestedAgreementEventResult  RedeeemableResult  RedeemConfig  RedeemEventResult  RedeemerOptions  RedeemerRedeemEventResult  RefreshReputationEventResult  RemoveGlobalConstraintsProposalEventResult  RemoveSchemeProposalEventResult  ReputationBurnEventResult  ReputationBurnOptions  ReputationMintEventResult  ReputationMintOptions  RevokeSignToCancelAgreementEventResult  RevokeSignToCancelVestingAgreementConfig  SchemeConfig  SchemeProposalExecuted  SchemeProposalExecutedEventResult  SchemeRegistrarParams  SchemeWrapper  SchemesConfig  SetSchemesConfig  ShouldBoostConfig  SignToCancelAgreementEventResult  SignToCancelVestingAgreementConfig  StakeConfig  StakeEventResult  StandardSchemeParams  StandardTokenAllowanceOptions  StandardTokenApproveOptions  StandardTokenChangeApprovalOptions  StandardTokenTransferFromOptions  StandardTokenTransferOptions  TokenCapGcParams  TransactionReceiptTruffle  TransactionReceiptsEventInfo  TransferAndCallOptions  TransferEventResult  TransferFromAndCallOptions  TruffleContract  VestingSchemeSchemeProposalExecuted  VotableGlobalConstraintProposal  VotableProposal  VotableSchemeRegistrarProposal  VotableUpgradeSchemeProposal  VotableVoteInOrganizationProposal  VoteInOrganizationProposeVoteConfig  VoteOnBehalfEventResult  VoteOptions  VoteProposalEventResult  VoteStatusOptions  VoteWithSpecifiedAmountsOptions  Web3EventFetcher  WrapperFilter  WrapperServiceInitializeOptions", 
            "title": "Interfaces"
        }, 
        {
            "location": "/api/README/#type-aliases", 
            "text": "Address  EntityFetcherFactory  EntityGetCallback  EntityWatchCallback  EntityWatchSubscriptionCallback  EventFetcherFactory  EventGetCallback  EventSubscriptionCallback  EventSubscriptionKey  EventWatchCallback  EventWatchSubscriptionCallback  Hash  PerDaoCallback  PreProcessEventCallback  TransformEventCallback  TruffleContractFunction  fnVoid", 
            "title": "Type aliases"
        }, 
        {
            "location": "/api/README/#variables", 
            "text": "AbsoluteVoteFactory  ContractWrapperFactories  ContractWrappers  ContractWrappersByAddress  ContractWrappersByType  ContributionRewardFactory  DaoCreatorFactory  DaoTokenFactory  GenesisProtocolFactory  GlobalConstraintRegistrarFactory  IntVoteInterfaceFactory  MintableTokenFactory  RedeemerFactory  ReputationFactory  SchemeRegistrarFactory  StandardTokenFactory  TokenCapGCFactory  UpgradeSchemeFactory  VestingSchemeFactory  VoteInOrganizationSchemeFactory  computeForgeOrgGasLimit", 
            "title": "Variables"
        }, 
        {
            "location": "/api/README/#functions", 
            "text": "GetDefaultGenesisProtocolParameters  InitializeArcJs  arcJsDeployer", 
            "title": "Functions"
        }, 
        {
            "location": "/api/README/#type-aliases_1", 
            "text": "", 
            "title": "Type aliases"
        }, 
        {
            "location": "/api/README/#address", 
            "text": "\u03a4 Address :   string    Defined in  commonTypes.ts:5", 
            "title": "Address"
        }, 
        {
            "location": "/api/README/#entityfetcherfactory", 
            "text": "\u03a4 EntityFetcherFactory :   function    Defined in  web3EventService.ts:393  Function that returns an  EntityFetcher TEntity . type : TEntity The type returns to the callback.", 
            "title": "EntityFetcherFactory"
        }, 
        {
            "location": "/api/README/#type-declaration", 
            "text": "\u25ba(argsFilter?:  any , filterObject?:  EventFetcherFilterObject , callback?:  EntityWatchCallback TDest , requiredDepth?:  number ):  EntityFetcher TDest ,  TSrc  Parameters:     Param  Type  Description      argsFilter  any  -    filterObject  EventFetcherFilterObject  -    callback  EntityWatchCallback TDest  -    requiredDepth  number  -     Returns:   EntityFetcher TDest ,  TSrc", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#entitygetcallback", 
            "text": "\u03a4 EntityGetCallback :   function    Defined in  web3EventService.ts:421", 
            "title": "EntityGetCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_1", 
            "text": "\u25ba(error:  Error , entity:  Promise . Array . TEntity ):  void  Parameters:     Param  Type  Description      error  Error  -    entity  Promise . Array . TEntity  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#entitywatchcallback", 
            "text": "\u03a4 EntityWatchCallback :   function    Defined in  web3EventService.ts:420", 
            "title": "EntityWatchCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_2", 
            "text": "\u25ba(error:  Error , entity:  TEntity ):  void  Parameters:     Param  Type  Description      error  Error  -    entity  TEntity  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#entitywatchsubscriptioncallback", 
            "text": "\u03a4 EntityWatchSubscriptionCallback :   function    Defined in  web3EventService.ts:422", 
            "title": "EntityWatchSubscriptionCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_3", 
            "text": "\u25ba(eventName:  string , payload:  TEntity ):  void  Parameters:     Param  Type  Description      eventName  string  -    payload  TEntity  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#eventfetcherfactory", 
            "text": "\u03a4 EventFetcherFactory :   function    Defined in  web3EventService.ts:473  Function that returns an  EventFetcher TEventArgs . type : TEventArgs The type of the  args  object.", 
            "title": "EventFetcherFactory"
        }, 
        {
            "location": "/api/README/#type-declaration_4", 
            "text": "\u25ba(argsFilter?:  any , filterObject?:  EventFetcherFilterObject , callback?:  EventWatchCallback TEventArgs , requiredDepth?:  number ):  EventFetcher TEventArgs  Parameters:     Param  Type  Description      argsFilter  any  -    filterObject  EventFetcherFilterObject  -    callback  EventWatchCallback TEventArgs  -    requiredDepth  number  -     Returns:   EventFetcher TEventArgs", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#eventgetcallback", 
            "text": "\u03a4 EventGetCallback :   function    Defined in  web3EventService.ts:499", 
            "title": "EventGetCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_5", 
            "text": "\u25ba(error:  Error , args:  Array . DecodedLogEntryEvent . TEventArgs ):  void  Parameters:     Param  Type  Description      error  Error  -    args  Array . DecodedLogEntryEvent . TEventArgs  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#eventsubscriptioncallback", 
            "text": "\u03a4 EventSubscriptionCallback :   function    Defined in  pubSubEventService.ts:196", 
            "title": "EventSubscriptionCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_6", 
            "text": "\u25ba(topic:  string , payload:  any ):  any  Parameters:     Param  Type  Description      topic  string  -    payload  any  -     Returns:   any", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#eventsubscriptionkey", 
            "text": "\u03a4 EventSubscriptionKey :   string \u23ae EventSubscriptionCallback    Defined in  pubSubEventService.ts:197", 
            "title": "EventSubscriptionKey"
        }, 
        {
            "location": "/api/README/#eventwatchcallback", 
            "text": "\u03a4 EventWatchCallback :   function    Defined in  web3EventService.ts:497", 
            "title": "EventWatchCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_7", 
            "text": "\u25ba(error:  Error , args:  DecodedLogEntryEvent . TEventArgs ):  void  Parameters:     Param  Type  Description      error  Error  -    args  DecodedLogEntryEvent . TEventArgs  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#eventwatchsubscriptioncallback", 
            "text": "\u03a4 EventWatchSubscriptionCallback :   function    Defined in  web3EventService.ts:501", 
            "title": "EventWatchSubscriptionCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_8", 
            "text": "\u25ba(eventName:  string , payload:  DecodedLogEntryEvent . TEventArgs ):  void  Parameters:     Param  Type  Description      eventName  string  -    payload  DecodedLogEntryEvent . TEventArgs  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#hash", 
            "text": "\u03a4 Hash :   string    Defined in  commonTypes.ts:4", 
            "title": "Hash"
        }, 
        {
            "location": "/api/README/#perdaocallback", 
            "text": "\u03a4 PerDaoCallback :   function    Defined in dao.ts:436", 
            "title": "PerDaoCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_9", 
            "text": "\u25ba(avatarAddress:  Address ):  void \u23ae Promise . boolean  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   void \u23ae Promise . boolean", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#preprocesseventcallback", 
            "text": "\u03a4 PreProcessEventCallback :   function    Defined in  web3EventService.ts:383", 
            "title": "PreProcessEventCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_10", 
            "text": "\u25ba(error:  Error , log:  Array . DecodedLogEntryEvent . TEventArgs ):  EventPreProcessorReturn TEventArgs  Parameters:     Param  Type  Description      error  Error  -    log  Array . DecodedLogEntryEvent . TEventArgs  -     Returns:   EventPreProcessorReturn TEventArgs", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#transformeventcallback", 
            "text": "\u03a4 TransformEventCallback :   function    Defined in  web3EventService.ts:386", 
            "title": "TransformEventCallback"
        }, 
        {
            "location": "/api/README/#type-declaration_11", 
            "text": "\u25ba(event:  DecodedLogEntryEvent . TSrc ):  Promise . TDest \u23ae undefined  Parameters:     Param  Type  Description      event  DecodedLogEntryEvent . TSrc  -     Returns:   Promise . TDest \u23ae undefined", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#trufflecontractfunction", 
            "text": "\u03a4 TruffleContractFunction :   function    Defined in  contractWrapperBase.ts:387", 
            "title": "TruffleContractFunction"
        }, 
        {
            "location": "/api/README/#type-declaration_12", 
            "text": "\u25ba(args?:  Array . any ):  Promise . Hash  Parameters:     Param  Type  Description      args  Array . any  -     Returns:   Promise . Hash", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#fnvoid", 
            "text": "\u03a4 fnVoid :   function    Defined in  commonTypes.ts:3", 
            "title": "fnVoid"
        }, 
        {
            "location": "/api/README/#type-declaration_13", 
            "text": "\u25ba():  void  Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/README/#variables_1", 
            "text": "", 
            "title": "Variables"
        }, 
        {
            "location": "/api/README/#const-absolutevotefactory", 
            "text": "\u25cf  AbsoluteVoteFactory :   ContractWrapperFactory AbsoluteVoteWrapper   = \n  new ContractWrapperFactory(\"AbsoluteVote\", AbsoluteVoteWrapper, new Web3EventService())  Defined in  wrappers/absoluteVote.ts:166", 
            "title": "\u00abConst\u00bb AbsoluteVoteFactory"
        }, 
        {
            "location": "/api/README/#const-contractwrapperfactories", 
            "text": "\u25cf  ContractWrapperFactories :   ArcWrapperFactories   =  WrapperService.factories  Defined in  wrapperService.ts:384  for quicker access to the contract wrapper factories", 
            "title": "\u00abConst\u00bb ContractWrapperFactories"
        }, 
        {
            "location": "/api/README/#const-contractwrappers", 
            "text": "\u25cf  ContractWrappers :   ArcWrappers   =  WrapperService.wrappers  Defined in  wrapperService.ts:380  for quicker access to the contract wrappers", 
            "title": "\u00abConst\u00bb ContractWrappers"
        }, 
        {
            "location": "/api/README/#const-contractwrappersbyaddress", 
            "text": "\u25cf  ContractWrappersByAddress :   Map . Address ,. IContractWrapperBase   =  WrapperService.wrappersByAddress  Defined in  wrapperService.ts:392  for quicker access to the contract wrappers by address", 
            "title": "\u00abConst\u00bb ContractWrappersByAddress"
        }, 
        {
            "location": "/api/README/#const-contractwrappersbytype", 
            "text": "\u25cf  ContractWrappersByType :   ArcWrappersByType   =  WrapperService.wrappersByType  Defined in  wrapperService.ts:388  for quicker access to the contract wrapper types", 
            "title": "\u00abConst\u00bb ContractWrappersByType"
        }, 
        {
            "location": "/api/README/#const-contributionrewardfactory", 
            "text": "\u25cf  ContributionRewardFactory :   ContractWrapperFactory ContributionRewardWrapper   = \n  new ContractWrapperFactory(\"ContributionReward\", ContributionRewardWrapper, new Web3EventService())  Defined in  wrappers/contributionReward.ts:565", 
            "title": "\u00abConst\u00bb ContributionRewardFactory"
        }, 
        {
            "location": "/api/README/#const-daocreatorfactory", 
            "text": "\u25cf  DaoCreatorFactory :   DaoCreatorFactoryType   = \n  new DaoCreatorFactoryType(\"DaoCreator\", DaoCreatorWrapper, new Web3EventService()) as DaoCreatorFactoryType  Defined in  wrappers/daoCreator.ts:365", 
            "title": "\u00abConst\u00bb DaoCreatorFactory"
        }, 
        {
            "location": "/api/README/#const-daotokenfactory", 
            "text": "\u25cf  DaoTokenFactory :   DaoTokenFactoryType   = \n  new DaoTokenFactoryType(\n    \"DAOToken\",\n    DaoTokenWrapper,\n    new Web3EventService()) as DaoTokenFactoryType  Defined in  wrappers/daoToken.ts:358", 
            "title": "\u00abConst\u00bb DaoTokenFactory"
        }, 
        {
            "location": "/api/README/#const-genesisprotocolfactory", 
            "text": "\u25cf  GenesisProtocolFactory :   GenesisProtocolFactoryType   = \n  new GenesisProtocolFactoryType(\n    \"GenesisProtocol\",\n    GenesisProtocolWrapper,\n    new Web3EventService()) as GenesisProtocolFactoryType  Defined in  wrappers/genesisProtocol.ts:959", 
            "title": "\u00abConst\u00bb GenesisProtocolFactory"
        }, 
        {
            "location": "/api/README/#const-globalconstraintregistrarfactory", 
            "text": "\u25cf  GlobalConstraintRegistrarFactory :   ContractWrapperFactory GlobalConstraintRegistrarWrapper   =  new ContractWrapperFactory(\n  \"GlobalConstraintRegistrar\", GlobalConstraintRegistrarWrapper, new Web3EventService())  Defined in  wrappers/globalConstraintRegistrar.ts:232", 
            "title": "\u00abConst\u00bb GlobalConstraintRegistrarFactory"
        }, 
        {
            "location": "/api/README/#const-intvoteinterfacefactory", 
            "text": "\u25cf  IntVoteInterfaceFactory :   IntVoteInterfaceFactoryType   = \n  new IntVoteInterfaceFactoryType(\n    \"IntVoteInterface\",\n    IntVoteInterfaceWrapper,\n    new Web3EventService()) as IntVoteInterfaceFactoryType  Defined in  wrappers/intVoteInterface.ts:382", 
            "title": "\u00abConst\u00bb IntVoteInterfaceFactory"
        }, 
        {
            "location": "/api/README/#const-mintabletokenfactory", 
            "text": "\u25cf  MintableTokenFactory :   MintableTokenFactoryType   = \n  new MintableTokenFactoryType(\n    \"MintableToken\",\n    MintableTokenWrapper,\n    new Web3EventService()) as MintableTokenFactoryType  Defined in  wrappers/mintableToken.ts:127", 
            "title": "\u00abConst\u00bb MintableTokenFactory"
        }, 
        {
            "location": "/api/README/#const-redeemerfactory", 
            "text": "\u25cf  RedeemerFactory :   RedeemerFactoryType   = \n  new RedeemerFactoryType(\n    \"Redeemer\",\n    RedeemerWrapper,\n    new Web3EventService()) as RedeemerFactoryType  Defined in  wrappers/redeemer.ts:107", 
            "title": "\u00abConst\u00bb RedeemerFactory"
        }, 
        {
            "location": "/api/README/#const-reputationfactory", 
            "text": "\u25cf  ReputationFactory :   ReputationFactoryType   = \n  new ReputationFactoryType(\n    \"Reputation\",\n    ReputationWrapper,\n    new Web3EventService()) as ReputationFactoryType  Defined in  wrappers/reputation.ts:104", 
            "title": "\u00abConst\u00bb ReputationFactory"
        }, 
        {
            "location": "/api/README/#const-schemeregistrarfactory", 
            "text": "\u25cf  SchemeRegistrarFactory :   ContractWrapperFactory SchemeRegistrarWrapper   = \n  new ContractWrapperFactory(\"SchemeRegistrar\", SchemeRegistrarWrapper, new Web3EventService())  Defined in  wrappers/schemeRegistrar.ts:271", 
            "title": "\u00abConst\u00bb SchemeRegistrarFactory"
        }, 
        {
            "location": "/api/README/#const-standardtokenfactory", 
            "text": "\u25cf  StandardTokenFactory :   StandardTokenFactoryType   = \n  new StandardTokenFactoryType(\n    \"StandardToken\",\n    StandardTokenWrapper,\n    new Web3EventService()) as StandardTokenFactoryType  Defined in  wrappers/standardToken.ts:227", 
            "title": "\u00abConst\u00bb StandardTokenFactory"
        }, 
        {
            "location": "/api/README/#const-tokencapgcfactory", 
            "text": "\u25cf  TokenCapGCFactory :   ContractWrapperFactory TokenCapGCWrapper   = \n  new ContractWrapperFactory(\"TokenCapGC\", TokenCapGCWrapper, new Web3EventService())  Defined in  wrappers/tokenCapGC.ts:59", 
            "title": "\u00abConst\u00bb TokenCapGCFactory"
        }, 
        {
            "location": "/api/README/#const-upgradeschemefactory", 
            "text": "\u25cf  UpgradeSchemeFactory :   ContractWrapperFactory UpgradeSchemeWrapper   = \n  new ContractWrapperFactory(\"UpgradeScheme\", UpgradeSchemeWrapper, new Web3EventService())  Defined in  wrappers/upgradeScheme.ts:225", 
            "title": "\u00abConst\u00bb UpgradeSchemeFactory"
        }, 
        {
            "location": "/api/README/#const-vestingschemefactory", 
            "text": "\u25cf  VestingSchemeFactory :   ContractWrapperFactory VestingSchemeWrapper   = \n  new ContractWrapperFactory(\"VestingScheme\", VestingSchemeWrapper, new Web3EventService())  Defined in  wrappers/vestingScheme.ts:442", 
            "title": "\u00abConst\u00bb VestingSchemeFactory"
        }, 
        {
            "location": "/api/README/#const-voteinorganizationschemefactory", 
            "text": "\u25cf  VoteInOrganizationSchemeFactory :   ContractWrapperFactory VoteInOrganizationSchemeWrapper   = \n  new ContractWrapperFactory(\n    \"VoteInOrganizationScheme\",\n    VoteInOrganizationSchemeWrapper,\n    new Web3EventService())  Defined in  wrappers/voteInOrganizationScheme.ts:183", 
            "title": "\u00abConst\u00bb VoteInOrganizationSchemeFactory"
        }, 
        {
            "location": "/api/README/#const-computeforgeorggaslimit", 
            "text": "\u25cf  computeForgeOrgGasLimit :   any   =  require(\"../gasLimits.js\").computeForgeOrgGasLimit  Defined in index.ts:47", 
            "title": "\u00abConst\u00bb computeForgeOrgGasLimit"
        }, 
        {
            "location": "/api/README/#functions_1", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/api/README/#const-getdefaultgenesisprotocolparameters", 
            "text": "\u25ba  GetDefaultGenesisProtocolParameters ():  Promise . GenesisProtocolParams  Defined in  wrappers/genesisProtocol.ts:1302  Returns:   Promise . GenesisProtocolParams", 
            "title": "\u00abConst\u00bb GetDefaultGenesisProtocolParameters"
        }, 
        {
            "location": "/api/README/#initializearcjs", 
            "text": "\u25ba  InitializeArcJs (options?:  InitializeArcOptions ):  Promise . Web3  Defined in index.ts:78  You must call  InitializeArcJs  before doing anything else with Arc.js. Call it again whenever the current chain changes.  Parameters:     Param  Type  Description      options  InitializeArcOptions  -     Returns:   Promise . Web3 \nPromise of the  Web3  object for the current chain.", 
            "title": "InitializeArcJs"
        }, 
        {
            "location": "/api/README/#const-arcjsdeployer", 
            "text": "\u25ba  arcJsDeployer (web3:  Web3 , artifacts:  any , deployer:  any ):  void  Defined in migrations/2_deploy_schemes.ts:14  Migration callback  Parameters:     Param  Type  Description      web3  Web3  -    artifacts  any  -    deployer  any  -     Returns:   void", 
            "title": "\u00abConst\u00bb arcJsDeployer"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/", 
            "text": "API Reference\n \n \nAbsoluteVoteWrapper\n\n\nClass: AbsoluteVoteWrapper\n\n\nHierarchy\n\n\n\u21b3  \nIntVoteInterfaceWrapper\n\n\n\u21b3 AbsoluteVoteWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nIIntVoteInterface\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nAVVoteProposal\n\n\nCancelProposal\n\n\nCancelVoting\n\n\nExecuteProposal\n\n\nNewProposal\n\n\nRefreshReputation\n\n\nVoteProposal\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\nVotableAbsoluteVoteProposals\n\n\nVotableProposals\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\ncancelProposal\n\n\ncancelVote\n\n\nestimateGas\n\n\nexecute\n\n\ngetAllowedRangeOfChoices\n\n\ngetController\n\n\ngetCurrentVoteStatus\n\n\ngetNumberOfChoices\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nisAbstainAllow\n\n\nisVotable\n\n\nownerVote\n\n\npropose\n\n\nsetParameters\n\n\nvote\n\n\nvoteStatus\n\n\nvoteWithSpecifiedAmounts\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew AbsoluteVoteWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nAbsoluteVoteWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nAbsoluteVoteWrapper\n\n\n\n\nProperties\n\n\n\n\nAVVoteProposal\n\n\n\u25cf  AVVoteProposal\n:  \nEventFetcherFactory\nAVVoteProposalEventResult\n \n\n\nDefined in \nwrappers/absoluteVote.ts:36\n\n\nEvents\n\n\n\n\n\n\nCancelProposal\n\n\n\u25cf  CancelProposal\n:  \nEventFetcherFactory\nCancelProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nCancelProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nCancelProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:49\n\n\nGet or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable\n\n\n\n\n\n\nCancelVoting\n\n\n\u25cf  CancelVoting\n:  \nEventFetcherFactory\nCancelVotingEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nCancelVoting\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nCancelVoting\n\n\nDefined in \nwrappers/intVoteInterface.ts:62\n\n\nGet or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable\n\n\n\n\n\n\nExecuteProposal\n\n\n\u25cf  ExecuteProposal\n:  \nEventFetcherFactory\nExecuteProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nExecuteProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nExecuteProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:53\n\n\nGet or watch events fired when proposals have been executed\n\n\n\n\n\n\nNewProposal\n\n\n\u25cf  NewProposal\n:  \nEventFetcherFactory\nNewProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nNewProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nNewProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:44\n\n\nGet or watch events fired on the creation of a new proposal.\n\n\n\n\n\n\nRefreshReputation\n\n\n\u25cf  RefreshReputation\n:  \nEventFetcherFactory\nRefreshReputationEventResult\n \n\n\nDefined in \nwrappers/absoluteVote.ts:37\n\n\n\n\n\n\nVoteProposal\n\n\n\u25cf  VoteProposal\n:  \nEventFetcherFactory\nVoteProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nVoteProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nVoteProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:57\n\n\nGet or watch events fired whenever votes are cast on a proposal\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nAbsoluteVoteWrapper\n  =  AbsoluteVoteFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nfactory\n\n\nDefined in \nwrappers/absoluteVote.ts:31\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Absolute Vote\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nfriendlyName\n\n\nDefined in \nwrappers/absoluteVote.ts:30\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"AbsoluteVote\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nname\n\n\nDefined in \nwrappers/absoluteVote.ts:29\n\n\n\n\nAccessors\n\n\n\n\nVotableAbsoluteVoteProposals\n\n\ngetVotableAbsoluteVoteProposals(): \nEntityFetcherFactory\nVotableProposal\n, \nNewProposalEventResult\n\n\nDefined in \nwrappers/absoluteVote.ts:43\n\n\nEntityFetcherFactory for votable proposals.\n\n\nReturns:\n \nEntityFetcherFactory\nVotableProposal\n, \nNewProposalEventResult\n\n\n\n\n\n\nVotableProposals\n\n\ngetVotableProposals(): \nEventFetcherFactory\nNewProposalEventResult\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nVotableProposals\n\n\nDefined in \nwrappers/intVoteInterface.ts:67\n\n\nGet or watch NewProposal events, filtering out proposals that are no longer votable.\n\n\nReturns:\n \nEventFetcherFactory\nNewProposalEventResult\n\n\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\ncancelProposal\n\n\n\u25ba \ncancelProposal\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\ncancelProposal\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\ncancelProposal\n\n\nDefined in \nwrappers/absoluteVote.ts:138\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ncancelVote\n\n\n\u25ba \ncancelVote\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\ncancelVote\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\ncancelVote\n\n\nDefined in \nwrappers/absoluteVote.ts:150\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\nexecute\n\n\n\u25ba \nexecute\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nexecute\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nexecute\n\n\nDefined in \nwrappers/absoluteVote.ts:132\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ngetAllowedRangeOfChoices\n\n\n\u25ba \ngetAllowedRangeOfChoices\n(): \nPromise\n.\nGetAllowedRangeOfChoicesResult\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\ngetAllowedRangeOfChoices\n\n\nDefined in \nwrappers/intVoteInterface.ts:343\n\n\nReturns promise of the allowed range of choices for a voting machine.\n\n\nReturns:\n \nPromise\n.\nGetAllowedRangeOfChoicesResult\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetCurrentVoteStatus\n\n\n\u25ba \ngetCurrentVoteStatus\n(proposalId: \nAddress\n): \nPromise\n.\nArray\n.\nBigNumber\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\ngetCurrentVoteStatus\n\n\nDefined in \nwrappers/intVoteInterface.ts:320\n\n\nReturn an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the \nBinaryVoteResult\n enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nproposalId\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nBigNumber\n\n\n\n\n\n\ngetNumberOfChoices\n\n\n\u25ba \ngetNumberOfChoices\n(options: \nProposalIdOption\n): \nPromise\n.\nnumber\n\n\nImplementation of \nIIntVoteInterface\n.\ngetNumberOfChoices\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\ngetNumberOfChoices\n\n\nDefined in \nwrappers/intVoteInterface.ts:241\n\n\nGet the number of voting choices allowed by the proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nAbsoluteVoteParamsResult\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/absoluteVote.ts:102\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAbsoluteVoteParamsResult\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nAbsoluteVoteParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/absoluteVote.ts:64\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nAbsoluteVoteParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nisAbstainAllow\n\n\n\u25ba \nisAbstainAllow\n(): \nPromise\n.\nboolean\n\n\nImplementation of \nIIntVoteInterface\n.\nisAbstainAllow\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nisAbstainAllow\n\n\nDefined in \nwrappers/intVoteInterface.ts:285\n\n\nget whether voters are allowed to cast an abstaining vote on these proposals.\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nisVotable\n\n\n\u25ba \nisVotable\n(options: \nProposalIdOption\n): \nPromise\n.\nboolean\n\n\nImplementation of \nIIntVoteInterface\n.\nisVotable\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nisVotable\n\n\nDefined in \nwrappers/intVoteInterface.ts:255\n\n\nGet whether the proposal is in a state where it can be voted-upon.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nownerVote\n\n\n\u25ba \nownerVote\n(options: \nOwnerVoteOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nownerVote\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nownerVote\n\n\nDefined in \nwrappers/absoluteVote.ts:144\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nOwnerVoteOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\npropose\n\n\n\u25ba \npropose\n(options: \nProposeOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nImplementation of \nIIntVoteInterface\n.\npropose\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\npropose\n\n\nDefined in \nwrappers/absoluteVote.ts:111\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nAbsoluteVoteParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/absoluteVote.ts:78\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nAbsoluteVoteParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\n\n\n\n\n\nvote\n\n\n\u25ba \nvote\n(options: \nVoteOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nvote\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nvote\n\n\nDefined in \nwrappers/absoluteVote.ts:118\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nvoteStatus\n\n\n\u25ba \nvoteStatus\n(options: \nVoteStatusOptions\n): \nPromise\n.\nBigNumber\n\n\nImplementation of \nIIntVoteInterface\n.\nvoteStatus\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nvoteStatus\n\n\nDefined in \nwrappers/intVoteInterface.ts:269\n\n\nGet the number of votes currently cast on the given choice.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteStatusOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nvoteWithSpecifiedAmounts\n\n\n\u25ba \nvoteWithSpecifiedAmounts\n(options: \nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nvoteWithSpecifiedAmounts\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nvoteWithSpecifiedAmounts\n\n\nDefined in \nwrappers/absoluteVote.ts:125\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "AbsoluteVoteWrapper"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#class-absolutevotewrapper", 
            "text": "", 
            "title": "Class: AbsoluteVoteWrapper"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#hierarchy", 
            "text": "\u21b3   IntVoteInterfaceWrapper  \u21b3 AbsoluteVoteWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#implements", 
            "text": "IContractWrapperBase  IIntVoteInterface", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#properties", 
            "text": "AVVoteProposal  CancelProposal  CancelVoting  ExecuteProposal  NewProposal  RefreshReputation  VoteProposal  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#accessors", 
            "text": "VotableAbsoluteVoteProposals  VotableProposals  address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#methods", 
            "text": "cancelProposal  cancelVote  estimateGas  execute  getAllowedRangeOfChoices  getController  getCurrentVoteStatus  getNumberOfChoices  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  isAbstainAllow  isVotable  ownerVote  propose  setParameters  vote  voteStatus  voteWithSpecifiedAmounts", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#new-absolutevotewrappersoliditycontract-any-web3eventservice-web3eventservice-absolutevotewrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   AbsoluteVoteWrapper", 
            "title": "\u2295 new AbsoluteVoteWrapper(solidityContract: any, web3EventService: Web3EventService): AbsoluteVoteWrapper"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#avvoteproposal", 
            "text": "\u25cf  AVVoteProposal :   EventFetcherFactory AVVoteProposalEventResult    Defined in  wrappers/absoluteVote.ts:36  Events", 
            "title": "AVVoteProposal"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#cancelproposal", 
            "text": "\u25cf  CancelProposal :   EventFetcherFactory CancelProposalEventResult    Implementation of  IIntVoteInterface . CancelProposal  Inherited from  IntVoteInterfaceWrapper . CancelProposal  Defined in  wrappers/intVoteInterface.ts:49  Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable", 
            "title": "CancelProposal"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#cancelvoting", 
            "text": "\u25cf  CancelVoting :   EventFetcherFactory CancelVotingEventResult    Implementation of  IIntVoteInterface . CancelVoting  Inherited from  IntVoteInterfaceWrapper . CancelVoting  Defined in  wrappers/intVoteInterface.ts:62  Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable", 
            "title": "CancelVoting"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#executeproposal", 
            "text": "\u25cf  ExecuteProposal :   EventFetcherFactory ExecuteProposalEventResult    Implementation of  IIntVoteInterface . ExecuteProposal  Inherited from  IntVoteInterfaceWrapper . ExecuteProposal  Defined in  wrappers/intVoteInterface.ts:53  Get or watch events fired when proposals have been executed", 
            "title": "ExecuteProposal"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#newproposal", 
            "text": "\u25cf  NewProposal :   EventFetcherFactory NewProposalEventResult    Implementation of  IIntVoteInterface . NewProposal  Inherited from  IntVoteInterfaceWrapper . NewProposal  Defined in  wrappers/intVoteInterface.ts:44  Get or watch events fired on the creation of a new proposal.", 
            "title": "NewProposal"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#refreshreputation", 
            "text": "\u25cf  RefreshReputation :   EventFetcherFactory RefreshReputationEventResult    Defined in  wrappers/absoluteVote.ts:37", 
            "title": "RefreshReputation"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#voteproposal", 
            "text": "\u25cf  VoteProposal :   EventFetcherFactory VoteProposalEventResult    Implementation of  IIntVoteInterface . VoteProposal  Inherited from  IntVoteInterfaceWrapper . VoteProposal  Defined in  wrappers/intVoteInterface.ts:57  Get or watch events fired whenever votes are cast on a proposal", 
            "title": "VoteProposal"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory AbsoluteVoteWrapper   =  AbsoluteVoteFactory  Implementation of  IContractWrapperBase . factory  Overrides  IntVoteInterfaceWrapper . factory  Defined in  wrappers/absoluteVote.ts:31", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Absolute Vote\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  IntVoteInterfaceWrapper . friendlyName  Defined in  wrappers/absoluteVote.ts:30", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#name", 
            "text": "\u25cf  name :   string   = \"AbsoluteVote\"  Implementation of  IContractWrapperBase . name  Overrides  IntVoteInterfaceWrapper . name  Defined in  wrappers/absoluteVote.ts:29", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#votableabsolutevoteproposals", 
            "text": "getVotableAbsoluteVoteProposals():  EntityFetcherFactory VotableProposal ,  NewProposalEventResult  Defined in  wrappers/absoluteVote.ts:43  EntityFetcherFactory for votable proposals.  Returns:   EntityFetcherFactory VotableProposal ,  NewProposalEventResult", 
            "title": "VotableAbsoluteVoteProposals"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#votableproposals", 
            "text": "getVotableProposals():  EventFetcherFactory NewProposalEventResult  Inherited from  IntVoteInterfaceWrapper . VotableProposals  Defined in  wrappers/intVoteInterface.ts:67  Get or watch NewProposal events, filtering out proposals that are no longer votable.  Returns:   EventFetcherFactory NewProposalEventResult", 
            "title": "VotableProposals"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#cancelproposal_1", 
            "text": "\u25ba  cancelProposal (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . cancelProposal  Overrides  IntVoteInterfaceWrapper . cancelProposal  Defined in  wrappers/absoluteVote.ts:138  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelProposal"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#cancelvote", 
            "text": "\u25ba  cancelVote (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . cancelVote  Overrides  IntVoteInterfaceWrapper . cancelVote  Defined in  wrappers/absoluteVote.ts:150  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelVote"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#execute", 
            "text": "\u25ba  execute (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . execute  Overrides  IntVoteInterfaceWrapper . execute  Defined in  wrappers/absoluteVote.ts:132  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "execute"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getallowedrangeofchoices", 
            "text": "\u25ba  getAllowedRangeOfChoices ():  Promise . GetAllowedRangeOfChoicesResult  Inherited from  IntVoteInterfaceWrapper . getAllowedRangeOfChoices  Defined in  wrappers/intVoteInterface.ts:343  Returns promise of the allowed range of choices for a voting machine.  Returns:   Promise . GetAllowedRangeOfChoicesResult", 
            "title": "getAllowedRangeOfChoices"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getcurrentvotestatus", 
            "text": "\u25ba  getCurrentVoteStatus (proposalId:  Address ):  Promise . Array . BigNumber  Inherited from  IntVoteInterfaceWrapper . getCurrentVoteStatus  Defined in  wrappers/intVoteInterface.ts:320  Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the  BinaryVoteResult  enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions.  Parameters:     Param  Type  Description      proposalId  Address  -     Returns:   Promise . Array . BigNumber", 
            "title": "getCurrentVoteStatus"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getnumberofchoices", 
            "text": "\u25ba  getNumberOfChoices (options:  ProposalIdOption ):  Promise . number  Implementation of  IIntVoteInterface . getNumberOfChoices  Inherited from  IntVoteInterfaceWrapper . getNumberOfChoices  Defined in  wrappers/intVoteInterface.ts:241  Get the number of voting choices allowed by the proposal.  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . number", 
            "title": "getNumberOfChoices"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . AbsoluteVoteParamsResult  Implementation of  IContractWrapperBase . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/absoluteVote.ts:102  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . AbsoluteVoteParamsResult", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  AbsoluteVoteParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/absoluteVote.ts:64  Parameters:     Param  Type  Description      params  AbsoluteVoteParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#isabstainallow", 
            "text": "\u25ba  isAbstainAllow ():  Promise . boolean  Implementation of  IIntVoteInterface . isAbstainAllow  Inherited from  IntVoteInterfaceWrapper . isAbstainAllow  Defined in  wrappers/intVoteInterface.ts:285  get whether voters are allowed to cast an abstaining vote on these proposals.  Returns:   Promise . boolean", 
            "title": "isAbstainAllow"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#isvotable", 
            "text": "\u25ba  isVotable (options:  ProposalIdOption ):  Promise . boolean  Implementation of  IIntVoteInterface . isVotable  Inherited from  IntVoteInterfaceWrapper . isVotable  Defined in  wrappers/intVoteInterface.ts:255  Get whether the proposal is in a state where it can be voted-upon.  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . boolean", 
            "title": "isVotable"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#ownervote", 
            "text": "\u25ba  ownerVote (options:  OwnerVoteOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . ownerVote  Overrides  IntVoteInterfaceWrapper . ownerVote  Defined in  wrappers/absoluteVote.ts:144  Parameters:     Param  Type  Description      options  OwnerVoteOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "ownerVote"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#propose", 
            "text": "\u25ba  propose (options:  ProposeOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionProposalResult  Implementation of  IIntVoteInterface . propose  Overrides  IntVoteInterfaceWrapper . propose  Defined in  wrappers/absoluteVote.ts:111  Parameters:     Param  Type  Description      options  ProposeOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "propose"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  AbsoluteVoteParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/absoluteVote.ts:78  Parameters:     Param  Type  Description      params  AbsoluteVoteParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#vote", 
            "text": "\u25ba  vote (options:  VoteOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . vote  Overrides  IntVoteInterfaceWrapper . vote  Defined in  wrappers/absoluteVote.ts:118  Parameters:     Param  Type  Description      options  VoteOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "vote"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#votestatus", 
            "text": "\u25ba  voteStatus (options:  VoteStatusOptions ):  Promise . BigNumber  Implementation of  IIntVoteInterface . voteStatus  Inherited from  IntVoteInterfaceWrapper . voteStatus  Defined in  wrappers/intVoteInterface.ts:269  Get the number of votes currently cast on the given choice.  Parameters:     Param  Type  Description      options  VoteStatusOptions  -     Returns:   Promise . BigNumber", 
            "title": "voteStatus"
        }, 
        {
            "location": "/api/classes/AbsoluteVoteWrapper/#votewithspecifiedamounts", 
            "text": "\u25ba  voteWithSpecifiedAmounts (options:  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . voteWithSpecifiedAmounts  Overrides  IntVoteInterfaceWrapper . voteWithSpecifiedAmounts  Defined in  wrappers/absoluteVote.ts:125  Parameters:     Param  Type  Description      options  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/api/classes/AccountService/", 
            "text": "API Reference\n \n \nAccountService\n\n\nClass: AccountService\n\n\nIndex\n\n\nProperties\n\n\n\n\nAccountChangedEventTopic\n\n\n\n\nMethods\n\n\n\n\nendAccountWatch\n\n\ninitiateAccountWatch\n\n\nsubscribeToAccountChanges\n\n\n\n\n\n\nProperties\n\n\n\n\n\u00abStatic\u00bb AccountChangedEventTopic\n\n\n\u25cf  AccountChangedEventTopic\n:  \nstring\n  = \"AccountService.account.changed\"\n\n\nDefined in accountService.ts:8\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb endAccountWatch\n\n\n\u25ba \nendAccountWatch\n(): \nvoid\n\n\nDefined in accountService.ts:64\n\n\nTurn off the system that watches for default account changes.\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb initiateAccountWatch\n\n\n\u25ba \ninitiateAccountWatch\n(): \nPromise\n.\nvoid\n\n\nDefined in accountService.ts:22\n\n\nInitializes the system that watches for default account changes.\n\n\ninitiateAccountWatch\n is called automatically by Arc.js when you pass \ntrue\n for \nwatchForAccountChanges\n to \nInitializeArcJs\n. You may also call it manually yourself.\n\n\nThen you may request to be notified whenever the current account changes by calling \nAccountService.subscribeToAccountChanges\n\n\nReturns:\n \nPromise\n.\nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb subscribeToAccountChanges\n\n\n\u25ba \nsubscribeToAccountChanges\n(callback: \nfunction\n): \nIEventSubscription\n\n\nDefined in accountService.ts:79\n\n\nSubscribe to be notified whenever the current account changes, like this:\n\n\n1\nAccountService\n.\nsubscribeToAccountChanges\n((\naccount\n:\n \nAddress\n)\n \n=\n \n{\n \n...\n \n}\n);\n`\n\n\n\n\n\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nfunction\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nIEventSubscription\n\nA subscription to the event.  Unsubscribe by calling \n[theSubscription].unsubscribe()\n.", 
            "title": "AccountService"
        }, 
        {
            "location": "/api/classes/AccountService/#class-accountservice", 
            "text": "", 
            "title": "Class: AccountService"
        }, 
        {
            "location": "/api/classes/AccountService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/AccountService/#properties", 
            "text": "AccountChangedEventTopic", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/AccountService/#methods", 
            "text": "endAccountWatch  initiateAccountWatch  subscribeToAccountChanges", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/AccountService/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/AccountService/#static-accountchangedeventtopic", 
            "text": "\u25cf  AccountChangedEventTopic :   string   = \"AccountService.account.changed\"  Defined in accountService.ts:8", 
            "title": "\u00abStatic\u00bb AccountChangedEventTopic"
        }, 
        {
            "location": "/api/classes/AccountService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/AccountService/#static-endaccountwatch", 
            "text": "\u25ba  endAccountWatch ():  void  Defined in accountService.ts:64  Turn off the system that watches for default account changes.  Returns:   void", 
            "title": "\u00abStatic\u00bb endAccountWatch"
        }, 
        {
            "location": "/api/classes/AccountService/#static-initiateaccountwatch", 
            "text": "\u25ba  initiateAccountWatch ():  Promise . void  Defined in accountService.ts:22  Initializes the system that watches for default account changes.  initiateAccountWatch  is called automatically by Arc.js when you pass  true  for  watchForAccountChanges  to  InitializeArcJs . You may also call it manually yourself.  Then you may request to be notified whenever the current account changes by calling  AccountService.subscribeToAccountChanges  Returns:   Promise . void", 
            "title": "\u00abStatic\u00bb initiateAccountWatch"
        }, 
        {
            "location": "/api/classes/AccountService/#static-subscribetoaccountchanges", 
            "text": "\u25ba  subscribeToAccountChanges (callback:  function ):  IEventSubscription  Defined in accountService.ts:79  Subscribe to be notified whenever the current account changes, like this:  1 AccountService . subscribeToAccountChanges (( account :   Address )   =   {   ...   } ); `    Parameters:     Param  Type  Description      callback  function  -     Returns:   IEventSubscription \nA subscription to the event.  Unsubscribe by calling  [theSubscription].unsubscribe() .", 
            "title": "\u00abStatic\u00bb subscribeToAccountChanges"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/", 
            "text": "API Reference\n \n \nArcTransactionAgreementResult\n\n\nClass: ArcTransactionAgreementResult\n\n\nHierarchy\n\n\nArcTransactionResult\n\n\n\u21b3 ArcTransactionAgreementResult\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ntx\n\n\n\n\nMethods\n\n\n\n\ngetAgreementIdFromMinedTx\n\n\ngetTxConfirmed\n\n\ngetTxMined\n\n\ngetValueFromMinedTx\n\n\nwatchForTxConfirmed\n\n\nwatchForTxMined\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ArcTransactionAgreementResult\n(tx: \nHash\n, contract: \nany\n): \nArcTransactionAgreementResult\n\n\nOverrides \nArcTransactionResult\n.\nconstructor\n\n\nDefined in \nwrappers/vestingScheme.ts:426\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntx\n\n\nHash\n\n\n-\n\n\n\n\n\n\ncontract\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nArcTransactionAgreementResult\n\n\n\n\nProperties\n\n\n\n\ntx\n\n\n\u25cf  tx\n:  \nHash\n \n\n\nInherited from \nArcTransactionResult\n.\ntx\n\n\nDefined in \niContractWrapperBase.ts:37\n\n\nThe transaction hash\n\n\n\n\nMethods\n\n\n\n\ngetAgreementIdFromMinedTx\n\n\n\u25ba \ngetAgreementIdFromMinedTx\n(): \nPromise\n.\nnumber\n\n\nDefined in \nwrappers/vestingScheme.ts:437\n\n\nReturns promise of the agreement id from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetTxConfirmed\n\n\n\u25ba \ngetTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nInherited from \nArcTransactionResult\n.\ngetTxConfirmed\n\n\nDefined in \niContractWrapperBase.ts:68\n\n\nReturns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaction is not yet found at the required depth.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetTxMined\n\n\n\u25ba \ngetTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nInherited from \nArcTransactionResult\n.\ngetTxMined\n\n\nDefined in \niContractWrapperBase.ts:50\n\n\nReturns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaciton is not yet mined.\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetValueFromMinedTx\n\n\n\u25ba \ngetValueFromMinedTx\n(valueName: \nstring\n, eventName?: \nstring\n, index?: \nnumber\n): \nPromise\n.\nany\n\u23ae\nundefined\n\n\nInherited from \nArcTransactionResult\n.\ngetValueFromMinedTx\n\n\nDefined in \niContractWrapperBase.ts:116\n\n\nReturns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nvalueName\n\n\nstring\n\n\n-\n\n\nThe name of the property whose value we wish to return\n\n\n\n\n\n\neventName\n\n\nstring\n\n\nnull\n\n\nName of the event in whose log we are to look for the value\n\n\n\n\n\n\nindex\n\n\nnumber\n\n\n0\n\n\nIndex of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\u23ae\nundefined\n\n\n\n\n\n\nwatchForTxConfirmed\n\n\n\u25ba \nwatchForTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\n\nInherited from \nArcTransactionResult\n.\nwatchForTxConfirmed\n\n\nDefined in \niContractWrapperBase.ts:99\n\n\nReturns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional \nrequiredDepth\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\n\n\n\n\n\nwatchForTxMined\n\n\n\u25ba \nwatchForTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\n\nInherited from \nArcTransactionResult\n.\nwatchForTxMined\n\n\nDefined in \niContractWrapperBase.ts:82\n\n\nReturns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle", 
            "title": "ArcTransactionAgreementResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#class-arctransactionagreementresult", 
            "text": "", 
            "title": "Class: ArcTransactionAgreementResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#hierarchy", 
            "text": "ArcTransactionResult  \u21b3 ArcTransactionAgreementResult", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#properties", 
            "text": "tx", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#methods", 
            "text": "getAgreementIdFromMinedTx  getTxConfirmed  getTxMined  getValueFromMinedTx  watchForTxConfirmed  watchForTxMined", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#new-arctransactionagreementresulttx-hash-contract-any-arctransactionagreementresult", 
            "text": "Overrides  ArcTransactionResult . constructor  Defined in  wrappers/vestingScheme.ts:426  Parameters:     Param  Type  Description      tx  Hash  -    contract  any  -     Returns:   ArcTransactionAgreementResult", 
            "title": "\u2295 new ArcTransactionAgreementResult(tx: Hash, contract: any): ArcTransactionAgreementResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#tx", 
            "text": "\u25cf  tx :   Hash    Inherited from  ArcTransactionResult . tx  Defined in  iContractWrapperBase.ts:37  The transaction hash", 
            "title": "tx"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#getagreementidfromminedtx", 
            "text": "\u25ba  getAgreementIdFromMinedTx ():  Promise . number  Defined in  wrappers/vestingScheme.ts:437  Returns promise of the agreement id from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.  Returns:   Promise . number", 
            "title": "getAgreementIdFromMinedTx"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#gettxconfirmed", 
            "text": "\u25ba  getTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle \u23ae null  Inherited from  ArcTransactionResult . getTxConfirmed  Defined in  iContractWrapperBase.ts:68  Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaction is not yet found at the required depth.  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#gettxmined", 
            "text": "\u25ba  getTxMined ():  Promise . TransactionReceiptTruffle \u23ae null  Inherited from  ArcTransactionResult . getTxMined  Defined in  iContractWrapperBase.ts:50  Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaciton is not yet mined.  Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxMined"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#getvaluefromminedtx", 
            "text": "\u25ba  getValueFromMinedTx (valueName:  string , eventName?:  string , index?:  number ):  Promise . any \u23ae undefined  Inherited from  ArcTransactionResult . getValueFromMinedTx  Defined in  iContractWrapperBase.ts:116  Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.  Parameters:     Param  Type  Default value  Description      valueName  string  -  The name of the property whose value we wish to return    eventName  string  null  Name of the event in whose log we are to look for the value    index  number  0  Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.     Returns:   Promise . any \u23ae undefined", 
            "title": "getValueFromMinedTx"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#watchfortxconfirmed", 
            "text": "\u25ba  watchForTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle  Inherited from  ArcTransactionResult . watchForTxConfirmed  Defined in  iContractWrapperBase.ts:99  Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional  requiredDepth .  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionAgreementResult/#watchfortxmined", 
            "text": "\u25ba  watchForTxMined ():  Promise . TransactionReceiptTruffle  Inherited from  ArcTransactionResult . watchForTxMined  Defined in  iContractWrapperBase.ts:82  Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxMined"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/", 
            "text": "API Reference\n \n \nArcTransactionDataResult\n\n\nClass: ArcTransactionDataResult\n\n\nBase or actual type returned by all contract wrapper methods that generate a transaction and any other result.\n\n\nType parameters\n\n\nTData\n\n\nHierarchy\n\n\nArcTransactionResult\n\n\n\u21b3 ArcTransactionDataResult\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nresult\n\n\ntx\n\n\n\n\nMethods\n\n\n\n\ngetTxConfirmed\n\n\ngetTxMined\n\n\ngetValueFromMinedTx\n\n\nwatchForTxConfirmed\n\n\nwatchForTxMined\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ArcTransactionDataResult\n(tx: \nHash\n, contract: \nany\n, result: \nTData\n): \nArcTransactionDataResult\n\n\nOverrides \nArcTransactionResult\n.\nconstructor\n\n\nDefined in \niContractWrapperBase.ts:154\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntx\n\n\nHash\n\n\n-\n\n\n\n\n\n\ncontract\n\n\nany\n\n\n-\n\n\n\n\n\n\nresult\n\n\nTData\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nArcTransactionDataResult\n\n\n\n\nProperties\n\n\n\n\nresult\n\n\n\u25cf  result\n:  \nTData\n \n\n\nDefined in \niContractWrapperBase.ts:161\n\n\nAdditional data being returned.\n\n\n\n\n\n\ntx\n\n\n\u25cf  tx\n:  \nHash\n \n\n\nInherited from \nArcTransactionResult\n.\ntx\n\n\nDefined in \niContractWrapperBase.ts:37\n\n\nThe transaction hash\n\n\n\n\nMethods\n\n\n\n\ngetTxConfirmed\n\n\n\u25ba \ngetTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nInherited from \nArcTransactionResult\n.\ngetTxConfirmed\n\n\nDefined in \niContractWrapperBase.ts:68\n\n\nReturns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaction is not yet found at the required depth.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetTxMined\n\n\n\u25ba \ngetTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nInherited from \nArcTransactionResult\n.\ngetTxMined\n\n\nDefined in \niContractWrapperBase.ts:50\n\n\nReturns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaciton is not yet mined.\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetValueFromMinedTx\n\n\n\u25ba \ngetValueFromMinedTx\n(valueName: \nstring\n, eventName?: \nstring\n, index?: \nnumber\n): \nPromise\n.\nany\n\u23ae\nundefined\n\n\nInherited from \nArcTransactionResult\n.\ngetValueFromMinedTx\n\n\nDefined in \niContractWrapperBase.ts:116\n\n\nReturns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nvalueName\n\n\nstring\n\n\n-\n\n\nThe name of the property whose value we wish to return\n\n\n\n\n\n\neventName\n\n\nstring\n\n\nnull\n\n\nName of the event in whose log we are to look for the value\n\n\n\n\n\n\nindex\n\n\nnumber\n\n\n0\n\n\nIndex of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\u23ae\nundefined\n\n\n\n\n\n\nwatchForTxConfirmed\n\n\n\u25ba \nwatchForTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\n\nInherited from \nArcTransactionResult\n.\nwatchForTxConfirmed\n\n\nDefined in \niContractWrapperBase.ts:99\n\n\nReturns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional \nrequiredDepth\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\n\n\n\n\n\nwatchForTxMined\n\n\n\u25ba \nwatchForTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\n\nInherited from \nArcTransactionResult\n.\nwatchForTxMined\n\n\nDefined in \niContractWrapperBase.ts:82\n\n\nReturns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle", 
            "title": "ArcTransactionDataResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#class-arctransactiondataresult", 
            "text": "Base or actual type returned by all contract wrapper methods that generate a transaction and any other result.", 
            "title": "Class: ArcTransactionDataResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#tdata", 
            "text": "", 
            "title": "TData"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#hierarchy", 
            "text": "ArcTransactionResult  \u21b3 ArcTransactionDataResult", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#properties", 
            "text": "result  tx", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#methods", 
            "text": "getTxConfirmed  getTxMined  getValueFromMinedTx  watchForTxConfirmed  watchForTxMined", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#new-arctransactiondataresulttx-hash-contract-any-result-tdata-arctransactiondataresult", 
            "text": "Overrides  ArcTransactionResult . constructor  Defined in  iContractWrapperBase.ts:154  Parameters:     Param  Type  Description      tx  Hash  -    contract  any  -    result  TData  -     Returns:   ArcTransactionDataResult", 
            "title": "\u2295 new ArcTransactionDataResult(tx: Hash, contract: any, result: TData): ArcTransactionDataResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#result", 
            "text": "\u25cf  result :   TData    Defined in  iContractWrapperBase.ts:161  Additional data being returned.", 
            "title": "result"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#tx", 
            "text": "\u25cf  tx :   Hash    Inherited from  ArcTransactionResult . tx  Defined in  iContractWrapperBase.ts:37  The transaction hash", 
            "title": "tx"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#gettxconfirmed", 
            "text": "\u25ba  getTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle \u23ae null  Inherited from  ArcTransactionResult . getTxConfirmed  Defined in  iContractWrapperBase.ts:68  Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaction is not yet found at the required depth.  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#gettxmined", 
            "text": "\u25ba  getTxMined ():  Promise . TransactionReceiptTruffle \u23ae null  Inherited from  ArcTransactionResult . getTxMined  Defined in  iContractWrapperBase.ts:50  Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaciton is not yet mined.  Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxMined"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#getvaluefromminedtx", 
            "text": "\u25ba  getValueFromMinedTx (valueName:  string , eventName?:  string , index?:  number ):  Promise . any \u23ae undefined  Inherited from  ArcTransactionResult . getValueFromMinedTx  Defined in  iContractWrapperBase.ts:116  Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.  Parameters:     Param  Type  Default value  Description      valueName  string  -  The name of the property whose value we wish to return    eventName  string  null  Name of the event in whose log we are to look for the value    index  number  0  Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.     Returns:   Promise . any \u23ae undefined", 
            "title": "getValueFromMinedTx"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#watchfortxconfirmed", 
            "text": "\u25ba  watchForTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle  Inherited from  ArcTransactionResult . watchForTxConfirmed  Defined in  iContractWrapperBase.ts:99  Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional  requiredDepth .  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionDataResult/#watchfortxmined", 
            "text": "\u25ba  watchForTxMined ():  Promise . TransactionReceiptTruffle  Inherited from  ArcTransactionResult . watchForTxMined  Defined in  iContractWrapperBase.ts:82  Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxMined"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/", 
            "text": "API Reference\n \n \nArcTransactionProposalResult\n\n\nClass: ArcTransactionProposalResult\n\n\nBase or actual type returned by all contract wrapper methods that generate a transaction and initiate a proposal.\n\n\nHierarchy\n\n\nArcTransactionResult\n\n\n\u21b3 ArcTransactionProposalResult\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ntx\n\n\nvotingMachine\n\n\n\n\nMethods\n\n\n\n\ngetProposalIdFromMinedTx\n\n\ngetTxConfirmed\n\n\ngetTxMined\n\n\ngetValueFromMinedTx\n\n\nwatchForTxConfirmed\n\n\nwatchForTxMined\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ArcTransactionProposalResult\n(tx: \nHash\n, contract: \nany\n, votingMachine: \nIIntVoteInterface\n): \nArcTransactionProposalResult\n\n\nOverrides \nArcTransactionResult\n.\nconstructor\n\n\nDefined in \niContractWrapperBase.ts:129\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntx\n\n\nHash\n\n\n-\n\n\n\n\n\n\ncontract\n\n\nany\n\n\n-\n\n\n\n\n\n\nvotingMachine\n\n\nIIntVoteInterface\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nArcTransactionProposalResult\n\n\n\n\nProperties\n\n\n\n\ntx\n\n\n\u25cf  tx\n:  \nHash\n \n\n\nInherited from \nArcTransactionResult\n.\ntx\n\n\nDefined in \niContractWrapperBase.ts:37\n\n\nThe transaction hash\n\n\n\n\n\n\nvotingMachine\n\n\n\u25cf  votingMachine\n:  \nIIntVoteInterface\n \n\n\nDefined in \niContractWrapperBase.ts:137\n\n\nThe proposal's voting machine, as IntVoteInterface\n\n\n\n\nMethods\n\n\n\n\ngetProposalIdFromMinedTx\n\n\n\u25ba \ngetProposalIdFromMinedTx\n(): \nPromise\n.\nHash\n\n\nDefined in \niContractWrapperBase.ts:146\n\n\nReturns promise of the proposal id from the logs of the mined transaction. Will watch for the mined tx; if it hasn't yet been mined, could take a while to return.\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetTxConfirmed\n\n\n\u25ba \ngetTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nInherited from \nArcTransactionResult\n.\ngetTxConfirmed\n\n\nDefined in \niContractWrapperBase.ts:68\n\n\nReturns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaction is not yet found at the required depth.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetTxMined\n\n\n\u25ba \ngetTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nInherited from \nArcTransactionResult\n.\ngetTxMined\n\n\nDefined in \niContractWrapperBase.ts:50\n\n\nReturns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaciton is not yet mined.\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetValueFromMinedTx\n\n\n\u25ba \ngetValueFromMinedTx\n(valueName: \nstring\n, eventName?: \nstring\n, index?: \nnumber\n): \nPromise\n.\nany\n\u23ae\nundefined\n\n\nInherited from \nArcTransactionResult\n.\ngetValueFromMinedTx\n\n\nDefined in \niContractWrapperBase.ts:116\n\n\nReturns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nvalueName\n\n\nstring\n\n\n-\n\n\nThe name of the property whose value we wish to return\n\n\n\n\n\n\neventName\n\n\nstring\n\n\nnull\n\n\nName of the event in whose log we are to look for the value\n\n\n\n\n\n\nindex\n\n\nnumber\n\n\n0\n\n\nIndex of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\u23ae\nundefined\n\n\n\n\n\n\nwatchForTxConfirmed\n\n\n\u25ba \nwatchForTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\n\nInherited from \nArcTransactionResult\n.\nwatchForTxConfirmed\n\n\nDefined in \niContractWrapperBase.ts:99\n\n\nReturns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional \nrequiredDepth\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\n\n\n\n\n\nwatchForTxMined\n\n\n\u25ba \nwatchForTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\n\nInherited from \nArcTransactionResult\n.\nwatchForTxMined\n\n\nDefined in \niContractWrapperBase.ts:82\n\n\nReturns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle", 
            "title": "ArcTransactionProposalResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#class-arctransactionproposalresult", 
            "text": "Base or actual type returned by all contract wrapper methods that generate a transaction and initiate a proposal.", 
            "title": "Class: ArcTransactionProposalResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#hierarchy", 
            "text": "ArcTransactionResult  \u21b3 ArcTransactionProposalResult", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#properties", 
            "text": "tx  votingMachine", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#methods", 
            "text": "getProposalIdFromMinedTx  getTxConfirmed  getTxMined  getValueFromMinedTx  watchForTxConfirmed  watchForTxMined", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#new-arctransactionproposalresulttx-hash-contract-any-votingmachine-iintvoteinterface-arctransactionproposalresult", 
            "text": "Overrides  ArcTransactionResult . constructor  Defined in  iContractWrapperBase.ts:129  Parameters:     Param  Type  Description      tx  Hash  -    contract  any  -    votingMachine  IIntVoteInterface  -     Returns:   ArcTransactionProposalResult", 
            "title": "\u2295 new ArcTransactionProposalResult(tx: Hash, contract: any, votingMachine: IIntVoteInterface): ArcTransactionProposalResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#tx", 
            "text": "\u25cf  tx :   Hash    Inherited from  ArcTransactionResult . tx  Defined in  iContractWrapperBase.ts:37  The transaction hash", 
            "title": "tx"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#votingmachine", 
            "text": "\u25cf  votingMachine :   IIntVoteInterface    Defined in  iContractWrapperBase.ts:137  The proposal's voting machine, as IntVoteInterface", 
            "title": "votingMachine"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#getproposalidfromminedtx", 
            "text": "\u25ba  getProposalIdFromMinedTx ():  Promise . Hash  Defined in  iContractWrapperBase.ts:146  Returns promise of the proposal id from the logs of the mined transaction. Will watch for the mined tx; if it hasn't yet been mined, could take a while to return.  Returns:   Promise . Hash", 
            "title": "getProposalIdFromMinedTx"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#gettxconfirmed", 
            "text": "\u25ba  getTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle \u23ae null  Inherited from  ArcTransactionResult . getTxConfirmed  Defined in  iContractWrapperBase.ts:68  Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaction is not yet found at the required depth.  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#gettxmined", 
            "text": "\u25ba  getTxMined ():  Promise . TransactionReceiptTruffle \u23ae null  Inherited from  ArcTransactionResult . getTxMined  Defined in  iContractWrapperBase.ts:50  Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaciton is not yet mined.  Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxMined"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#getvaluefromminedtx", 
            "text": "\u25ba  getValueFromMinedTx (valueName:  string , eventName?:  string , index?:  number ):  Promise . any \u23ae undefined  Inherited from  ArcTransactionResult . getValueFromMinedTx  Defined in  iContractWrapperBase.ts:116  Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.  Parameters:     Param  Type  Default value  Description      valueName  string  -  The name of the property whose value we wish to return    eventName  string  null  Name of the event in whose log we are to look for the value    index  number  0  Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.     Returns:   Promise . any \u23ae undefined", 
            "title": "getValueFromMinedTx"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#watchfortxconfirmed", 
            "text": "\u25ba  watchForTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle  Inherited from  ArcTransactionResult . watchForTxConfirmed  Defined in  iContractWrapperBase.ts:99  Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional  requiredDepth .  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionProposalResult/#watchfortxmined", 
            "text": "\u25ba  watchForTxMined ():  Promise . TransactionReceiptTruffle  Inherited from  ArcTransactionResult . watchForTxMined  Defined in  iContractWrapperBase.ts:82  Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxMined"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/", 
            "text": "API Reference\n \n \nArcTransactionResult\n\n\nClass: ArcTransactionResult\n\n\nHierarchy\n\n\nArcTransactionResult\n\n\n\u21b3  \nArcTransactionProposalResult\n\n\n\u21b3  \nArcTransactionDataResult\n\n\n\u21b3  \nArcTransactionAgreementResult\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ntx\n\n\n\n\nMethods\n\n\n\n\ngetTxConfirmed\n\n\ngetTxMined\n\n\ngetValueFromMinedTx\n\n\nwatchForTxConfirmed\n\n\nwatchForTxMined\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ArcTransactionResult\n(tx: \nHash\n, contract: \nstring\n\u23ae\nany\n): \nArcTransactionResult\n\n\nDefined in \niContractWrapperBase.ts:31\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntx\n\n\nHash\n\n\n-\n\n\n\n\n\n\ncontract\n\n\nstring\n\u23ae\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nArcTransactionResult\n\n\n\n\nProperties\n\n\n\n\ntx\n\n\n\u25cf  tx\n:  \nHash\n \n\n\nDefined in \niContractWrapperBase.ts:37\n\n\nThe transaction hash\n\n\n\n\nMethods\n\n\n\n\ngetTxConfirmed\n\n\n\u25ba \ngetTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nDefined in \niContractWrapperBase.ts:68\n\n\nReturns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaction is not yet found at the required depth.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetTxMined\n\n\n\u25ba \ngetTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nDefined in \niContractWrapperBase.ts:50\n\n\nReturns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns null if the transaciton is not yet mined.\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\ngetValueFromMinedTx\n\n\n\u25ba \ngetValueFromMinedTx\n(valueName: \nstring\n, eventName?: \nstring\n, index?: \nnumber\n): \nPromise\n.\nany\n\u23ae\nundefined\n\n\nDefined in \niContractWrapperBase.ts:116\n\n\nReturns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nvalueName\n\n\nstring\n\n\n-\n\n\nThe name of the property whose value we wish to return\n\n\n\n\n\n\neventName\n\n\nstring\n\n\nnull\n\n\nName of the event in whose log we are to look for the value\n\n\n\n\n\n\nindex\n\n\nnumber\n\n\n0\n\n\nIndex of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\u23ae\nundefined\n\n\n\n\n\n\nwatchForTxConfirmed\n\n\n\u25ba \nwatchForTxConfirmed\n(requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceiptTruffle\n\n\nDefined in \niContractWrapperBase.ts:99\n\n\nReturns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional \nrequiredDepth\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle\n\n\n\n\n\n\nwatchForTxMined\n\n\n\u25ba \nwatchForTxMined\n(): \nPromise\n.\nTransactionReceiptTruffle\n\n\nDefined in \niContractWrapperBase.ts:82\n\n\nReturns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).\n\n\nReturns:\n \nPromise\n.\nTransactionReceiptTruffle", 
            "title": "ArcTransactionResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#class-arctransactionresult", 
            "text": "", 
            "title": "Class: ArcTransactionResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#hierarchy", 
            "text": "ArcTransactionResult  \u21b3   ArcTransactionProposalResult  \u21b3   ArcTransactionDataResult  \u21b3   ArcTransactionAgreementResult", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#properties", 
            "text": "tx", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#methods", 
            "text": "getTxConfirmed  getTxMined  getValueFromMinedTx  watchForTxConfirmed  watchForTxMined", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#new-arctransactionresulttx-hash-contract-stringany-arctransactionresult", 
            "text": "Defined in  iContractWrapperBase.ts:31  Parameters:     Param  Type  Description      tx  Hash  -    contract  string \u23ae any  -     Returns:   ArcTransactionResult", 
            "title": "\u2295 new ArcTransactionResult(tx: Hash, contract: string\u23aeany): ArcTransactionResult"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#tx", 
            "text": "\u25cf  tx :   Hash    Defined in  iContractWrapperBase.ts:37  The transaction hash", 
            "title": "tx"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#gettxconfirmed", 
            "text": "\u25ba  getTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle \u23ae null  Defined in  iContractWrapperBase.ts:68  Returns a promise of the transaction if it is confirmed, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaction is not yet found at the required depth.  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#gettxmined", 
            "text": "\u25ba  getTxMined ():  Promise . TransactionReceiptTruffle \u23ae null  Defined in  iContractWrapperBase.ts:50  Returns a promise of the transaction if it is mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns null if the transaciton is not yet mined.  Returns:   Promise . TransactionReceiptTruffle \u23ae null", 
            "title": "getTxMined"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#getvaluefromminedtx", 
            "text": "\u25ba  getValueFromMinedTx (valueName:  string , eventName?:  string , index?:  number ):  Promise . any \u23ae undefined  Defined in  iContractWrapperBase.ts:116  Returns promise of a value from the logs of the mined transaction. Will watch for the mined tx, so could take a while to return.  Parameters:     Param  Type  Default value  Description      valueName  string  -  The name of the property whose value we wish to return    eventName  string  null  Name of the event in whose log we are to look for the value    index  number  0  Index of the log in which to look for the value, when eventName is not given.Default is the index of the last log in the transaction.     Returns:   Promise . any \u23ae undefined", 
            "title": "getValueFromMinedTx"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#watchfortxconfirmed", 
            "text": "\u25ba  watchForTxConfirmed (requiredDepth?:  number ):  Promise . TransactionReceiptTruffle  Defined in  iContractWrapperBase.ts:99  Returns a promise of a TransactionReceipt once the given transaction has been confirmed, converted to a TransactionReceiptTruffle (with readable logs), according to the optional  requiredDepth .  Parameters:     Param  Type  Description      requiredDepth  number  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxConfirmed"
        }, 
        {
            "location": "/api/classes/ArcTransactionResult/#watchfortxmined", 
            "text": "\u25ba  watchForTxMined ():  Promise . TransactionReceiptTruffle  Defined in  iContractWrapperBase.ts:82  Returns promise of a mined transaction once it has been mined, converted to a TransactionReceiptTruffle (with readable logs).  Returns:   Promise . TransactionReceiptTruffle", 
            "title": "watchForTxMined"
        }, 
        {
            "location": "/api/classes/AvatarService/", 
            "text": "API Reference\n \n \nAvatarService\n\n\nClass: AvatarService\n\n\nMethods for querying information about an Avatar. Use it by:\n\n\nlet avatarService = new AvatarService(avatarAddress);\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ncontrollerService\n\n\n\n\nMethods\n\n\n\n\ngetAvatar\n\n\ngetController\n\n\ngetControllerAddress\n\n\ngetEthBalance\n\n\ngetIsUController\n\n\ngetNativeReputation\n\n\ngetNativeReputationAddress\n\n\ngetNativeToken\n\n\ngetNativeTokenAddress\n\n\ngetTokenBalance\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew AvatarService\n(avatarAddress: \nAddress\n): \nAvatarService\n\n\nDefined in avatarService.ts:25\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nAvatarService\n\n\n\n\nProperties\n\n\n\n\ncontrollerService\n\n\n\u25cf  controllerService\n:  \nControllerService\n \n\n\nDefined in avatarService.ts:19\n\n\n\n\nMethods\n\n\n\n\ngetAvatar\n\n\n\u25ba \ngetAvatar\n(): \nPromise\n.\nany\n\n\nDefined in avatarService.ts:36\n\n\nReturns promise of the Avatar Truffle contract wrapper. Returns undefined if not found.\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(): \nPromise\n.\nany\n\n\nDefined in avatarService.ts:66\n\n\nReturns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by called \ngetIsUController\n.\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetControllerAddress\n\n\n\u25ba \ngetControllerAddress\n(): \nPromise\n.\nstring\n\n\nDefined in avatarService.ts:57\n\n\nReturns promise of the address of the controller\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetEthBalance\n\n\n\u25ba \ngetEthBalance\n(): \nPromise\n.\nBigNumber\n\n\nDefined in avatarService.ts:145\n\n\nReturn the current ETH balance for this avatar, in Wei.\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetIsUController\n\n\n\u25ba \ngetIsUController\n(): \nPromise\n.\nboolean\n\n\nDefined in avatarService.ts:50\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\ngetNativeReputation\n\n\n\u25ba \ngetNativeReputation\n(): \nPromise\n.\nReputationWrapper\n\n\nDefined in avatarService.ts:86\n\n\nReturns promise of the avatar's native reputation Truffle contract wrapper.\n\n\nReturns:\n \nPromise\n.\nReputationWrapper\n\n\n\n\n\n\ngetNativeReputationAddress\n\n\n\u25ba \ngetNativeReputationAddress\n(): \nPromise\n.\nstring\n\n\nDefined in avatarService.ts:73\n\n\nReturns promise of the address of the avatar's native reputation.\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetNativeToken\n\n\n\u25ba \ngetNativeToken\n(): \nPromise\n.\nDaoTokenWrapper\n\n\nDefined in avatarService.ts:113\n\n\nReturns promise of the avatar's native token Truffle contract wrapper. Assumes the token is a \nDAOToken\n.\n\n\nReturns:\n \nPromise\n.\nDaoTokenWrapper\n\n\n\n\n\n\ngetNativeTokenAddress\n\n\n\u25ba \ngetNativeTokenAddress\n(): \nPromise\n.\nstring\n\n\nDefined in avatarService.ts:99\n\n\nReturns promise of the address of the avatar's native token.\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetTokenBalance\n\n\n\u25ba \ngetTokenBalance\n(tokenAddress?: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in avatarService.ts:127\n\n\nReturn a current token balance for this avatar, in Wei. If tokenAddress is not supplied, then uses native token.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntokenAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber", 
            "title": "AvatarService"
        }, 
        {
            "location": "/api/classes/AvatarService/#class-avatarservice", 
            "text": "Methods for querying information about an Avatar. Use it by:  let avatarService = new AvatarService(avatarAddress);", 
            "title": "Class: AvatarService"
        }, 
        {
            "location": "/api/classes/AvatarService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/AvatarService/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/AvatarService/#properties", 
            "text": "controllerService", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/AvatarService/#methods", 
            "text": "getAvatar  getController  getControllerAddress  getEthBalance  getIsUController  getNativeReputation  getNativeReputationAddress  getNativeToken  getNativeTokenAddress  getTokenBalance", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/AvatarService/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/AvatarService/#new-avatarserviceavataraddress-address-avatarservice", 
            "text": "Defined in avatarService.ts:25  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   AvatarService", 
            "title": "\u2295 new AvatarService(avatarAddress: Address): AvatarService"
        }, 
        {
            "location": "/api/classes/AvatarService/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/AvatarService/#controllerservice", 
            "text": "\u25cf  controllerService :   ControllerService    Defined in avatarService.ts:19", 
            "title": "controllerService"
        }, 
        {
            "location": "/api/classes/AvatarService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/AvatarService/#getavatar", 
            "text": "\u25ba  getAvatar ():  Promise . any  Defined in avatarService.ts:36  Returns promise of the Avatar Truffle contract wrapper. Returns undefined if not found.  Returns:   Promise . any", 
            "title": "getAvatar"
        }, 
        {
            "location": "/api/classes/AvatarService/#getcontroller", 
            "text": "\u25ba  getController ():  Promise . any  Defined in avatarService.ts:66  Returns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by called  getIsUController .  Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/AvatarService/#getcontrolleraddress", 
            "text": "\u25ba  getControllerAddress ():  Promise . string  Defined in avatarService.ts:57  Returns promise of the address of the controller  Returns:   Promise . string", 
            "title": "getControllerAddress"
        }, 
        {
            "location": "/api/classes/AvatarService/#getethbalance", 
            "text": "\u25ba  getEthBalance ():  Promise . BigNumber  Defined in avatarService.ts:145  Return the current ETH balance for this avatar, in Wei.  Returns:   Promise . BigNumber", 
            "title": "getEthBalance"
        }, 
        {
            "location": "/api/classes/AvatarService/#getisucontroller", 
            "text": "\u25ba  getIsUController ():  Promise . boolean  Defined in avatarService.ts:50  Returns:   Promise . boolean", 
            "title": "getIsUController"
        }, 
        {
            "location": "/api/classes/AvatarService/#getnativereputation", 
            "text": "\u25ba  getNativeReputation ():  Promise . ReputationWrapper  Defined in avatarService.ts:86  Returns promise of the avatar's native reputation Truffle contract wrapper.  Returns:   Promise . ReputationWrapper", 
            "title": "getNativeReputation"
        }, 
        {
            "location": "/api/classes/AvatarService/#getnativereputationaddress", 
            "text": "\u25ba  getNativeReputationAddress ():  Promise . string  Defined in avatarService.ts:73  Returns promise of the address of the avatar's native reputation.  Returns:   Promise . string", 
            "title": "getNativeReputationAddress"
        }, 
        {
            "location": "/api/classes/AvatarService/#getnativetoken", 
            "text": "\u25ba  getNativeToken ():  Promise . DaoTokenWrapper  Defined in avatarService.ts:113  Returns promise of the avatar's native token Truffle contract wrapper. Assumes the token is a  DAOToken .  Returns:   Promise . DaoTokenWrapper", 
            "title": "getNativeToken"
        }, 
        {
            "location": "/api/classes/AvatarService/#getnativetokenaddress", 
            "text": "\u25ba  getNativeTokenAddress ():  Promise . string  Defined in avatarService.ts:99  Returns promise of the address of the avatar's native token.  Returns:   Promise . string", 
            "title": "getNativeTokenAddress"
        }, 
        {
            "location": "/api/classes/AvatarService/#gettokenbalance", 
            "text": "\u25ba  getTokenBalance (tokenAddress?:  Address ):  Promise . BigNumber  Defined in avatarService.ts:127  Return a current token balance for this avatar, in Wei. If tokenAddress is not supplied, then uses native token.  Parameters:     Param  Type  Description      tokenAddress  Address  -     Returns:   Promise . BigNumber", 
            "title": "getTokenBalance"
        }, 
        {
            "location": "/api/classes/ConfigService/", 
            "text": "API Reference\n \n \nConfigService\n\n\nClass: ConfigService\n\n\nget and set global Arc.js settings\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ndata\n\n\ninstance\n\n\n\n\nMethods\n\n\n\n\nget\n\n\nset\n\n\nget\n\n\nset\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ConfigService\n(): \nConfigService\n\n\nDefined in \nconfigService.ts:34\n\n\nReturns:\n \nConfigService\n\n\n\n\nProperties\n\n\n\n\n\u00abStatic\u00bb data\n\n\n\u25cf  data\n:  \nany\n \n\n\nDefined in \nconfigService.ts:9\n\n\n\n\n\n\n\u00abStatic\u00bb instance\n\n\n\u25cf  instance\n:  \nIConfigService\n \n\n\nDefined in \nconfigService.ts:8\n\n\n\n\nMethods\n\n\n\n\nget\n\n\n\u25ba \nget\n(setting: \nstring\n): \nany\n\n\nDefined in \nconfigService.ts:57\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nany\n\n\n\n\n\n\nset\n\n\n\u25ba \nset\n(setting: \nstring\n, value: \nany\n): \nvoid\n\n\nDefined in \nconfigService.ts:61\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\n-\n\n\n\n\n\n\nvalue\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb get\n\n\n\u25ba \nget\n(setting: \nstring\n): \nany\n\n\nDefined in \nconfigService.ts:11\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nany\n\n\n\n\n\n\n\u00abStatic\u00bb set\n\n\n\u25ba \nset\n(setting: \nstring\n, value: \nany\n): \nvoid\n\n\nDefined in \nconfigService.ts:23\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\n-\n\n\n\n\n\n\nvalue\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "ConfigService"
        }, 
        {
            "location": "/api/classes/ConfigService/#class-configservice", 
            "text": "get and set global Arc.js settings", 
            "title": "Class: ConfigService"
        }, 
        {
            "location": "/api/classes/ConfigService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ConfigService/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ConfigService/#properties", 
            "text": "data  instance", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ConfigService/#methods", 
            "text": "get  set  get  set", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ConfigService/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ConfigService/#new-configservice-configservice", 
            "text": "Defined in  configService.ts:34  Returns:   ConfigService", 
            "title": "\u2295 new ConfigService(): ConfigService"
        }, 
        {
            "location": "/api/classes/ConfigService/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ConfigService/#static-data", 
            "text": "\u25cf  data :   any    Defined in  configService.ts:9", 
            "title": "\u00abStatic\u00bb data"
        }, 
        {
            "location": "/api/classes/ConfigService/#static-instance", 
            "text": "\u25cf  instance :   IConfigService    Defined in  configService.ts:8", 
            "title": "\u00abStatic\u00bb instance"
        }, 
        {
            "location": "/api/classes/ConfigService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ConfigService/#get", 
            "text": "\u25ba  get (setting:  string ):  any  Defined in  configService.ts:57  Parameters:     Param  Type  Description      setting  string  -     Returns:   any", 
            "title": "get"
        }, 
        {
            "location": "/api/classes/ConfigService/#set", 
            "text": "\u25ba  set (setting:  string , value:  any ):  void  Defined in  configService.ts:61  Parameters:     Param  Type  Description      setting  string  -    value  any  -     Returns:   void", 
            "title": "set"
        }, 
        {
            "location": "/api/classes/ConfigService/#static-get", 
            "text": "\u25ba  get (setting:  string ):  any  Defined in  configService.ts:11  Parameters:     Param  Type  Description      setting  string  -     Returns:   any", 
            "title": "\u00abStatic\u00bb get"
        }, 
        {
            "location": "/api/classes/ConfigService/#static-set", 
            "text": "\u25ba  set (setting:  string , value:  any ):  void  Defined in  configService.ts:23  Parameters:     Param  Type  Description      setting  string  -    value  any  -     Returns:   void", 
            "title": "\u00abStatic\u00bb set"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/", 
            "text": "API Reference\n \n \nContractWrapperBase\n\n\nClass: ContractWrapperBase\n\n\nAbstract base class for all Arc contract wrapper classes\n\n\nExample of how to define a wrapper:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\nimport\n \n{\n \nContractWrapperBase\n \n}\n \nfrom\n \n../contractWrapperBase\n;\n\n\nimport\n \n{\n \nContractWrapperFactory\n \n}\n \nfrom\n \n../contractWrapperFactory\n;\n\n\n\nexport\n \nclass\n \nAbsoluteVoteWrapper\n \nextends\n \nContractWrapperBase\n \n{\n\n  \n[\n \nwrapper\n \nproperties\n \nand\n \nmethods\n \n]\n\n\n}\n\n\n\nexport\n \nconst\n \nAbsoluteVote\n \n=\n \nnew\n \nContractWrapperFactory\n(\n\n \nAbsoluteVote\n,\n\n \nAbsoluteVoteWrapper\n,\n\n \nnew\n \nWeb3EventService\n());\n\n\n\n\n\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3  \nStandardTokenWrapper\n\n\n\u21b3  \nReputationWrapper\n\n\n\u21b3  \nIntVoteInterfaceWrapper\n\n\n\u21b3  \nProposalGeneratorBase\n\n\n\u21b3  \nRedeemerWrapper\n\n\n\u21b3  \nTokenCapGCWrapper\n\n\n\u21b3  \nDaoCreatorWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ContractWrapperBase\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nContractWrapperBase\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nContractWrapperBase\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\n\u00abAbstract\u00bb factory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nDefined in \ncontractWrapperBase.ts:45\n\n\nThe wrapper factor class providing static methods \nat(someAddress)\n, \nnew()\n and \ndeployed()\n.\n\n\n\n\n\n\n\u00abAbstract\u00bb friendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n \n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \ncontractWrapperBase.ts:53\n\n\nA more friendly name for the contract.\n\n\n\n\n\n\n\u00abAbstract\u00bb name\n\n\n\u25cf  name\n:  \nstring\n \n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nDefined in \ncontractWrapperBase.ts:49\n\n\nThe name of the contract.\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "ContractWrapperBase"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#class-contractwrapperbase", 
            "text": "Abstract base class for all Arc contract wrapper classes  Example of how to define a wrapper:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 import   {   ContractWrapperBase   }   from   ../contractWrapperBase ;  import   {   ContractWrapperFactory   }   from   ../contractWrapperFactory ;  export   class   AbsoluteVoteWrapper   extends   ContractWrapperBase   { \n   [   wrapper   properties   and   methods   ]  }  export   const   AbsoluteVote   =   new   ContractWrapperFactory ( \n  AbsoluteVote , \n  AbsoluteVoteWrapper , \n  new   Web3EventService ());", 
            "title": "Class: ContractWrapperBase"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3   StandardTokenWrapper  \u21b3   ReputationWrapper  \u21b3   IntVoteInterfaceWrapper  \u21b3   ProposalGeneratorBase  \u21b3   RedeemerWrapper  \u21b3   TokenCapGCWrapper  \u21b3   DaoCreatorWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#properties", 
            "text": "contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#methods", 
            "text": "estimateGas  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#new-contractwrapperbasesoliditycontract-any-web3eventservice-web3eventservice-contractwrapperbase", 
            "text": "Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   ContractWrapperBase", 
            "title": "\u2295 new ContractWrapperBase(solidityContract: any, web3EventService: Web3EventService): ContractWrapperBase"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#abstract-factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory any    Implementation of  IContractWrapperBase . factory  Defined in  contractWrapperBase.ts:45  The wrapper factor class providing static methods  at(someAddress) ,  new()  and  deployed() .", 
            "title": "\u00abAbstract\u00bb factory"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#abstract-friendlyname", 
            "text": "\u25cf  friendlyName :   string    Implementation of  IContractWrapperBase . friendlyName  Defined in  contractWrapperBase.ts:53  A more friendly name for the contract.", 
            "title": "\u00abAbstract\u00bb friendlyName"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#abstract-name", 
            "text": "\u25cf  name :   string    Implementation of  IContractWrapperBase . name  Defined in  contractWrapperBase.ts:49  The name of the contract.", 
            "title": "\u00abAbstract\u00bb name"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#address", 
            "text": "getaddress():  Address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/ContractWrapperBase/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/", 
            "text": "API Reference\n \n \nContractWrapperFactory\n\n\nClass: ContractWrapperFactory\n\n\nGeneric class factory for all of the contract wrapper classes.\n\n\nType parameters\n\n\nTWrapper :  \nIContractWrapperBase\n\n\nHierarchy\n\n\nContractWrapperFactory\n\n\n\u21b3  \nStandardTokenFactoryType\n\n\n\u21b3  \nMintableTokenFactoryType\n\n\n\u21b3  \nDaoTokenFactoryType\n\n\n\u21b3  \nReputationFactoryType\n\n\n\u21b3  \nIntVoteInterfaceFactoryType\n\n\n\u21b3  \nGenesisProtocolFactoryType\n\n\n\u21b3  \nRedeemerFactoryType\n\n\n\u21b3  \nDaoCreatorFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nTWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ContractWrapperFactory\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nContractWrapperFactory\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nContractWrapperFactory\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nTWrapper\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nTWrapper\n\n\nDefined in \ncontractWrapperFactory.ts:77\n\n\nReturn a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.\n\n\nReturns:\n \nPromise\n.\nTWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nTWrapper\n\n\nDefined in \ncontractWrapperFactory.ts:44\n\n\nDeploy a new instance of the contract and return a wrapper around it.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\nOptional arguments to the Arc contracts constructor.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "ContractWrapperFactory"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#class-contractwrapperfactory", 
            "text": "Generic class factory for all of the contract wrapper classes.", 
            "title": "Class: ContractWrapperFactory"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#twrapper-icontractwrapperbase", 
            "text": "", 
            "title": "TWrapper :  IContractWrapperBase"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#hierarchy", 
            "text": "ContractWrapperFactory  \u21b3   StandardTokenFactoryType  \u21b3   MintableTokenFactoryType  \u21b3   DaoTokenFactoryType  \u21b3   ReputationFactoryType  \u21b3   IntVoteInterfaceFactoryType  \u21b3   GenesisProtocolFactoryType  \u21b3   RedeemerFactoryType  \u21b3   DaoCreatorFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#implements", 
            "text": "IContractWrapperFactory TWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#new-contractwrapperfactorysoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-contractwrapperfactory", 
            "text": "Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   ContractWrapperFactory", 
            "title": "\u2295 new ContractWrapperFactory(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): ContractWrapperFactory"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . TWrapper  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . TWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#deployed", 
            "text": "\u25ba  deployed ():  Promise . TWrapper  Defined in  contractWrapperFactory.ts:77  Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.  Returns:   Promise . TWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#new", 
            "text": "\u25ba  new (...rest:  Array . any ):  Promise . TWrapper  Defined in  contractWrapperFactory.ts:44  Deploy a new instance of the contract and return a wrapper around it.  Parameters:     Param  Type  Description      rest  Array . any  Optional arguments to the Arc contracts constructor.     Returns:   Promise . TWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/ContractWrapperFactory/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/", 
            "text": "API Reference\n \n \nContributionRewardWrapper\n\n\nClass: ContributionRewardWrapper\n\n\nHierarchy\n\n\n\u21b3  \nProposalGeneratorBase\n\n\n\u21b3 ContributionRewardWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nSchemeWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nNewContributionProposal\n\n\nProposalDeleted\n\n\nProposalExecuted\n\n\nRedeemEther\n\n\nRedeemExternalToken\n\n\nRedeemNativeToken\n\n\nRedeemReputation\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetBeneficiaryRewards\n\n\ngetController\n\n\ngetDefaultPermissions\n\n\ngetExecutedProposals\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetProposal\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\ngetSchemePermissions\n\n\ngetVotableProposals\n\n\ngetVotingMachine\n\n\ngetVotingMachineAddress\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nproposeContributionReward\n\n\nredeemContributionReward\n\n\nredeemEther\n\n\nredeemExternalToken\n\n\nredeemNativeToken\n\n\nredeemReputation\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ContributionRewardWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nContributionRewardWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\nconstructor\n\n\nOverrides \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \nproposalGeneratorBase.ts:10\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\n-\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nContributionRewardWrapper\n\n\n\n\nProperties\n\n\n\n\nNewContributionProposal\n\n\n\u25cf  NewContributionProposal\n:  \nEventFetcherFactory\nNewContributionProposalEventResult\n \n\n\nDefined in \nwrappers/contributionReward.ts:42\n\n\nEvents\n\n\n\n\n\n\nProposalDeleted\n\n\n\u25cf  ProposalDeleted\n:  \nEventFetcherFactory\nProposalDeletedEventResult\n \n\n\nDefined in \nwrappers/contributionReward.ts:44\n\n\n\n\n\n\nProposalExecuted\n\n\n\u25cf  ProposalExecuted\n:  \nEventFetcherFactory\nSchemeProposalExecutedEventResult\n \n\n\nDefined in \nwrappers/contributionReward.ts:43\n\n\n\n\n\n\nRedeemEther\n\n\n\u25cf  RedeemEther\n:  \nEventFetcherFactory\nRedeemEventResult\n \n\n\nDefined in \nwrappers/contributionReward.ts:46\n\n\n\n\n\n\nRedeemExternalToken\n\n\n\u25cf  RedeemExternalToken\n:  \nEventFetcherFactory\nRedeemEventResult\n \n\n\nDefined in \nwrappers/contributionReward.ts:48\n\n\n\n\n\n\nRedeemNativeToken\n\n\n\u25cf  RedeemNativeToken\n:  \nEventFetcherFactory\nRedeemEventResult\n \n\n\nDefined in \nwrappers/contributionReward.ts:47\n\n\n\n\n\n\nRedeemReputation\n\n\n\u25cf  RedeemReputation\n:  \nEventFetcherFactory\nRedeemEventResult\n \n\n\nDefined in \nwrappers/contributionReward.ts:45\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nContributionRewardWrapper\n  =  ContributionRewardFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/contributionReward.ts:36\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Contribution Reward\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/contributionReward.ts:35\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"ContributionReward\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/contributionReward.ts:34\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetBeneficiaryRewards\n\n\n\u25ba \ngetBeneficiaryRewards\n(options?: \nGetBeneficiaryRewardsParams\n): \nPromise\n.\nArray\n.\nProposalRewards\n\n\nDefined in \nwrappers/contributionReward.ts:366\n\n\nReturn a list of \nProposalRewards\n for executed (passed by vote) proposals that have rewards waiting to be redeemed by the given beneficiary. \nProposalRewards\n includes the total amount redeemable, the amount yet-to-be redeemed and where applicable, the amount that the Dao has available to pay out. The latter is useful for anticipating whether an attempt to redeem would succeed.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetBeneficiaryRewardsParams\n\n\n{} as GetBeneficiaryRewardsParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nProposalRewards\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetDefaultPermissions\n\n\nDefined in \nwrappers/contributionReward.ts:491\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetExecutedProposals\n\n\n\u25ba \ngetExecutedProposals\n(avatarAddress: \nAddress\n): \nEntityFetcherFactory\nContributionProposal\n, \nSchemeProposalExecutedEventResult\n\n\nDefined in \nwrappers/contributionReward.ts:343\n\n\nEntityFetcherFactory for executed ContributionProposals. The Arc ContributionProposals contract retains the original proposal struct after execution.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nContributionProposal\n, \nSchemeProposalExecutedEventResult\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nContributionRewardParamsReturn\n\n\nImplementation of \nSchemeWrapper\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/contributionReward.ts:503\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nContributionRewardParamsReturn\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nContributionRewardParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/contributionReward.ts:441\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nContributionRewardParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetProposal\n\n\n\u25ba \ngetProposal\n(avatarAddress: \nAddress\n, proposalId: \nHash\n): \nPromise\n.\nContributionProposal\n\n\nDefined in \nwrappers/contributionReward.ts:486\n\n\nReturns promise of a \nContributionProposal\n for the given proposal id and avatar address.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nContributionProposal\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nContributionRewardParamsReturn\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemeParameters\n\n\nDefined in \nwrappers/contributionReward.ts:499\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nContributionRewardParamsReturn\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemePermissions\n\n\nDefined in \nwrappers/contributionReward.ts:495\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\ngetVotableProposals\n\n\n\u25ba \ngetVotableProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nContributionProposal\n, \nNewContributionProposalEventResult\n\n\nDefined in \nwrappers/contributionReward.ts:318\n\n\nEntityFetcherFactory for votable ContributionProposals.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nContributionProposal\n, \nNewContributionProposalEventResult\n\n\n\n\n\n\ngetVotingMachine\n\n\n\u25ba \ngetVotingMachine\n(avatarAddress: \nAddress\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachine\n\n\nDefined in \nproposalGeneratorBase.ts:30\n\n\nReturn IntVoteInterfaceWrapper for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ngetVotingMachineAddress\n\n\n\u25ba \ngetVotingMachineAddress\n(avatarAddress: \nAddress\n): \nPromise\n.\nAddress\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachineAddress\n\n\nDefined in \nproposalGeneratorBase.ts:22\n\n\nReturn the address of the voting machine for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAddress\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nproposeContributionReward\n\n\n\u25ba \nproposeContributionReward\n(options?: \nProposeContributionRewardParams\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/contributionReward.ts:55\n\n\nSubmit a proposal to reward a beneficiary for contributions to the DAO\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeContributionRewardParams\n\n\n{} as ProposeContributionRewardParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nredeemContributionReward\n\n\n\u25ba \nredeemContributionReward\n(options?: \nContributionRewardRedeemParams\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/contributionReward.ts:175\n\n\nRedeem the specified rewards for the beneficiary of the proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nContributionRewardRedeemParams\n\n\n{} as ContributionRewardRedeemParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nredeemEther\n\n\n\u25ba \nredeemEther\n(options?: \nContributionRewardSpecifiedRedemptionParams\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/contributionReward.ts:291\n\n\nRedeem ether reward for the beneficiary of the proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nContributionRewardSpecifiedRedemptionParams\n\n\n\n\n\n\n\n\n\n\n{} as ContributionRewardSpecifiedRedemptionParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nredeemExternalToken\n\n\n\u25ba \nredeemExternalToken\n(options?: \nContributionRewardSpecifiedRedemptionParams\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/contributionReward.ts:210\n\n\nRedeem external token reward for the beneficiary of the proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nContributionRewardSpecifiedRedemptionParams\n\n\n\n\n\n\n\n\n\n\n{} as ContributionRewardSpecifiedRedemptionParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nredeemNativeToken\n\n\n\u25ba \nredeemNativeToken\n(options?: \nContributionRewardSpecifiedRedemptionParams\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/contributionReward.ts:264\n\n\nRedeem native token reward for the beneficiary of the proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nContributionRewardSpecifiedRedemptionParams\n\n\n\n\n\n\n\n\n\n\n{} as ContributionRewardSpecifiedRedemptionParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nredeemReputation\n\n\n\u25ba \nredeemReputation\n(options?: \nContributionRewardSpecifiedRedemptionParams\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/contributionReward.ts:237\n\n\nRedeem reputation reward for the beneficiary of the proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nContributionRewardSpecifiedRedemptionParams\n\n\n\n\n\n\n\n\n\n\n{} as ContributionRewardSpecifiedRedemptionParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nContributionRewardParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/contributionReward.ts:455\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nContributionRewardParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "ContributionRewardWrapper"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#class-contributionrewardwrapper", 
            "text": "", 
            "title": "Class: ContributionRewardWrapper"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#hierarchy", 
            "text": "\u21b3   ProposalGeneratorBase  \u21b3 ContributionRewardWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#implements", 
            "text": "IContractWrapperBase  SchemeWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#properties", 
            "text": "NewContributionProposal  ProposalDeleted  ProposalExecuted  RedeemEther  RedeemExternalToken  RedeemNativeToken  RedeemReputation  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#methods", 
            "text": "estimateGas  getBeneficiaryRewards  getController  getDefaultPermissions  getExecutedProposals  getParameters  getParametersArray  getParametersHash  getProposal  getSchemeParameters  getSchemeParametersHash  getSchemePermissions  getVotableProposals  getVotingMachine  getVotingMachineAddress  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  proposeContributionReward  redeemContributionReward  redeemEther  redeemExternalToken  redeemNativeToken  redeemReputation  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#new-contributionrewardwrappersoliditycontract-any-web3eventservice-web3eventservice-contributionrewardwrapper", 
            "text": "Inherited from  ProposalGeneratorBase . constructor  Overrides  ContractWrapperBase . constructor  Defined in  proposalGeneratorBase.ts:10  Parameters:     Param  Type  Description      solidityContract  any  -    web3EventService  Web3EventService  -     Returns:   ContributionRewardWrapper", 
            "title": "\u2295 new ContributionRewardWrapper(solidityContract: any, web3EventService: Web3EventService): ContributionRewardWrapper"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#newcontributionproposal", 
            "text": "\u25cf  NewContributionProposal :   EventFetcherFactory NewContributionProposalEventResult    Defined in  wrappers/contributionReward.ts:42  Events", 
            "title": "NewContributionProposal"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#proposaldeleted", 
            "text": "\u25cf  ProposalDeleted :   EventFetcherFactory ProposalDeletedEventResult    Defined in  wrappers/contributionReward.ts:44", 
            "title": "ProposalDeleted"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#proposalexecuted", 
            "text": "\u25cf  ProposalExecuted :   EventFetcherFactory SchemeProposalExecutedEventResult    Defined in  wrappers/contributionReward.ts:43", 
            "title": "ProposalExecuted"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemether", 
            "text": "\u25cf  RedeemEther :   EventFetcherFactory RedeemEventResult    Defined in  wrappers/contributionReward.ts:46", 
            "title": "RedeemEther"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemexternaltoken", 
            "text": "\u25cf  RedeemExternalToken :   EventFetcherFactory RedeemEventResult    Defined in  wrappers/contributionReward.ts:48", 
            "title": "RedeemExternalToken"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemnativetoken", 
            "text": "\u25cf  RedeemNativeToken :   EventFetcherFactory RedeemEventResult    Defined in  wrappers/contributionReward.ts:47", 
            "title": "RedeemNativeToken"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemreputation", 
            "text": "\u25cf  RedeemReputation :   EventFetcherFactory RedeemEventResult    Defined in  wrappers/contributionReward.ts:45", 
            "title": "RedeemReputation"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory ContributionRewardWrapper   =  ContributionRewardFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/contributionReward.ts:36", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Contribution Reward\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/contributionReward.ts:35", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#name", 
            "text": "\u25cf  name :   string   = \"ContributionReward\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/contributionReward.ts:34", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getbeneficiaryrewards", 
            "text": "\u25ba  getBeneficiaryRewards (options?:  GetBeneficiaryRewardsParams ):  Promise . Array . ProposalRewards  Defined in  wrappers/contributionReward.ts:366  Return a list of  ProposalRewards  for executed (passed by vote) proposals that have rewards waiting to be redeemed by the given beneficiary.  ProposalRewards  includes the total amount redeemable, the amount yet-to-be redeemed and where applicable, the amount that the Dao has available to pay out. The latter is useful for anticipating whether an attempt to redeem would succeed.  Parameters:     Param  Type  Default value  Description      options  GetBeneficiaryRewardsParams  {} as GetBeneficiaryRewardsParams  -     Returns:   Promise . Array . ProposalRewards", 
            "title": "getBeneficiaryRewards"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Implementation of  SchemeWrapper . getDefaultPermissions  Defined in  wrappers/contributionReward.ts:491  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getexecutedproposals", 
            "text": "\u25ba  getExecutedProposals (avatarAddress:  Address ):  EntityFetcherFactory ContributionProposal ,  SchemeProposalExecutedEventResult  Defined in  wrappers/contributionReward.ts:343  EntityFetcherFactory for executed ContributionProposals. The Arc ContributionProposals contract retains the original proposal struct after execution.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   EntityFetcherFactory ContributionProposal ,  SchemeProposalExecutedEventResult", 
            "title": "getExecutedProposals"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . ContributionRewardParamsReturn  Implementation of  SchemeWrapper . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/contributionReward.ts:503  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . ContributionRewardParamsReturn", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  ContributionRewardParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/contributionReward.ts:441  Parameters:     Param  Type  Description      params  ContributionRewardParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getproposal", 
            "text": "\u25ba  getProposal (avatarAddress:  Address , proposalId:  Hash ):  Promise . ContributionProposal  Defined in  wrappers/contributionReward.ts:486  Returns promise of a  ContributionProposal  for the given proposal id and avatar address.  Parameters:     Param  Type  Description      avatarAddress  Address  -    proposalId  Hash  -     Returns:   Promise . ContributionProposal", 
            "title": "getProposal"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . ContributionRewardParamsReturn  Implementation of  SchemeWrapper . getSchemeParameters  Defined in  wrappers/contributionReward.ts:499  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . ContributionRewardParamsReturn", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Implementation of  SchemeWrapper . getSchemePermissions  Defined in  wrappers/contributionReward.ts:495  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getvotableproposals", 
            "text": "\u25ba  getVotableProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory ContributionProposal ,  NewContributionProposalEventResult  Defined in  wrappers/contributionReward.ts:318  EntityFetcherFactory for votable ContributionProposals.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory ContributionProposal ,  NewContributionProposalEventResult", 
            "title": "getVotableProposals"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getvotingmachine", 
            "text": "\u25ba  getVotingMachine (avatarAddress:  Address ):  Promise . IntVoteInterfaceWrapper  Inherited from  ProposalGeneratorBase . getVotingMachine  Defined in  proposalGeneratorBase.ts:30  Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "getVotingMachine"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#getvotingmachineaddress", 
            "text": "\u25ba  getVotingMachineAddress (avatarAddress:  Address ):  Promise . Address  Inherited from  ProposalGeneratorBase . getVotingMachineAddress  Defined in  proposalGeneratorBase.ts:22  Return the address of the voting machine for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Address", 
            "title": "getVotingMachineAddress"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#proposecontributionreward", 
            "text": "\u25ba  proposeContributionReward (options?:  ProposeContributionRewardParams ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/contributionReward.ts:55  Submit a proposal to reward a beneficiary for contributions to the DAO  Parameters:     Param  Type  Default value  Description      options  ProposeContributionRewardParams  {} as ProposeContributionRewardParams   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeContributionReward"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemcontributionreward", 
            "text": "\u25ba  redeemContributionReward (options?:  ContributionRewardRedeemParams ):  Promise . ArcTransactionResult  Defined in  wrappers/contributionReward.ts:175  Redeem the specified rewards for the beneficiary of the proposal  Parameters:     Param  Type  Default value  Description      options  ContributionRewardRedeemParams  {} as ContributionRewardRedeemParams   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "redeemContributionReward"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemether_1", 
            "text": "\u25ba  redeemEther (options?:  ContributionRewardSpecifiedRedemptionParams ):  Promise . ArcTransactionResult  Defined in  wrappers/contributionReward.ts:291  Redeem ether reward for the beneficiary of the proposal  Parameters:     Param  Type  Default value  Description      options  ContributionRewardSpecifiedRedemptionParams      {} as ContributionRewardSpecifiedRedemptionParams   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult", 
            "title": "redeemEther"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemexternaltoken_1", 
            "text": "\u25ba  redeemExternalToken (options?:  ContributionRewardSpecifiedRedemptionParams ):  Promise . ArcTransactionResult  Defined in  wrappers/contributionReward.ts:210  Redeem external token reward for the beneficiary of the proposal  Parameters:     Param  Type  Default value  Description      options  ContributionRewardSpecifiedRedemptionParams      {} as ContributionRewardSpecifiedRedemptionParams   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult", 
            "title": "redeemExternalToken"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemnativetoken_1", 
            "text": "\u25ba  redeemNativeToken (options?:  ContributionRewardSpecifiedRedemptionParams ):  Promise . ArcTransactionResult  Defined in  wrappers/contributionReward.ts:264  Redeem native token reward for the beneficiary of the proposal  Parameters:     Param  Type  Default value  Description      options  ContributionRewardSpecifiedRedemptionParams      {} as ContributionRewardSpecifiedRedemptionParams   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult", 
            "title": "redeemNativeToken"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#redeemreputation_1", 
            "text": "\u25ba  redeemReputation (options?:  ContributionRewardSpecifiedRedemptionParams ):  Promise . ArcTransactionResult  Defined in  wrappers/contributionReward.ts:237  Redeem reputation reward for the beneficiary of the proposal  Parameters:     Param  Type  Default value  Description      options  ContributionRewardSpecifiedRedemptionParams      {} as ContributionRewardSpecifiedRedemptionParams   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult", 
            "title": "redeemReputation"
        }, 
        {
            "location": "/api/classes/ContributionRewardWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  ContributionRewardParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/contributionReward.ts:455  Parameters:     Param  Type  Description      params  ContributionRewardParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/ControllerService/", 
            "text": "API Reference\n \n \nControllerService\n\n\nClass: ControllerService\n\n\nMethods for querying information about an Avatar's controller. Use it by:\n\n\nlet controllerService = new ControllerService(avatarAddress);\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\ngetController\n\n\ngetControllerAddress\n\n\ngetIsUController\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ControllerService\n(avatarAddress: \nAddress\n): \nControllerService\n\n\nDefined in \ncontrollerService.ts:18\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nControllerService\n\n\n\n\nMethods\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(): \nPromise\n.\nany\n\n\nDefined in \ncontrollerService.ts:51\n\n\nReturns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by checking the ControllerService instance property \nisUController\n.\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetControllerAddress\n\n\n\u25ba \ngetControllerAddress\n(): \nPromise\n.\nstring\n\n\nDefined in \ncontrollerService.ts:36\n\n\nReturns promise of the address of the controller\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetIsUController\n\n\n\u25ba \ngetIsUController\n(): \nPromise\n.\nboolean\n\n\nDefined in \ncontrollerService.ts:28\n\n\nReturns promise of whether avatar has a universal controller\n\n\nReturns:\n \nPromise\n.\nboolean", 
            "title": "ControllerService"
        }, 
        {
            "location": "/api/classes/ControllerService/#class-controllerservice", 
            "text": "Methods for querying information about an Avatar's controller. Use it by:  let controllerService = new ControllerService(avatarAddress);", 
            "title": "Class: ControllerService"
        }, 
        {
            "location": "/api/classes/ControllerService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ControllerService/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ControllerService/#methods", 
            "text": "getController  getControllerAddress  getIsUController", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ControllerService/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ControllerService/#new-controllerserviceavataraddress-address-controllerservice", 
            "text": "Defined in  controllerService.ts:18  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   ControllerService", 
            "title": "\u2295 new ControllerService(avatarAddress: Address): ControllerService"
        }, 
        {
            "location": "/api/classes/ControllerService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ControllerService/#getcontroller", 
            "text": "\u25ba  getController ():  Promise . any  Defined in  controllerService.ts:51  Returns promise of a Truffle contract wrapper for the controller. Could be either UController or Controller. You can know which one by checking the ControllerService instance property  isUController .  Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/ControllerService/#getcontrolleraddress", 
            "text": "\u25ba  getControllerAddress ():  Promise . string  Defined in  controllerService.ts:36  Returns promise of the address of the controller  Returns:   Promise . string", 
            "title": "getControllerAddress"
        }, 
        {
            "location": "/api/classes/ControllerService/#getisucontroller", 
            "text": "\u25ba  getIsUController ():  Promise . boolean  Defined in  controllerService.ts:28  Returns promise of whether avatar has a universal controller  Returns:   Promise . boolean", 
            "title": "getIsUController"
        }, 
        {
            "location": "/api/classes/DAO/", 
            "text": "API Reference\n \n \nDAO\n\n\nClass: DAO\n\n\nHelper class and factory for DAOs.\n\n\nIndex\n\n\nProperties\n\n\n\n\navatar\n\n\ncontroller\n\n\nhasUController\n\n\nreputation\n\n\ntoken\n\n\n\n\nMethods\n\n\n\n\ngetGlobalConstraints\n\n\ngetName\n\n\ngetParticipants\n\n\ngetSchemes\n\n\ngetTokenBalance\n\n\ngetTokenName\n\n\ngetTokenSymbol\n\n\nisGlobalConstraintRegistered\n\n\nisSchemeRegistered\n\n\nat\n\n\ngetDaoCreationEvents\n\n\ngetDaos\n\n\nnew\n\n\n\n\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nany\n \n\n\nDefined in dao.ts:126\n\n\nTruffle contract wrapper for the DAO's Avatar\n\n\n\n\n\n\ncontroller\n\n\n\u25cf  controller\n:  \nany\n \n\n\nDefined in dao.ts:130\n\n\nTruffle contract wrapper for the DAO's controller (Controller or UController by default, see DAO.hasUController)\n\n\n\n\n\n\nhasUController\n\n\n\u25cf  hasUController\n:  \nboolean\n \n\n\nDefined in dao.ts:134\n\n\ntrue\n if the DAO is using Arc's universal controller\n\n\n\n\n\n\nreputation\n\n\n\u25cf  reputation\n:  \nReputationWrapper\n \n\n\nDefined in dao.ts:142\n\n\nTruffle contract wrapper for the DAO's native reputation (Reputation)\n\n\n\n\n\n\ntoken\n\n\n\u25cf  token\n:  \nDaoTokenWrapper\n \n\n\nDefined in dao.ts:138\n\n\nTruffle contract wrapper for the DAO's native token (DAOToken by default)\n\n\n\n\nMethods\n\n\n\n\ngetGlobalConstraints\n\n\n\u25ba \ngetGlobalConstraints\n(name?: \nstring\n): \nPromise\n.\nArray\n.\nDaoGlobalConstraintInfo\n\n\nDefined in dao.ts:161\n\n\nReturns the promise of all os the global constraints currently registered into this DAO, as Array\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nOptionally filter by the name of a global constraint, like \"TokenCapGC\"\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nDaoGlobalConstraintInfo\n\n\n\n\n\n\ngetName\n\n\n\u25ba \ngetName\n(): \nPromise\n.\nstring\n\n\nDefined in dao.ts:228\n\n\nReturns the promise of the name of the DAO as stored in the Avatar\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetParticipants\n\n\n\u25ba \ngetParticipants\n(options?: \nGetParticipantsOptions\n): \nPromise\n.\nArray\n.\nParticipant\n\n\nDefined in dao.ts:178\n\n\nReturns promise of an array of \nParticipant\n representing accounts that currently have greater-than-zero reputation with this DAO. Optionally returns the current reputation of each participant.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetParticipantsOptions\n\n\n{} as GetParticipantsOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nParticipant\n\n\n\n\n\n\ngetSchemes\n\n\n\u25ba \ngetSchemes\n(name?: \nstring\n): \nPromise\n.\nArray\n.\nDaoSchemeInfo\n\n\nDefined in dao.ts:148\n\n\nReturns the promise of all of the schemes registered into this DAO, as Array\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nOptionally filter by the name of a scheme, like \"SchemeRegistrar\"\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nDaoSchemeInfo\n\n\n\n\n\n\ngetTokenBalance\n\n\n\u25ba \ngetTokenBalance\n(agentAddress: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in dao.ts:237\n\n\nReturns a promise of the given account's native token balance.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nagentAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetTokenName\n\n\n\u25ba \ngetTokenName\n(): \nPromise\n.\nstring\n\n\nDefined in dao.ts:244\n\n\nReturns the promise of the token name for the DAO as stored in the native token\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetTokenSymbol\n\n\n\u25ba \ngetTokenSymbol\n(): \nPromise\n.\nstring\n\n\nDefined in dao.ts:252\n\n\nReturns the promise of the token symbol for the DAO as stored in the native token\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\nisGlobalConstraintRegistered\n\n\n\u25ba \nisGlobalConstraintRegistered\n(gc: \nAddress\n): \nPromise\n.\nboolean\n\n\nDefined in dao.ts:220\n\n\nReturns whether the global constraint with the given address is registered to this DAO's controller\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngc\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nisSchemeRegistered\n\n\n\u25ba \nisSchemeRegistered\n(schemeAddress: \nAddress\n): \nPromise\n.\nboolean\n\n\nDefined in dao.ts:213\n\n\nReturns whether the scheme with the given address is registered to this DAO's controller\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nschemeAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\n\u00abStatic\u00bb at\n\n\n\u25ba \nat\n(avatarAddress: \nAddress\n): \nPromise\n.\nDAO\n\n\nDefined in dao.ts:67\n\n\nReturns the promise of a DAO at the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\nThe DAO avatar's address\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nDAO\n\n\n\n\n\n\n\u00abStatic\u00bb getDaoCreationEvents\n\n\n\u25ba \ngetDaoCreationEvents\n(options?: \nGetDaosOptions\n): \nPromise\n.\nEntityFetcherFactory\nAddress\n, \nInitialSchemesSetEventResult\n\n\nDefined in dao.ts:107\n\n\nReturn a promise of an EntityFetcherFactory to get/watch avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js.\n\n\nAn alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetDaosOptions\n\n\n{}\n\n\nOptional, default is \n{}\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nAddress\n, \nInitialSchemesSetEventResult\n\n\n\n\n\n\n\u00abStatic\u00bb getDaos\n\n\n\u25ba \ngetDaos\n(options?: \nGetDaosOptions\n): \nPromise\n.\nArray\n.\nAddress\n\n\nDefined in dao.ts:94\n\n\nReturn a promise of an array of avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js.\n\n\nAn alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetDaosOptions\n\n\n{}\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nAddress\n\n\n\n\n\n\n\u00abStatic\u00bb new\n\n\n\u25ba \nnew\n(options: \nNewDaoConfig\nTxGeneratingFunctionOptions\n): \nPromise\n.\nDAO\n\n\nDefined in dao.ts:24\n\n\nReturns the promise of a new DAO\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nNewDaoConfig\nTxGeneratingFunctionOptions\n\n\nConfiguration of the new DAO\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nDAO", 
            "title": "DAO"
        }, 
        {
            "location": "/api/classes/DAO/#class-dao", 
            "text": "Helper class and factory for DAOs.", 
            "title": "Class: DAO"
        }, 
        {
            "location": "/api/classes/DAO/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/DAO/#properties", 
            "text": "avatar  controller  hasUController  reputation  token", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DAO/#methods", 
            "text": "getGlobalConstraints  getName  getParticipants  getSchemes  getTokenBalance  getTokenName  getTokenSymbol  isGlobalConstraintRegistered  isSchemeRegistered  at  getDaoCreationEvents  getDaos  new", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DAO/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DAO/#avatar", 
            "text": "\u25cf  avatar :   any    Defined in dao.ts:126  Truffle contract wrapper for the DAO's Avatar", 
            "title": "avatar"
        }, 
        {
            "location": "/api/classes/DAO/#controller", 
            "text": "\u25cf  controller :   any    Defined in dao.ts:130  Truffle contract wrapper for the DAO's controller (Controller or UController by default, see DAO.hasUController)", 
            "title": "controller"
        }, 
        {
            "location": "/api/classes/DAO/#hasucontroller", 
            "text": "\u25cf  hasUController :   boolean    Defined in dao.ts:134  true  if the DAO is using Arc's universal controller", 
            "title": "hasUController"
        }, 
        {
            "location": "/api/classes/DAO/#reputation", 
            "text": "\u25cf  reputation :   ReputationWrapper    Defined in dao.ts:142  Truffle contract wrapper for the DAO's native reputation (Reputation)", 
            "title": "reputation"
        }, 
        {
            "location": "/api/classes/DAO/#token", 
            "text": "\u25cf  token :   DaoTokenWrapper    Defined in dao.ts:138  Truffle contract wrapper for the DAO's native token (DAOToken by default)", 
            "title": "token"
        }, 
        {
            "location": "/api/classes/DAO/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DAO/#getglobalconstraints", 
            "text": "\u25ba  getGlobalConstraints (name?:  string ):  Promise . Array . DaoGlobalConstraintInfo  Defined in dao.ts:161  Returns the promise of all os the global constraints currently registered into this DAO, as Array  Parameters:     Param  Type  Description      name  string  Optionally filter by the name of a global constraint, like \"TokenCapGC\"     Returns:   Promise . Array . DaoGlobalConstraintInfo", 
            "title": "getGlobalConstraints"
        }, 
        {
            "location": "/api/classes/DAO/#getname", 
            "text": "\u25ba  getName ():  Promise . string  Defined in dao.ts:228  Returns the promise of the name of the DAO as stored in the Avatar  Returns:   Promise . string", 
            "title": "getName"
        }, 
        {
            "location": "/api/classes/DAO/#getparticipants", 
            "text": "\u25ba  getParticipants (options?:  GetParticipantsOptions ):  Promise . Array . Participant  Defined in dao.ts:178  Returns promise of an array of  Participant  representing accounts that currently have greater-than-zero reputation with this DAO. Optionally returns the current reputation of each participant.  Parameters:     Param  Type  Default value  Description      options  GetParticipantsOptions  {} as GetParticipantsOptions  -     Returns:   Promise . Array . Participant", 
            "title": "getParticipants"
        }, 
        {
            "location": "/api/classes/DAO/#getschemes", 
            "text": "\u25ba  getSchemes (name?:  string ):  Promise . Array . DaoSchemeInfo  Defined in dao.ts:148  Returns the promise of all of the schemes registered into this DAO, as Array  Parameters:     Param  Type  Description      name  string  Optionally filter by the name of a scheme, like \"SchemeRegistrar\"     Returns:   Promise . Array . DaoSchemeInfo", 
            "title": "getSchemes"
        }, 
        {
            "location": "/api/classes/DAO/#gettokenbalance", 
            "text": "\u25ba  getTokenBalance (agentAddress:  Address ):  Promise . BigNumber  Defined in dao.ts:237  Returns a promise of the given account's native token balance.  Parameters:     Param  Type  Description      agentAddress  Address  -     Returns:   Promise . BigNumber", 
            "title": "getTokenBalance"
        }, 
        {
            "location": "/api/classes/DAO/#gettokenname", 
            "text": "\u25ba  getTokenName ():  Promise . string  Defined in dao.ts:244  Returns the promise of the token name for the DAO as stored in the native token  Returns:   Promise . string", 
            "title": "getTokenName"
        }, 
        {
            "location": "/api/classes/DAO/#gettokensymbol", 
            "text": "\u25ba  getTokenSymbol ():  Promise . string  Defined in dao.ts:252  Returns the promise of the token symbol for the DAO as stored in the native token  Returns:   Promise . string", 
            "title": "getTokenSymbol"
        }, 
        {
            "location": "/api/classes/DAO/#isglobalconstraintregistered", 
            "text": "\u25ba  isGlobalConstraintRegistered (gc:  Address ):  Promise . boolean  Defined in dao.ts:220  Returns whether the global constraint with the given address is registered to this DAO's controller  Parameters:     Param  Type  Description      gc  Address  -     Returns:   Promise . boolean", 
            "title": "isGlobalConstraintRegistered"
        }, 
        {
            "location": "/api/classes/DAO/#isschemeregistered", 
            "text": "\u25ba  isSchemeRegistered (schemeAddress:  Address ):  Promise . boolean  Defined in dao.ts:213  Returns whether the scheme with the given address is registered to this DAO's controller  Parameters:     Param  Type  Description      schemeAddress  Address  -     Returns:   Promise . boolean", 
            "title": "isSchemeRegistered"
        }, 
        {
            "location": "/api/classes/DAO/#static-at", 
            "text": "\u25ba  at (avatarAddress:  Address ):  Promise . DAO  Defined in dao.ts:67  Returns the promise of a DAO at the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      avatarAddress  Address  The DAO avatar's address     Returns:   Promise . DAO", 
            "title": "\u00abStatic\u00bb at"
        }, 
        {
            "location": "/api/classes/DAO/#static-getdaocreationevents", 
            "text": "\u25ba  getDaoCreationEvents (options?:  GetDaosOptions ):  Promise . EntityFetcherFactory Address ,  InitialSchemesSetEventResult  Defined in dao.ts:107  Return a promise of an EntityFetcherFactory to get/watch avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js.  An alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater.  Parameters:     Param  Type  Default value  Description      options  GetDaosOptions  {}  Optional, default is  {} .     Returns:   Promise . EntityFetcherFactory Address ,  InitialSchemesSetEventResult", 
            "title": "\u00abStatic\u00bb getDaoCreationEvents"
        }, 
        {
            "location": "/api/classes/DAO/#static-getdaos", 
            "text": "\u25ba  getDaos (options?:  GetDaosOptions ):  Promise . Array . Address  Defined in dao.ts:94  Return a promise of an array of avatar addresses for all of the DAOs created by the optionally-given DaoCreator contract. The default DaoCreator is the one deployed by the running version of Arc.js.  An alternative DaoCreator must implement an InitialSchemesSet event just like the Arc DaoCreater.  Parameters:     Param  Type  Default value  Description      options  GetDaosOptions  {}  -     Returns:   Promise . Array . Address", 
            "title": "\u00abStatic\u00bb getDaos"
        }, 
        {
            "location": "/api/classes/DAO/#static-new", 
            "text": "\u25ba  new (options:  NewDaoConfig TxGeneratingFunctionOptions ):  Promise . DAO  Defined in dao.ts:24  Returns the promise of a new DAO  Parameters:     Param  Type  Description      options  NewDaoConfig TxGeneratingFunctionOptions  Configuration of the new DAO     Returns:   Promise . DAO", 
            "title": "\u00abStatic\u00bb new"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/", 
            "text": "API Reference\n \n \nDaoCreatorFactoryType\n\n\nClass: DaoCreatorFactoryType\n\n\ndefined just to add good type checking\n\n\nHierarchy\n\n\nContractWrapperFactory\nDaoCreatorWrapper\n\n\n\u21b3 DaoCreatorFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nDaoCreatorWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew DaoCreatorFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nDaoCreatorFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nDaoCreatorFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nDaoCreatorWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nDaoCreatorWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nDaoCreatorWrapper\n\n\nInherited from \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \ncontractWrapperFactory.ts:77\n\n\nReturn a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.\n\n\nReturns:\n \nPromise\n.\nDaoCreatorWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(controllerCreatorAddress?: \nAddress\n): \nPromise\n.\nDaoCreatorWrapper\n\n\nOverrides \nContractWrapperFactory\n.\nnew\n\n\nDefined in \nwrappers/daoCreator.ts:357\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncontrollerCreatorAddress\n\n\nAddress\n\n\nThe ControllerCreator that Arc will use when migratinga new non-universal controller in \nforgeOrg\n.Typically is \nControllerCreator\n from Arc.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nDaoCreatorWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "DaoCreatorFactoryType"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#class-daocreatorfactorytype", 
            "text": "defined just to add good type checking", 
            "title": "Class: DaoCreatorFactoryType"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory DaoCreatorWrapper  \u21b3 DaoCreatorFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#implements", 
            "text": "IContractWrapperFactory DaoCreatorWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#new-daocreatorfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-daocreatorfactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   DaoCreatorFactoryType", 
            "title": "\u2295 new DaoCreatorFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): DaoCreatorFactoryType"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . DaoCreatorWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . DaoCreatorWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . DaoCreatorWrapper  Inherited from  ContractWrapperFactory . deployed  Defined in  contractWrapperFactory.ts:77  Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.  Returns:   Promise . DaoCreatorWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#new", 
            "text": "\u25ba  new (controllerCreatorAddress?:  Address ):  Promise . DaoCreatorWrapper  Overrides  ContractWrapperFactory . new  Defined in  wrappers/daoCreator.ts:357  Parameters:     Param  Type  Description      controllerCreatorAddress  Address  The ControllerCreator that Arc will use when migratinga new non-universal controller in  forgeOrg .Typically is  ControllerCreator  from Arc.     Returns:   Promise . DaoCreatorWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/DaoCreatorFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/", 
            "text": "API Reference\n \n \nDaoCreatorWrapper\n\n\nClass: DaoCreatorWrapper\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3 DaoCreatorWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nInitialSchemesSet\n\n\nNewOrg\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\nforgeOrg\n\n\nforgeOrgTransactionsCount\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nsetParameters\n\n\nsetSchemes\n\n\nsetSchemesTransactionsCount\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew DaoCreatorWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nDaoCreatorWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nDaoCreatorWrapper\n\n\n\n\nProperties\n\n\n\n\nInitialSchemesSet\n\n\n\u25cf  InitialSchemesSet\n:  \nEventFetcherFactory\nInitialSchemesSetEventResult\n \n\n\nDefined in \nwrappers/daoCreator.ts:25\n\n\n\n\n\n\nNewOrg\n\n\n\u25cf  NewOrg\n:  \nEventFetcherFactory\nNewOrgEventResult\n \n\n\nDefined in \nwrappers/daoCreator.ts:24\n\n\nEvents\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nDaoCreatorWrapper\n  =  DaoCreatorFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/daoCreator.ts:19\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Dao Creator\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/daoCreator.ts:18\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"DaoCreator\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/daoCreator.ts:17\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\nforgeOrg\n\n\n\u25ba \nforgeOrg\n(options?: \nForgeOrgConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/daoCreator.ts:31\n\n\nCreate a new DAO\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nForgeOrgConfig\n\n\n{} as ForgeOrgConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nforgeOrgTransactionsCount\n\n\n\u25ba \nforgeOrgTransactionsCount\n(options: \nForgeOrgConfig\n): \nnumber\n\n\nDefined in \nwrappers/daoCreator.ts:324\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nForgeOrgConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\n\n\n\n\n\nsetSchemes\n\n\n\u25ba \nsetSchemes\n(options?: \nSetSchemesConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/daoCreator.ts:108\n\n\nRegister schemes with newly-created DAO. Can only be invoked by the agent that created the DAO via forgeOrg, and at that, can only be called one time.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nSetSchemesConfig\n\n\n{} as SetSchemesConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nsetSchemesTransactionsCount\n\n\n\u25ba \nsetSchemesTransactionsCount\n(options: \nSchemesConfig\n): \nnumber\n\n\nDefined in \nwrappers/daoCreator.ts:328\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nSchemesConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nnumber", 
            "title": "DaoCreatorWrapper"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#class-daocreatorwrapper", 
            "text": "", 
            "title": "Class: DaoCreatorWrapper"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3 DaoCreatorWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#properties", 
            "text": "InitialSchemesSet  NewOrg  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#methods", 
            "text": "estimateGas  forgeOrg  forgeOrgTransactionsCount  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  setParameters  setSchemes  setSchemesTransactionsCount", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#new-daocreatorwrappersoliditycontract-any-web3eventservice-web3eventservice-daocreatorwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   DaoCreatorWrapper", 
            "title": "\u2295 new DaoCreatorWrapper(solidityContract: any, web3EventService: Web3EventService): DaoCreatorWrapper"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#initialschemesset", 
            "text": "\u25cf  InitialSchemesSet :   EventFetcherFactory InitialSchemesSetEventResult    Defined in  wrappers/daoCreator.ts:25", 
            "title": "InitialSchemesSet"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#neworg", 
            "text": "\u25cf  NewOrg :   EventFetcherFactory NewOrgEventResult    Defined in  wrappers/daoCreator.ts:24  Events", 
            "title": "NewOrg"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory DaoCreatorWrapper   =  DaoCreatorFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/daoCreator.ts:19", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Dao Creator\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/daoCreator.ts:18", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#name", 
            "text": "\u25cf  name :   string   = \"DaoCreator\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/daoCreator.ts:17", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#forgeorg", 
            "text": "\u25ba  forgeOrg (options?:  ForgeOrgConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/daoCreator.ts:31  Create a new DAO  Parameters:     Param  Type  Default value  Description      options  ForgeOrgConfig  {} as ForgeOrgConfig   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "forgeOrg"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#forgeorgtransactionscount", 
            "text": "\u25ba  forgeOrgTransactionsCount (options:  ForgeOrgConfig ):  number  Defined in  wrappers/daoCreator.ts:324  Parameters:     Param  Type  Description      options  ForgeOrgConfig  -     Returns:   number", 
            "title": "forgeOrgTransactionsCount"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#setschemes", 
            "text": "\u25ba  setSchemes (options?:  SetSchemesConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/daoCreator.ts:108  Register schemes with newly-created DAO. Can only be invoked by the agent that created the DAO via forgeOrg, and at that, can only be called one time.  Parameters:     Param  Type  Default value  Description      options  SetSchemesConfig  {} as SetSchemesConfig  -     Returns:   Promise . ArcTransactionResult", 
            "title": "setSchemes"
        }, 
        {
            "location": "/api/classes/DaoCreatorWrapper/#setschemestransactionscount", 
            "text": "\u25ba  setSchemesTransactionsCount (options:  SchemesConfig ):  number  Defined in  wrappers/daoCreator.ts:328  Parameters:     Param  Type  Description      options  SchemesConfig  -     Returns:   number", 
            "title": "setSchemesTransactionsCount"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/", 
            "text": "API Reference\n \n \nDaoTokenFactoryType\n\n\nClass: DaoTokenFactoryType\n\n\ndefined just to add good type checking\n\n\nHierarchy\n\n\nContractWrapperFactory\nDaoTokenWrapper\n\n\n\u21b3 DaoTokenFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nDaoTokenWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew DaoTokenFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nDaoTokenFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nDaoTokenFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nDaoTokenWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nDaoTokenWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nDaoTokenWrapper\n\n\nOverrides \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \nwrappers/daoToken.ts:346\n\n\nReturns:\n \nPromise\n.\nDaoTokenWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(name: \nstring\n, symbol: \nstring\n, cap: \nBigNumber\n): \nPromise\n.\nDaoTokenWrapper\n\n\nOverrides \nContractWrapperFactory\n.\nnew\n\n\nDefined in \nwrappers/daoToken.ts:350\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\n-\n\n\n\n\n\n\nsymbol\n\n\nstring\n\n\n-\n\n\n\n\n\n\ncap\n\n\nBigNumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nDaoTokenWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "DaoTokenFactoryType"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#class-daotokenfactorytype", 
            "text": "defined just to add good type checking", 
            "title": "Class: DaoTokenFactoryType"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory DaoTokenWrapper  \u21b3 DaoTokenFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#implements", 
            "text": "IContractWrapperFactory DaoTokenWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#new-daotokenfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-daotokenfactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   DaoTokenFactoryType", 
            "title": "\u2295 new DaoTokenFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): DaoTokenFactoryType"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . DaoTokenWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . DaoTokenWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . DaoTokenWrapper  Overrides  ContractWrapperFactory . deployed  Defined in  wrappers/daoToken.ts:346  Returns:   Promise . DaoTokenWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#new", 
            "text": "\u25ba  new (name:  string , symbol:  string , cap:  BigNumber ):  Promise . DaoTokenWrapper  Overrides  ContractWrapperFactory . new  Defined in  wrappers/daoToken.ts:350  Parameters:     Param  Type  Description      name  string  -    symbol  string  -    cap  BigNumber  -     Returns:   Promise . DaoTokenWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/DaoTokenFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/", 
            "text": "API Reference\n \n \nDaoTokenWrapper\n\n\nClass: DaoTokenWrapper\n\n\nHierarchy\n\n\n\u21b3  \nMintableTokenWrapper\n\n\n\u21b3 DaoTokenWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nIErc827TokenWrapper\n\n\nIBurnableTokenWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nApproval\n\n\nBurn\n\n\nMint\n\n\nMintFinished\n\n\nTransfer\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nallowance\n\n\napprove\n\n\napproveAndCall\n\n\nburn\n\n\ndecreaseApproval\n\n\ndecreaseApprovalAndCall\n\n\nestimateGas\n\n\nfinishMinting\n\n\ngetBalanceOf\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\ngetTokenCap\n\n\ngetTokenName\n\n\ngetTokenSymbol\n\n\ngetTotalSupply\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nincreaseApproval\n\n\nincreaseApprovalAndCall\n\n\nmint\n\n\nsetParameters\n\n\ntransfer\n\n\ntransferAndCall\n\n\ntransferFrom\n\n\ntransferFromAndCall\n\n\ngetGenToken\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew DaoTokenWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nDaoTokenWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nDaoTokenWrapper\n\n\n\n\nProperties\n\n\n\n\nApproval\n\n\n\u25cf  Approval\n:  \nEventFetcherFactory\nApprovalEventResult\n \n\n\nInherited from \nStandardTokenWrapper\n.\nApproval\n\n\nDefined in \nwrappers/standardToken.ts:16\n\n\n\n\n\n\nBurn\n\n\n\u25cf  Burn\n:  \nEventFetcherFactory\nBurnEventResult\n \n\n\nImplementation of \nIBurnableTokenWrapper\n.\nBurn\n\n\nDefined in \nwrappers/daoToken.ts:48\n\n\n\n\n\n\nMint\n\n\n\u25cf  Mint\n:  \nEventFetcherFactory\nMintEventResult\n \n\n\nInherited from \nMintableTokenWrapper\n.\nMint\n\n\nDefined in \nwrappers/mintableToken.ts:22\n\n\n\n\n\n\nMintFinished\n\n\n\u25cf  MintFinished\n:  \nEventFetcherFactory\nMintFinishedEventResult\n \n\n\nInherited from \nMintableTokenWrapper\n.\nMintFinished\n\n\nDefined in \nwrappers/mintableToken.ts:23\n\n\n\n\n\n\nTransfer\n\n\n\u25cf  Transfer\n:  \nEventFetcherFactory\nTransferEventResult\n \n\n\nInherited from \nStandardTokenWrapper\n.\nTransfer\n\n\nDefined in \nwrappers/standardToken.ts:17\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nDaoTokenWrapper\n  =  DaoTokenFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nMintableTokenWrapper\n.\nfactory\n\n\nDefined in \nwrappers/daoToken.ts:46\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"DAO Token\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nMintableTokenWrapper\n.\nfriendlyName\n\n\nDefined in \nwrappers/daoToken.ts:45\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"DAOToken\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nMintableTokenWrapper\n.\nname\n\n\nDefined in \nwrappers/daoToken.ts:44\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nallowance\n\n\n\u25ba \nallowance\n(options: \nStandardTokenAllowanceOptions\n): \nPromise\n.\nBigNumber\n\n\nInherited from \nStandardTokenWrapper\n.\nallowance\n\n\nDefined in \nwrappers/standardToken.ts:198\n\n\nReturns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenAllowanceOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\napprove\n\n\n\u25ba \napprove\n(options: \nStandardTokenApproveOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nMintableTokenWrapper\n.\napprove\n\n\nDefined in \nwrappers/daoToken.ts:293\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenApproveOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\napproveAndCall\n\n\n\u25ba \napproveAndCall\n(options: \nApproveAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIErc827TokenWrapper\n.\napproveAndCall\n\n\nDefined in \nwrappers/daoToken.ts:106\n\n\nApprove transfer of tokens by msg.sender (or \nonBehalfOf\n, if given) from the given \"spender\". Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nApproveAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nburn\n\n\n\u25ba \nburn\n(options: \nDaoTokenBurnOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIBurnableTokenWrapper\n.\nburn\n\n\nDefined in \nwrappers/daoToken.ts:81\n\n\nBurn the given number of tokens\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nDaoTokenBurnOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ndecreaseApproval\n\n\n\u25ba \ndecreaseApproval\n(options: \nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nInherited from \nMintableTokenWrapper\n.\ndecreaseApproval\n\n\nOverrides \nStandardTokenWrapper\n.\ndecreaseApproval\n\n\nDefined in \nwrappers/mintableToken.ts:100\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ndecreaseApprovalAndCall\n\n\n\u25ba \ndecreaseApprovalAndCall\n(options: \nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIErc827TokenWrapper\n.\ndecreaseApprovalAndCall\n\n\nDefined in \nwrappers/daoToken.ts:250\n\n\nDecrease the number of tokens approved that msg.sender (or \nonBehalfOf\n if given) may transfer from the given \"spender\". Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\nfinishMinting\n\n\n\u25ba \nfinishMinting\n(options?: \nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nMintableTokenWrapper\n.\nfinishMinting\n\n\nDefined in \nwrappers/daoToken.ts:325\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ngetBalanceOf\n\n\n\u25ba \ngetBalanceOf\n(account: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nInherited from \nStandardTokenWrapper\n.\ngetBalanceOf\n\n\nDefined in \nwrappers/standardToken.ts:175\n\n\nReturns a promise of the given account's current token balance.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccount\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetTokenCap\n\n\n\u25ba \ngetTokenCap\n(): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/daoToken.ts:288\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetTokenName\n\n\n\u25ba \ngetTokenName\n(): \nPromise\n.\nstring\n\n\nDefined in \nwrappers/daoToken.ts:278\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetTokenSymbol\n\n\n\u25ba \ngetTokenSymbol\n(): \nPromise\n.\nstring\n\n\nDefined in \nwrappers/daoToken.ts:283\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\ngetTotalSupply\n\n\n\u25ba \ngetTotalSupply\n(): \nPromise\n.\nBigNumber\n\n\nInherited from \nStandardTokenWrapper\n.\ngetTotalSupply\n\n\nDefined in \nwrappers/standardToken.ts:187\n\n\nReturns a promise of the token's total number of tokens.\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nincreaseApproval\n\n\n\u25ba \nincreaseApproval\n(options: \nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nMintableTokenWrapper\n.\nincreaseApproval\n\n\nDefined in \nwrappers/daoToken.ts:317\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nincreaseApprovalAndCall\n\n\n\u25ba \nincreaseApprovalAndCall\n(options: \nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIErc827TokenWrapper\n.\nincreaseApprovalAndCall\n\n\nDefined in \nwrappers/daoToken.ts:216\n\n\nIncrease the number of tokens approved that msg.sender (or \nonBehalfOf\n, if given) may transfer from the given \"spender\". Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nmint\n\n\n\u25ba \nmint\n(options: \nDaoTokenMintOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nMintableTokenWrapper\n.\nmint\n\n\nDefined in \nwrappers/daoToken.ts:54\n\n\nMint tokens to recipient\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nDaoTokenMintOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\n\n\n\n\n\ntransfer\n\n\n\u25ba \ntransfer\n(options: \nStandardTokenTransferOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nMintableTokenWrapper\n.\ntransfer\n\n\nDefined in \nwrappers/daoToken.ts:301\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenTransferOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ntransferAndCall\n\n\n\u25ba \ntransferAndCall\n(options: \nTransferAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIErc827TokenWrapper\n.\ntransferAndCall\n\n\nDefined in \nwrappers/daoToken.ts:139\n\n\nTransfer tokens from the current account to another. Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nTransferAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ntransferFrom\n\n\n\u25ba \ntransferFrom\n(options: \nStandardTokenTransferFromOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nMintableTokenWrapper\n.\ntransferFrom\n\n\nDefined in \nwrappers/daoToken.ts:309\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenTransferFromOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ntransferFromAndCall\n\n\n\u25ba \ntransferFromAndCall\n(options: \nTransferFromAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIErc827TokenWrapper\n.\ntransferFromAndCall\n\n\nDefined in \nwrappers/daoToken.ts:175\n\n\nTransfer tokens from one address to another. Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nTransferFromAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\n\u00abStatic\u00bb getGenToken\n\n\n\u25ba \ngetGenToken\n(): \nPromise\n.\nDaoTokenWrapper\n\n\nDefined in \nwrappers/daoToken.ts:39\n\n\nReturns promise of DaoTokenWrapper on the global GEN token.\n\n\nReturns:\n \nPromise\n.\nDaoTokenWrapper", 
            "title": "DaoTokenWrapper"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#class-daotokenwrapper", 
            "text": "", 
            "title": "Class: DaoTokenWrapper"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#hierarchy", 
            "text": "\u21b3   MintableTokenWrapper  \u21b3 DaoTokenWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#implements", 
            "text": "IContractWrapperBase  IErc827TokenWrapper  IBurnableTokenWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#properties", 
            "text": "Approval  Burn  Mint  MintFinished  Transfer  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#methods", 
            "text": "allowance  approve  approveAndCall  burn  decreaseApproval  decreaseApprovalAndCall  estimateGas  finishMinting  getBalanceOf  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  getTokenCap  getTokenName  getTokenSymbol  getTotalSupply  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  increaseApproval  increaseApprovalAndCall  mint  setParameters  transfer  transferAndCall  transferFrom  transferFromAndCall  getGenToken", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#new-daotokenwrappersoliditycontract-any-web3eventservice-web3eventservice-daotokenwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   DaoTokenWrapper", 
            "title": "\u2295 new DaoTokenWrapper(solidityContract: any, web3EventService: Web3EventService): DaoTokenWrapper"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#approval", 
            "text": "\u25cf  Approval :   EventFetcherFactory ApprovalEventResult    Inherited from  StandardTokenWrapper . Approval  Defined in  wrappers/standardToken.ts:16", 
            "title": "Approval"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#burn", 
            "text": "\u25cf  Burn :   EventFetcherFactory BurnEventResult    Implementation of  IBurnableTokenWrapper . Burn  Defined in  wrappers/daoToken.ts:48", 
            "title": "Burn"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#mint", 
            "text": "\u25cf  Mint :   EventFetcherFactory MintEventResult    Inherited from  MintableTokenWrapper . Mint  Defined in  wrappers/mintableToken.ts:22", 
            "title": "Mint"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#mintfinished", 
            "text": "\u25cf  MintFinished :   EventFetcherFactory MintFinishedEventResult    Inherited from  MintableTokenWrapper . MintFinished  Defined in  wrappers/mintableToken.ts:23", 
            "title": "MintFinished"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#transfer", 
            "text": "\u25cf  Transfer :   EventFetcherFactory TransferEventResult    Inherited from  StandardTokenWrapper . Transfer  Defined in  wrappers/standardToken.ts:17", 
            "title": "Transfer"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory DaoTokenWrapper   =  DaoTokenFactory  Implementation of  IContractWrapperBase . factory  Overrides  MintableTokenWrapper . factory  Defined in  wrappers/daoToken.ts:46", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"DAO Token\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  MintableTokenWrapper . friendlyName  Defined in  wrappers/daoToken.ts:45", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#name", 
            "text": "\u25cf  name :   string   = \"DAOToken\"  Implementation of  IContractWrapperBase . name  Overrides  MintableTokenWrapper . name  Defined in  wrappers/daoToken.ts:44", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#allowance", 
            "text": "\u25ba  allowance (options:  StandardTokenAllowanceOptions ):  Promise . BigNumber  Inherited from  StandardTokenWrapper . allowance  Defined in  wrappers/standardToken.ts:198  Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account.  Parameters:     Param  Type  Description      options  StandardTokenAllowanceOptions  -     Returns:   Promise . BigNumber", 
            "title": "allowance"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#approve", 
            "text": "\u25ba  approve (options:  StandardTokenApproveOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  MintableTokenWrapper . approve  Defined in  wrappers/daoToken.ts:293  Parameters:     Param  Type  Description      options  StandardTokenApproveOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "approve"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#approveandcall", 
            "text": "\u25ba  approveAndCall (options:  ApproveAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IErc827TokenWrapper . approveAndCall  Defined in  wrappers/daoToken.ts:106  Approve transfer of tokens by msg.sender (or  onBehalfOf , if given) from the given \"spender\". Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  ApproveAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "approveAndCall"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#burn_1", 
            "text": "\u25ba  burn (options:  DaoTokenBurnOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IBurnableTokenWrapper . burn  Defined in  wrappers/daoToken.ts:81  Burn the given number of tokens  Parameters:     Param  Type  Description      options  DaoTokenBurnOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "burn"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#decreaseapproval", 
            "text": "\u25ba  decreaseApproval (options:  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Inherited from  MintableTokenWrapper . decreaseApproval  Overrides  StandardTokenWrapper . decreaseApproval  Defined in  wrappers/mintableToken.ts:100  Parameters:     Param  Type  Description      options  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "decreaseApproval"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#decreaseapprovalandcall", 
            "text": "\u25ba  decreaseApprovalAndCall (options:  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IErc827TokenWrapper . decreaseApprovalAndCall  Defined in  wrappers/daoToken.ts:250  Decrease the number of tokens approved that msg.sender (or  onBehalfOf  if given) may transfer from the given \"spender\". Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "decreaseApprovalAndCall"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#finishminting", 
            "text": "\u25ba  finishMinting (options?:  TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  MintableTokenWrapper . finishMinting  Defined in  wrappers/daoToken.ts:325  Parameters:     Param  Type  Description      options  TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "finishMinting"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#getbalanceof", 
            "text": "\u25ba  getBalanceOf (account:  Address ):  Promise . BigNumber  Inherited from  StandardTokenWrapper . getBalanceOf  Defined in  wrappers/standardToken.ts:175  Returns a promise of the given account's current token balance.  Parameters:     Param  Type  Description      account  Address  -     Returns:   Promise . BigNumber", 
            "title": "getBalanceOf"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#gettokencap", 
            "text": "\u25ba  getTokenCap ():  Promise . BigNumber  Defined in  wrappers/daoToken.ts:288  Returns:   Promise . BigNumber", 
            "title": "getTokenCap"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#gettokenname", 
            "text": "\u25ba  getTokenName ():  Promise . string  Defined in  wrappers/daoToken.ts:278  Returns:   Promise . string", 
            "title": "getTokenName"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#gettokensymbol", 
            "text": "\u25ba  getTokenSymbol ():  Promise . string  Defined in  wrappers/daoToken.ts:283  Returns:   Promise . string", 
            "title": "getTokenSymbol"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#gettotalsupply", 
            "text": "\u25ba  getTotalSupply ():  Promise . BigNumber  Inherited from  StandardTokenWrapper . getTotalSupply  Defined in  wrappers/standardToken.ts:187  Returns a promise of the token's total number of tokens.  Returns:   Promise . BigNumber", 
            "title": "getTotalSupply"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#increaseapproval", 
            "text": "\u25ba  increaseApproval (options:  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  MintableTokenWrapper . increaseApproval  Defined in  wrappers/daoToken.ts:317  Parameters:     Param  Type  Description      options  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "increaseApproval"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#increaseapprovalandcall", 
            "text": "\u25ba  increaseApprovalAndCall (options:  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IErc827TokenWrapper . increaseApprovalAndCall  Defined in  wrappers/daoToken.ts:216  Increase the number of tokens approved that msg.sender (or  onBehalfOf , if given) may transfer from the given \"spender\". Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "increaseApprovalAndCall"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#mint_1", 
            "text": "\u25ba  mint (options:  DaoTokenMintOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  MintableTokenWrapper . mint  Defined in  wrappers/daoToken.ts:54  Mint tokens to recipient  Parameters:     Param  Type  Description      options  DaoTokenMintOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "mint"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#transfer_1", 
            "text": "\u25ba  transfer (options:  StandardTokenTransferOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  MintableTokenWrapper . transfer  Defined in  wrappers/daoToken.ts:301  Parameters:     Param  Type  Description      options  StandardTokenTransferOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transfer"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#transferandcall", 
            "text": "\u25ba  transferAndCall (options:  TransferAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IErc827TokenWrapper . transferAndCall  Defined in  wrappers/daoToken.ts:139  Transfer tokens from the current account to another. Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  TransferAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transferAndCall"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#transferfrom", 
            "text": "\u25ba  transferFrom (options:  StandardTokenTransferFromOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  MintableTokenWrapper . transferFrom  Defined in  wrappers/daoToken.ts:309  Parameters:     Param  Type  Description      options  StandardTokenTransferFromOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transferFrom"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#transferfromandcall", 
            "text": "\u25ba  transferFromAndCall (options:  TransferFromAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IErc827TokenWrapper . transferFromAndCall  Defined in  wrappers/daoToken.ts:175  Transfer tokens from one address to another. Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  TransferFromAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transferFromAndCall"
        }, 
        {
            "location": "/api/classes/DaoTokenWrapper/#static-getgentoken", 
            "text": "\u25ba  getGenToken ():  Promise . DaoTokenWrapper  Defined in  wrappers/daoToken.ts:39  Returns promise of DaoTokenWrapper on the global GEN token.  Returns:   Promise . DaoTokenWrapper", 
            "title": "\u00abStatic\u00bb getGenToken"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/", 
            "text": "API Reference\n \n \nDefaultSchemePermissions\n\n\nClass: DefaultSchemePermissions\n\n\nThese are the permissions that are the minimum that each scheme must have to be able to perform its full range of functionality.\n\n\nNote that '1' is always assigned to a scheme by the Controller when the scheme is registered with the controller.\n\n\nIndex\n\n\nProperties\n\n\n\n\nAllPermissions\n\n\nContributionReward\n\n\nGenesisProtocol\n\n\nGlobalConstraintRegistrar\n\n\nMinimumPermissions\n\n\nNoPermissions\n\n\nSchemeRegistrar\n\n\nUpgradeScheme\n\n\nVestingScheme\n\n\nVoteInOrganizationScheme\n\n\n\n\n\n\nProperties\n\n\n\n\n\u00abStatic\u00bb AllPermissions\n\n\n\u25cf  AllPermissions\n:  \nSchemePermissions\n  =  SchemePermissions.All\n\n\nDefined in \ncommonTypes.ts:37\n\n\n\n\n\n\n\u00abStatic\u00bb ContributionReward\n\n\n\u25cf  ContributionReward\n:  \nSchemePermissions\n  =  SchemePermissions.IsRegistered\n\n\nDefined in \ncommonTypes.ts:38\n\n\n\n\n\n\n\u00abStatic\u00bb GenesisProtocol\n\n\n\u25cf  GenesisProtocol\n:  \nSchemePermissions\n  =  SchemePermissions.IsRegistered\n\n\nDefined in \ncommonTypes.ts:39\n\n\n\n\n\n\n\u00abStatic\u00bb GlobalConstraintRegistrar\n\n\n\u25cf  GlobalConstraintRegistrar\n:  \nSchemePermissions\n  =  SchemePermissions.IsRegistered | SchemePermissions.CanAddRemoveGlobalConstraints\n\n\nDefined in \ncommonTypes.ts:40\n\n\n\n\n\n\n\u00abStatic\u00bb MinimumPermissions\n\n\n\u25cf  MinimumPermissions\n:  \nSchemePermissions\n  =  SchemePermissions.IsRegistered\n\n\nDefined in \ncommonTypes.ts:36\n\n\n\n\n\n\n\u00abStatic\u00bb NoPermissions\n\n\n\u25cf  NoPermissions\n:  \nSchemePermissions\n  =  SchemePermissions.None\n\n\nDefined in \ncommonTypes.ts:35\n\n\n\n\n\n\n\u00abStatic\u00bb SchemeRegistrar\n\n\n\u25cf  SchemeRegistrar\n:  \nSchemePermissions\n  =  SchemePermissions.All\n\n\nDefined in \ncommonTypes.ts:44\n\n\nHas all permissions so that it can register/unregister all schemes\n\n\n\n\n\n\n\u00abStatic\u00bb UpgradeScheme\n\n\n\u25cf  UpgradeScheme\n:  \nSchemePermissions\n  =  SchemePermissions.IsRegistered | SchemePermissions.CanRegisterSchemes | SchemePermissions.CanUpgradeController\n\n\nDefined in \ncommonTypes.ts:45\n\n\n\n\n\n\n\u00abStatic\u00bb VestingScheme\n\n\n\u25cf  VestingScheme\n:  \nSchemePermissions\n  =  SchemePermissions.IsRegistered\n\n\nDefined in \ncommonTypes.ts:46\n\n\n\n\n\n\n\u00abStatic\u00bb VoteInOrganizationScheme\n\n\n\u25cf  VoteInOrganizationScheme\n:  \nSchemePermissions\n  =  SchemePermissions.IsRegistered | SchemePermissions.CanCallDelegateCall\n\n\nDefined in \ncommonTypes.ts:47", 
            "title": "DefaultSchemePermissions"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#class-defaultschemepermissions", 
            "text": "These are the permissions that are the minimum that each scheme must have to be able to perform its full range of functionality.  Note that '1' is always assigned to a scheme by the Controller when the scheme is registered with the controller.", 
            "title": "Class: DefaultSchemePermissions"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#properties", 
            "text": "AllPermissions  ContributionReward  GenesisProtocol  GlobalConstraintRegistrar  MinimumPermissions  NoPermissions  SchemeRegistrar  UpgradeScheme  VestingScheme  VoteInOrganizationScheme", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-allpermissions", 
            "text": "\u25cf  AllPermissions :   SchemePermissions   =  SchemePermissions.All  Defined in  commonTypes.ts:37", 
            "title": "\u00abStatic\u00bb AllPermissions"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-contributionreward", 
            "text": "\u25cf  ContributionReward :   SchemePermissions   =  SchemePermissions.IsRegistered  Defined in  commonTypes.ts:38", 
            "title": "\u00abStatic\u00bb ContributionReward"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-genesisprotocol", 
            "text": "\u25cf  GenesisProtocol :   SchemePermissions   =  SchemePermissions.IsRegistered  Defined in  commonTypes.ts:39", 
            "title": "\u00abStatic\u00bb GenesisProtocol"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-globalconstraintregistrar", 
            "text": "\u25cf  GlobalConstraintRegistrar :   SchemePermissions   =  SchemePermissions.IsRegistered | SchemePermissions.CanAddRemoveGlobalConstraints  Defined in  commonTypes.ts:40", 
            "title": "\u00abStatic\u00bb GlobalConstraintRegistrar"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-minimumpermissions", 
            "text": "\u25cf  MinimumPermissions :   SchemePermissions   =  SchemePermissions.IsRegistered  Defined in  commonTypes.ts:36", 
            "title": "\u00abStatic\u00bb MinimumPermissions"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-nopermissions", 
            "text": "\u25cf  NoPermissions :   SchemePermissions   =  SchemePermissions.None  Defined in  commonTypes.ts:35", 
            "title": "\u00abStatic\u00bb NoPermissions"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-schemeregistrar", 
            "text": "\u25cf  SchemeRegistrar :   SchemePermissions   =  SchemePermissions.All  Defined in  commonTypes.ts:44  Has all permissions so that it can register/unregister all schemes", 
            "title": "\u00abStatic\u00bb SchemeRegistrar"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-upgradescheme", 
            "text": "\u25cf  UpgradeScheme :   SchemePermissions   =  SchemePermissions.IsRegistered | SchemePermissions.CanRegisterSchemes | SchemePermissions.CanUpgradeController  Defined in  commonTypes.ts:45", 
            "title": "\u00abStatic\u00bb UpgradeScheme"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-vestingscheme", 
            "text": "\u25cf  VestingScheme :   SchemePermissions   =  SchemePermissions.IsRegistered  Defined in  commonTypes.ts:46", 
            "title": "\u00abStatic\u00bb VestingScheme"
        }, 
        {
            "location": "/api/classes/DefaultSchemePermissions/#static-voteinorganizationscheme", 
            "text": "\u25cf  VoteInOrganizationScheme :   SchemePermissions   =  SchemePermissions.IsRegistered | SchemePermissions.CanCallDelegateCall  Defined in  commonTypes.ts:47", 
            "title": "\u00abStatic\u00bb VoteInOrganizationScheme"
        }, 
        {
            "location": "/api/classes/EventSubscription/", 
            "text": "API Reference\n \n \nEventSubscription\n\n\nClass: EventSubscription\n\n\nImplements\n\n\n\n\nIEventSubscription\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nunsubscribe\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew EventSubscription\n(key: \nEventSubscriptionKey\n): \nEventSubscription\n\n\nDefined in \npubSubEventService.ts:203\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nEventSubscriptionKey\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEventSubscription\n\n\n\n\nMethods\n\n\n\n\nunsubscribe\n\n\n\u25ba \nunsubscribe\n(milliseconds?: \nnumber\n): \nPromise\n.\nvoid\n\n\nImplementation of \nIEventSubscription\n.\nunsubscribe\n\n\nDefined in \npubSubEventService.ts:212\n\n\nUnsubscribes after optional timeout.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmilliseconds\n\n\nnumber\n\n\n-1\n\n\nnumber of milliseconds to timeout.Default is -1 which means not to timeout at all.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "EventSubscription"
        }, 
        {
            "location": "/api/classes/EventSubscription/#class-eventsubscription", 
            "text": "", 
            "title": "Class: EventSubscription"
        }, 
        {
            "location": "/api/classes/EventSubscription/#implements", 
            "text": "IEventSubscription", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/EventSubscription/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/EventSubscription/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/EventSubscription/#methods", 
            "text": "unsubscribe", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/EventSubscription/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/EventSubscription/#new-eventsubscriptionkey-eventsubscriptionkey-eventsubscription", 
            "text": "Defined in  pubSubEventService.ts:203  Parameters:     Param  Type  Description      key  EventSubscriptionKey  -     Returns:   EventSubscription", 
            "title": "\u2295 new EventSubscription(key: EventSubscriptionKey): EventSubscription"
        }, 
        {
            "location": "/api/classes/EventSubscription/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/EventSubscription/#unsubscribe", 
            "text": "\u25ba  unsubscribe (milliseconds?:  number ):  Promise . void  Implementation of  IEventSubscription . unsubscribe  Defined in  pubSubEventService.ts:212  Unsubscribes after optional timeout.  Parameters:     Param  Type  Default value  Description      milliseconds  number  -1  number of milliseconds to timeout.Default is -1 which means not to timeout at all.     Returns:   Promise . void", 
            "title": "unsubscribe"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/", 
            "text": "API Reference\n \n \nGenesisDaoCreator\n\n\nClass: GenesisDaoCreator\n\n\nMigration callback\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nforge\n\n\nsetSchemes\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew GenesisDaoCreator\n(web3: \nWeb3\n, network: \nstring\n): \nGenesisDaoCreator\n\n\nDefined in scripts/createGenesisDao.ts:42\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nweb3\n\n\nWeb3\n\n\n-\n\n\n\n\n\n\nnetwork\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nGenesisDaoCreator\n\n\n\n\nMethods\n\n\n\n\nforge\n\n\n\u25ba \nforge\n(foundersConfigurationLocation: \nstring\n): \nPromise\n.\nForgedDaoInfo\n\n\nDefined in scripts/createGenesisDao.ts:52\n\n\nForge the Genesis DAO. Note this does not set the schemes.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfoundersConfigurationLocation\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nForgedDaoInfo\n\n\n\n\n\n\nsetSchemes\n\n\n\u25ba \nsetSchemes\n(forgedDaoInfo: \nForgedDaoInfo\n): \nPromise\n.\nvoid\n\n\nDefined in scripts/createGenesisDao.ts:143\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nforgedDaoInfo\n\n\nForgedDaoInfo\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "GenesisDaoCreator"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#class-genesisdaocreator", 
            "text": "Migration callback", 
            "title": "Class: GenesisDaoCreator"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#methods", 
            "text": "forge  setSchemes", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#new-genesisdaocreatorweb3-web3-network-string-genesisdaocreator", 
            "text": "Defined in scripts/createGenesisDao.ts:42  Parameters:     Param  Type  Description      web3  Web3  -    network  string  -     Returns:   GenesisDaoCreator", 
            "title": "\u2295 new GenesisDaoCreator(web3: Web3, network: string): GenesisDaoCreator"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#forge", 
            "text": "\u25ba  forge (foundersConfigurationLocation:  string ):  Promise . ForgedDaoInfo  Defined in scripts/createGenesisDao.ts:52  Forge the Genesis DAO. Note this does not set the schemes.  Parameters:     Param  Type  Description      foundersConfigurationLocation  string  -     Returns:   Promise . ForgedDaoInfo", 
            "title": "forge"
        }, 
        {
            "location": "/api/classes/GenesisDaoCreator/#setschemes", 
            "text": "\u25ba  setSchemes (forgedDaoInfo:  ForgedDaoInfo ):  Promise . void  Defined in scripts/createGenesisDao.ts:143  Parameters:     Param  Type  Description      forgedDaoInfo  ForgedDaoInfo  -     Returns:   Promise . void", 
            "title": "setSchemes"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/", 
            "text": "API Reference\n \n \nGenesisProtocolFactoryType\n\n\nClass: GenesisProtocolFactoryType\n\n\ndefined just to add good type checking\n\n\nHierarchy\n\n\nContractWrapperFactory\nGenesisProtocolWrapper\n\n\n\u21b3 GenesisProtocolFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nGenesisProtocolWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew GenesisProtocolFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nGenesisProtocolFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nGenesisProtocolFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nGenesisProtocolWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGenesisProtocolWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nGenesisProtocolWrapper\n\n\nInherited from \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \ncontractWrapperFactory.ts:77\n\n\nReturn a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.\n\n\nReturns:\n \nPromise\n.\nGenesisProtocolWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(stakingTokenAddress: \nAddress\n): \nPromise\n.\nGenesisProtocolWrapper\n\n\nOverrides \nContractWrapperFactory\n.\nnew\n\n\nDefined in \nwrappers/genesisProtocol.ts:954\n\n\nMigrate a new instance of GenesisProtocol.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nstakingTokenAddress\n\n\nAddress\n\n\nThe token that will be used when staking. Typicallyis the token of the DAO that is going to use this GenesisProtocol.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGenesisProtocolWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "GenesisProtocolFactoryType"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#class-genesisprotocolfactorytype", 
            "text": "defined just to add good type checking", 
            "title": "Class: GenesisProtocolFactoryType"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory GenesisProtocolWrapper  \u21b3 GenesisProtocolFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#implements", 
            "text": "IContractWrapperFactory GenesisProtocolWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#new-genesisprotocolfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-genesisprotocolfactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   GenesisProtocolFactoryType", 
            "title": "\u2295 new GenesisProtocolFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): GenesisProtocolFactoryType"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . GenesisProtocolWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . GenesisProtocolWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . GenesisProtocolWrapper  Inherited from  ContractWrapperFactory . deployed  Defined in  contractWrapperFactory.ts:77  Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.  Returns:   Promise . GenesisProtocolWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#new", 
            "text": "\u25ba  new (stakingTokenAddress:  Address ):  Promise . GenesisProtocolWrapper  Overrides  ContractWrapperFactory . new  Defined in  wrappers/genesisProtocol.ts:954  Migrate a new instance of GenesisProtocol.  Parameters:     Param  Type  Description      stakingTokenAddress  Address  The token that will be used when staking. Typicallyis the token of the DAO that is going to use this GenesisProtocol.     Returns:   Promise . GenesisProtocolWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/GenesisProtocolFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/", 
            "text": "API Reference\n \n \nGenesisProtocolWrapper\n\n\nClass: GenesisProtocolWrapper\n\n\nHierarchy\n\n\n\u21b3  \nIntVoteInterfaceWrapper\n\n\n\u21b3 GenesisProtocolWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nIIntVoteInterface\n\n\nSchemeWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nCancelProposal\n\n\nCancelVoting\n\n\nExecuteProposal\n\n\nGPExecuteProposal\n\n\nNewProposal\n\n\nRedeem\n\n\nRedeemDaoBounty\n\n\nRedeemReputation\n\n\nStake\n\n\nVoteProposal\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\nExecutedProposals\n\n\nVotableGenesisProtocolProposals\n\n\nVotableProposals\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\ncancelProposal\n\n\ncancelVote\n\n\nestimateGas\n\n\nexecute\n\n\ngetAllowedRangeOfChoices\n\n\ngetBoostedProposalsCount\n\n\ngetController\n\n\ngetCurrentVoteStatus\n\n\ngetDefaultPermissions\n\n\ngetNumberOfChoices\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetProposal\n\n\ngetProposalAvatar\n\n\ngetProposalExecutionState\n\n\ngetProposalStatus\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\ngetSchemePermissions\n\n\ngetScore\n\n\ngetScoreThresholdParams\n\n\ngetStakerInfo\n\n\ngetStakingToken\n\n\ngetStakingTokenAddress\n\n\ngetState\n\n\ngetThreshold\n\n\ngetTokenBalances\n\n\ngetVoteStatus\n\n\ngetVoterInfo\n\n\ngetWinningVote\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nisAbstainAllow\n\n\nisVotable\n\n\nownerVote\n\n\npropose\n\n\nredeem\n\n\nredeemDaoBounty\n\n\nsetParameters\n\n\nshouldBoost\n\n\nstake\n\n\nstakeWithApproval\n\n\nvote\n\n\nvoteStatus\n\n\nvoteWithSpecifiedAmounts\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew GenesisProtocolWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nGenesisProtocolWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nGenesisProtocolWrapper\n\n\n\n\nProperties\n\n\n\n\nCancelProposal\n\n\n\u25cf  CancelProposal\n:  \nEventFetcherFactory\nCancelProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nCancelProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nCancelProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:49\n\n\nGet or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable\n\n\n\n\n\n\nCancelVoting\n\n\n\u25cf  CancelVoting\n:  \nEventFetcherFactory\nCancelVotingEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nCancelVoting\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nCancelVoting\n\n\nDefined in \nwrappers/intVoteInterface.ts:62\n\n\nGet or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable\n\n\n\n\n\n\nExecuteProposal\n\n\n\u25cf  ExecuteProposal\n:  \nEventFetcherFactory\nExecuteProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nExecuteProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nExecuteProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:53\n\n\nGet or watch events fired when proposals have been executed\n\n\n\n\n\n\nGPExecuteProposal\n\n\n\u25cf  GPExecuteProposal\n:  \nEventFetcherFactory\nGPExecuteProposalEventResult\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:53\n\n\nEvents\n\n\n\n\n\n\nNewProposal\n\n\n\u25cf  NewProposal\n:  \nEventFetcherFactory\nNewProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nNewProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nNewProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:44\n\n\nGet or watch events fired on the creation of a new proposal.\n\n\n\n\n\n\nRedeem\n\n\n\u25cf  Redeem\n:  \nEventFetcherFactory\nRedeemEventResult\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:55\n\n\n\n\n\n\nRedeemDaoBounty\n\n\n\u25cf  RedeemDaoBounty\n:  \nEventFetcherFactory\nRedeemEventResult\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:57\n\n\n\n\n\n\nRedeemReputation\n\n\n\u25cf  RedeemReputation\n:  \nEventFetcherFactory\nRedeemEventResult\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:56\n\n\n\n\n\n\nStake\n\n\n\u25cf  Stake\n:  \nEventFetcherFactory\nStakeEventResult\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:54\n\n\n\n\n\n\nVoteProposal\n\n\n\u25cf  VoteProposal\n:  \nEventFetcherFactory\nVoteProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nVoteProposal\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nVoteProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:57\n\n\nGet or watch events fired whenever votes are cast on a proposal\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nGenesisProtocolWrapper\n  =  GenesisProtocolFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nfactory\n\n\nDefined in \nwrappers/genesisProtocol.ts:47\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Genesis Protocol\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nfriendlyName\n\n\nDefined in \nwrappers/genesisProtocol.ts:46\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"GenesisProtocol\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nname\n\n\nDefined in \nwrappers/genesisProtocol.ts:45\n\n\n\n\nAccessors\n\n\n\n\nExecutedProposals\n\n\ngetExecutedProposals(): \nEntityFetcherFactory\nExecutedGenesisProposal\n, \nExecuteProposalEventResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:660\n\n\nEntityFetcherFactory for executed ExecutedGenesisProposal. The Arc GenesisProtocol contract retains the original proposal struct after execution.\n\n\nReturns:\n \nEntityFetcherFactory\nExecutedGenesisProposal\n, \nExecuteProposalEventResult\n\n\n\n\n\n\nVotableGenesisProtocolProposals\n\n\ngetVotableGenesisProtocolProposals(): \nEntityFetcherFactory\nGenesisProtocolProposal\n, \nNewProposalEventResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:623\n\n\nEntityFetcherFactory for votable GenesisProtocolProposal.\n\n\nReturns:\n \nEntityFetcherFactory\nGenesisProtocolProposal\n, \nNewProposalEventResult\n\n\n\n\n\n\nVotableProposals\n\n\ngetVotableProposals(): \nEventFetcherFactory\nNewProposalEventResult\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nVotableProposals\n\n\nDefined in \nwrappers/intVoteInterface.ts:67\n\n\nGet or watch NewProposal events, filtering out proposals that are no longer votable.\n\n\nReturns:\n \nEventFetcherFactory\nNewProposalEventResult\n\n\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\ncancelProposal\n\n\n\u25ba \ncancelProposal\n(options: \nProposalIdOption\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\ncancelProposal\n\n\nDefined in \nwrappers/genesisProtocol.ts:643\n\n\nCancel the given proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ncancelVote\n\n\n\u25ba \ncancelVote\n(options: \nProposalIdOption\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\ncancelVote\n\n\nDefined in \nwrappers/genesisProtocol.ts:651\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\nexecute\n\n\n\u25ba \nexecute\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nexecute\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nexecute\n\n\nDefined in \nwrappers/genesisProtocol.ts:907\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ngetAllowedRangeOfChoices\n\n\n\u25ba \ngetAllowedRangeOfChoices\n(): \nPromise\n.\nGetAllowedRangeOfChoicesResult\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\ngetAllowedRangeOfChoices\n\n\nDefined in \nwrappers/intVoteInterface.ts:343\n\n\nReturns promise of the allowed range of choices for a voting machine.\n\n\nReturns:\n \nPromise\n.\nGetAllowedRangeOfChoicesResult\n\n\n\n\n\n\ngetBoostedProposalsCount\n\n\n\u25ba \ngetBoostedProposalsCount\n(avatar: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/genesisProtocol.ts:359\n\n\nReturns a promise of the number of boosted proposals, not including those that have expired but have not yet been executed to update their status.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatar\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetCurrentVoteStatus\n\n\n\u25ba \ngetCurrentVoteStatus\n(proposalId: \nAddress\n): \nPromise\n.\nArray\n.\nBigNumber\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\ngetCurrentVoteStatus\n\n\nDefined in \nwrappers/intVoteInterface.ts:320\n\n\nReturn an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the \nBinaryVoteResult\n enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nproposalId\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nBigNumber\n\n\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetDefaultPermissions\n\n\nDefined in \nwrappers/genesisProtocol.ts:836\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetNumberOfChoices\n\n\n\u25ba \ngetNumberOfChoices\n(options?: \nGetNumberOfChoicesConfig\n): \nPromise\n.\nnumber\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\ngetNumberOfChoices\n\n\nDefined in \nwrappers/genesisProtocol.ts:408\n\n\nReturn the number of possible choices when voting for the proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetNumberOfChoicesConfig\n\n\n{} as GetNumberOfChoicesConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\nPromise\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nGetGenesisProtocolParamsResult\n\n\nImplementation of \nSchemeWrapper\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/genesisProtocol.ts:848\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGetGenesisProtocolParamsResult\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nGenesisProtocolParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/genesisProtocol.ts:697\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nGenesisProtocolParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetProposal\n\n\n\u25ba \ngetProposal\n(proposalId: \nHash\n): \nPromise\n.\nGenesisProtocolProposal\n\n\nDefined in \nwrappers/genesisProtocol.ts:692\n\n\nReturns promise of a \nGenesisProtocolProposal\n for the given proposal id.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGenesisProtocolProposal\n\n\n\n\n\n\ngetProposalAvatar\n\n\n\u25ba \ngetProposalAvatar\n(options?: \nGetProposalAvatarConfig\n): \nPromise\n.\nstring\n\n\nDefined in \nwrappers/genesisProtocol.ts:515\n\n\nReturn the DAO avatar address under which the proposal was made\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetProposalAvatarConfig\n\n\n{} as GetProposalAvatarConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nstring\n\nPromise\n\n\n\n\n\n\ngetProposalExecutionState\n\n\n\u25ba \ngetProposalExecutionState\n(proposalId: \nHash\n): \nPromise\n.\nExecutionState\n\n\nDefined in \nwrappers/genesisProtocol.ts:681\n\n\nReturns a promise of the execution state of the given proposal. The result is ExecutionState.None if the proposal has not been executed or is not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nExecutionState\n\n\n\n\n\n\ngetProposalStatus\n\n\n\u25ba \ngetProposalStatus\n(options?: \nGetProposalStatusConfig\n): \nPromise\n.\nGetProposalStatusResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:486\n\n\nReturn the preBoosted votes, amount staked per vote, total staked and total staked net voters' take for a given proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetProposalStatusConfig\n\n\n{} as GetProposalStatusConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGetProposalStatusResult\n\nPromise\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nGenesisProtocolParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemeParameters\n\n\nDefined in \nwrappers/genesisProtocol.ts:844\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGenesisProtocolParams\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemePermissions\n\n\nDefined in \nwrappers/genesisProtocol.ts:840\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\ngetScore\n\n\n\u25ba \ngetScore\n(options?: \nGetScoreConfig\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/genesisProtocol.ts:324\n\n\nReturn the current proposal score.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetScoreConfig\n\n\n{} as GetScoreConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\nPromise\n\n\n\n\n\n\ngetScoreThresholdParams\n\n\n\u25ba \ngetScoreThresholdParams\n(options?: \nGetScoreThresholdParamsConfig\n): \nPromise\n.\nGetScoreThresholdParamsResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:533\n\n\nReturn the score threshold params for the given DAO.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetScoreThresholdParamsConfig\n\n\n{} as GetScoreThresholdParamsConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGetScoreThresholdParamsResult\n\nPromise\n\n\n\n\n\n\ngetStakerInfo\n\n\n\u25ba \ngetStakerInfo\n(options?: \nGetStakerInfoConfig\n): \nPromise\n.\nGetStakerInfoResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:556\n\n\nReturn the vote and stake amount for a given proposal and staker.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetStakerInfoConfig\n\n\n{} as GetStakerInfoConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGetStakerInfoResult\n\nPromise\n\n\n\n\n\n\ngetStakingToken\n\n\n\u25ba \ngetStakingToken\n(): \nPromise\n.\nStandardTokenWrapper\n\n\nDefined in \nwrappers/genesisProtocol.ts:872\n\n\nReturns promise of the staking token as StandardTokenWrapper.\n\n\nReturns:\n \nPromise\n.\nStandardTokenWrapper\n\nPromise\n\n\n\n\n\n\ngetStakingTokenAddress\n\n\n\u25ba \ngetStakingTokenAddress\n(): \nPromise\n.\nAddress\n\n\nDefined in \nwrappers/genesisProtocol.ts:882\n\n\nReturns promise of the staking token address.\n\n\nReturns:\n \nPromise\n.\nAddress\n\nPromise\n\n\n\n\n\n\ngetState\n\n\n\u25ba \ngetState\n(options?: \nGetStateConfig\n): \nPromise\n.\nProposalState\n\n\nDefined in \nwrappers/genesisProtocol.ts:606\n\n\nReturn the current state of a given proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetStateConfig\n\n\n{} as GetStateConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nProposalState\n\nPromise\n\n\n\n\n\n\ngetThreshold\n\n\n\u25ba \ngetThreshold\n(options?: \nGetThresholdConfig\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/genesisProtocol.ts:342\n\n\nReturn the threshold that is required by a proposal to it shift it into boosted state. The computation depends on the current number of boosted proposals in the DAO as well as the GenesisProtocol parameters thresholdConstA and thresholdConstB.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetThresholdConfig\n\n\n{} as GetThresholdConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetTokenBalances\n\n\n\u25ba \ngetTokenBalances\n(options?: \nGetTokenBalancesOptions\n): \nPromise\n.\nGenesisProtocolDaoTokenBalances\n\n\nDefined in \nwrappers/genesisProtocol.ts:377\n\n\nReturn the current balances on this GenesisProtocol's staking and the given avatar's native tokens. This can be useful, for example, if you want to know in advance whether the avatar has enough funds at the moment to payout rewards to stakers and voters. It also returns the respective tokens' truffle contracts.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetTokenBalancesOptions\n\n\n{} as GetTokenBalancesOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGenesisProtocolDaoTokenBalances\n\n\n\n\n\n\ngetVoteStatus\n\n\n\u25ba \ngetVoteStatus\n(options?: \nGetVoteStatusConfig\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/genesisProtocol.ts:460\n\n\nReturns the reputation currently voted on the given choice.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetVoteStatusConfig\n\n\n{} as GetVoteStatusConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\nPromise\n\n\n\n\n\n\ngetVoterInfo\n\n\n\u25ba \ngetVoterInfo\n(options?: \nGetVoterInfoConfig\n): \nPromise\n.\nGetVoterInfoResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:430\n\n\nReturn the vote and the amount of reputation of the voter committed to this proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetVoterInfoConfig\n\n\n{} as GetVoterInfoConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGetVoterInfoResult\n\nPromise\n\n\n\n\n\n\ngetWinningVote\n\n\n\u25ba \ngetWinningVote\n(options?: \nGetWinningVoteConfig\n): \nPromise\n.\nnumber\n\n\nDefined in \nwrappers/genesisProtocol.ts:586\n\n\nReturn the winningVote for a given proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetWinningVoteConfig\n\n\n{} as GetWinningVoteConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\nPromise\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nisAbstainAllow\n\n\n\u25ba \nisAbstainAllow\n(): \nPromise\n.\nboolean\n\n\nImplementation of \nIIntVoteInterface\n.\nisAbstainAllow\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nisAbstainAllow\n\n\nDefined in \nwrappers/intVoteInterface.ts:285\n\n\nget whether voters are allowed to cast an abstaining vote on these proposals.\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nisVotable\n\n\n\u25ba \nisVotable\n(options: \nProposalIdOption\n): \nPromise\n.\nboolean\n\n\nImplementation of \nIIntVoteInterface\n.\nisVotable\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nisVotable\n\n\nDefined in \nwrappers/intVoteInterface.ts:255\n\n\nGet whether the proposal is in a state where it can be voted-upon.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nownerVote\n\n\n\u25ba \nownerVote\n(options: \nOwnerVoteOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nownerVote\n\n\nDefined in \nwrappers/genesisProtocol.ts:647\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nOwnerVoteOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\npropose\n\n\n\u25ba \npropose\n(options: \nProposeOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nImplementation of \nIIntVoteInterface\n.\npropose\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\npropose\n\n\nDefined in \nwrappers/genesisProtocol.ts:886\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nredeem\n\n\n\u25ba \nredeem\n(options?: \nRedeemConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:243\n\n\nRedeem any tokens and reputation, excluding bounty, that are due the beneficiary from the outcome of the proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nRedeemConfig\n\n\n\n\n\n\n\n\n\n\n{} as RedeemConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\nPromise\n\n\n\n\n\n\nredeemDaoBounty\n\n\n\u25ba \nredeemDaoBounty\n(options?: \nRedeemConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:276\n\n\nRedeem any token bounty that are due the beneficiary from the outcome of the proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nRedeemConfig\n\n\n\n\n\n\n\n\n\n\n{} as RedeemConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\nPromise\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nGenesisProtocolParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/genesisProtocol.ts:727\n\n\nSet the contract parameters.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nGenesisProtocolParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\nparameters hash\n\n\n\n\n\n\nshouldBoost\n\n\n\u25ba \nshouldBoost\n(options?: \nShouldBoostConfig\n): \nPromise\n.\nboolean\n\n\nDefined in \nwrappers/genesisProtocol.ts:308\n\n\nReturn whether a proposal should be shifted to the boosted phase.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nShouldBoostConfig\n\n\n{} as ShouldBoostConfig\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\nPromise\n\n\n\n\n\n\nstake\n\n\n\u25ba \nstake\n(options?: \nStakeConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:70\n\n\nStake some tokens on the final outcome matching this vote.\n\n\nA transfer of tokens from the staker to this GenesisProtocol scheme is automatically approved and executed on the token with which this GenesisProtocol scheme was deployed.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStakeConfig\n\n\n\n\n\n\n\n\n\n\n{} as StakeConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\nPromise\n\n\n\n\n\n\nstakeWithApproval\n\n\n\u25ba \nstakeWithApproval\n(options?: \nStakeConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/genesisProtocol.ts:131\n\n\nPreapprove the transfer of stakingTokens from the default account to this GenesisProtocol contract, and then stake, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStakeConfig\n\n\n\n\n\n\n\n\n\n\n{} as StakeConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nvote\n\n\n\u25ba \nvote\n(options: \nVoteOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nvote\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nvote\n\n\nDefined in \nwrappers/genesisProtocol.ts:893\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nvoteStatus\n\n\n\u25ba \nvoteStatus\n(options: \nVoteStatusOptions\n): \nPromise\n.\nBigNumber\n\n\nImplementation of \nIIntVoteInterface\n.\nvoteStatus\n\n\nInherited from \nIntVoteInterfaceWrapper\n.\nvoteStatus\n\n\nDefined in \nwrappers/intVoteInterface.ts:269\n\n\nGet the number of votes currently cast on the given choice.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteStatusOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nvoteWithSpecifiedAmounts\n\n\n\u25ba \nvoteWithSpecifiedAmounts\n(options: \nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nvoteWithSpecifiedAmounts\n\n\nOverrides \nIntVoteInterfaceWrapper\n.\nvoteWithSpecifiedAmounts\n\n\nDefined in \nwrappers/genesisProtocol.ts:900\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "GenesisProtocolWrapper"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#class-genesisprotocolwrapper", 
            "text": "", 
            "title": "Class: GenesisProtocolWrapper"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#hierarchy", 
            "text": "\u21b3   IntVoteInterfaceWrapper  \u21b3 GenesisProtocolWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#implements", 
            "text": "IContractWrapperBase  IIntVoteInterface  SchemeWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#properties", 
            "text": "CancelProposal  CancelVoting  ExecuteProposal  GPExecuteProposal  NewProposal  Redeem  RedeemDaoBounty  RedeemReputation  Stake  VoteProposal  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#accessors", 
            "text": "ExecutedProposals  VotableGenesisProtocolProposals  VotableProposals  address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#methods", 
            "text": "cancelProposal  cancelVote  estimateGas  execute  getAllowedRangeOfChoices  getBoostedProposalsCount  getController  getCurrentVoteStatus  getDefaultPermissions  getNumberOfChoices  getParameters  getParametersArray  getParametersHash  getProposal  getProposalAvatar  getProposalExecutionState  getProposalStatus  getSchemeParameters  getSchemeParametersHash  getSchemePermissions  getScore  getScoreThresholdParams  getStakerInfo  getStakingToken  getStakingTokenAddress  getState  getThreshold  getTokenBalances  getVoteStatus  getVoterInfo  getWinningVote  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  isAbstainAllow  isVotable  ownerVote  propose  redeem  redeemDaoBounty  setParameters  shouldBoost  stake  stakeWithApproval  vote  voteStatus  voteWithSpecifiedAmounts", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#new-genesisprotocolwrappersoliditycontract-any-web3eventservice-web3eventservice-genesisprotocolwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   GenesisProtocolWrapper", 
            "title": "\u2295 new GenesisProtocolWrapper(solidityContract: any, web3EventService: Web3EventService): GenesisProtocolWrapper"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#cancelproposal", 
            "text": "\u25cf  CancelProposal :   EventFetcherFactory CancelProposalEventResult    Implementation of  IIntVoteInterface . CancelProposal  Inherited from  IntVoteInterfaceWrapper . CancelProposal  Defined in  wrappers/intVoteInterface.ts:49  Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable", 
            "title": "CancelProposal"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#cancelvoting", 
            "text": "\u25cf  CancelVoting :   EventFetcherFactory CancelVotingEventResult    Implementation of  IIntVoteInterface . CancelVoting  Inherited from  IntVoteInterfaceWrapper . CancelVoting  Defined in  wrappers/intVoteInterface.ts:62  Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable", 
            "title": "CancelVoting"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#executeproposal", 
            "text": "\u25cf  ExecuteProposal :   EventFetcherFactory ExecuteProposalEventResult    Implementation of  IIntVoteInterface . ExecuteProposal  Inherited from  IntVoteInterfaceWrapper . ExecuteProposal  Defined in  wrappers/intVoteInterface.ts:53  Get or watch events fired when proposals have been executed", 
            "title": "ExecuteProposal"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#gpexecuteproposal", 
            "text": "\u25cf  GPExecuteProposal :   EventFetcherFactory GPExecuteProposalEventResult    Defined in  wrappers/genesisProtocol.ts:53  Events", 
            "title": "GPExecuteProposal"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#newproposal", 
            "text": "\u25cf  NewProposal :   EventFetcherFactory NewProposalEventResult    Implementation of  IIntVoteInterface . NewProposal  Inherited from  IntVoteInterfaceWrapper . NewProposal  Defined in  wrappers/intVoteInterface.ts:44  Get or watch events fired on the creation of a new proposal.", 
            "title": "NewProposal"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#redeem", 
            "text": "\u25cf  Redeem :   EventFetcherFactory RedeemEventResult    Defined in  wrappers/genesisProtocol.ts:55", 
            "title": "Redeem"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#redeemdaobounty", 
            "text": "\u25cf  RedeemDaoBounty :   EventFetcherFactory RedeemEventResult    Defined in  wrappers/genesisProtocol.ts:57", 
            "title": "RedeemDaoBounty"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#redeemreputation", 
            "text": "\u25cf  RedeemReputation :   EventFetcherFactory RedeemEventResult    Defined in  wrappers/genesisProtocol.ts:56", 
            "title": "RedeemReputation"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#stake", 
            "text": "\u25cf  Stake :   EventFetcherFactory StakeEventResult    Defined in  wrappers/genesisProtocol.ts:54", 
            "title": "Stake"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#voteproposal", 
            "text": "\u25cf  VoteProposal :   EventFetcherFactory VoteProposalEventResult    Implementation of  IIntVoteInterface . VoteProposal  Inherited from  IntVoteInterfaceWrapper . VoteProposal  Defined in  wrappers/intVoteInterface.ts:57  Get or watch events fired whenever votes are cast on a proposal", 
            "title": "VoteProposal"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory GenesisProtocolWrapper   =  GenesisProtocolFactory  Implementation of  IContractWrapperBase . factory  Overrides  IntVoteInterfaceWrapper . factory  Defined in  wrappers/genesisProtocol.ts:47", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Genesis Protocol\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  IntVoteInterfaceWrapper . friendlyName  Defined in  wrappers/genesisProtocol.ts:46", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#name", 
            "text": "\u25cf  name :   string   = \"GenesisProtocol\"  Implementation of  IContractWrapperBase . name  Overrides  IntVoteInterfaceWrapper . name  Defined in  wrappers/genesisProtocol.ts:45", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#executedproposals", 
            "text": "getExecutedProposals():  EntityFetcherFactory ExecutedGenesisProposal ,  ExecuteProposalEventResult  Defined in  wrappers/genesisProtocol.ts:660  EntityFetcherFactory for executed ExecutedGenesisProposal. The Arc GenesisProtocol contract retains the original proposal struct after execution.  Returns:   EntityFetcherFactory ExecutedGenesisProposal ,  ExecuteProposalEventResult", 
            "title": "ExecutedProposals"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#votablegenesisprotocolproposals", 
            "text": "getVotableGenesisProtocolProposals():  EntityFetcherFactory GenesisProtocolProposal ,  NewProposalEventResult  Defined in  wrappers/genesisProtocol.ts:623  EntityFetcherFactory for votable GenesisProtocolProposal.  Returns:   EntityFetcherFactory GenesisProtocolProposal ,  NewProposalEventResult", 
            "title": "VotableGenesisProtocolProposals"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#votableproposals", 
            "text": "getVotableProposals():  EventFetcherFactory NewProposalEventResult  Inherited from  IntVoteInterfaceWrapper . VotableProposals  Defined in  wrappers/intVoteInterface.ts:67  Get or watch NewProposal events, filtering out proposals that are no longer votable.  Returns:   EventFetcherFactory NewProposalEventResult", 
            "title": "VotableProposals"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#cancelproposal_1", 
            "text": "\u25ba  cancelProposal (options:  ProposalIdOption ):  Promise . ArcTransactionResult  Overrides  IntVoteInterfaceWrapper . cancelProposal  Defined in  wrappers/genesisProtocol.ts:643  Cancel the given proposal  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelProposal"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#cancelvote", 
            "text": "\u25ba  cancelVote (options:  ProposalIdOption ):  Promise . ArcTransactionResult  Overrides  IntVoteInterfaceWrapper . cancelVote  Defined in  wrappers/genesisProtocol.ts:651  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelVote"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#execute", 
            "text": "\u25ba  execute (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . execute  Overrides  IntVoteInterfaceWrapper . execute  Defined in  wrappers/genesisProtocol.ts:907  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "execute"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getallowedrangeofchoices", 
            "text": "\u25ba  getAllowedRangeOfChoices ():  Promise . GetAllowedRangeOfChoicesResult  Inherited from  IntVoteInterfaceWrapper . getAllowedRangeOfChoices  Defined in  wrappers/intVoteInterface.ts:343  Returns promise of the allowed range of choices for a voting machine.  Returns:   Promise . GetAllowedRangeOfChoicesResult", 
            "title": "getAllowedRangeOfChoices"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getboostedproposalscount", 
            "text": "\u25ba  getBoostedProposalsCount (avatar:  Address ):  Promise . BigNumber  Defined in  wrappers/genesisProtocol.ts:359  Returns a promise of the number of boosted proposals, not including those that have expired but have not yet been executed to update their status.  Parameters:     Param  Type  Description      avatar  Address  -     Returns:   Promise . BigNumber", 
            "title": "getBoostedProposalsCount"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getcurrentvotestatus", 
            "text": "\u25ba  getCurrentVoteStatus (proposalId:  Address ):  Promise . Array . BigNumber  Inherited from  IntVoteInterfaceWrapper . getCurrentVoteStatus  Defined in  wrappers/intVoteInterface.ts:320  Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the  BinaryVoteResult  enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions.  Parameters:     Param  Type  Description      proposalId  Address  -     Returns:   Promise . Array . BigNumber", 
            "title": "getCurrentVoteStatus"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Implementation of  SchemeWrapper . getDefaultPermissions  Defined in  wrappers/genesisProtocol.ts:836  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getnumberofchoices", 
            "text": "\u25ba  getNumberOfChoices (options?:  GetNumberOfChoicesConfig ):  Promise . number  Overrides  IntVoteInterfaceWrapper . getNumberOfChoices  Defined in  wrappers/genesisProtocol.ts:408  Return the number of possible choices when voting for the proposal.  Parameters:     Param  Type  Default value  Description      options  GetNumberOfChoicesConfig  {} as GetNumberOfChoicesConfig  -     Returns:   Promise . number \nPromise", 
            "title": "getNumberOfChoices"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . GetGenesisProtocolParamsResult  Implementation of  SchemeWrapper . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/genesisProtocol.ts:848  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . GetGenesisProtocolParamsResult", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  GenesisProtocolParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/genesisProtocol.ts:697  Parameters:     Param  Type  Description      params  GenesisProtocolParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getproposal", 
            "text": "\u25ba  getProposal (proposalId:  Hash ):  Promise . GenesisProtocolProposal  Defined in  wrappers/genesisProtocol.ts:692  Returns promise of a  GenesisProtocolProposal  for the given proposal id.  Parameters:     Param  Type  Description      proposalId  Hash  -     Returns:   Promise . GenesisProtocolProposal", 
            "title": "getProposal"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getproposalavatar", 
            "text": "\u25ba  getProposalAvatar (options?:  GetProposalAvatarConfig ):  Promise . string  Defined in  wrappers/genesisProtocol.ts:515  Return the DAO avatar address under which the proposal was made  Parameters:     Param  Type  Default value  Description      options  GetProposalAvatarConfig  {} as GetProposalAvatarConfig  -     Returns:   Promise . string \nPromise", 
            "title": "getProposalAvatar"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getproposalexecutionstate", 
            "text": "\u25ba  getProposalExecutionState (proposalId:  Hash ):  Promise . ExecutionState  Defined in  wrappers/genesisProtocol.ts:681  Returns a promise of the execution state of the given proposal. The result is ExecutionState.None if the proposal has not been executed or is not found.  Parameters:     Param  Type  Description      proposalId  Hash  -     Returns:   Promise . ExecutionState", 
            "title": "getProposalExecutionState"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getproposalstatus", 
            "text": "\u25ba  getProposalStatus (options?:  GetProposalStatusConfig ):  Promise . GetProposalStatusResult  Defined in  wrappers/genesisProtocol.ts:486  Return the preBoosted votes, amount staked per vote, total staked and total staked net voters' take for a given proposal  Parameters:     Param  Type  Default value  Description      options  GetProposalStatusConfig  {} as GetProposalStatusConfig  -     Returns:   Promise . GetProposalStatusResult \nPromise", 
            "title": "getProposalStatus"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . GenesisProtocolParams  Implementation of  SchemeWrapper . getSchemeParameters  Defined in  wrappers/genesisProtocol.ts:844  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . GenesisProtocolParams", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Implementation of  SchemeWrapper . getSchemePermissions  Defined in  wrappers/genesisProtocol.ts:840  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getscore", 
            "text": "\u25ba  getScore (options?:  GetScoreConfig ):  Promise . BigNumber  Defined in  wrappers/genesisProtocol.ts:324  Return the current proposal score.  Parameters:     Param  Type  Default value  Description      options  GetScoreConfig  {} as GetScoreConfig  -     Returns:   Promise . BigNumber \nPromise", 
            "title": "getScore"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getscorethresholdparams", 
            "text": "\u25ba  getScoreThresholdParams (options?:  GetScoreThresholdParamsConfig ):  Promise . GetScoreThresholdParamsResult  Defined in  wrappers/genesisProtocol.ts:533  Return the score threshold params for the given DAO.  Parameters:     Param  Type  Default value  Description      options  GetScoreThresholdParamsConfig  {} as GetScoreThresholdParamsConfig  -     Returns:   Promise . GetScoreThresholdParamsResult \nPromise", 
            "title": "getScoreThresholdParams"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getstakerinfo", 
            "text": "\u25ba  getStakerInfo (options?:  GetStakerInfoConfig ):  Promise . GetStakerInfoResult  Defined in  wrappers/genesisProtocol.ts:556  Return the vote and stake amount for a given proposal and staker.  Parameters:     Param  Type  Default value  Description      options  GetStakerInfoConfig  {} as GetStakerInfoConfig  -     Returns:   Promise . GetStakerInfoResult \nPromise", 
            "title": "getStakerInfo"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getstakingtoken", 
            "text": "\u25ba  getStakingToken ():  Promise . StandardTokenWrapper  Defined in  wrappers/genesisProtocol.ts:872  Returns promise of the staking token as StandardTokenWrapper.  Returns:   Promise . StandardTokenWrapper \nPromise", 
            "title": "getStakingToken"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getstakingtokenaddress", 
            "text": "\u25ba  getStakingTokenAddress ():  Promise . Address  Defined in  wrappers/genesisProtocol.ts:882  Returns promise of the staking token address.  Returns:   Promise . Address \nPromise", 
            "title": "getStakingTokenAddress"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getstate", 
            "text": "\u25ba  getState (options?:  GetStateConfig ):  Promise . ProposalState  Defined in  wrappers/genesisProtocol.ts:606  Return the current state of a given proposal.  Parameters:     Param  Type  Default value  Description      options  GetStateConfig  {} as GetStateConfig  -     Returns:   Promise . ProposalState \nPromise", 
            "title": "getState"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getthreshold", 
            "text": "\u25ba  getThreshold (options?:  GetThresholdConfig ):  Promise . BigNumber  Defined in  wrappers/genesisProtocol.ts:342  Return the threshold that is required by a proposal to it shift it into boosted state. The computation depends on the current number of boosted proposals in the DAO as well as the GenesisProtocol parameters thresholdConstA and thresholdConstB.  Parameters:     Param  Type  Default value  Description      options  GetThresholdConfig  {} as GetThresholdConfig  -     Returns:   Promise . BigNumber", 
            "title": "getThreshold"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#gettokenbalances", 
            "text": "\u25ba  getTokenBalances (options?:  GetTokenBalancesOptions ):  Promise . GenesisProtocolDaoTokenBalances  Defined in  wrappers/genesisProtocol.ts:377  Return the current balances on this GenesisProtocol's staking and the given avatar's native tokens. This can be useful, for example, if you want to know in advance whether the avatar has enough funds at the moment to payout rewards to stakers and voters. It also returns the respective tokens' truffle contracts.  Parameters:     Param  Type  Default value  Description      options  GetTokenBalancesOptions  {} as GetTokenBalancesOptions  -     Returns:   Promise . GenesisProtocolDaoTokenBalances", 
            "title": "getTokenBalances"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getvotestatus", 
            "text": "\u25ba  getVoteStatus (options?:  GetVoteStatusConfig ):  Promise . BigNumber  Defined in  wrappers/genesisProtocol.ts:460  Returns the reputation currently voted on the given choice.  Parameters:     Param  Type  Default value  Description      options  GetVoteStatusConfig  {} as GetVoteStatusConfig  -     Returns:   Promise . BigNumber \nPromise", 
            "title": "getVoteStatus"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getvoterinfo", 
            "text": "\u25ba  getVoterInfo (options?:  GetVoterInfoConfig ):  Promise . GetVoterInfoResult  Defined in  wrappers/genesisProtocol.ts:430  Return the vote and the amount of reputation of the voter committed to this proposal  Parameters:     Param  Type  Default value  Description      options  GetVoterInfoConfig  {} as GetVoterInfoConfig  -     Returns:   Promise . GetVoterInfoResult \nPromise", 
            "title": "getVoterInfo"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#getwinningvote", 
            "text": "\u25ba  getWinningVote (options?:  GetWinningVoteConfig ):  Promise . number  Defined in  wrappers/genesisProtocol.ts:586  Return the winningVote for a given proposal.  Parameters:     Param  Type  Default value  Description      options  GetWinningVoteConfig  {} as GetWinningVoteConfig  -     Returns:   Promise . number \nPromise", 
            "title": "getWinningVote"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#isabstainallow", 
            "text": "\u25ba  isAbstainAllow ():  Promise . boolean  Implementation of  IIntVoteInterface . isAbstainAllow  Inherited from  IntVoteInterfaceWrapper . isAbstainAllow  Defined in  wrappers/intVoteInterface.ts:285  get whether voters are allowed to cast an abstaining vote on these proposals.  Returns:   Promise . boolean", 
            "title": "isAbstainAllow"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#isvotable", 
            "text": "\u25ba  isVotable (options:  ProposalIdOption ):  Promise . boolean  Implementation of  IIntVoteInterface . isVotable  Inherited from  IntVoteInterfaceWrapper . isVotable  Defined in  wrappers/intVoteInterface.ts:255  Get whether the proposal is in a state where it can be voted-upon.  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . boolean", 
            "title": "isVotable"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#ownervote", 
            "text": "\u25ba  ownerVote (options:  OwnerVoteOptions ):  Promise . ArcTransactionResult  Overrides  IntVoteInterfaceWrapper . ownerVote  Defined in  wrappers/genesisProtocol.ts:647  Parameters:     Param  Type  Description      options  OwnerVoteOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "ownerVote"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#propose", 
            "text": "\u25ba  propose (options:  ProposeOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionProposalResult  Implementation of  IIntVoteInterface . propose  Overrides  IntVoteInterfaceWrapper . propose  Defined in  wrappers/genesisProtocol.ts:886  Parameters:     Param  Type  Description      options  ProposeOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "propose"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#redeem_1", 
            "text": "\u25ba  redeem (options?:  RedeemConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/genesisProtocol.ts:243  Redeem any tokens and reputation, excluding bounty, that are due the beneficiary from the outcome of the proposal.  Parameters:     Param  Type  Default value  Description      options  RedeemConfig      {} as RedeemConfig   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult \nPromise", 
            "title": "redeem"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#redeemdaobounty_1", 
            "text": "\u25ba  redeemDaoBounty (options?:  RedeemConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/genesisProtocol.ts:276  Redeem any token bounty that are due the beneficiary from the outcome of the proposal.  Parameters:     Param  Type  Default value  Description      options  RedeemConfig      {} as RedeemConfig   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult \nPromise", 
            "title": "redeemDaoBounty"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  GenesisProtocolParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/genesisProtocol.ts:727  Set the contract parameters.  Parameters:     Param  Type  Description      params  GenesisProtocolParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash \nparameters hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#shouldboost", 
            "text": "\u25ba  shouldBoost (options?:  ShouldBoostConfig ):  Promise . boolean  Defined in  wrappers/genesisProtocol.ts:308  Return whether a proposal should be shifted to the boosted phase.  Parameters:     Param  Type  Default value  Description      options  ShouldBoostConfig  {} as ShouldBoostConfig  -     Returns:   Promise . boolean \nPromise", 
            "title": "shouldBoost"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#stake_1", 
            "text": "\u25ba  stake (options?:  StakeConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/genesisProtocol.ts:70  Stake some tokens on the final outcome matching this vote.  A transfer of tokens from the staker to this GenesisProtocol scheme is automatically approved and executed on the token with which this GenesisProtocol scheme was deployed.  Parameters:     Param  Type  Default value  Description      options  StakeConfig      {} as StakeConfig   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult \nPromise", 
            "title": "stake"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#stakewithapproval", 
            "text": "\u25ba  stakeWithApproval (options?:  StakeConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/genesisProtocol.ts:131  Preapprove the transfer of stakingTokens from the default account to this GenesisProtocol contract, and then stake, all in a single transaction.  Parameters:     Param  Type  Default value  Description      options  StakeConfig      {} as StakeConfig   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult", 
            "title": "stakeWithApproval"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#vote", 
            "text": "\u25ba  vote (options:  VoteOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . vote  Overrides  IntVoteInterfaceWrapper . vote  Defined in  wrappers/genesisProtocol.ts:893  Parameters:     Param  Type  Description      options  VoteOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "vote"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#votestatus", 
            "text": "\u25ba  voteStatus (options:  VoteStatusOptions ):  Promise . BigNumber  Implementation of  IIntVoteInterface . voteStatus  Inherited from  IntVoteInterfaceWrapper . voteStatus  Defined in  wrappers/intVoteInterface.ts:269  Get the number of votes currently cast on the given choice.  Parameters:     Param  Type  Description      options  VoteStatusOptions  -     Returns:   Promise . BigNumber", 
            "title": "voteStatus"
        }, 
        {
            "location": "/api/classes/GenesisProtocolWrapper/#votewithspecifiedamounts", 
            "text": "\u25ba  voteWithSpecifiedAmounts (options:  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . voteWithSpecifiedAmounts  Overrides  IntVoteInterfaceWrapper . voteWithSpecifiedAmounts  Defined in  wrappers/genesisProtocol.ts:900  Parameters:     Param  Type  Description      options  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/", 
            "text": "API Reference\n \n \nGlobalConstraintRegistrarWrapper\n\n\nClass: GlobalConstraintRegistrarWrapper\n\n\nHierarchy\n\n\n\u21b3  \nProposalGeneratorBase\n\n\n\u21b3 GlobalConstraintRegistrarWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nSchemeWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nNewGlobalConstraintsProposal\n\n\nProposalDeleted\n\n\nProposalExecuted\n\n\nRemoveGlobalConstraintsProposal\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetDefaultPermissions\n\n\ngetExecutedProposals\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\ngetSchemePermissions\n\n\ngetVotableAddGcProposals\n\n\ngetVotableProposal\n\n\ngetVotableRemoveGcProposals\n\n\ngetVotingMachine\n\n\ngetVotingMachineAddress\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nproposeToAddModifyGlobalConstraint\n\n\nproposeToRemoveGlobalConstraint\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew GlobalConstraintRegistrarWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nGlobalConstraintRegistrarWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\nconstructor\n\n\nOverrides \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \nproposalGeneratorBase.ts:10\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\n-\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nGlobalConstraintRegistrarWrapper\n\n\n\n\nProperties\n\n\n\n\nNewGlobalConstraintsProposal\n\n\n\u25cf  NewGlobalConstraintsProposal\n:  \nEventFetcherFactory\nNewGlobalConstraintsProposalEventResult\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:30\n\n\nEvents\n\n\n\n\n\n\nProposalDeleted\n\n\n\u25cf  ProposalDeleted\n:  \nEventFetcherFactory\nProposalDeletedEventResult\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:33\n\n\n\n\n\n\nProposalExecuted\n\n\n\u25cf  ProposalExecuted\n:  \nEventFetcherFactory\nSchemeProposalExecutedEventResult\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:32\n\n\n\n\n\n\nRemoveGlobalConstraintsProposal\n\n\n\u25cf  RemoveGlobalConstraintsProposal\n:  \nEventFetcherFactory\nRemoveGlobalConstraintsProposalEventResult\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:31\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nGlobalConstraintRegistrarWrapper\n  =  GlobalConstraintRegistrarFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:25\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Global Constraint Registrar\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:24\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"GlobalConstraintRegistrar\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:23\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetDefaultPermissions\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:192\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetExecutedProposals\n\n\n\u25ba \ngetExecutedProposals\n(avatarAddress: \nAddress\n): \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:149\n\n\nEntityFetcherFactory for executed proposals.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:204\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nStandardSchemeParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:172\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemeParameters\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:200\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemePermissions\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:196\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\ngetVotableAddGcProposals\n\n\n\u25ba \ngetVotableAddGcProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nVotableGlobalConstraintProposal\n, \nNewGlobalConstraintsProposalEventResult\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:107\n\n\nEntityFetcherFactory for votable GlobalConstraintProposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nVotableGlobalConstraintProposal\n, \nNewGlobalConstraintsProposalEventResult\n\n\n\n\n\n\ngetVotableProposal\n\n\n\u25ba \ngetVotableProposal\n(avatarAddress: \nAddress\n, proposalId: \nHash\n): \nPromise\n.\nVotableGlobalConstraintProposal\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:167\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nVotableGlobalConstraintProposal\n\n\n\n\n\n\ngetVotableRemoveGcProposals\n\n\n\u25ba \ngetVotableRemoveGcProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nVotableGlobalConstraintProposal\n, \nRemoveGlobalConstraintsProposalEventResult\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:128\n\n\nEntityFetcherFactory for votable GlobalConstraintProposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nVotableGlobalConstraintProposal\n, \nRemoveGlobalConstraintsProposalEventResult\n\n\n\n\n\n\ngetVotingMachine\n\n\n\u25ba \ngetVotingMachine\n(avatarAddress: \nAddress\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachine\n\n\nDefined in \nproposalGeneratorBase.ts:30\n\n\nReturn IntVoteInterfaceWrapper for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ngetVotingMachineAddress\n\n\n\u25ba \ngetVotingMachineAddress\n(avatarAddress: \nAddress\n): \nPromise\n.\nAddress\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachineAddress\n\n\nDefined in \nproposalGeneratorBase.ts:22\n\n\nReturn the address of the voting machine for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAddress\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nproposeToAddModifyGlobalConstraint\n\n\n\u25ba \nproposeToAddModifyGlobalConstraint\n(options?: \nProposeToAddModifyGlobalConstraintParams\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:39\n\n\nSubmit a proposal to add or modify a given global constraint.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeToAddModifyGlobalConstraintParams\n\n\n{} as ProposeToAddModifyGlobalConstraintParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nproposeToRemoveGlobalConstraint\n\n\n\u25ba \nproposeToRemoveGlobalConstraint\n(options?: \nProposeToRemoveGlobalConstraintParams\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:78\n\n\nSubmit a proposal to remove a global constraint.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeToRemoveGlobalConstraintParams\n\n\n{} as ProposeToRemoveGlobalConstraintParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nStandardSchemeParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:179\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "GlobalConstraintRegistrarWrapper"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#class-globalconstraintregistrarwrapper", 
            "text": "", 
            "title": "Class: GlobalConstraintRegistrarWrapper"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#hierarchy", 
            "text": "\u21b3   ProposalGeneratorBase  \u21b3 GlobalConstraintRegistrarWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#implements", 
            "text": "IContractWrapperBase  SchemeWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#properties", 
            "text": "NewGlobalConstraintsProposal  ProposalDeleted  ProposalExecuted  RemoveGlobalConstraintsProposal  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#methods", 
            "text": "estimateGas  getController  getDefaultPermissions  getExecutedProposals  getParameters  getParametersArray  getParametersHash  getSchemeParameters  getSchemeParametersHash  getSchemePermissions  getVotableAddGcProposals  getVotableProposal  getVotableRemoveGcProposals  getVotingMachine  getVotingMachineAddress  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  proposeToAddModifyGlobalConstraint  proposeToRemoveGlobalConstraint  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#new-globalconstraintregistrarwrappersoliditycontract-any-web3eventservice-web3eventservice-globalconstraintregistrarwrapper", 
            "text": "Inherited from  ProposalGeneratorBase . constructor  Overrides  ContractWrapperBase . constructor  Defined in  proposalGeneratorBase.ts:10  Parameters:     Param  Type  Description      solidityContract  any  -    web3EventService  Web3EventService  -     Returns:   GlobalConstraintRegistrarWrapper", 
            "title": "\u2295 new GlobalConstraintRegistrarWrapper(solidityContract: any, web3EventService: Web3EventService): GlobalConstraintRegistrarWrapper"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#newglobalconstraintsproposal", 
            "text": "\u25cf  NewGlobalConstraintsProposal :   EventFetcherFactory NewGlobalConstraintsProposalEventResult    Defined in  wrappers/globalConstraintRegistrar.ts:30  Events", 
            "title": "NewGlobalConstraintsProposal"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#proposaldeleted", 
            "text": "\u25cf  ProposalDeleted :   EventFetcherFactory ProposalDeletedEventResult    Defined in  wrappers/globalConstraintRegistrar.ts:33", 
            "title": "ProposalDeleted"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#proposalexecuted", 
            "text": "\u25cf  ProposalExecuted :   EventFetcherFactory SchemeProposalExecutedEventResult    Defined in  wrappers/globalConstraintRegistrar.ts:32", 
            "title": "ProposalExecuted"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#removeglobalconstraintsproposal", 
            "text": "\u25cf  RemoveGlobalConstraintsProposal :   EventFetcherFactory RemoveGlobalConstraintsProposalEventResult    Defined in  wrappers/globalConstraintRegistrar.ts:31", 
            "title": "RemoveGlobalConstraintsProposal"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory GlobalConstraintRegistrarWrapper   =  GlobalConstraintRegistrarFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/globalConstraintRegistrar.ts:25", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Global Constraint Registrar\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/globalConstraintRegistrar.ts:24", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#name", 
            "text": "\u25cf  name :   string   = \"GlobalConstraintRegistrar\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/globalConstraintRegistrar.ts:23", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Implementation of  SchemeWrapper . getDefaultPermissions  Defined in  wrappers/globalConstraintRegistrar.ts:192  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getexecutedproposals", 
            "text": "\u25ba  getExecutedProposals (avatarAddress:  Address ):  EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult  Defined in  wrappers/globalConstraintRegistrar.ts:149  EntityFetcherFactory for executed proposals.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult", 
            "title": "getExecutedProposals"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/globalConstraintRegistrar.ts:204  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  StandardSchemeParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/globalConstraintRegistrar.ts:172  Parameters:     Param  Type  Description      params  StandardSchemeParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getSchemeParameters  Defined in  wrappers/globalConstraintRegistrar.ts:200  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Implementation of  SchemeWrapper . getSchemePermissions  Defined in  wrappers/globalConstraintRegistrar.ts:196  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getvotableaddgcproposals", 
            "text": "\u25ba  getVotableAddGcProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory VotableGlobalConstraintProposal ,  NewGlobalConstraintsProposalEventResult  Defined in  wrappers/globalConstraintRegistrar.ts:107  EntityFetcherFactory for votable GlobalConstraintProposal.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory VotableGlobalConstraintProposal ,  NewGlobalConstraintsProposalEventResult", 
            "title": "getVotableAddGcProposals"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getvotableproposal", 
            "text": "\u25ba  getVotableProposal (avatarAddress:  Address , proposalId:  Hash ):  Promise . VotableGlobalConstraintProposal  Defined in  wrappers/globalConstraintRegistrar.ts:167  Parameters:     Param  Type  Description      avatarAddress  Address  -    proposalId  Hash  -     Returns:   Promise . VotableGlobalConstraintProposal", 
            "title": "getVotableProposal"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getvotableremovegcproposals", 
            "text": "\u25ba  getVotableRemoveGcProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory VotableGlobalConstraintProposal ,  RemoveGlobalConstraintsProposalEventResult  Defined in  wrappers/globalConstraintRegistrar.ts:128  EntityFetcherFactory for votable GlobalConstraintProposal.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory VotableGlobalConstraintProposal ,  RemoveGlobalConstraintsProposalEventResult", 
            "title": "getVotableRemoveGcProposals"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getvotingmachine", 
            "text": "\u25ba  getVotingMachine (avatarAddress:  Address ):  Promise . IntVoteInterfaceWrapper  Inherited from  ProposalGeneratorBase . getVotingMachine  Defined in  proposalGeneratorBase.ts:30  Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "getVotingMachine"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#getvotingmachineaddress", 
            "text": "\u25ba  getVotingMachineAddress (avatarAddress:  Address ):  Promise . Address  Inherited from  ProposalGeneratorBase . getVotingMachineAddress  Defined in  proposalGeneratorBase.ts:22  Return the address of the voting machine for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Address", 
            "title": "getVotingMachineAddress"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#proposetoaddmodifyglobalconstraint", 
            "text": "\u25ba  proposeToAddModifyGlobalConstraint (options?:  ProposeToAddModifyGlobalConstraintParams ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/globalConstraintRegistrar.ts:39  Submit a proposal to add or modify a given global constraint.  Parameters:     Param  Type  Default value  Description      options  ProposeToAddModifyGlobalConstraintParams  {} as ProposeToAddModifyGlobalConstraintParams  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeToAddModifyGlobalConstraint"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#proposetoremoveglobalconstraint", 
            "text": "\u25ba  proposeToRemoveGlobalConstraint (options?:  ProposeToRemoveGlobalConstraintParams ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/globalConstraintRegistrar.ts:78  Submit a proposal to remove a global constraint.  Parameters:     Param  Type  Default value  Description      options  ProposeToRemoveGlobalConstraintParams  {} as ProposeToRemoveGlobalConstraintParams  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeToRemoveGlobalConstraint"
        }, 
        {
            "location": "/api/classes/GlobalConstraintRegistrarWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  StandardSchemeParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/globalConstraintRegistrar.ts:179  Parameters:     Param  Type  Description      params  StandardSchemeParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/", 
            "text": "API Reference\n \n \nIntVoteInterfaceFactoryType\n\n\nClass: IntVoteInterfaceFactoryType\n\n\nHierarchy\n\n\nContractWrapperFactory\nIntVoteInterfaceWrapper\n\n\n\u21b3 IntVoteInterfaceFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nIntVoteInterfaceWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew IntVoteInterfaceFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nIntVoteInterfaceFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nIntVoteInterfaceFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nOverrides \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \nwrappers/intVoteInterface.ts:377\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nOverrides \nContractWrapperFactory\n.\nnew\n\n\nDefined in \nwrappers/intVoteInterface.ts:374\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "IntVoteInterfaceFactoryType"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#class-intvoteinterfacefactorytype", 
            "text": "", 
            "title": "Class: IntVoteInterfaceFactoryType"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory IntVoteInterfaceWrapper  \u21b3 IntVoteInterfaceFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#implements", 
            "text": "IContractWrapperFactory IntVoteInterfaceWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#new-intvoteinterfacefactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-intvoteinterfacefactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   IntVoteInterfaceFactoryType", 
            "title": "\u2295 new IntVoteInterfaceFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): IntVoteInterfaceFactoryType"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . IntVoteInterfaceWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . IntVoteInterfaceWrapper  Overrides  ContractWrapperFactory . deployed  Defined in  wrappers/intVoteInterface.ts:377  Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#new", 
            "text": "\u25ba  new ():  Promise . IntVoteInterfaceWrapper  Overrides  ContractWrapperFactory . new  Defined in  wrappers/intVoteInterface.ts:374  Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/", 
            "text": "API Reference\n \n \nIntVoteInterfaceWrapper\n\n\nClass: IntVoteInterfaceWrapper\n\n\nProvides the services of any voting machine that implements the \nIntVoteInterface\n Arc contract interface. Also serves as the base class for all the specific voting machine contract wrapper classes.\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3 IntVoteInterfaceWrapper\n\n\n\u21b3  \nAbsoluteVoteWrapper\n\n\n\u21b3  \nGenesisProtocolWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nIIntVoteInterface\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nCancelProposal\n\n\nCancelVoting\n\n\nExecuteProposal\n\n\nNewProposal\n\n\nVoteProposal\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\nVotableProposals\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\ncancelProposal\n\n\ncancelVote\n\n\nestimateGas\n\n\nexecute\n\n\ngetAllowedRangeOfChoices\n\n\ngetController\n\n\ngetCurrentVoteStatus\n\n\ngetNumberOfChoices\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nisAbstainAllow\n\n\nisVotable\n\n\nownerVote\n\n\npropose\n\n\nsetParameters\n\n\nvote\n\n\nvoteStatus\n\n\nvoteWithSpecifiedAmounts\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew IntVoteInterfaceWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nIntVoteInterfaceWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nIntVoteInterfaceWrapper\n\n\n\n\nProperties\n\n\n\n\nCancelProposal\n\n\n\u25cf  CancelProposal\n:  \nEventFetcherFactory\nCancelProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nCancelProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:49\n\n\nGet or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable\n\n\n\n\n\n\nCancelVoting\n\n\n\u25cf  CancelVoting\n:  \nEventFetcherFactory\nCancelVotingEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nCancelVoting\n\n\nDefined in \nwrappers/intVoteInterface.ts:62\n\n\nGet or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable\n\n\n\n\n\n\nExecuteProposal\n\n\n\u25cf  ExecuteProposal\n:  \nEventFetcherFactory\nExecuteProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nExecuteProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:53\n\n\nGet or watch events fired when proposals have been executed\n\n\n\n\n\n\nNewProposal\n\n\n\u25cf  NewProposal\n:  \nEventFetcherFactory\nNewProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nNewProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:44\n\n\nGet or watch events fired on the creation of a new proposal.\n\n\n\n\n\n\nVoteProposal\n\n\n\u25cf  VoteProposal\n:  \nEventFetcherFactory\nVoteProposalEventResult\n \n\n\nImplementation of \nIIntVoteInterface\n.\nVoteProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:57\n\n\nGet or watch events fired whenever votes are cast on a proposal\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nany\n  =  IntVoteInterfaceFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/intVoteInterface.ts:37\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"IntVoteInterface\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/intVoteInterface.ts:39\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"IntVoteInterface\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/intVoteInterface.ts:38\n\n\n\n\nAccessors\n\n\n\n\nVotableProposals\n\n\ngetVotableProposals(): \nEventFetcherFactory\nNewProposalEventResult\n\n\nDefined in \nwrappers/intVoteInterface.ts:67\n\n\nGet or watch NewProposal events, filtering out proposals that are no longer votable.\n\n\nReturns:\n \nEventFetcherFactory\nNewProposalEventResult\n\n\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\ncancelProposal\n\n\n\u25ba \ncancelProposal\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\ncancelProposal\n\n\nDefined in \nwrappers/intVoteInterface.ts:136\n\n\nCancel the given proposal\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ncancelVote\n\n\n\u25ba \ncancelVote\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\ncancelVote\n\n\nDefined in \nwrappers/intVoteInterface.ts:223\n\n\nCancel voting on the proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\nexecute\n\n\n\u25ba \nexecute\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nexecute\n\n\nDefined in \nwrappers/intVoteInterface.ts:297\n\n\nAttempt to execute the given proposal vote.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ngetAllowedRangeOfChoices\n\n\n\u25ba \ngetAllowedRangeOfChoices\n(): \nPromise\n.\nGetAllowedRangeOfChoicesResult\n\n\nDefined in \nwrappers/intVoteInterface.ts:343\n\n\nReturns promise of the allowed range of choices for a voting machine.\n\n\nReturns:\n \nPromise\n.\nGetAllowedRangeOfChoicesResult\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetCurrentVoteStatus\n\n\n\u25ba \ngetCurrentVoteStatus\n(proposalId: \nAddress\n): \nPromise\n.\nArray\n.\nBigNumber\n\n\nDefined in \nwrappers/intVoteInterface.ts:320\n\n\nReturn an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the \nBinaryVoteResult\n enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nproposalId\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nBigNumber\n\n\n\n\n\n\ngetNumberOfChoices\n\n\n\u25ba \ngetNumberOfChoices\n(options: \nProposalIdOption\n): \nPromise\n.\nnumber\n\n\nImplementation of \nIIntVoteInterface\n.\ngetNumberOfChoices\n\n\nDefined in \nwrappers/intVoteInterface.ts:241\n\n\nGet the number of voting choices allowed by the proposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nisAbstainAllow\n\n\n\u25ba \nisAbstainAllow\n(): \nPromise\n.\nboolean\n\n\nImplementation of \nIIntVoteInterface\n.\nisAbstainAllow\n\n\nDefined in \nwrappers/intVoteInterface.ts:285\n\n\nget whether voters are allowed to cast an abstaining vote on these proposals.\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nisVotable\n\n\n\u25ba \nisVotable\n(options: \nProposalIdOption\n): \nPromise\n.\nboolean\n\n\nImplementation of \nIIntVoteInterface\n.\nisVotable\n\n\nDefined in \nwrappers/intVoteInterface.ts:255\n\n\nGet whether the proposal is in a state where it can be voted-upon.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nownerVote\n\n\n\u25ba \nownerVote\n(options: \nOwnerVoteOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nownerVote\n\n\nDefined in \nwrappers/intVoteInterface.ts:154\n\n\nVote on behalf of the owner of the proposal, ie the agent that created it.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nOwnerVoteOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\npropose\n\n\n\u25ba \npropose\n(options: \nProposeOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nImplementation of \nIIntVoteInterface\n.\npropose\n\n\nDefined in \nwrappers/intVoteInterface.ts:85\n\n\nRegister a new proposal with the given parameters. Every proposal is given a unique ID which is a hash generated by calculating the keccak256 of a packing of an incremented counter and the address of the voting machine.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\n\n\n\n\n\nvote\n\n\n\u25ba \nvote\n(options: \nVoteOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nvote\n\n\nDefined in \nwrappers/intVoteInterface.ts:178\n\n\nVote on behalf of the current account.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nvoteStatus\n\n\n\u25ba \nvoteStatus\n(options: \nVoteStatusOptions\n): \nPromise\n.\nBigNumber\n\n\nImplementation of \nIIntVoteInterface\n.\nvoteStatus\n\n\nDefined in \nwrappers/intVoteInterface.ts:269\n\n\nGet the number of votes currently cast on the given choice.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteStatusOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nvoteWithSpecifiedAmounts\n\n\n\u25ba \nvoteWithSpecifiedAmounts\n(options: \nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nImplementation of \nIIntVoteInterface\n.\nvoteWithSpecifiedAmounts\n\n\nDefined in \nwrappers/intVoteInterface.ts:198\n\n\nVote specified reputation amount\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "IntVoteInterfaceWrapper"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#class-intvoteinterfacewrapper", 
            "text": "Provides the services of any voting machine that implements the  IntVoteInterface  Arc contract interface. Also serves as the base class for all the specific voting machine contract wrapper classes.", 
            "title": "Class: IntVoteInterfaceWrapper"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3 IntVoteInterfaceWrapper  \u21b3   AbsoluteVoteWrapper  \u21b3   GenesisProtocolWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#implements", 
            "text": "IContractWrapperBase  IIntVoteInterface", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#properties", 
            "text": "CancelProposal  CancelVoting  ExecuteProposal  NewProposal  VoteProposal  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#accessors", 
            "text": "VotableProposals  address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#methods", 
            "text": "cancelProposal  cancelVote  estimateGas  execute  getAllowedRangeOfChoices  getController  getCurrentVoteStatus  getNumberOfChoices  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  isAbstainAllow  isVotable  ownerVote  propose  setParameters  vote  voteStatus  voteWithSpecifiedAmounts", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#new-intvoteinterfacewrappersoliditycontract-any-web3eventservice-web3eventservice-intvoteinterfacewrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   IntVoteInterfaceWrapper", 
            "title": "\u2295 new IntVoteInterfaceWrapper(solidityContract: any, web3EventService: Web3EventService): IntVoteInterfaceWrapper"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#cancelproposal", 
            "text": "\u25cf  CancelProposal :   EventFetcherFactory CancelProposalEventResult    Implementation of  IIntVoteInterface . CancelProposal  Defined in  wrappers/intVoteInterface.ts:49  Get or watch events fired when a vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable", 
            "title": "CancelProposal"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#cancelvoting", 
            "text": "\u25cf  CancelVoting :   EventFetcherFactory CancelVotingEventResult    Implementation of  IIntVoteInterface . CancelVoting  Defined in  wrappers/intVoteInterface.ts:62  Get or watch events fired when a voter's vote is cancelled. Note you won't get this from GenesisProtocol whose proposals and votes are not cancellable", 
            "title": "CancelVoting"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#executeproposal", 
            "text": "\u25cf  ExecuteProposal :   EventFetcherFactory ExecuteProposalEventResult    Implementation of  IIntVoteInterface . ExecuteProposal  Defined in  wrappers/intVoteInterface.ts:53  Get or watch events fired when proposals have been executed", 
            "title": "ExecuteProposal"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#newproposal", 
            "text": "\u25cf  NewProposal :   EventFetcherFactory NewProposalEventResult    Implementation of  IIntVoteInterface . NewProposal  Defined in  wrappers/intVoteInterface.ts:44  Get or watch events fired on the creation of a new proposal.", 
            "title": "NewProposal"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#voteproposal", 
            "text": "\u25cf  VoteProposal :   EventFetcherFactory VoteProposalEventResult    Implementation of  IIntVoteInterface . VoteProposal  Defined in  wrappers/intVoteInterface.ts:57  Get or watch events fired whenever votes are cast on a proposal", 
            "title": "VoteProposal"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory any   =  IntVoteInterfaceFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/intVoteInterface.ts:37", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"IntVoteInterface\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/intVoteInterface.ts:39", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#name", 
            "text": "\u25cf  name :   string   = \"IntVoteInterface\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/intVoteInterface.ts:38", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#votableproposals", 
            "text": "getVotableProposals():  EventFetcherFactory NewProposalEventResult  Defined in  wrappers/intVoteInterface.ts:67  Get or watch NewProposal events, filtering out proposals that are no longer votable.  Returns:   EventFetcherFactory NewProposalEventResult", 
            "title": "VotableProposals"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#cancelproposal_1", 
            "text": "\u25ba  cancelProposal (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . cancelProposal  Defined in  wrappers/intVoteInterface.ts:136  Cancel the given proposal  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelProposal"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#cancelvote", 
            "text": "\u25ba  cancelVote (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . cancelVote  Defined in  wrappers/intVoteInterface.ts:223  Cancel voting on the proposal.  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelVote"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#execute", 
            "text": "\u25ba  execute (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . execute  Defined in  wrappers/intVoteInterface.ts:297  Attempt to execute the given proposal vote.  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "execute"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getallowedrangeofchoices", 
            "text": "\u25ba  getAllowedRangeOfChoices ():  Promise . GetAllowedRangeOfChoicesResult  Defined in  wrappers/intVoteInterface.ts:343  Returns promise of the allowed range of choices for a voting machine.  Returns:   Promise . GetAllowedRangeOfChoicesResult", 
            "title": "getAllowedRangeOfChoices"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getcurrentvotestatus", 
            "text": "\u25ba  getCurrentVoteStatus (proposalId:  Address ):  Promise . Array . BigNumber  Defined in  wrappers/intVoteInterface.ts:320  Return an array of the current counts of each vote choice on the proposal. For straight Abstain, Yes and No votes you can use the values of the  BinaryVoteResult  enum to dereference the array. The Abstain vote (in the zeroeth position) is always given even if the voting machine does not allow abstentions.  Parameters:     Param  Type  Description      proposalId  Address  -     Returns:   Promise . Array . BigNumber", 
            "title": "getCurrentVoteStatus"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getnumberofchoices", 
            "text": "\u25ba  getNumberOfChoices (options:  ProposalIdOption ):  Promise . number  Implementation of  IIntVoteInterface . getNumberOfChoices  Defined in  wrappers/intVoteInterface.ts:241  Get the number of voting choices allowed by the proposal.  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . number", 
            "title": "getNumberOfChoices"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#isabstainallow", 
            "text": "\u25ba  isAbstainAllow ():  Promise . boolean  Implementation of  IIntVoteInterface . isAbstainAllow  Defined in  wrappers/intVoteInterface.ts:285  get whether voters are allowed to cast an abstaining vote on these proposals.  Returns:   Promise . boolean", 
            "title": "isAbstainAllow"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#isvotable", 
            "text": "\u25ba  isVotable (options:  ProposalIdOption ):  Promise . boolean  Implementation of  IIntVoteInterface . isVotable  Defined in  wrappers/intVoteInterface.ts:255  Get whether the proposal is in a state where it can be voted-upon.  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . boolean", 
            "title": "isVotable"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#ownervote", 
            "text": "\u25ba  ownerVote (options:  OwnerVoteOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . ownerVote  Defined in  wrappers/intVoteInterface.ts:154  Vote on behalf of the owner of the proposal, ie the agent that created it.  Parameters:     Param  Type  Description      options  OwnerVoteOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "ownerVote"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#propose", 
            "text": "\u25ba  propose (options:  ProposeOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionProposalResult  Implementation of  IIntVoteInterface . propose  Defined in  wrappers/intVoteInterface.ts:85  Register a new proposal with the given parameters. Every proposal is given a unique ID which is a hash generated by calculating the keccak256 of a packing of an incremented counter and the address of the voting machine.  Parameters:     Param  Type  Description      options  ProposeOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "propose"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#vote", 
            "text": "\u25ba  vote (options:  VoteOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . vote  Defined in  wrappers/intVoteInterface.ts:178  Vote on behalf of the current account.  Parameters:     Param  Type  Description      options  VoteOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "vote"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#votestatus", 
            "text": "\u25ba  voteStatus (options:  VoteStatusOptions ):  Promise . BigNumber  Implementation of  IIntVoteInterface . voteStatus  Defined in  wrappers/intVoteInterface.ts:269  Get the number of votes currently cast on the given choice.  Parameters:     Param  Type  Description      options  VoteStatusOptions  -     Returns:   Promise . BigNumber", 
            "title": "voteStatus"
        }, 
        {
            "location": "/api/classes/IntVoteInterfaceWrapper/#votewithspecifiedamounts", 
            "text": "\u25ba  voteWithSpecifiedAmounts (options:  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Implementation of  IIntVoteInterface . voteWithSpecifiedAmounts  Defined in  wrappers/intVoteInterface.ts:198  Vote specified reputation amount  Parameters:     Param  Type  Description      options  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/api/classes/LoggingService/", 
            "text": "API Reference\n \n \nLoggingService\n\n\nClass: LoggingService\n\n\nProvides logging support, logging by default to the JavaScript console. You can provide alternate or additional loggers by using \nLoggingService.addLogger\n and \nLoggingService.removeLogger\n. You can set the \nLogLevel\n by setting \nLoggingService.logLevel\n with flags from \nLogLevel\n. Logically, LogLevels are simply or'd together, there is no hierarchy to them.\n\n\nIndex\n\n\nProperties\n\n\n\n\nlogLevel\n\n\nloggers\n\n\nmoduleName\n\n\n\n\nMethods\n\n\n\n\naddLogger\n\n\ndebug\n\n\nerror\n\n\ninfo\n\n\nmessage\n\n\nremoveLogger\n\n\nstringifyObject\n\n\nwarn\n\n\n\n\n\n\nProperties\n\n\n\n\n\u00abStatic\u00bb logLevel\n\n\n\u25cf  logLevel\n:  \nLogLevel\n  =  LogLevel.none\n\n\nDefined in \nloggingService.ts:69\n\n\n\n\n\n\n\u00abStatic\u00bb loggers\n\n\n\u25cf  loggers\n:  \nArray\n.\nILogger\n  =  [new ConsoleLogger()]\n\n\nDefined in \nloggingService.ts:67\n\n\n\n\n\n\n\u00abStatic\u00bb moduleName\n\n\n\u25cf  moduleName\n:  \nstring\n  = \"Arc.js\"\n\n\nDefined in \nloggingService.ts:71\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb addLogger\n\n\n\u25ba \naddLogger\n(logger: \nILogger\n): \nvoid\n\n\nDefined in \nloggingService.ts:142\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlogger\n\n\nILogger\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb debug\n\n\n\u25ba \ndebug\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:73\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb error\n\n\n\u25ba \nerror\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:91\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb info\n\n\n\u25ba \ninfo\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:79\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb message\n\n\n\u25ba \nmessage\n(message: \nstring\n, level?: \nLogLevel\n): \nvoid\n\n\nDefined in \nloggingService.ts:114\n\n\nLog a message at potentially multiple levels instead of just one.\n\n\nThe message will be logged just once, at the first log level in the intersection between the given log level and the current log level, in the following order of precendence:\n\n\n\n\nerror\n\n\nwarn\n\n\ninfo\n\n\ndebug\n\n\n\n\nSo if the current log level is info|error and you call \nmessage(\"a message\", LogLevel.info|LogLevel.error)\n then you will see the message logged as an error.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\n-\n\n\n-\n\n\n\n\n\n\nlevel\n\n\nLogLevel\n\n\nLoggingService.logLevel\n\n\nlog level(s)\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb removeLogger\n\n\n\u25ba \nremoveLogger\n(logger: \nILogger\n): \nvoid\n\n\nDefined in \nloggingService.ts:146\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlogger\n\n\nILogger\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb stringifyObject\n\n\n\u25ba \nstringifyObject\n(obj: \nany\n): \nstring\n\n\nDefined in \nloggingService.ts:153\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nobj\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nstring\n\n\n\n\n\n\n\u00abStatic\u00bb warn\n\n\n\u25ba \nwarn\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:85\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "LoggingService"
        }, 
        {
            "location": "/api/classes/LoggingService/#class-loggingservice", 
            "text": "Provides logging support, logging by default to the JavaScript console. You can provide alternate or additional loggers by using  LoggingService.addLogger  and  LoggingService.removeLogger . You can set the  LogLevel  by setting  LoggingService.logLevel  with flags from  LogLevel . Logically, LogLevels are simply or'd together, there is no hierarchy to them.", 
            "title": "Class: LoggingService"
        }, 
        {
            "location": "/api/classes/LoggingService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/LoggingService/#properties", 
            "text": "logLevel  loggers  moduleName", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/LoggingService/#methods", 
            "text": "addLogger  debug  error  info  message  removeLogger  stringifyObject  warn", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/LoggingService/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-loglevel", 
            "text": "\u25cf  logLevel :   LogLevel   =  LogLevel.none  Defined in  loggingService.ts:69", 
            "title": "\u00abStatic\u00bb logLevel"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-loggers", 
            "text": "\u25cf  loggers :   Array . ILogger   =  [new ConsoleLogger()]  Defined in  loggingService.ts:67", 
            "title": "\u00abStatic\u00bb loggers"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-modulename", 
            "text": "\u25cf  moduleName :   string   = \"Arc.js\"  Defined in  loggingService.ts:71", 
            "title": "\u00abStatic\u00bb moduleName"
        }, 
        {
            "location": "/api/classes/LoggingService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-addlogger", 
            "text": "\u25ba  addLogger (logger:  ILogger ):  void  Defined in  loggingService.ts:142  Parameters:     Param  Type  Description      logger  ILogger  -     Returns:   void", 
            "title": "\u00abStatic\u00bb addLogger"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-debug", 
            "text": "\u25ba  debug (message:  string ):  void  Defined in  loggingService.ts:73  Parameters:     Param  Type  Description      message  string  -     Returns:   void", 
            "title": "\u00abStatic\u00bb debug"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-error", 
            "text": "\u25ba  error (message:  string ):  void  Defined in  loggingService.ts:91  Parameters:     Param  Type  Description      message  string  -     Returns:   void", 
            "title": "\u00abStatic\u00bb error"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-info", 
            "text": "\u25ba  info (message:  string ):  void  Defined in  loggingService.ts:79  Parameters:     Param  Type  Description      message  string  -     Returns:   void", 
            "title": "\u00abStatic\u00bb info"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-message", 
            "text": "\u25ba  message (message:  string , level?:  LogLevel ):  void  Defined in  loggingService.ts:114  Log a message at potentially multiple levels instead of just one.  The message will be logged just once, at the first log level in the intersection between the given log level and the current log level, in the following order of precendence:   error  warn  info  debug   So if the current log level is info|error and you call  message(\"a message\", LogLevel.info|LogLevel.error)  then you will see the message logged as an error.  Parameters:     Param  Type  Default value  Description      message  string  -  -    level  LogLevel  LoggingService.logLevel  log level(s)     Returns:   void", 
            "title": "\u00abStatic\u00bb message"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-removelogger", 
            "text": "\u25ba  removeLogger (logger:  ILogger ):  void  Defined in  loggingService.ts:146  Parameters:     Param  Type  Description      logger  ILogger  -     Returns:   void", 
            "title": "\u00abStatic\u00bb removeLogger"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-stringifyobject", 
            "text": "\u25ba  stringifyObject (obj:  any ):  string  Defined in  loggingService.ts:153  Parameters:     Param  Type  Description      obj  any  -     Returns:   string", 
            "title": "\u00abStatic\u00bb stringifyObject"
        }, 
        {
            "location": "/api/classes/LoggingService/#static-warn", 
            "text": "\u25ba  warn (message:  string ):  void  Defined in  loggingService.ts:85  Parameters:     Param  Type  Description      message  string  -     Returns:   void", 
            "title": "\u00abStatic\u00bb warn"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/", 
            "text": "API Reference\n \n \nMintableTokenFactoryType\n\n\nClass: MintableTokenFactoryType\n\n\ndefined just to add good type checking\n\n\nHierarchy\n\n\nContractWrapperFactory\nMintableTokenWrapper\n\n\n\u21b3 MintableTokenFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nMintableTokenWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew MintableTokenFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nMintableTokenFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nMintableTokenFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nMintableTokenWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nMintableTokenWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nMintableTokenWrapper\n\n\nOverrides \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \nwrappers/mintableToken.ts:122\n\n\nReturns:\n \nPromise\n.\nMintableTokenWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nMintableTokenWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nnew\n\n\nDefined in \ncontractWrapperFactory.ts:44\n\n\nDeploy a new instance of the contract and return a wrapper around it.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\nOptional arguments to the Arc contracts constructor.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nMintableTokenWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "MintableTokenFactoryType"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#class-mintabletokenfactorytype", 
            "text": "defined just to add good type checking", 
            "title": "Class: MintableTokenFactoryType"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory MintableTokenWrapper  \u21b3 MintableTokenFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#implements", 
            "text": "IContractWrapperFactory MintableTokenWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#new-mintabletokenfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-mintabletokenfactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   MintableTokenFactoryType", 
            "title": "\u2295 new MintableTokenFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): MintableTokenFactoryType"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . MintableTokenWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . MintableTokenWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . MintableTokenWrapper  Overrides  ContractWrapperFactory . deployed  Defined in  wrappers/mintableToken.ts:122  Returns:   Promise . MintableTokenWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#new", 
            "text": "\u25ba  new (...rest:  Array . any ):  Promise . MintableTokenWrapper  Inherited from  ContractWrapperFactory . new  Defined in  contractWrapperFactory.ts:44  Deploy a new instance of the contract and return a wrapper around it.  Parameters:     Param  Type  Description      rest  Array . any  Optional arguments to the Arc contracts constructor.     Returns:   Promise . MintableTokenWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/MintableTokenFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/", 
            "text": "API Reference\n \n \nMintableTokenWrapper\n\n\nClass: MintableTokenWrapper\n\n\nHierarchy\n\n\n\u21b3  \nStandardTokenWrapper\n\n\n\u21b3 MintableTokenWrapper\n\n\n\u21b3  \nDaoTokenWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nApproval\n\n\nMint\n\n\nMintFinished\n\n\nTransfer\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nallowance\n\n\napprove\n\n\ndecreaseApproval\n\n\nestimateGas\n\n\nfinishMinting\n\n\ngetBalanceOf\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\ngetTotalSupply\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nincreaseApproval\n\n\nmint\n\n\nsetParameters\n\n\ntransfer\n\n\ntransferFrom\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew MintableTokenWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nMintableTokenWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nMintableTokenWrapper\n\n\n\n\nProperties\n\n\n\n\nApproval\n\n\n\u25cf  Approval\n:  \nEventFetcherFactory\nApprovalEventResult\n \n\n\nInherited from \nStandardTokenWrapper\n.\nApproval\n\n\nDefined in \nwrappers/standardToken.ts:16\n\n\n\n\n\n\nMint\n\n\n\u25cf  Mint\n:  \nEventFetcherFactory\nMintEventResult\n \n\n\nDefined in \nwrappers/mintableToken.ts:22\n\n\n\n\n\n\nMintFinished\n\n\n\u25cf  MintFinished\n:  \nEventFetcherFactory\nMintFinishedEventResult\n \n\n\nDefined in \nwrappers/mintableToken.ts:23\n\n\n\n\n\n\nTransfer\n\n\n\u25cf  Transfer\n:  \nEventFetcherFactory\nTransferEventResult\n \n\n\nInherited from \nStandardTokenWrapper\n.\nTransfer\n\n\nDefined in \nwrappers/standardToken.ts:17\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nMintableTokenWrapper\n  =  MintableTokenFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nStandardTokenWrapper\n.\nfactory\n\n\nDefined in \nwrappers/mintableToken.ts:20\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Mintable Token\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nStandardTokenWrapper\n.\nfriendlyName\n\n\nDefined in \nwrappers/mintableToken.ts:19\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"MintableToken\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nStandardTokenWrapper\n.\nname\n\n\nDefined in \nwrappers/mintableToken.ts:18\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nallowance\n\n\n\u25ba \nallowance\n(options: \nStandardTokenAllowanceOptions\n): \nPromise\n.\nBigNumber\n\n\nInherited from \nStandardTokenWrapper\n.\nallowance\n\n\nDefined in \nwrappers/standardToken.ts:198\n\n\nReturns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenAllowanceOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\napprove\n\n\n\u25ba \napprove\n(options: \nStandardTokenApproveOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nStandardTokenWrapper\n.\napprove\n\n\nDefined in \nwrappers/mintableToken.ts:68\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenApproveOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ndecreaseApproval\n\n\n\u25ba \ndecreaseApproval\n(options: \nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nStandardTokenWrapper\n.\ndecreaseApproval\n\n\nDefined in \nwrappers/mintableToken.ts:100\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\nfinishMinting\n\n\n\u25ba \nfinishMinting\n(options?: \nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/mintableToken.ts:56\n\n\nTerminate the ability to mint tokens\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ngetBalanceOf\n\n\n\u25ba \ngetBalanceOf\n(account: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nInherited from \nStandardTokenWrapper\n.\ngetBalanceOf\n\n\nDefined in \nwrappers/standardToken.ts:175\n\n\nReturns a promise of the given account's current token balance.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccount\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetTotalSupply\n\n\n\u25ba \ngetTotalSupply\n(): \nPromise\n.\nBigNumber\n\n\nInherited from \nStandardTokenWrapper\n.\ngetTotalSupply\n\n\nDefined in \nwrappers/standardToken.ts:187\n\n\nReturns a promise of the token's total number of tokens.\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nincreaseApproval\n\n\n\u25ba \nincreaseApproval\n(options: \nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nStandardTokenWrapper\n.\nincreaseApproval\n\n\nDefined in \nwrappers/mintableToken.ts:92\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nmint\n\n\n\u25ba \nmint\n(options: \nMintableTokenMintOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/mintableToken.ts:29\n\n\nMint tokens to recipient\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nMintableTokenMintOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\n\n\n\n\n\ntransfer\n\n\n\u25ba \ntransfer\n(options: \nStandardTokenTransferOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nStandardTokenWrapper\n.\ntransfer\n\n\nDefined in \nwrappers/mintableToken.ts:76\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenTransferOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ntransferFrom\n\n\n\u25ba \ntransferFrom\n(options: \nStandardTokenTransferFromOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nOverrides \nStandardTokenWrapper\n.\ntransferFrom\n\n\nDefined in \nwrappers/mintableToken.ts:84\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenTransferFromOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "MintableTokenWrapper"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#class-mintabletokenwrapper", 
            "text": "", 
            "title": "Class: MintableTokenWrapper"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#hierarchy", 
            "text": "\u21b3   StandardTokenWrapper  \u21b3 MintableTokenWrapper  \u21b3   DaoTokenWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#properties", 
            "text": "Approval  Mint  MintFinished  Transfer  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#methods", 
            "text": "allowance  approve  decreaseApproval  estimateGas  finishMinting  getBalanceOf  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  getTotalSupply  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  increaseApproval  mint  setParameters  transfer  transferFrom", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#new-mintabletokenwrappersoliditycontract-any-web3eventservice-web3eventservice-mintabletokenwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   MintableTokenWrapper", 
            "title": "\u2295 new MintableTokenWrapper(solidityContract: any, web3EventService: Web3EventService): MintableTokenWrapper"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#approval", 
            "text": "\u25cf  Approval :   EventFetcherFactory ApprovalEventResult    Inherited from  StandardTokenWrapper . Approval  Defined in  wrappers/standardToken.ts:16", 
            "title": "Approval"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#mint", 
            "text": "\u25cf  Mint :   EventFetcherFactory MintEventResult    Defined in  wrappers/mintableToken.ts:22", 
            "title": "Mint"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#mintfinished", 
            "text": "\u25cf  MintFinished :   EventFetcherFactory MintFinishedEventResult    Defined in  wrappers/mintableToken.ts:23", 
            "title": "MintFinished"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#transfer", 
            "text": "\u25cf  Transfer :   EventFetcherFactory TransferEventResult    Inherited from  StandardTokenWrapper . Transfer  Defined in  wrappers/standardToken.ts:17", 
            "title": "Transfer"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory MintableTokenWrapper   =  MintableTokenFactory  Implementation of  IContractWrapperBase . factory  Overrides  StandardTokenWrapper . factory  Defined in  wrappers/mintableToken.ts:20", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Mintable Token\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  StandardTokenWrapper . friendlyName  Defined in  wrappers/mintableToken.ts:19", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#name", 
            "text": "\u25cf  name :   string   = \"MintableToken\"  Implementation of  IContractWrapperBase . name  Overrides  StandardTokenWrapper . name  Defined in  wrappers/mintableToken.ts:18", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#allowance", 
            "text": "\u25ba  allowance (options:  StandardTokenAllowanceOptions ):  Promise . BigNumber  Inherited from  StandardTokenWrapper . allowance  Defined in  wrappers/standardToken.ts:198  Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account.  Parameters:     Param  Type  Description      options  StandardTokenAllowanceOptions  -     Returns:   Promise . BigNumber", 
            "title": "allowance"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#approve", 
            "text": "\u25ba  approve (options:  StandardTokenApproveOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  StandardTokenWrapper . approve  Defined in  wrappers/mintableToken.ts:68  Parameters:     Param  Type  Description      options  StandardTokenApproveOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "approve"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#decreaseapproval", 
            "text": "\u25ba  decreaseApproval (options:  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  StandardTokenWrapper . decreaseApproval  Defined in  wrappers/mintableToken.ts:100  Parameters:     Param  Type  Description      options  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "decreaseApproval"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#finishminting", 
            "text": "\u25ba  finishMinting (options?:  TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/mintableToken.ts:56  Terminate the ability to mint tokens  Parameters:     Param  Type  Description      options  TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "finishMinting"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#getbalanceof", 
            "text": "\u25ba  getBalanceOf (account:  Address ):  Promise . BigNumber  Inherited from  StandardTokenWrapper . getBalanceOf  Defined in  wrappers/standardToken.ts:175  Returns a promise of the given account's current token balance.  Parameters:     Param  Type  Description      account  Address  -     Returns:   Promise . BigNumber", 
            "title": "getBalanceOf"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#gettotalsupply", 
            "text": "\u25ba  getTotalSupply ():  Promise . BigNumber  Inherited from  StandardTokenWrapper . getTotalSupply  Defined in  wrappers/standardToken.ts:187  Returns a promise of the token's total number of tokens.  Returns:   Promise . BigNumber", 
            "title": "getTotalSupply"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#increaseapproval", 
            "text": "\u25ba  increaseApproval (options:  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  StandardTokenWrapper . increaseApproval  Defined in  wrappers/mintableToken.ts:92  Parameters:     Param  Type  Description      options  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "increaseApproval"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#mint_1", 
            "text": "\u25ba  mint (options:  MintableTokenMintOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/mintableToken.ts:29  Mint tokens to recipient  Parameters:     Param  Type  Description      options  MintableTokenMintOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "mint"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#transfer_1", 
            "text": "\u25ba  transfer (options:  StandardTokenTransferOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  StandardTokenWrapper . transfer  Defined in  wrappers/mintableToken.ts:76  Parameters:     Param  Type  Description      options  StandardTokenTransferOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transfer"
        }, 
        {
            "location": "/api/classes/MintableTokenWrapper/#transferfrom", 
            "text": "\u25ba  transferFrom (options:  StandardTokenTransferFromOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Overrides  StandardTokenWrapper . transferFrom  Defined in  wrappers/mintableToken.ts:84  Parameters:     Param  Type  Description      options  StandardTokenTransferFromOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transferFrom"
        }, 
        {
            "location": "/api/classes/PromiseEventService/", 
            "text": "API Reference\n \n \nPromiseEventService\n\n\nClass: PromiseEventService\n\n\nIndex\n\n\nMethods\n\n\n\n\npublish\n\n\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb publish\n\n\n\u25ba \npublish\nTResult(topics: \nArray\n.\nstring\n\u23ae\nstring\n, promise: \nPromise\n.\nTResult\n): \nvoid\n\n\nDefined in promiseEventService.ts:12\n\n\nPublish to the given topics the result of the given promise. The payload of the event will be of type TResult.\n\n\nType parameters:\n\n\nTResult\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopics\n\n\nArray\n.\nstring\n\u23ae\nstring\n\n\n-\n\n\n\n\n\n\npromise\n\n\nPromise\n.\nTResult\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "PromiseEventService"
        }, 
        {
            "location": "/api/classes/PromiseEventService/#class-promiseeventservice", 
            "text": "", 
            "title": "Class: PromiseEventService"
        }, 
        {
            "location": "/api/classes/PromiseEventService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/PromiseEventService/#methods", 
            "text": "publish", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/PromiseEventService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/PromiseEventService/#static-publish", 
            "text": "\u25ba  publish TResult(topics:  Array . string \u23ae string , promise:  Promise . TResult ):  void  Defined in promiseEventService.ts:12  Publish to the given topics the result of the given promise. The payload of the event will be of type TResult.  Type parameters:", 
            "title": "\u00abStatic\u00bb publish"
        }, 
        {
            "location": "/api/classes/PromiseEventService/#tresult", 
            "text": "Parameters:     Param  Type  Description      topics  Array . string \u23ae string  -    promise  Promise . TResult  -     Returns:   void", 
            "title": "TResult"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/", 
            "text": "API Reference\n \n \nProposalGeneratorBase\n\n\nClass: ProposalGeneratorBase\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3 ProposalGeneratorBase\n\n\n\u21b3  \nContributionRewardWrapper\n\n\n\u21b3  \nGlobalConstraintRegistrarWrapper\n\n\n\u21b3  \nSchemeRegistrarWrapper\n\n\n\u21b3  \nUpgradeSchemeWrapper\n\n\n\u21b3  \nVestingSchemeWrapper\n\n\n\u21b3  \nVoteInOrganizationSchemeWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\ngetVotingMachine\n\n\ngetVotingMachineAddress\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ProposalGeneratorBase\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nProposalGeneratorBase\n\n\nOverrides \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \nproposalGeneratorBase.ts:10\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\n-\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nProposalGeneratorBase\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\n\u00abAbstract\u00bb factory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nInherited from \nContractWrapperBase\n.\nfactory\n\n\nDefined in \ncontractWrapperBase.ts:45\n\n\nThe wrapper factor class providing static methods \nat(someAddress)\n, \nnew()\n and \ndeployed()\n.\n\n\n\n\n\n\n\u00abAbstract\u00bb friendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n \n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nInherited from \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \ncontractWrapperBase.ts:53\n\n\nA more friendly name for the contract.\n\n\n\n\n\n\n\u00abAbstract\u00bb name\n\n\n\u25cf  name\n:  \nstring\n \n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nInherited from \nContractWrapperBase\n.\nname\n\n\nDefined in \ncontractWrapperBase.ts:49\n\n\nThe name of the contract.\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetVotingMachine\n\n\n\u25ba \ngetVotingMachine\n(avatarAddress: \nAddress\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nDefined in \nproposalGeneratorBase.ts:30\n\n\nReturn IntVoteInterfaceWrapper for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ngetVotingMachineAddress\n\n\n\u25ba \ngetVotingMachineAddress\n(avatarAddress: \nAddress\n): \nPromise\n.\nAddress\n\n\nDefined in \nproposalGeneratorBase.ts:22\n\n\nReturn the address of the voting machine for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAddress\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "ProposalGeneratorBase"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#class-proposalgeneratorbase", 
            "text": "", 
            "title": "Class: ProposalGeneratorBase"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3 ProposalGeneratorBase  \u21b3   ContributionRewardWrapper  \u21b3   GlobalConstraintRegistrarWrapper  \u21b3   SchemeRegistrarWrapper  \u21b3   UpgradeSchemeWrapper  \u21b3   VestingSchemeWrapper  \u21b3   VoteInOrganizationSchemeWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#properties", 
            "text": "contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#methods", 
            "text": "estimateGas  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  getVotingMachine  getVotingMachineAddress  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#new-proposalgeneratorbasesoliditycontract-any-web3eventservice-web3eventservice-proposalgeneratorbase", 
            "text": "Overrides  ContractWrapperBase . constructor  Defined in  proposalGeneratorBase.ts:10  Parameters:     Param  Type  Description      solidityContract  any  -    web3EventService  Web3EventService  -     Returns:   ProposalGeneratorBase", 
            "title": "\u2295 new ProposalGeneratorBase(solidityContract: any, web3EventService: Web3EventService): ProposalGeneratorBase"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#abstract-factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory any    Implementation of  IContractWrapperBase . factory  Inherited from  ContractWrapperBase . factory  Defined in  contractWrapperBase.ts:45  The wrapper factor class providing static methods  at(someAddress) ,  new()  and  deployed() .", 
            "title": "\u00abAbstract\u00bb factory"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#abstract-friendlyname", 
            "text": "\u25cf  friendlyName :   string    Implementation of  IContractWrapperBase . friendlyName  Inherited from  ContractWrapperBase . friendlyName  Defined in  contractWrapperBase.ts:53  A more friendly name for the contract.", 
            "title": "\u00abAbstract\u00bb friendlyName"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#abstract-name", 
            "text": "\u25cf  name :   string    Implementation of  IContractWrapperBase . name  Inherited from  ContractWrapperBase . name  Defined in  contractWrapperBase.ts:49  The name of the contract.", 
            "title": "\u00abAbstract\u00bb name"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#getvotingmachine", 
            "text": "\u25ba  getVotingMachine (avatarAddress:  Address ):  Promise . IntVoteInterfaceWrapper  Defined in  proposalGeneratorBase.ts:30  Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "getVotingMachine"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#getvotingmachineaddress", 
            "text": "\u25ba  getVotingMachineAddress (avatarAddress:  Address ):  Promise . Address  Defined in  proposalGeneratorBase.ts:22  Return the address of the voting machine for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Address", 
            "title": "getVotingMachineAddress"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/ProposalGeneratorBase/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/ProposalService/", 
            "text": "API Reference\n \n \nProposalService\n\n\nClass: ProposalService\n\n\nA single instance of ProposalService provides services relating to a single type of proposal (TProposal), for example a proposal to contribute rewards to a beneficiary. When constructing a ProposalService we pass to the constructor a \nProposalMaker\nTProposal, TEventArgs\n that provides functions enabling ProposalService to do its job with respect to the given TProposal. Note it is not scoped to a particular Avatar.\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\ngetExecutedProposals\n\n\ngetProposalEvents\n\n\ngetVotableProposals\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ProposalService\n(web3EventService: \nWeb3EventService\n): \nProposalService\n\n\nDefined in \nproposalService.ts:25\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nProposalService\n\n\n\n\nMethods\n\n\n\n\ngetExecutedProposals\n\n\n\u25ba \ngetExecutedProposals\n(votingMachine: \nIntVoteInterfaceWrapper\n): \nEntityFetcherFactory\nExecutedProposal\n, \nExecuteProposalEventResult\n\n\nDefined in \nproposalService.ts:116\n\n\nReturns promise of an EntityFetcherFactory for fetching executed proposals from the given \nIntVoteInterfaceWrapper\n. The proposals are returned as promises of instances of \nExecutedProposal\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nvotingMachine\n\n\nIntVoteInterfaceWrapper\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nExecutedProposal\n, \nExecuteProposalEventResult\n\n\n\n\n\n\ngetProposalEvents\n\n\n\u25ba \ngetProposalEvents\nTProposal,TEventArgs(options: \nGetProposalEventsOptions\nTProposal\n, \nTEventArgs\n): \nEntityFetcherFactory\nTProposal\n\u23ae\nTProposal\nProposalEntity\n, \nTEventArgs\n\n\nDefined in \nproposalService.ts:41\n\n\nReturns an EntityFetcherFactory for fetching proposal-related events. Can take any EventFetcherFactory whose event args supply \n_proposalId\n. Returns events as a promise of \nTProposal\n. You must supply an \nEventFetcherFactory\n for fetching the events and a callback to transform \nTEventArgs\n to a promise of \nTProposal\n. Each entity, when the associated proposal is votable and options.votingMachine is supplied, will also contain a \nvotingMachine\n property of type \nIntVoteInterfaceWrapper\n.\n\ntype\n: TEventArgs The type of the \nargs\n object in the event.\n\n\ntype\n: TProposal The type of object returned as a transformation of the \nargs\n information in each event.\n\n\nType parameters:\n\n\nTProposal\n\n\nTEventArgs :  \nEventHasPropertyId\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nGetProposalEventsOptions\nTProposal\n, \nTEventArgs\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nTProposal\n\u23ae\nTProposal\nProposalEntity\n, \nTEventArgs\n\n\n\n\n\n\ngetVotableProposals\n\n\n\u25ba \ngetVotableProposals\n(votingMachine: \nIntVoteInterfaceWrapper\n): \nEntityFetcherFactory\nVotableProposal\n, \nNewProposalEventResult\n\n\nDefined in \nproposalService.ts:91\n\n\nReturns promise of an EntityFetcherFactory for fetching votable proposals from the given \nIntVoteInterfaceWrapper\n. The proposals are returned as promises of instances of \nVotableProposal\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nvotingMachine\n\n\nIntVoteInterfaceWrapper\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nVotableProposal\n, \nNewProposalEventResult", 
            "title": "ProposalService"
        }, 
        {
            "location": "/api/classes/ProposalService/#class-proposalservice", 
            "text": "A single instance of ProposalService provides services relating to a single type of proposal (TProposal), for example a proposal to contribute rewards to a beneficiary. When constructing a ProposalService we pass to the constructor a  ProposalMaker TProposal, TEventArgs  that provides functions enabling ProposalService to do its job with respect to the given TProposal. Note it is not scoped to a particular Avatar.", 
            "title": "Class: ProposalService"
        }, 
        {
            "location": "/api/classes/ProposalService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ProposalService/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ProposalService/#methods", 
            "text": "getExecutedProposals  getProposalEvents  getVotableProposals", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ProposalService/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ProposalService/#new-proposalserviceweb3eventservice-web3eventservice-proposalservice", 
            "text": "Defined in  proposalService.ts:25  Parameters:     Param  Type  Description      web3EventService  Web3EventService  -     Returns:   ProposalService", 
            "title": "\u2295 new ProposalService(web3EventService: Web3EventService): ProposalService"
        }, 
        {
            "location": "/api/classes/ProposalService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ProposalService/#getexecutedproposals", 
            "text": "\u25ba  getExecutedProposals (votingMachine:  IntVoteInterfaceWrapper ):  EntityFetcherFactory ExecutedProposal ,  ExecuteProposalEventResult  Defined in  proposalService.ts:116  Returns promise of an EntityFetcherFactory for fetching executed proposals from the given  IntVoteInterfaceWrapper . The proposals are returned as promises of instances of  ExecutedProposal .  Parameters:     Param  Type  Description      votingMachine  IntVoteInterfaceWrapper  -     Returns:   EntityFetcherFactory ExecutedProposal ,  ExecuteProposalEventResult", 
            "title": "getExecutedProposals"
        }, 
        {
            "location": "/api/classes/ProposalService/#getproposalevents", 
            "text": "\u25ba  getProposalEvents TProposal,TEventArgs(options:  GetProposalEventsOptions TProposal ,  TEventArgs ):  EntityFetcherFactory TProposal \u23ae TProposal ProposalEntity ,  TEventArgs  Defined in  proposalService.ts:41  Returns an EntityFetcherFactory for fetching proposal-related events. Can take any EventFetcherFactory whose event args supply  _proposalId . Returns events as a promise of  TProposal . You must supply an  EventFetcherFactory  for fetching the events and a callback to transform  TEventArgs  to a promise of  TProposal . Each entity, when the associated proposal is votable and options.votingMachine is supplied, will also contain a  votingMachine  property of type  IntVoteInterfaceWrapper . type : TEventArgs The type of the  args  object in the event.  type : TProposal The type of object returned as a transformation of the  args  information in each event.  Type parameters:", 
            "title": "getProposalEvents"
        }, 
        {
            "location": "/api/classes/ProposalService/#tproposal", 
            "text": "", 
            "title": "TProposal"
        }, 
        {
            "location": "/api/classes/ProposalService/#teventargs-eventhaspropertyid", 
            "text": "Parameters:     Param  Type  Description      options  GetProposalEventsOptions TProposal ,  TEventArgs  -     Returns:   EntityFetcherFactory TProposal \u23ae TProposal ProposalEntity ,  TEventArgs", 
            "title": "TEventArgs :  EventHasPropertyId"
        }, 
        {
            "location": "/api/classes/ProposalService/#getvotableproposals", 
            "text": "\u25ba  getVotableProposals (votingMachine:  IntVoteInterfaceWrapper ):  EntityFetcherFactory VotableProposal ,  NewProposalEventResult  Defined in  proposalService.ts:91  Returns promise of an EntityFetcherFactory for fetching votable proposals from the given  IntVoteInterfaceWrapper . The proposals are returned as promises of instances of  VotableProposal .  Parameters:     Param  Type  Description      votingMachine  IntVoteInterfaceWrapper  -     Returns:   EntityFetcherFactory VotableProposal ,  NewProposalEventResult", 
            "title": "getVotableProposals"
        }, 
        {
            "location": "/api/classes/PubSubEventService/", 
            "text": "API Reference\n \n \nPubSubEventService\n\n\nClass: PubSubEventService\n\n\nA Pub/Sub event system that enables you to subscribe to various events published by Arc.js. See \nEvents\n.\n\n\nHierarchy\n\n\nPubSubEventService\n\n\n\u21b3  \nTransactionService\n\n\nIndex\n\n\nMethods\n\n\n\n\nclearAllSubscriptions\n\n\nisTopicSpecifiedBy\n\n\npublish\n\n\nsubscribe\n\n\nunsubscribe\n\n\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb clearAllSubscriptions\n\n\n\u25ba \nclearAllSubscriptions\n(): \nvoid\n\n\nDefined in \npubSubEventService.ts:38\n\n\nRemove all subscriptions\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb isTopicSpecifiedBy\n\n\n\u25ba \nisTopicSpecifiedBy\n(matchTemplates: \nArray\n.\nstring\n\u23ae\nstring\n, topic: \nstring\n): \nboolean\n\n\nDefined in \npubSubEventService.ts:91\n\n\nReturn whether topic is specified by matchTemplates.\n\n\nExamples:\n\n\nmatchTemplates: [\"foo\"] topic: \"foo.bar\" result: true\n\n\nmatchTemplates: [\"foo.bar\"] topic: \"foo\" result: false\n\n\nOr a wildcard:\n\n\nmatchTemplates: \"*\" topic: \"foo\" result: true\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmatchTemplates\n\n\nArray\n.\nstring\n\u23ae\nstring\n\n\n-\n\n\n\n\n\n\ntopic\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nboolean\n\n\n\n\n\n\n\u00abStatic\u00bb publish\n\n\n\u25ba \npublish\n(topic: \nstring\n, payload: \nany\n): \nboolean\n\n\nDefined in \npubSubEventService.ts:18\n\n\nSend the given payload to subscribers of the given topic.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopic\n\n\nstring\n\n\nSee \nsubscribe\n\n\n\n\n\n\npayload\n\n\nany\n\n\nSent in the subscription callback.\n\n\n\n\n\n\n\n\nReturns:\n \nboolean\n\nTrue if there are any subscribers\n\n\n\n\n\n\n\u00abStatic\u00bb subscribe\n\n\n\u25ba \nsubscribe\n(topics: \nstring\n\u23ae\nArray\n.\nstring\n, callback: \nEventSubscriptionCallback\n): \nIEventSubscription\n\n\nDefined in \npubSubEventService.ts:29\n\n\nSubscribe to the given topic or array of topics.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopics\n\n\nstring\n\u23ae\nArray\n.\nstring\n\n\nIdentifies the event(s) to which you wish to subscribe\n\n\n\n\n\n\ncallback\n\n\nEventSubscriptionCallback\n\n\nThe function to call when the requested events are published\n\n\n\n\n\n\n\n\nReturns:\n \nIEventSubscription\n\nAn interface with \n.unsubscribe()\n.  Be sure to call it!\n\n\n\n\n\n\n\u00abStatic\u00bb unsubscribe\n\n\n\u25ba \nunsubscribe\n(key: \nEventSubscriptionKey\n, milliseconds?: \nnumber\n): \nPromise\n.\nvoid\n\n\nDefined in \npubSubEventService.ts:52\n\n\nUnsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nEventSubscriptionKey\n\n\n-\n\n\nA token, function or topic to unsubscribe.\n\n\n\n\n\n\nmilliseconds\n\n\nnumber\n\n\n-1\n\n\nnumber of milliseconds to timeout.Default is -1 which means not to timeout at all.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "PubSubEventService"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#class-pubsubeventservice", 
            "text": "A Pub/Sub event system that enables you to subscribe to various events published by Arc.js. See  Events .", 
            "title": "Class: PubSubEventService"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#hierarchy", 
            "text": "PubSubEventService  \u21b3   TransactionService", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#methods", 
            "text": "clearAllSubscriptions  isTopicSpecifiedBy  publish  subscribe  unsubscribe", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#static-clearallsubscriptions", 
            "text": "\u25ba  clearAllSubscriptions ():  void  Defined in  pubSubEventService.ts:38  Remove all subscriptions  Returns:   void", 
            "title": "\u00abStatic\u00bb clearAllSubscriptions"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#static-istopicspecifiedby", 
            "text": "\u25ba  isTopicSpecifiedBy (matchTemplates:  Array . string \u23ae string , topic:  string ):  boolean  Defined in  pubSubEventService.ts:91  Return whether topic is specified by matchTemplates.  Examples:  matchTemplates: [\"foo\"] topic: \"foo.bar\" result: true  matchTemplates: [\"foo.bar\"] topic: \"foo\" result: false  Or a wildcard:  matchTemplates: \"*\" topic: \"foo\" result: true  Parameters:     Param  Type  Description      matchTemplates  Array . string \u23ae string  -    topic  string  -     Returns:   boolean", 
            "title": "\u00abStatic\u00bb isTopicSpecifiedBy"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#static-publish", 
            "text": "\u25ba  publish (topic:  string , payload:  any ):  boolean  Defined in  pubSubEventService.ts:18  Send the given payload to subscribers of the given topic.  Parameters:     Param  Type  Description      topic  string  See  subscribe    payload  any  Sent in the subscription callback.     Returns:   boolean \nTrue if there are any subscribers", 
            "title": "\u00abStatic\u00bb publish"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#static-subscribe", 
            "text": "\u25ba  subscribe (topics:  string \u23ae Array . string , callback:  EventSubscriptionCallback ):  IEventSubscription  Defined in  pubSubEventService.ts:29  Subscribe to the given topic or array of topics.  Parameters:     Param  Type  Description      topics  string \u23ae Array . string  Identifies the event(s) to which you wish to subscribe    callback  EventSubscriptionCallback  The function to call when the requested events are published     Returns:   IEventSubscription \nAn interface with  .unsubscribe() .  Be sure to call it!", 
            "title": "\u00abStatic\u00bb subscribe"
        }, 
        {
            "location": "/api/classes/PubSubEventService/#static-unsubscribe", 
            "text": "\u25ba  unsubscribe (key:  EventSubscriptionKey , milliseconds?:  number ):  Promise . void  Defined in  pubSubEventService.ts:52  Unsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy.  Parameters:     Param  Type  Default value  Description      key  EventSubscriptionKey  -  A token, function or topic to unsubscribe.    milliseconds  number  -1  number of milliseconds to timeout.Default is -1 which means not to timeout at all.     Returns:   Promise . void", 
            "title": "\u00abStatic\u00bb unsubscribe"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/", 
            "text": "API Reference\n \n \nRedeemerFactoryType\n\n\nClass: RedeemerFactoryType\n\n\ndefined just to add good type checking\n\n\nHierarchy\n\n\nContractWrapperFactory\nRedeemerWrapper\n\n\n\u21b3 RedeemerFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nRedeemerWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew RedeemerFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nRedeemerFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nRedeemerFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nRedeemerWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nRedeemerWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nRedeemerWrapper\n\n\nInherited from \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \ncontractWrapperFactory.ts:77\n\n\nReturn a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.\n\n\nReturns:\n \nPromise\n.\nRedeemerWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(contributionRewardAddress: \nAddress\n, genesisProtocolAddress: \nAddress\n): \nPromise\n.\nRedeemerWrapper\n\n\nOverrides \nContractWrapperFactory\n.\nnew\n\n\nDefined in \nwrappers/redeemer.ts:100\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncontributionRewardAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\ngenesisProtocolAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nRedeemerWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "RedeemerFactoryType"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#class-redeemerfactorytype", 
            "text": "defined just to add good type checking", 
            "title": "Class: RedeemerFactoryType"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory RedeemerWrapper  \u21b3 RedeemerFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#implements", 
            "text": "IContractWrapperFactory RedeemerWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#new-redeemerfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-redeemerfactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   RedeemerFactoryType", 
            "title": "\u2295 new RedeemerFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): RedeemerFactoryType"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . RedeemerWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . RedeemerWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . RedeemerWrapper  Inherited from  ContractWrapperFactory . deployed  Defined in  contractWrapperFactory.ts:77  Return a wrapper around the contract as deployed by the current version of Arc.js. Note this is usually not needed as the WrapperService provides these wrappers already hydrated. Returns undefined if not found.  Returns:   Promise . RedeemerWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#new", 
            "text": "\u25ba  new (contributionRewardAddress:  Address , genesisProtocolAddress:  Address ):  Promise . RedeemerWrapper  Overrides  ContractWrapperFactory . new  Defined in  wrappers/redeemer.ts:100  Parameters:     Param  Type  Description      contributionRewardAddress  Address  -    genesisProtocolAddress  Address  -     Returns:   Promise . RedeemerWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/RedeemerFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/", 
            "text": "API Reference\n \n \nRedeemerWrapper\n\n\nClass: RedeemerWrapper\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3 RedeemerWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nredeem\n\n\nredeemables\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew RedeemerWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nRedeemerWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nRedeemerWrapper\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nRedeemerWrapper\n  =  RedeemerFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/redeemer.ts:13\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Redeemer\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/redeemer.ts:12\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"Redeemer\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/redeemer.ts:11\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nredeem\n\n\n\u25ba \nredeem\n(options: \nRedeemerOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/redeemer.ts:22\n\n\nRedeems rewards for a ContributionReward proposal in a single transaction. Calls execute on the proposal if it is not yet executed. Redeems rewardable reputation and stake from the GenesisProtocol. Redeem rewardable contribution proposal rewards.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nRedeemerOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nredeemables\n\n\n\u25ba \nredeemables\n(options: \nRedeemerOptions\n): \nPromise\n.\nRedeeemableResult\n\n\nDefined in \nwrappers/redeemer.ts:50\n\n\nReturns the amounts that would be redeemed if \nRedeemer.redeem\n were invoked right now.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nRedeemerOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nRedeeemableResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "RedeemerWrapper"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#class-redeemerwrapper", 
            "text": "", 
            "title": "Class: RedeemerWrapper"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3 RedeemerWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#properties", 
            "text": "contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#methods", 
            "text": "estimateGas  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  redeem  redeemables  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#new-redeemerwrappersoliditycontract-any-web3eventservice-web3eventservice-redeemerwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   RedeemerWrapper", 
            "title": "\u2295 new RedeemerWrapper(solidityContract: any, web3EventService: Web3EventService): RedeemerWrapper"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory RedeemerWrapper   =  RedeemerFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/redeemer.ts:13", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Redeemer\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/redeemer.ts:12", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#name", 
            "text": "\u25cf  name :   string   = \"Redeemer\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/redeemer.ts:11", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#redeem", 
            "text": "\u25ba  redeem (options:  RedeemerOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/redeemer.ts:22  Redeems rewards for a ContributionReward proposal in a single transaction. Calls execute on the proposal if it is not yet executed. Redeems rewardable reputation and stake from the GenesisProtocol. Redeem rewardable contribution proposal rewards.  Parameters:     Param  Type  Description      options  RedeemerOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "redeem"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#redeemables", 
            "text": "\u25ba  redeemables (options:  RedeemerOptions ):  Promise . RedeeemableResult  Defined in  wrappers/redeemer.ts:50  Returns the amounts that would be redeemed if  Redeemer.redeem  were invoked right now.  Parameters:     Param  Type  Description      options  RedeemerOptions  -     Returns:   Promise . RedeeemableResult", 
            "title": "redeemables"
        }, 
        {
            "location": "/api/classes/RedeemerWrapper/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/", 
            "text": "API Reference\n \n \nReputationFactoryType\n\n\nClass: ReputationFactoryType\n\n\nHierarchy\n\n\nContractWrapperFactory\nReputationWrapper\n\n\n\u21b3 ReputationFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nReputationWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ReputationFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nReputationFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nReputationFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nReputationWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nReputationWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nReputationWrapper\n\n\nOverrides \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \nwrappers/reputation.ts:99\n\n\nReturns:\n \nPromise\n.\nReputationWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nReputationWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nnew\n\n\nDefined in \ncontractWrapperFactory.ts:44\n\n\nDeploy a new instance of the contract and return a wrapper around it.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\nOptional arguments to the Arc contracts constructor.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nReputationWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "ReputationFactoryType"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#class-reputationfactorytype", 
            "text": "", 
            "title": "Class: ReputationFactoryType"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory ReputationWrapper  \u21b3 ReputationFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#implements", 
            "text": "IContractWrapperFactory ReputationWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#new-reputationfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-reputationfactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   ReputationFactoryType", 
            "title": "\u2295 new ReputationFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): ReputationFactoryType"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . ReputationWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . ReputationWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . ReputationWrapper  Overrides  ContractWrapperFactory . deployed  Defined in  wrappers/reputation.ts:99  Returns:   Promise . ReputationWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#new", 
            "text": "\u25ba  new (...rest:  Array . any ):  Promise . ReputationWrapper  Inherited from  ContractWrapperFactory . new  Defined in  contractWrapperFactory.ts:44  Deploy a new instance of the contract and return a wrapper around it.  Parameters:     Param  Type  Description      rest  Array . any  Optional arguments to the Arc contracts constructor.     Returns:   Promise . ReputationWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/ReputationFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/", 
            "text": "API Reference\n \n \nReputationWrapper\n\n\nClass: ReputationWrapper\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3 ReputationWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nBurn\n\n\nMint\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nburn\n\n\nestimateGas\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\ngetTotalSupply\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nmint\n\n\nreputationOf\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew ReputationWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nReputationWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nReputationWrapper\n\n\n\n\nProperties\n\n\n\n\nBurn\n\n\n\u25cf  Burn\n:  \nEventFetcherFactory\nReputationBurnEventResult\n \n\n\nDefined in \nwrappers/reputation.ts:18\n\n\n\n\n\n\nMint\n\n\n\u25cf  Mint\n:  \nEventFetcherFactory\nReputationMintEventResult\n \n\n\nDefined in \nwrappers/reputation.ts:17\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nReputationWrapper\n  =  ReputationFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/reputation.ts:15\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Reputation\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/reputation.ts:14\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"Reputation\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/reputation.ts:13\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nburn\n\n\n\u25ba \nburn\n(options: \nReputationBurnOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/reputation.ts:51\n\n\nRemove reputation from the given account.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nReputationBurnOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetTotalSupply\n\n\n\u25ba \ngetTotalSupply\n(): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/reputation.ts:74\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nmint\n\n\n\u25ba \nmint\n(options: \nReputationMintOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/reputation.ts:24\n\n\nMint reputation to the given recipient\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nReputationMintOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nreputationOf\n\n\n\u25ba \nreputationOf\n(accountAddress: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/reputation.ts:78\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccountAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "ReputationWrapper"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#class-reputationwrapper", 
            "text": "", 
            "title": "Class: ReputationWrapper"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3 ReputationWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#properties", 
            "text": "Burn  Mint  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#methods", 
            "text": "burn  estimateGas  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  getTotalSupply  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  mint  reputationOf  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#new-reputationwrappersoliditycontract-any-web3eventservice-web3eventservice-reputationwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   ReputationWrapper", 
            "title": "\u2295 new ReputationWrapper(solidityContract: any, web3EventService: Web3EventService): ReputationWrapper"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#burn", 
            "text": "\u25cf  Burn :   EventFetcherFactory ReputationBurnEventResult    Defined in  wrappers/reputation.ts:18", 
            "title": "Burn"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#mint", 
            "text": "\u25cf  Mint :   EventFetcherFactory ReputationMintEventResult    Defined in  wrappers/reputation.ts:17", 
            "title": "Mint"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory ReputationWrapper   =  ReputationFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/reputation.ts:15", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Reputation\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/reputation.ts:14", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#name", 
            "text": "\u25cf  name :   string   = \"Reputation\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/reputation.ts:13", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#burn_1", 
            "text": "\u25ba  burn (options:  ReputationBurnOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/reputation.ts:51  Remove reputation from the given account.  Parameters:     Param  Type  Description      options  ReputationBurnOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "burn"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#gettotalsupply", 
            "text": "\u25ba  getTotalSupply ():  Promise . BigNumber  Defined in  wrappers/reputation.ts:74  Returns:   Promise . BigNumber", 
            "title": "getTotalSupply"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#mint_1", 
            "text": "\u25ba  mint (options:  ReputationMintOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/reputation.ts:24  Mint reputation to the given recipient  Parameters:     Param  Type  Description      options  ReputationMintOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "mint"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#reputationof", 
            "text": "\u25ba  reputationOf (accountAddress:  Address ):  Promise . BigNumber  Defined in  wrappers/reputation.ts:78  Parameters:     Param  Type  Description      accountAddress  Address  -     Returns:   Promise . BigNumber", 
            "title": "reputationOf"
        }, 
        {
            "location": "/api/classes/ReputationWrapper/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/", 
            "text": "API Reference\n \n \nSchemeRegistrarWrapper\n\n\nClass: SchemeRegistrarWrapper\n\n\nHierarchy\n\n\n\u21b3  \nProposalGeneratorBase\n\n\n\u21b3 SchemeRegistrarWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nSchemeWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nNewSchemeProposal\n\n\nProposalDeleted\n\n\nProposalExecuted\n\n\nRemoveSchemeProposal\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetDefaultPermissions\n\n\ngetExecutedProposals\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\ngetSchemePermissions\n\n\ngetVotableAddSchemeProposals\n\n\ngetVotableProposal\n\n\ngetVotableRemoveSchemeProposals\n\n\ngetVotingMachine\n\n\ngetVotingMachineAddress\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nproposeToAddModifyScheme\n\n\nproposeToRemoveScheme\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew SchemeRegistrarWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nSchemeRegistrarWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\nconstructor\n\n\nOverrides \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \nproposalGeneratorBase.ts:10\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\n-\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nSchemeRegistrarWrapper\n\n\n\n\nProperties\n\n\n\n\nNewSchemeProposal\n\n\n\u25cf  NewSchemeProposal\n:  \nEventFetcherFactory\nNewSchemeProposalEventResult\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:30\n\n\nEvents\n\n\n\n\n\n\nProposalDeleted\n\n\n\u25cf  ProposalDeleted\n:  \nEventFetcherFactory\nProposalDeletedEventResult\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:33\n\n\n\n\n\n\nProposalExecuted\n\n\n\u25cf  ProposalExecuted\n:  \nEventFetcherFactory\nSchemeProposalExecutedEventResult\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:32\n\n\n\n\n\n\nRemoveSchemeProposal\n\n\n\u25cf  RemoveSchemeProposal\n:  \nEventFetcherFactory\nRemoveSchemeProposalEventResult\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:31\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nSchemeRegistrarWrapper\n  =  SchemeRegistrarFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/schemeRegistrar.ts:25\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Scheme Registrar\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/schemeRegistrar.ts:24\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"SchemeRegistrar\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/schemeRegistrar.ts:23\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetDefaultPermissions\n\n\nDefined in \nwrappers/schemeRegistrar.ts:153\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetExecutedProposals\n\n\n\u25ba \ngetExecutedProposals\n(avatarAddress: \nAddress\n): \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\nDefined in \nwrappers/schemeRegistrar.ts:228\n\n\nEntityFetcherFactory for executed proposals.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nSchemeRegistrarParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/schemeRegistrar.ts:165\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemeRegistrarParams\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nSchemeRegistrarParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/schemeRegistrar.ts:130\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nSchemeRegistrarParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemeRegistrarParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemeParameters\n\n\nDefined in \nwrappers/schemeRegistrar.ts:161\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemeRegistrarParams\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemePermissions\n\n\nDefined in \nwrappers/schemeRegistrar.ts:157\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\ngetVotableAddSchemeProposals\n\n\n\u25ba \ngetVotableAddSchemeProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nVotableSchemeRegistrarProposal\n, \nNewSchemeProposalEventResult\n\n\nDefined in \nwrappers/schemeRegistrar.ts:178\n\n\nEntityFetcherFactory for votable SchemeRegistrarProposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nVotableSchemeRegistrarProposal\n, \nNewSchemeProposalEventResult\n\n\n\n\n\n\ngetVotableProposal\n\n\n\u25ba \ngetVotableProposal\n(avatarAddress: \nAddress\n, proposalId: \nHash\n): \nPromise\n.\nVotableSchemeRegistrarProposal\n\n\nDefined in \nwrappers/schemeRegistrar.ts:246\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nVotableSchemeRegistrarProposal\n\n\n\n\n\n\ngetVotableRemoveSchemeProposals\n\n\n\u25ba \ngetVotableRemoveSchemeProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nVotableSchemeRegistrarProposal\n, \nRemoveSchemeProposalEventResult\n\n\nDefined in \nwrappers/schemeRegistrar.ts:203\n\n\nEntityFetcherFactory for votable SchemeRegistrarProposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nVotableSchemeRegistrarProposal\n, \nRemoveSchemeProposalEventResult\n\n\n\n\n\n\ngetVotingMachine\n\n\n\u25ba \ngetVotingMachine\n(avatarAddress: \nAddress\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachine\n\n\nDefined in \nproposalGeneratorBase.ts:30\n\n\nReturn IntVoteInterfaceWrapper for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ngetVotingMachineAddress\n\n\n\u25ba \ngetVotingMachineAddress\n(avatarAddress: \nAddress\n): \nPromise\n.\nAddress\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachineAddress\n\n\nDefined in \nproposalGeneratorBase.ts:22\n\n\nReturn the address of the voting machine for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAddress\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nproposeToAddModifyScheme\n\n\n\u25ba \nproposeToAddModifyScheme\n(options?: \nProposeToAddModifySchemeParams\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/schemeRegistrar.ts:39\n\n\nSubmit a proposal to add or modify a given scheme.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeToAddModifySchemeParams\n\n\n{} as ProposeToAddModifySchemeParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nproposeToRemoveScheme\n\n\n\u25ba \nproposeToRemoveScheme\n(options?: \nProposeToRemoveSchemeParams\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/schemeRegistrar.ts:106\n\n\nSubmit a proposal to remove a given scheme.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeToRemoveSchemeParams\n\n\n{} as ProposeToRemoveSchemeParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nSchemeRegistrarParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/schemeRegistrar.ts:138\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nSchemeRegistrarParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "SchemeRegistrarWrapper"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#class-schemeregistrarwrapper", 
            "text": "", 
            "title": "Class: SchemeRegistrarWrapper"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#hierarchy", 
            "text": "\u21b3   ProposalGeneratorBase  \u21b3 SchemeRegistrarWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#implements", 
            "text": "IContractWrapperBase  SchemeWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#properties", 
            "text": "NewSchemeProposal  ProposalDeleted  ProposalExecuted  RemoveSchemeProposal  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#methods", 
            "text": "estimateGas  getController  getDefaultPermissions  getExecutedProposals  getParameters  getParametersArray  getParametersHash  getSchemeParameters  getSchemeParametersHash  getSchemePermissions  getVotableAddSchemeProposals  getVotableProposal  getVotableRemoveSchemeProposals  getVotingMachine  getVotingMachineAddress  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  proposeToAddModifyScheme  proposeToRemoveScheme  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#new-schemeregistrarwrappersoliditycontract-any-web3eventservice-web3eventservice-schemeregistrarwrapper", 
            "text": "Inherited from  ProposalGeneratorBase . constructor  Overrides  ContractWrapperBase . constructor  Defined in  proposalGeneratorBase.ts:10  Parameters:     Param  Type  Description      solidityContract  any  -    web3EventService  Web3EventService  -     Returns:   SchemeRegistrarWrapper", 
            "title": "\u2295 new SchemeRegistrarWrapper(solidityContract: any, web3EventService: Web3EventService): SchemeRegistrarWrapper"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#newschemeproposal", 
            "text": "\u25cf  NewSchemeProposal :   EventFetcherFactory NewSchemeProposalEventResult    Defined in  wrappers/schemeRegistrar.ts:30  Events", 
            "title": "NewSchemeProposal"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#proposaldeleted", 
            "text": "\u25cf  ProposalDeleted :   EventFetcherFactory ProposalDeletedEventResult    Defined in  wrappers/schemeRegistrar.ts:33", 
            "title": "ProposalDeleted"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#proposalexecuted", 
            "text": "\u25cf  ProposalExecuted :   EventFetcherFactory SchemeProposalExecutedEventResult    Defined in  wrappers/schemeRegistrar.ts:32", 
            "title": "ProposalExecuted"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#removeschemeproposal", 
            "text": "\u25cf  RemoveSchemeProposal :   EventFetcherFactory RemoveSchemeProposalEventResult    Defined in  wrappers/schemeRegistrar.ts:31", 
            "title": "RemoveSchemeProposal"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory SchemeRegistrarWrapper   =  SchemeRegistrarFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/schemeRegistrar.ts:25", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Scheme Registrar\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/schemeRegistrar.ts:24", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#name", 
            "text": "\u25cf  name :   string   = \"SchemeRegistrar\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/schemeRegistrar.ts:23", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Implementation of  SchemeWrapper . getDefaultPermissions  Defined in  wrappers/schemeRegistrar.ts:153  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getexecutedproposals", 
            "text": "\u25ba  getExecutedProposals (avatarAddress:  Address ):  EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult  Defined in  wrappers/schemeRegistrar.ts:228  EntityFetcherFactory for executed proposals.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult", 
            "title": "getExecutedProposals"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . SchemeRegistrarParams  Implementation of  SchemeWrapper . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/schemeRegistrar.ts:165  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . SchemeRegistrarParams", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  SchemeRegistrarParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/schemeRegistrar.ts:130  Parameters:     Param  Type  Description      params  SchemeRegistrarParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . SchemeRegistrarParams  Implementation of  SchemeWrapper . getSchemeParameters  Defined in  wrappers/schemeRegistrar.ts:161  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemeRegistrarParams", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Implementation of  SchemeWrapper . getSchemePermissions  Defined in  wrappers/schemeRegistrar.ts:157  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getvotableaddschemeproposals", 
            "text": "\u25ba  getVotableAddSchemeProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory VotableSchemeRegistrarProposal ,  NewSchemeProposalEventResult  Defined in  wrappers/schemeRegistrar.ts:178  EntityFetcherFactory for votable SchemeRegistrarProposal.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory VotableSchemeRegistrarProposal ,  NewSchemeProposalEventResult", 
            "title": "getVotableAddSchemeProposals"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getvotableproposal", 
            "text": "\u25ba  getVotableProposal (avatarAddress:  Address , proposalId:  Hash ):  Promise . VotableSchemeRegistrarProposal  Defined in  wrappers/schemeRegistrar.ts:246  Parameters:     Param  Type  Description      avatarAddress  Address  -    proposalId  Hash  -     Returns:   Promise . VotableSchemeRegistrarProposal", 
            "title": "getVotableProposal"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getvotableremoveschemeproposals", 
            "text": "\u25ba  getVotableRemoveSchemeProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory VotableSchemeRegistrarProposal ,  RemoveSchemeProposalEventResult  Defined in  wrappers/schemeRegistrar.ts:203  EntityFetcherFactory for votable SchemeRegistrarProposal.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory VotableSchemeRegistrarProposal ,  RemoveSchemeProposalEventResult", 
            "title": "getVotableRemoveSchemeProposals"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getvotingmachine", 
            "text": "\u25ba  getVotingMachine (avatarAddress:  Address ):  Promise . IntVoteInterfaceWrapper  Inherited from  ProposalGeneratorBase . getVotingMachine  Defined in  proposalGeneratorBase.ts:30  Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "getVotingMachine"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#getvotingmachineaddress", 
            "text": "\u25ba  getVotingMachineAddress (avatarAddress:  Address ):  Promise . Address  Inherited from  ProposalGeneratorBase . getVotingMachineAddress  Defined in  proposalGeneratorBase.ts:22  Return the address of the voting machine for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Address", 
            "title": "getVotingMachineAddress"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#proposetoaddmodifyscheme", 
            "text": "\u25ba  proposeToAddModifyScheme (options?:  ProposeToAddModifySchemeParams ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/schemeRegistrar.ts:39  Submit a proposal to add or modify a given scheme.  Parameters:     Param  Type  Default value  Description      options  ProposeToAddModifySchemeParams  {} as ProposeToAddModifySchemeParams   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeToAddModifyScheme"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#proposetoremovescheme", 
            "text": "\u25ba  proposeToRemoveScheme (options?:  ProposeToRemoveSchemeParams ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/schemeRegistrar.ts:106  Submit a proposal to remove a given scheme.  Parameters:     Param  Type  Default value  Description      options  ProposeToRemoveSchemeParams  {} as ProposeToRemoveSchemeParams   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeToRemoveScheme"
        }, 
        {
            "location": "/api/classes/SchemeRegistrarWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  SchemeRegistrarParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/schemeRegistrar.ts:138  Parameters:     Param  Type  Description      params  SchemeRegistrarParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/", 
            "text": "API Reference\n \n \nStandardTokenFactoryType\n\n\nClass: StandardTokenFactoryType\n\n\ndefined just to add good type checking\n\n\nHierarchy\n\n\nContractWrapperFactory\nStandardTokenWrapper\n\n\n\u21b3 StandardTokenFactoryType\n\n\nImplements\n\n\n\n\nIContractWrapperFactory\nStandardTokenWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nat\n\n\ndeployed\n\n\nnew\n\n\nsetConfigService\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew StandardTokenFactoryType\n(solidityContractName: \nstring\n, wrapper: \nobject\n, web3EventService: \nWeb3EventService\n): \nStandardTokenFactoryType\n\n\nInherited from \nContractWrapperFactory\n.\nconstructor\n\n\nDefined in \ncontractWrapperFactory.ts:26\n\n\nConnstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\nwrapper\n\n\nobject\n\n\nClass of the contract\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nStandardTokenFactoryType\n\n\n\n\nMethods\n\n\n\n\nat\n\n\n\u25ba \nat\n(address: \nstring\n): \nPromise\n.\nStandardTokenWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nat\n\n\nDefined in \ncontractWrapperFactory.ts:61\n\n\nReturn a wrapper around the contract, hydrated from the given address. Returns undefined if not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardTokenWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25ba \ndeployed\n(): \nPromise\n.\nStandardTokenWrapper\n\n\nOverrides \nContractWrapperFactory\n.\ndeployed\n\n\nDefined in \nwrappers/standardToken.ts:222\n\n\nReturns:\n \nPromise\n.\nStandardTokenWrapper\n\n\n\n\n\n\nnew\n\n\n\u25ba \nnew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nStandardTokenWrapper\n\n\nInherited from \nContractWrapperFactory\n.\nnew\n\n\nDefined in \ncontractWrapperFactory.ts:44\n\n\nDeploy a new instance of the contract and return a wrapper around it.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\nOptional arguments to the Arc contracts constructor.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardTokenWrapper\n\n\n\n\n\n\n\u00abStatic\u00bb setConfigService\n\n\n\u25ba \nsetConfigService\n(configService: \nIConfigService\n): \nvoid\n\n\nInherited from \nContractWrapperFactory\n.\nsetConfigService\n\n\nDefined in \ncontractWrapperFactory.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nconfigService\n\n\nIConfigService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "StandardTokenFactoryType"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#class-standardtokenfactorytype", 
            "text": "defined just to add good type checking", 
            "title": "Class: StandardTokenFactoryType"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#hierarchy", 
            "text": "ContractWrapperFactory StandardTokenWrapper  \u21b3 StandardTokenFactoryType", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#implements", 
            "text": "IContractWrapperFactory StandardTokenWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#methods", 
            "text": "at  deployed  new  setConfigService", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#new-standardtokenfactorytypesoliditycontractname-string-wrapper-object-web3eventservice-web3eventservice-standardtokenfactorytype", 
            "text": "Inherited from  ContractWrapperFactory . constructor  Defined in  contractWrapperFactory.ts:26  Connstructor to create a contract wrapper factory for the given Arc contract name and wrapper class.  Parameters:     Param  Type  Description      solidityContractName  string  -    wrapper  object  Class of the contract    web3EventService  Web3EventService  -     Returns:   StandardTokenFactoryType", 
            "title": "\u2295 new StandardTokenFactoryType(solidityContractName: string, wrapper: object, web3EventService: Web3EventService): StandardTokenFactoryType"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#at", 
            "text": "\u25ba  at (address:  string ):  Promise . StandardTokenWrapper  Inherited from  ContractWrapperFactory . at  Defined in  contractWrapperFactory.ts:61  Return a wrapper around the contract, hydrated from the given address. Returns undefined if not found.  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . StandardTokenWrapper", 
            "title": "at"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#deployed", 
            "text": "\u25ba  deployed ():  Promise . StandardTokenWrapper  Overrides  ContractWrapperFactory . deployed  Defined in  wrappers/standardToken.ts:222  Returns:   Promise . StandardTokenWrapper", 
            "title": "deployed"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#new", 
            "text": "\u25ba  new (...rest:  Array . any ):  Promise . StandardTokenWrapper  Inherited from  ContractWrapperFactory . new  Defined in  contractWrapperFactory.ts:44  Deploy a new instance of the contract and return a wrapper around it.  Parameters:     Param  Type  Description      rest  Array . any  Optional arguments to the Arc contracts constructor.     Returns:   Promise . StandardTokenWrapper", 
            "title": "new"
        }, 
        {
            "location": "/api/classes/StandardTokenFactoryType/#static-setconfigservice", 
            "text": "\u25ba  setConfigService (configService:  IConfigService ):  void  Inherited from  ContractWrapperFactory . setConfigService  Defined in  contractWrapperFactory.ts:14  Parameters:     Param  Type  Description      configService  IConfigService  -     Returns:   void", 
            "title": "\u00abStatic\u00bb setConfigService"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/", 
            "text": "API Reference\n \n \nStandardTokenWrapper\n\n\nClass: StandardTokenWrapper\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3 StandardTokenWrapper\n\n\n\u21b3  \nMintableTokenWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nApproval\n\n\nTransfer\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nallowance\n\n\napprove\n\n\ndecreaseApproval\n\n\nestimateGas\n\n\ngetBalanceOf\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParametersHash\n\n\ngetTotalSupply\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nincreaseApproval\n\n\nsetParameters\n\n\ntransfer\n\n\ntransferFrom\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew StandardTokenWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nStandardTokenWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nStandardTokenWrapper\n\n\n\n\nProperties\n\n\n\n\nApproval\n\n\n\u25cf  Approval\n:  \nEventFetcherFactory\nApprovalEventResult\n \n\n\nDefined in \nwrappers/standardToken.ts:16\n\n\n\n\n\n\nTransfer\n\n\n\u25cf  Transfer\n:  \nEventFetcherFactory\nTransferEventResult\n \n\n\nDefined in \nwrappers/standardToken.ts:17\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nStandardTokenWrapper\n  =  StandardTokenFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/standardToken.ts:14\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Standard Token\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/standardToken.ts:13\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"StandardToken\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/standardToken.ts:12\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nallowance\n\n\n\u25ba \nallowance\n(options: \nStandardTokenAllowanceOptions\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/standardToken.ts:198\n\n\nReturns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenAllowanceOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\napprove\n\n\n\u25ba \napprove\n(options: \nStandardTokenApproveOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/standardToken.ts:24\n\n\nApprove transfer of tokens by msg.sender (or \nonBehalfOf\n, if given) from the given \"spender\".\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenApproveOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ndecreaseApproval\n\n\n\u25ba \ndecreaseApproval\n(options: \nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/standardToken.ts:147\n\n\nDecrease the number of tokens approved that msg.sender (or \nonBehalfOf\n if given) may transfer from the given \"spender\".\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetBalanceOf\n\n\n\u25ba \ngetBalanceOf\n(account: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/standardToken.ts:175\n\n\nReturns a promise of the given account's current token balance.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naccount\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nInherited from \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \ncontractWrapperBase.ts:142\n\n\nGiven a hash, returns the associated parameters as an object.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:152\n\n\nGiven an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetTotalSupply\n\n\n\u25ba \ngetTotalSupply\n(): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/standardToken.ts:187\n\n\nReturns a promise of the token's total number of tokens.\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nincreaseApproval\n\n\n\u25ba \nincreaseApproval\n(options: \nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/standardToken.ts:118\n\n\nIncrease the number of tokens approved that msg.sender (or \nonBehalfOf\n, if given) may transfer from the given \"spender\".\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenChangeApprovalOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\nsetParameters\n\n\nInherited from \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \ncontractWrapperBase.ts:134\n\n\nCall setParameters on this.contract. Returns promise of ArcTransactionDataResult \nwhere Result is the parameters hash.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-- parameters as the contract.setParameters function expects them.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\n\n\n\n\n\ntransfer\n\n\n\u25ba \ntransfer\n(options: \nStandardTokenTransferOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/standardToken.ts:51\n\n\nTransfer tokens from the current account to another.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenTransferOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ntransferFrom\n\n\n\u25ba \ntransferFrom\n(options: \nStandardTokenTransferFromOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/standardToken.ts:82\n\n\nTransfer tokens from one address to another.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nStandardTokenTransferFromOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "StandardTokenWrapper"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#class-standardtokenwrapper", 
            "text": "", 
            "title": "Class: StandardTokenWrapper"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3 StandardTokenWrapper  \u21b3   MintableTokenWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#properties", 
            "text": "Approval  Transfer  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#methods", 
            "text": "allowance  approve  decreaseApproval  estimateGas  getBalanceOf  getController  getParameters  getParametersArray  getParametersHash  getSchemeParametersHash  getTotalSupply  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  increaseApproval  setParameters  transfer  transferFrom", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#new-standardtokenwrappersoliditycontract-any-web3eventservice-web3eventservice-standardtokenwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   StandardTokenWrapper", 
            "title": "\u2295 new StandardTokenWrapper(solidityContract: any, web3EventService: Web3EventService): StandardTokenWrapper"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#approval", 
            "text": "\u25cf  Approval :   EventFetcherFactory ApprovalEventResult    Defined in  wrappers/standardToken.ts:16", 
            "title": "Approval"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#transfer", 
            "text": "\u25cf  Transfer :   EventFetcherFactory TransferEventResult    Defined in  wrappers/standardToken.ts:17", 
            "title": "Transfer"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory StandardTokenWrapper   =  StandardTokenFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/standardToken.ts:14", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Standard Token\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/standardToken.ts:13", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#name", 
            "text": "\u25cf  name :   string   = \"StandardToken\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/standardToken.ts:12", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#allowance", 
            "text": "\u25ba  allowance (options:  StandardTokenAllowanceOptions ):  Promise . BigNumber  Defined in  wrappers/standardToken.ts:198  Returns a promise of the number of tokens that the given account \"spender\" is currently allowed to transfer from the given token holder's account.  Parameters:     Param  Type  Description      options  StandardTokenAllowanceOptions  -     Returns:   Promise . BigNumber", 
            "title": "allowance"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#approve", 
            "text": "\u25ba  approve (options:  StandardTokenApproveOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/standardToken.ts:24  Approve transfer of tokens by msg.sender (or  onBehalfOf , if given) from the given \"spender\".  Parameters:     Param  Type  Description      options  StandardTokenApproveOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "approve"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#decreaseapproval", 
            "text": "\u25ba  decreaseApproval (options:  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/standardToken.ts:147  Decrease the number of tokens approved that msg.sender (or  onBehalfOf  if given) may transfer from the given \"spender\".  Parameters:     Param  Type  Description      options  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "decreaseApproval"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#getbalanceof", 
            "text": "\u25ba  getBalanceOf (account:  Address ):  Promise . BigNumber  Defined in  wrappers/standardToken.ts:175  Returns a promise of the given account's current token balance.  Parameters:     Param  Type  Description      account  Address  -     Returns:   Promise . BigNumber", 
            "title": "getBalanceOf"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Inherited from  ContractWrapperBase . getParameters  Defined in  contractWrapperBase.ts:142  Given a hash, returns the associated parameters as an object.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Implementation of  IContractWrapperBase . getParametersHash  Inherited from  ContractWrapperBase . getParametersHash  Defined in  contractWrapperBase.ts:152  Given an object containing the contract's parameters, return the hash that would be used to represent them in Arc. Note this doesn't indicate whether the parameters have been registered with the contract.  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#gettotalsupply", 
            "text": "\u25ba  getTotalSupply ():  Promise . BigNumber  Defined in  wrappers/standardToken.ts:187  Returns a promise of the token's total number of tokens.  Returns:   Promise . BigNumber", 
            "title": "getTotalSupply"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#increaseapproval", 
            "text": "\u25ba  increaseApproval (options:  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/standardToken.ts:118  Increase the number of tokens approved that msg.sender (or  onBehalfOf , if given) may transfer from the given \"spender\".  Parameters:     Param  Type  Description      options  StandardTokenChangeApprovalOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "increaseApproval"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Implementation of  IContractWrapperBase . setParameters  Inherited from  ContractWrapperBase . setParameters  Defined in  contractWrapperBase.ts:134  Call setParameters on this.contract. Returns promise of ArcTransactionDataResult  where Result is the parameters hash.  Parameters:     Param  Type  Description      params  Array . any  -- parameters as the contract.setParameters function expects them.     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#transfer_1", 
            "text": "\u25ba  transfer (options:  StandardTokenTransferOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/standardToken.ts:51  Transfer tokens from the current account to another.  Parameters:     Param  Type  Description      options  StandardTokenTransferOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transfer"
        }, 
        {
            "location": "/api/classes/StandardTokenWrapper/#transferfrom", 
            "text": "\u25ba  transferFrom (options:  StandardTokenTransferFromOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/standardToken.ts:82  Transfer tokens from one address to another.  Parameters:     Param  Type  Description      options  StandardTokenTransferFromOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transferFrom"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/", 
            "text": "API Reference\n \n \nSubscriptionCollection\n\n\nClass: SubscriptionCollection\n\n\nCreates a collection of subscriptions to which one can unsubscribe all at once.\n\n\nImplements\n\n\n\n\nIEventSubscription\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nsubscribe\n\n\nunsubscribe\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew SubscriptionCollection\n(topics?: \nstring\n\u23ae\nArray\n.\nstring\n, callback?: \nEventSubscriptionCallback\n): \nSubscriptionCollection\n\n\nDefined in \npubSubEventService.ts:154\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopics\n\n\nstring\n\u23ae\nArray\n.\nstring\n\n\n-\n\n\n\n\n\n\ncallback\n\n\nEventSubscriptionCallback\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nSubscriptionCollection\n\n\n\n\nMethods\n\n\n\n\nsubscribe\n\n\n\u25ba \nsubscribe\n(topics: \nstring\n\u23ae\nArray\n.\nstring\n, callback: \nEventSubscriptionCallback\n): \nvoid\n\n\nDefined in \npubSubEventService.ts:169\n\n\nSubscribe a single callback to a set of events\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopics\n\n\nstring\n\u23ae\nArray\n.\nstring\n\n\n-\n\n\n\n\n\n\ncallback\n\n\nEventSubscriptionCallback\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nunsubscribe\n\n\n\u25ba \nunsubscribe\n(milliseconds?: \nnumber\n): \nPromise\n.\nvoid\n\n\nImplementation of \nIEventSubscription\n.\nunsubscribe\n\n\nDefined in \npubSubEventService.ts:184\n\n\nUnsubscribe from all of the events\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmilliseconds\n\n\nnumber\n\n\n-1\n\n\nnumber of milliseconds to timeout.Default is -1 which means not to timeout at all.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "SubscriptionCollection"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#class-subscriptioncollection", 
            "text": "Creates a collection of subscriptions to which one can unsubscribe all at once.", 
            "title": "Class: SubscriptionCollection"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#implements", 
            "text": "IEventSubscription", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#methods", 
            "text": "subscribe  unsubscribe", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#new-subscriptioncollectiontopics-stringarraystring-callback-eventsubscriptioncallback-subscriptioncollection", 
            "text": "Defined in  pubSubEventService.ts:154  Parameters:     Param  Type  Description      topics  string \u23ae Array . string  -    callback  EventSubscriptionCallback  -     Returns:   SubscriptionCollection", 
            "title": "\u2295 new SubscriptionCollection(topics?: string\u23aeArray.&lt;string&gt;, callback?: EventSubscriptionCallback): SubscriptionCollection"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#subscribe", 
            "text": "\u25ba  subscribe (topics:  string \u23ae Array . string , callback:  EventSubscriptionCallback ):  void  Defined in  pubSubEventService.ts:169  Subscribe a single callback to a set of events  Parameters:     Param  Type  Description      topics  string \u23ae Array . string  -    callback  EventSubscriptionCallback  -     Returns:   void", 
            "title": "subscribe"
        }, 
        {
            "location": "/api/classes/SubscriptionCollection/#unsubscribe", 
            "text": "\u25ba  unsubscribe (milliseconds?:  number ):  Promise . void  Implementation of  IEventSubscription . unsubscribe  Defined in  pubSubEventService.ts:184  Unsubscribe from all of the events  Parameters:     Param  Type  Default value  Description      milliseconds  number  -1  number of milliseconds to timeout.Default is -1 which means not to timeout at all.     Returns:   Promise . void", 
            "title": "unsubscribe"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/", 
            "text": "API Reference\n \n \nTokenCapGCWrapper\n\n\nClass: TokenCapGCWrapper\n\n\nHierarchy\n\n\nContractWrapperBase\n\n\n\u21b3 TokenCapGCWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew TokenCapGCWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nTokenCapGCWrapper\n\n\nInherited from \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nContractWrapperFactory constructs this\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\nThe json contract truffle artifact\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nTokenCapGCWrapper\n\n\n\n\nProperties\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nTokenCapGCWrapper\n  =  TokenCapGCFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/tokenCapGC.ts:14\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Token Cap Global Constraint\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/tokenCapGC.ts:13\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"TokenCapGC\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/tokenCapGC.ts:12\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/tokenCapGC.ts:41\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nTokenCapGcParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/tokenCapGC.ts:16\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nTokenCapGcParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nGetTokenCapGcParamsResult\n\n\nDefined in \nwrappers/tokenCapGC.ts:54\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nGetTokenCapGcParamsResult\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nOverrides \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \nwrappers/tokenCapGC.ts:49\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nTokenCapGcParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/tokenCapGC.ts:22\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nTokenCapGcParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "TokenCapGCWrapper"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#class-tokencapgcwrapper", 
            "text": "", 
            "title": "Class: TokenCapGCWrapper"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#hierarchy", 
            "text": "ContractWrapperBase  \u21b3 TokenCapGCWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#implements", 
            "text": "IContractWrapperBase", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#properties", 
            "text": "contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#methods", 
            "text": "estimateGas  getController  getParameters  getParametersArray  getParametersHash  getSchemeParameters  getSchemeParametersHash  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#new-tokencapgcwrappersoliditycontract-any-web3eventservice-web3eventservice-tokencapgcwrapper", 
            "text": "Inherited from  ContractWrapperBase . constructor  Defined in  contractWrapperBase.ts:62  ContractWrapperFactory constructs this  Parameters:     Param  Type  Description      solidityContract  any  The json contract truffle artifact    web3EventService  Web3EventService  -     Returns:   TokenCapGCWrapper", 
            "title": "\u2295 new TokenCapGCWrapper(solidityContract: any, web3EventService: Web3EventService): TokenCapGCWrapper"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory TokenCapGCWrapper   =  TokenCapGCFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/tokenCapGC.ts:14", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Token Cap Global Constraint\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/tokenCapGC.ts:13", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#name", 
            "text": "\u25cf  name :   string   = \"TokenCapGC\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/tokenCapGC.ts:12", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Implementation of  IContractWrapperBase . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/tokenCapGC.ts:41  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  TokenCapGcParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/tokenCapGC.ts:16  Parameters:     Param  Type  Description      params  TokenCapGcParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . GetTokenCapGcParamsResult  Defined in  wrappers/tokenCapGC.ts:54  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . GetTokenCapGcParamsResult", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Overrides  ContractWrapperBase . getSchemeParametersHash  Defined in  wrappers/tokenCapGC.ts:49  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/TokenCapGCWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  TokenCapGcParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/tokenCapGC.ts:22  Parameters:     Param  Type  Description      params  TokenCapGcParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/TransactionService/", 
            "text": "API Reference\n \n \nTransactionService\n\n\nClass: TransactionService\n\n\nEnables you to track the completion of transactions triggered by Arc.js functions. You can subscribe to events that tell you how many transactions are anticipated when the transactions have completed. For more information, see \nTracking Transactions\n.\n\n\nHierarchy\n\n\nPubSubEventService\n\n\n\u21b3 TransactionService\n\n\nIndex\n\n\nMethods\n\n\n\n\nclearAllSubscriptions\n\n\ngenerateInvocationKey\n\n\ngetConfirmedTransaction\n\n\ngetDefaultDepth\n\n\ngetMinedTransaction\n\n\ngetTransactionDepth\n\n\ngetValueFromLogs\n\n\nisTopicSpecifiedBy\n\n\npublish\n\n\npublishTxFailed\n\n\nsubscribe\n\n\nunsubscribe\n\n\nwatchForConfirmedTransaction\n\n\nwatchForMinedTransaction\n\n\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb clearAllSubscriptions\n\n\n\u25ba \nclearAllSubscriptions\n(): \nvoid\n\n\nInherited from \nPubSubEventService\n.\nclearAllSubscriptions\n\n\nDefined in \npubSubEventService.ts:38\n\n\nRemove all subscriptions\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb generateInvocationKey\n\n\n\u25ba \ngenerateInvocationKey\n(): \nnumber\n\n\nDefined in \ntransactionService.ts:22\n\n\nGenerate a new invocation key.\n\n\nReturns:\n \nnumber\n\n\n\n\n\n\n\u00abStatic\u00bb getConfirmedTransaction\n\n\n\u25ba \ngetConfirmedTransaction\n(txHash: \nHash\n, contract?: \nstring\n\u23ae\nany\n, requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nDefined in \ntransactionService.ts:335\n\n\nReturns a promise of a TransactionReceipt for a confirmed transaction, or null if it hasn't yet been confirmed according to the requiredDepth.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntxHash\n\n\nHash\n\n\n-\n\n\n-\n\n\n\n\n\n\ncontract\n\n\nstring\n\u23ae\nany\n\n\nnull\n\n\nOptional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call \nTransactionService.toTxTruffle\n manually yourself)\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\n\n\n\n\n\u00abStatic\u00bb getDefaultDepth\n\n\n\u25ba \ngetDefaultDepth\n(requiredDepth?: \nnumber\n): \nPromise\n.\nnumber\n\n\nDefined in \ntransactionService.ts:515\n\n\nReturns the default value for required block depth defined for the current network in the Arc.js global configuration (\"txDepthRequiredForConfirmation\").\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\nOverrides the default if given\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\n\u00abStatic\u00bb getMinedTransaction\n\n\n\u25ba \ngetMinedTransaction\n(txHash: \nHash\n, contract?: \nstring\n\u23ae\nany\n, requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\u23ae\nnull\n\n\nDefined in \ntransactionService.ts:304\n\n\nReturns a promise of a TransactionReceipt for a mined transaction, or null if it hasn't yet been mined.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntxHash\n\n\nHash\n\n\n-\n\n\n-\n\n\n\n\n\n\ncontract\n\n\nstring\n\u23ae\nany\n\n\nnull\n\n\nOptional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call \nTransactionService.toTxTruffle\n manually yourself)\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n0\n\n\nOptional minimum block depth required to resolve the promise. Default is 0.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\u23ae\nnull\n\nPromise of \nTransactionReceiptTruffle\n if contract is given, else \nTransactionReceipt\n,\nor null if not found.\n\n\n\n\n\n\n\u00abStatic\u00bb getTransactionDepth\n\n\n\u25ba \ngetTransactionDepth\n(tx: \nHash\n\u23ae\nTransactionReceipt\n): \nPromise\n.\nnumber\n\n\nDefined in \ntransactionService.ts:272\n\n\nReturns a promise of the number of blocks that have been added to the chain since the given transaction appeared. Use this to decide whether a transaction is sufficiently secure (confirmed).\n\n\nSee also \ngetConfirmedTransaction\n and \nwatchForConfirmedTransaction\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntx\n\n\nHash\n\u23ae\nTransactionReceipt\n\n\ntxHash or TransactionReceipt\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\nPromise of the depth or -1 if the transaction cannot be found\n\n\n\n\n\n\n\u00abStatic\u00bb getValueFromLogs\n\n\n\u25ba \ngetValueFromLogs\n(tx: \nTransactionReceiptTruffle\n\u23ae\nTransactionReceipt\n, arg: \nstring\n, eventName?: \nstring\n, index?: \nnumber\n): \nany\n\u23ae\nundefined\n\n\nDefined in \ntransactionService.ts:453\n\n\nReturns a value from the given transaction log. Undefined if not found for any reason.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntx\n\n\nTransactionReceiptTruffle\n\u23ae\nTransactionReceipt\n\n\n-\n\n\nThe transaction\n\n\n\n\n\n\narg\n\n\nstring\n\n\n-\n\n\nThe name of the property whose value we wish to return from the args object: tx.logs[index].args[argName]\n\n\n\n\n\n\neventName\n\n\nstring\n\n\nnull\n\n\nOverrides index, identifies which log, where tx.logs[n].event === eventName\n\n\n\n\n\n\nindex\n\n\nnumber\n\n\n0\n\n\nIdentifies which log when eventName is not given\n\n\n\n\n\n\n\n\nReturns:\n \nany\n\u23ae\nundefined\n\n\n\n\n\n\n\u00abStatic\u00bb isTopicSpecifiedBy\n\n\n\u25ba \nisTopicSpecifiedBy\n(matchTemplates: \nArray\n.\nstring\n\u23ae\nstring\n, topic: \nstring\n): \nboolean\n\n\nInherited from \nPubSubEventService\n.\nisTopicSpecifiedBy\n\n\nDefined in \npubSubEventService.ts:91\n\n\nReturn whether topic is specified by matchTemplates.\n\n\nExamples:\n\n\nmatchTemplates: [\"foo\"] topic: \"foo.bar\" result: true\n\n\nmatchTemplates: [\"foo.bar\"] topic: \"foo\" result: false\n\n\nOr a wildcard:\n\n\nmatchTemplates: \"*\" topic: \"foo\" result: true\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmatchTemplates\n\n\nArray\n.\nstring\n\u23ae\nstring\n\n\n-\n\n\n\n\n\n\ntopic\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nboolean\n\n\n\n\n\n\n\u00abStatic\u00bb publish\n\n\n\u25ba \npublish\n(topic: \nstring\n, payload: \nany\n): \nboolean\n\n\nInherited from \nPubSubEventService\n.\npublish\n\n\nDefined in \npubSubEventService.ts:18\n\n\nSend the given payload to subscribers of the given topic.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopic\n\n\nstring\n\n\nSee \nsubscribe\n\n\n\n\n\n\npayload\n\n\nany\n\n\nSent in the subscription callback.\n\n\n\n\n\n\n\n\nReturns:\n \nboolean\n\nTrue if there are any subscribers\n\n\n\n\n\n\n\u00abStatic\u00bb publishTxFailed\n\n\n\u25ba \npublishTxFailed\n(eventContext: \nTxEventContext\n, atStage: \nTransactionStage\n, error?: \nError\n, tx?: \nHash\n, txReceipt?: \nTransactionReceiptTruffle\n): \nvoid\n\n\nDefined in \ntransactionService.ts:120\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\neventContext\n\n\nTxEventContext\n\n\n-\n\n\n-\n\n\n\n\n\n\natStage\n\n\nTransactionStage\n\n\n-\n\n\n-\n\n\n\n\n\n\nerror\n\n\nError\n\n\nnew Error(\nUnspecified error\n)\n\n\n-\n\n\n\n\n\n\ntx\n\n\nHash\n\n\n-\n\n\n-\n\n\n\n\n\n\ntxReceipt\n\n\nTransactionReceiptTruffle\n\n\n-\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb subscribe\n\n\n\u25ba \nsubscribe\n(topics: \nstring\n\u23ae\nArray\n.\nstring\n, callback: \nEventSubscriptionCallback\n): \nIEventSubscription\n\n\nInherited from \nPubSubEventService\n.\nsubscribe\n\n\nDefined in \npubSubEventService.ts:29\n\n\nSubscribe to the given topic or array of topics.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntopics\n\n\nstring\n\u23ae\nArray\n.\nstring\n\n\nIdentifies the event(s) to which you wish to subscribe\n\n\n\n\n\n\ncallback\n\n\nEventSubscriptionCallback\n\n\nThe function to call when the requested events are published\n\n\n\n\n\n\n\n\nReturns:\n \nIEventSubscription\n\nAn interface with \n.unsubscribe()\n.  Be sure to call it!\n\n\n\n\n\n\n\u00abStatic\u00bb unsubscribe\n\n\n\u25ba \nunsubscribe\n(key: \nEventSubscriptionKey\n, milliseconds?: \nnumber\n): \nPromise\n.\nvoid\n\n\nInherited from \nPubSubEventService\n.\nunsubscribe\n\n\nDefined in \npubSubEventService.ts:52\n\n\nUnsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nEventSubscriptionKey\n\n\n-\n\n\nA token, function or topic to unsubscribe.\n\n\n\n\n\n\nmilliseconds\n\n\nnumber\n\n\n-1\n\n\nnumber of milliseconds to timeout.Default is -1 which means not to timeout at all.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid\n\n\n\n\n\n\n\u00abStatic\u00bb watchForConfirmedTransaction\n\n\n\u25ba \nwatchForConfirmedTransaction\n(txHash: \nHash\n, contract?: \nstring\n\u23ae\nany\n, requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\n\nDefined in \ntransactionService.ts:245\n\n\nReturns a promise of a TransactionReceipt once the given transaction has been confirmed according to the optional \nrequiredDepth\n.\n\n\nSee also \ngetConfirmedTransaction\n and \ngetTransactionDepth\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntxHash\n\n\nHash\n\n\n-\n\n\nThe transaction hash to watch\n\n\n\n\n\n\ncontract\n\n\nstring\n\u23ae\nany\n\n\nnull\n\n\nOptional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call \nTransactionService.toTxTruffle\n manually yourself)\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\nOptional minimum block depth required to resolve the promise.Default comes from the \nConfigurationService\n.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\n\n\n\n\n\n\u00abStatic\u00bb watchForMinedTransaction\n\n\n\u25ba \nwatchForMinedTransaction\n(txHash: \nHash\n, contract?: \nstring\n\u23ae\nany\n, requiredDepth?: \nnumber\n): \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\n\nDefined in \ntransactionService.ts:179\n\n\nReturns a promise of a TransactionReceipt once the given transaction has been mined.\n\n\nSee also \ngetMinedTransaction\n and \ngetTransactionDepth\n.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntxHash\n\n\nHash\n\n\n-\n\n\nthe transaction hash\n\n\n\n\n\n\ncontract\n\n\nstring\n\u23ae\nany\n\n\nnull\n\n\nOptional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call \nTransactionService.toTxTruffle\n manually yourself)\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n0\n\n\nOptional minimum block depth required to resolve the promise. Default is 0.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTransactionReceipt\n\u23ae\nTransactionReceiptTruffle\n\nPromise of \nTransactionReceiptTruffle\n if contract is given, else \nTransactionReceipt", 
            "title": "TransactionService"
        }, 
        {
            "location": "/api/classes/TransactionService/#class-transactionservice", 
            "text": "Enables you to track the completion of transactions triggered by Arc.js functions. You can subscribe to events that tell you how many transactions are anticipated when the transactions have completed. For more information, see  Tracking Transactions .", 
            "title": "Class: TransactionService"
        }, 
        {
            "location": "/api/classes/TransactionService/#hierarchy", 
            "text": "PubSubEventService  \u21b3 TransactionService", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/TransactionService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/TransactionService/#methods", 
            "text": "clearAllSubscriptions  generateInvocationKey  getConfirmedTransaction  getDefaultDepth  getMinedTransaction  getTransactionDepth  getValueFromLogs  isTopicSpecifiedBy  publish  publishTxFailed  subscribe  unsubscribe  watchForConfirmedTransaction  watchForMinedTransaction", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/TransactionService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-clearallsubscriptions", 
            "text": "\u25ba  clearAllSubscriptions ():  void  Inherited from  PubSubEventService . clearAllSubscriptions  Defined in  pubSubEventService.ts:38  Remove all subscriptions  Returns:   void", 
            "title": "\u00abStatic\u00bb clearAllSubscriptions"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-generateinvocationkey", 
            "text": "\u25ba  generateInvocationKey ():  number  Defined in  transactionService.ts:22  Generate a new invocation key.  Returns:   number", 
            "title": "\u00abStatic\u00bb generateInvocationKey"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-getconfirmedtransaction", 
            "text": "\u25ba  getConfirmedTransaction (txHash:  Hash , contract?:  string \u23ae any , requiredDepth?:  number ):  Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null  Defined in  transactionService.ts:335  Returns a promise of a TransactionReceipt for a confirmed transaction, or null if it hasn't yet been confirmed according to the requiredDepth.  Parameters:     Param  Type  Default value  Description      txHash  Hash  -  -    contract  string \u23ae any  null  Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call  TransactionService.toTxTruffle  manually yourself)    requiredDepth  number  -  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null", 
            "title": "\u00abStatic\u00bb getConfirmedTransaction"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-getdefaultdepth", 
            "text": "\u25ba  getDefaultDepth (requiredDepth?:  number ):  Promise . number  Defined in  transactionService.ts:515  Returns the default value for required block depth defined for the current network in the Arc.js global configuration (\"txDepthRequiredForConfirmation\").  Parameters:     Param  Type  Description      requiredDepth  number  Overrides the default if given     Returns:   Promise . number", 
            "title": "\u00abStatic\u00bb getDefaultDepth"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-getminedtransaction", 
            "text": "\u25ba  getMinedTransaction (txHash:  Hash , contract?:  string \u23ae any , requiredDepth?:  number ):  Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null  Defined in  transactionService.ts:304  Returns a promise of a TransactionReceipt for a mined transaction, or null if it hasn't yet been mined.  Parameters:     Param  Type  Default value  Description      txHash  Hash  -  -    contract  string \u23ae any  null  Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call  TransactionService.toTxTruffle  manually yourself)    requiredDepth  number  0  Optional minimum block depth required to resolve the promise. Default is 0.     Returns:   Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \u23ae null \nPromise of  TransactionReceiptTruffle  if contract is given, else  TransactionReceipt ,\nor null if not found.", 
            "title": "\u00abStatic\u00bb getMinedTransaction"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-gettransactiondepth", 
            "text": "\u25ba  getTransactionDepth (tx:  Hash \u23ae TransactionReceipt ):  Promise . number  Defined in  transactionService.ts:272  Returns a promise of the number of blocks that have been added to the chain since the given transaction appeared. Use this to decide whether a transaction is sufficiently secure (confirmed).  See also  getConfirmedTransaction  and  watchForConfirmedTransaction .  Parameters:     Param  Type  Description      tx  Hash \u23ae TransactionReceipt  txHash or TransactionReceipt     Returns:   Promise . number \nPromise of the depth or -1 if the transaction cannot be found", 
            "title": "\u00abStatic\u00bb getTransactionDepth"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-getvaluefromlogs", 
            "text": "\u25ba  getValueFromLogs (tx:  TransactionReceiptTruffle \u23ae TransactionReceipt , arg:  string , eventName?:  string , index?:  number ):  any \u23ae undefined  Defined in  transactionService.ts:453  Returns a value from the given transaction log. Undefined if not found for any reason.  Parameters:     Param  Type  Default value  Description      tx  TransactionReceiptTruffle \u23ae TransactionReceipt  -  The transaction    arg  string  -  The name of the property whose value we wish to return from the args object: tx.logs[index].args[argName]    eventName  string  null  Overrides index, identifies which log, where tx.logs[n].event === eventName    index  number  0  Identifies which log when eventName is not given     Returns:   any \u23ae undefined", 
            "title": "\u00abStatic\u00bb getValueFromLogs"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-istopicspecifiedby", 
            "text": "\u25ba  isTopicSpecifiedBy (matchTemplates:  Array . string \u23ae string , topic:  string ):  boolean  Inherited from  PubSubEventService . isTopicSpecifiedBy  Defined in  pubSubEventService.ts:91  Return whether topic is specified by matchTemplates.  Examples:  matchTemplates: [\"foo\"] topic: \"foo.bar\" result: true  matchTemplates: [\"foo.bar\"] topic: \"foo\" result: false  Or a wildcard:  matchTemplates: \"*\" topic: \"foo\" result: true  Parameters:     Param  Type  Description      matchTemplates  Array . string \u23ae string  -    topic  string  -     Returns:   boolean", 
            "title": "\u00abStatic\u00bb isTopicSpecifiedBy"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-publish", 
            "text": "\u25ba  publish (topic:  string , payload:  any ):  boolean  Inherited from  PubSubEventService . publish  Defined in  pubSubEventService.ts:18  Send the given payload to subscribers of the given topic.  Parameters:     Param  Type  Description      topic  string  See  subscribe    payload  any  Sent in the subscription callback.     Returns:   boolean \nTrue if there are any subscribers", 
            "title": "\u00abStatic\u00bb publish"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-publishtxfailed", 
            "text": "\u25ba  publishTxFailed (eventContext:  TxEventContext , atStage:  TransactionStage , error?:  Error , tx?:  Hash , txReceipt?:  TransactionReceiptTruffle ):  void  Defined in  transactionService.ts:120  Parameters:     Param  Type  Default value  Description      eventContext  TxEventContext  -  -    atStage  TransactionStage  -  -    error  Error  new Error( Unspecified error )  -    tx  Hash  -  -    txReceipt  TransactionReceiptTruffle  -  -     Returns:   void", 
            "title": "\u00abStatic\u00bb publishTxFailed"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-subscribe", 
            "text": "\u25ba  subscribe (topics:  string \u23ae Array . string , callback:  EventSubscriptionCallback ):  IEventSubscription  Inherited from  PubSubEventService . subscribe  Defined in  pubSubEventService.ts:29  Subscribe to the given topic or array of topics.  Parameters:     Param  Type  Description      topics  string \u23ae Array . string  Identifies the event(s) to which you wish to subscribe    callback  EventSubscriptionCallback  The function to call when the requested events are published     Returns:   IEventSubscription \nAn interface with  .unsubscribe() .  Be sure to call it!", 
            "title": "\u00abStatic\u00bb subscribe"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-unsubscribe", 
            "text": "\u25ba  unsubscribe (key:  EventSubscriptionKey , milliseconds?:  number ):  Promise . void  Inherited from  PubSubEventService . unsubscribe  Defined in  pubSubEventService.ts:52  Unsubscribes after optional timeout. When passed a token, removes a specific subscription, when passed a callback, removes all subscriptions for that callback, when passed a topic, removes all subscriptions for the topic hierarchy.  Parameters:     Param  Type  Default value  Description      key  EventSubscriptionKey  -  A token, function or topic to unsubscribe.    milliseconds  number  -1  number of milliseconds to timeout.Default is -1 which means not to timeout at all.     Returns:   Promise . void", 
            "title": "\u00abStatic\u00bb unsubscribe"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-watchforconfirmedtransaction", 
            "text": "\u25ba  watchForConfirmedTransaction (txHash:  Hash , contract?:  string \u23ae any , requiredDepth?:  number ):  Promise . TransactionReceipt \u23ae TransactionReceiptTruffle  Defined in  transactionService.ts:245  Returns a promise of a TransactionReceipt once the given transaction has been confirmed according to the optional  requiredDepth .  See also  getConfirmedTransaction  and  getTransactionDepth .  Parameters:     Param  Type  Default value  Description      txHash  Hash  -  The transaction hash to watch    contract  string \u23ae any  null  Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call  TransactionService.toTxTruffle  manually yourself)    requiredDepth  number  -  Optional minimum block depth required to resolve the promise.Default comes from the  ConfigurationService .     Returns:   Promise . TransactionReceipt \u23ae TransactionReceiptTruffle", 
            "title": "\u00abStatic\u00bb watchForConfirmedTransaction"
        }, 
        {
            "location": "/api/classes/TransactionService/#static-watchforminedtransaction", 
            "text": "\u25ba  watchForMinedTransaction (txHash:  Hash , contract?:  string \u23ae any , requiredDepth?:  number ):  Promise . TransactionReceipt \u23ae TransactionReceiptTruffle  Defined in  transactionService.ts:179  Returns a promise of a TransactionReceipt once the given transaction has been mined.  See also  getMinedTransaction  and  getTransactionDepth .  Parameters:     Param  Type  Default value  Description      txHash  Hash  -  the transaction hash    contract  string \u23ae any  null  Optional contract instance or contract name of the contract that generated the transaction.Supply this if you want decoded events (or else call  TransactionService.toTxTruffle  manually yourself)    requiredDepth  number  0  Optional minimum block depth required to resolve the promise. Default is 0.     Returns:   Promise . TransactionReceipt \u23ae TransactionReceiptTruffle \nPromise of  TransactionReceiptTruffle  if contract is given, else  TransactionReceipt", 
            "title": "\u00abStatic\u00bb watchForMinedTransaction"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/", 
            "text": "API Reference\n \n \nUpgradeSchemeWrapper\n\n\nClass: UpgradeSchemeWrapper\n\n\nHierarchy\n\n\n\u21b3  \nProposalGeneratorBase\n\n\n\u21b3 UpgradeSchemeWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nSchemeWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nChangeUpgradeSchemeProposal\n\n\nNewUpgradeProposal\n\n\nProposalDeleted\n\n\nProposalExecuted\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetDefaultPermissions\n\n\ngetExecutedProposals\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\ngetSchemePermissions\n\n\ngetVotableProposal\n\n\ngetVotableUpgradeControllerProposals\n\n\ngetVotableUpgradeUpgradeSchemeProposals\n\n\ngetVotingMachine\n\n\ngetVotingMachineAddress\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nproposeController\n\n\nproposeUpgradingScheme\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew UpgradeSchemeWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nUpgradeSchemeWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\nconstructor\n\n\nOverrides \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \nproposalGeneratorBase.ts:10\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\n-\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nUpgradeSchemeWrapper\n\n\n\n\nProperties\n\n\n\n\nChangeUpgradeSchemeProposal\n\n\n\u25cf  ChangeUpgradeSchemeProposal\n:  \nEventFetcherFactory\nChangeUpgradeSchemeProposalEventResult\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:32\n\n\n\n\n\n\nNewUpgradeProposal\n\n\n\u25cf  NewUpgradeProposal\n:  \nEventFetcherFactory\nNewUpgradeProposalEventResult\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:31\n\n\nEvents\n\n\n\n\n\n\nProposalDeleted\n\n\n\u25cf  ProposalDeleted\n:  \nEventFetcherFactory\nProposalDeletedEventResult\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:34\n\n\n\n\n\n\nProposalExecuted\n\n\n\u25cf  ProposalExecuted\n:  \nEventFetcherFactory\nSchemeProposalExecutedEventResult\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:33\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nUpgradeSchemeWrapper\n  =  UpgradeSchemeFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/upgradeScheme.ts:26\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Upgrade Scheme\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/upgradeScheme.ts:25\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"UpgradeScheme\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/upgradeScheme.ts:24\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetDefaultPermissions\n\n\nDefined in \nwrappers/upgradeScheme.ts:118\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetExecutedProposals\n\n\n\u25ba \ngetExecutedProposals\n(avatarAddress: \nAddress\n): \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\nDefined in \nwrappers/upgradeScheme.ts:183\n\n\nEntityFetcherFactory for executed proposals.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/upgradeScheme.ts:130\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nStandardSchemeParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/upgradeScheme.ts:97\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemeParameters\n\n\nDefined in \nwrappers/upgradeScheme.ts:126\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemePermissions\n\n\nDefined in \nwrappers/upgradeScheme.ts:122\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\ngetVotableProposal\n\n\n\u25ba \ngetVotableProposal\n(avatarAddress: \nAddress\n, proposalId: \nHash\n): \nPromise\n.\nVotableUpgradeSchemeProposal\n\n\nDefined in \nwrappers/upgradeScheme.ts:201\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nVotableUpgradeSchemeProposal\n\n\n\n\n\n\ngetVotableUpgradeControllerProposals\n\n\n\u25ba \ngetVotableUpgradeControllerProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nVotableUpgradeSchemeProposal\n, \nNewUpgradeProposalEventResult\n\n\nDefined in \nwrappers/upgradeScheme.ts:163\n\n\nEntityFetcherFactory for votable UpgradeSchemeProposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nVotableUpgradeSchemeProposal\n, \nNewUpgradeProposalEventResult\n\n\n\n\n\n\ngetVotableUpgradeUpgradeSchemeProposals\n\n\n\u25ba \ngetVotableUpgradeUpgradeSchemeProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nVotableUpgradeSchemeProposal\n, \nChangeUpgradeSchemeProposalEventResult\n\n\nDefined in \nwrappers/upgradeScheme.ts:142\n\n\nEntityFetcherFactory for votable UpgradeSchemeProposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nVotableUpgradeSchemeProposal\n, \nChangeUpgradeSchemeProposalEventResult\n\n\n\n\n\n\ngetVotingMachine\n\n\n\u25ba \ngetVotingMachine\n(avatarAddress: \nAddress\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachine\n\n\nDefined in \nproposalGeneratorBase.ts:30\n\n\nReturn IntVoteInterfaceWrapper for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ngetVotingMachineAddress\n\n\n\u25ba \ngetVotingMachineAddress\n(avatarAddress: \nAddress\n): \nPromise\n.\nAddress\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachineAddress\n\n\nDefined in \nproposalGeneratorBase.ts:22\n\n\nReturn the address of the voting machine for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAddress\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nproposeController\n\n\n\u25ba \nproposeController\n(options?: \nProposeControllerParams\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/upgradeScheme.ts:40\n\n\nSubmit a proposal to change the DAO's controller.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeControllerParams\n\n\n{} as ProposeControllerParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nproposeUpgradingScheme\n\n\n\u25ba \nproposeUpgradingScheme\n(options?: \nProposeUpgradingSchemeParams\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/upgradeScheme.ts:68\n\n\nSubmit a proposal to change or modify the DAO's upgrading scheme.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeUpgradingSchemeParams\n\n\n{} as ProposeUpgradingSchemeParams \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nStandardSchemeParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/upgradeScheme.ts:104\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "UpgradeSchemeWrapper"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#class-upgradeschemewrapper", 
            "text": "", 
            "title": "Class: UpgradeSchemeWrapper"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#hierarchy", 
            "text": "\u21b3   ProposalGeneratorBase  \u21b3 UpgradeSchemeWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#implements", 
            "text": "IContractWrapperBase  SchemeWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#properties", 
            "text": "ChangeUpgradeSchemeProposal  NewUpgradeProposal  ProposalDeleted  ProposalExecuted  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#methods", 
            "text": "estimateGas  getController  getDefaultPermissions  getExecutedProposals  getParameters  getParametersArray  getParametersHash  getSchemeParameters  getSchemeParametersHash  getSchemePermissions  getVotableProposal  getVotableUpgradeControllerProposals  getVotableUpgradeUpgradeSchemeProposals  getVotingMachine  getVotingMachineAddress  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  proposeController  proposeUpgradingScheme  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#new-upgradeschemewrappersoliditycontract-any-web3eventservice-web3eventservice-upgradeschemewrapper", 
            "text": "Inherited from  ProposalGeneratorBase . constructor  Overrides  ContractWrapperBase . constructor  Defined in  proposalGeneratorBase.ts:10  Parameters:     Param  Type  Description      solidityContract  any  -    web3EventService  Web3EventService  -     Returns:   UpgradeSchemeWrapper", 
            "title": "\u2295 new UpgradeSchemeWrapper(solidityContract: any, web3EventService: Web3EventService): UpgradeSchemeWrapper"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#changeupgradeschemeproposal", 
            "text": "\u25cf  ChangeUpgradeSchemeProposal :   EventFetcherFactory ChangeUpgradeSchemeProposalEventResult    Defined in  wrappers/upgradeScheme.ts:32", 
            "title": "ChangeUpgradeSchemeProposal"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#newupgradeproposal", 
            "text": "\u25cf  NewUpgradeProposal :   EventFetcherFactory NewUpgradeProposalEventResult    Defined in  wrappers/upgradeScheme.ts:31  Events", 
            "title": "NewUpgradeProposal"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#proposaldeleted", 
            "text": "\u25cf  ProposalDeleted :   EventFetcherFactory ProposalDeletedEventResult    Defined in  wrappers/upgradeScheme.ts:34", 
            "title": "ProposalDeleted"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#proposalexecuted", 
            "text": "\u25cf  ProposalExecuted :   EventFetcherFactory SchemeProposalExecutedEventResult    Defined in  wrappers/upgradeScheme.ts:33", 
            "title": "ProposalExecuted"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory UpgradeSchemeWrapper   =  UpgradeSchemeFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/upgradeScheme.ts:26", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Upgrade Scheme\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/upgradeScheme.ts:25", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#name", 
            "text": "\u25cf  name :   string   = \"UpgradeScheme\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/upgradeScheme.ts:24", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Implementation of  SchemeWrapper . getDefaultPermissions  Defined in  wrappers/upgradeScheme.ts:118  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getexecutedproposals", 
            "text": "\u25ba  getExecutedProposals (avatarAddress:  Address ):  EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult  Defined in  wrappers/upgradeScheme.ts:183  EntityFetcherFactory for executed proposals.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult", 
            "title": "getExecutedProposals"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/upgradeScheme.ts:130  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  StandardSchemeParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/upgradeScheme.ts:97  Parameters:     Param  Type  Description      params  StandardSchemeParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getSchemeParameters  Defined in  wrappers/upgradeScheme.ts:126  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Implementation of  SchemeWrapper . getSchemePermissions  Defined in  wrappers/upgradeScheme.ts:122  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getvotableproposal", 
            "text": "\u25ba  getVotableProposal (avatarAddress:  Address , proposalId:  Hash ):  Promise . VotableUpgradeSchemeProposal  Defined in  wrappers/upgradeScheme.ts:201  Parameters:     Param  Type  Description      avatarAddress  Address  -    proposalId  Hash  -     Returns:   Promise . VotableUpgradeSchemeProposal", 
            "title": "getVotableProposal"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getvotableupgradecontrollerproposals", 
            "text": "\u25ba  getVotableUpgradeControllerProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory VotableUpgradeSchemeProposal ,  NewUpgradeProposalEventResult  Defined in  wrappers/upgradeScheme.ts:163  EntityFetcherFactory for votable UpgradeSchemeProposal.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory VotableUpgradeSchemeProposal ,  NewUpgradeProposalEventResult", 
            "title": "getVotableUpgradeControllerProposals"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getvotableupgradeupgradeschemeproposals", 
            "text": "\u25ba  getVotableUpgradeUpgradeSchemeProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory VotableUpgradeSchemeProposal ,  ChangeUpgradeSchemeProposalEventResult  Defined in  wrappers/upgradeScheme.ts:142  EntityFetcherFactory for votable UpgradeSchemeProposal.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory VotableUpgradeSchemeProposal ,  ChangeUpgradeSchemeProposalEventResult", 
            "title": "getVotableUpgradeUpgradeSchemeProposals"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getvotingmachine", 
            "text": "\u25ba  getVotingMachine (avatarAddress:  Address ):  Promise . IntVoteInterfaceWrapper  Inherited from  ProposalGeneratorBase . getVotingMachine  Defined in  proposalGeneratorBase.ts:30  Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "getVotingMachine"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#getvotingmachineaddress", 
            "text": "\u25ba  getVotingMachineAddress (avatarAddress:  Address ):  Promise . Address  Inherited from  ProposalGeneratorBase . getVotingMachineAddress  Defined in  proposalGeneratorBase.ts:22  Return the address of the voting machine for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Address", 
            "title": "getVotingMachineAddress"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#proposecontroller", 
            "text": "\u25ba  proposeController (options?:  ProposeControllerParams ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/upgradeScheme.ts:40  Submit a proposal to change the DAO's controller.  Parameters:     Param  Type  Default value  Description      options  ProposeControllerParams  {} as ProposeControllerParams   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeController"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#proposeupgradingscheme", 
            "text": "\u25ba  proposeUpgradingScheme (options?:  ProposeUpgradingSchemeParams ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/upgradeScheme.ts:68  Submit a proposal to change or modify the DAO's upgrading scheme.  Parameters:     Param  Type  Default value  Description      options  ProposeUpgradingSchemeParams  {} as ProposeUpgradingSchemeParams   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeUpgradingScheme"
        }, 
        {
            "location": "/api/classes/UpgradeSchemeWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  StandardSchemeParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/upgradeScheme.ts:104  Parameters:     Param  Type  Description      params  StandardSchemeParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/Utils/", 
            "text": "API Reference\n \n \nUtils\n\n\nClass: Utils\n\n\nIndex\n\n\nAccessors\n\n\n\n\nNULL_ADDRESS\n\n\nNULL_HASH\n\n\n\n\nMethods\n\n\n\n\nSHA3\n\n\ngetDefaultAccount\n\n\ngetEthBalance\n\n\ngetGenTokenAddress\n\n\ngetGenTokenBalance\n\n\ngetNetworkId\n\n\ngetNetworkName\n\n\ngetTokenBalance\n\n\ngetTruffleArtifactForContract\n\n\ngetWeb3\n\n\nkeccak256\n\n\nnumberToPermissionsString\n\n\npermissionsStringToNumber\n\n\nrequireContract\n\n\n\n\n\n\nAccessors\n\n\n\n\n\u00abStatic\u00bb NULL_ADDRESS\n\n\ngetNULL_ADDRESS(): \nAddress\n\n\nDefined in \nutils.ts:17\n\n\nReturns:\n \nAddress\n\n\n\n\n\n\n\u00abStatic\u00bb NULL_HASH\n\n\ngetNULL_HASH(): \nHash\n\n\nDefined in \nutils.ts:18\n\n\nReturns:\n \nHash\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb SHA3\n\n\n\u25ba \nSHA3\n(str: \nstring\n): \nstring\n\n\nDefined in \nutils.ts:178\n\n\nReturn the hash of a string the same way solidity would, and to a format that will be properly translated into a bytes32 that solidity expects\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nstr\n\n\nstring\n\n\na string\n\n\n\n\n\n\n\n\nReturns:\n \nstring\n\n\n\n\n\n\n\u00abStatic\u00bb getDefaultAccount\n\n\n\u25ba \ngetDefaultAccount\n(): \nPromise\n.\nstring\n\n\nDefined in \nutils.ts:123\n\n\nReturns the address of the default user account.\n\n\nHas the side-effect of setting web3.eth.defaultAccount.\n\n\nThrows an exception on failure.\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\n\u00abStatic\u00bb getEthBalance\n\n\n\u25ba \ngetEthBalance\n(agentAddress: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nutils.ts:159\n\n\nReturn the current ETH balance for the given agent.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nagentAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\n\u00abStatic\u00bb getGenTokenAddress\n\n\n\u25ba \ngetGenTokenAddress\n(): \nPromise\n.\nstring\n\n\nDefined in \nutils.ts:271\n\n\nReturns promise of the address of the global GEN token.\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\n\u00abStatic\u00bb getGenTokenBalance\n\n\n\u25ba \ngetGenTokenBalance\n(agentAddress: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nutils.ts:283\n\n\nReturns a promise of the given account's GEN token balance.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nagentAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\n\u00abStatic\u00bb getNetworkId\n\n\n\u25ba \ngetNetworkId\n(): \nPromise\n.\nstring\n\n\nDefined in \nutils.ts:261\n\n\nReturns promise of the id of the current network\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\n\u00abStatic\u00bb getNetworkName\n\n\n\u25ba \ngetNetworkName\n(id?: \nstring\n): \nPromise\n.\nstring\n\n\nDefined in \nutils.ts:233\n\n\nReturns promise of the name of the current or given network\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nstring\n\n\nOptional id of the network\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nstring\n\n\n\n\n\n\n\u00abStatic\u00bb getTokenBalance\n\n\n\u25ba \ngetTokenBalance\n(agentAddress: \nAddress\n, tokenAddress: \nAddress\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nutils.ts:140\n\n\nReturn the current token balance for the given token and agent.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nagentAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\ntokenAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\n\u00abStatic\u00bb getTruffleArtifactForContract\n\n\n\u25ba \ngetTruffleArtifactForContract\n(contractName: \nstring\n): \nany\n\n\nDefined in \nutils.ts:292\n\n\nReturns the truffle artifact json for the given contract\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncontractName\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nany\n\n\n\n\n\n\n\u00abStatic\u00bb getWeb3\n\n\n\u25ba \ngetWeb3\n(): \nPromise\n.\nWeb3\n\n\nDefined in \nutils.ts:51\n\n\nReturns the web3 object. When called for the first time, web3 is initialized from the Arc.js configuration. Throws an exception when web3 cannot be initialized.\n\n\nReturns:\n \nPromise\n.\nWeb3\n\n\n\n\n\n\n\u00abStatic\u00bb keccak256\n\n\n\u25ba \nkeccak256\n(types: \nArray\n.\nstring\n, values: \nArray\n.\nany\n): \nstring\n\n\nDefined in \nutils.ts:204\n\n\nReturn the tightly-packed hash of any arbitrary array of objects just as Solidity's \nkeccak256\n function would do.\n\n\nItems in the \ntypes\n array must appear in the same order in which the values would be passed to Solidity's \nkeccak256\n function.\n\n\nType names can be: \"bytes[N]' - fails if (N \n 1 || N \n 32) \"string' \"bool' \"address' \"uint[N]' - fails if ((N % 8) || (N \n 8) || (N \n 256)) \"int[N]' - fails if ((N % 8) || (N \n 8) || (N \n 256))\n\n\nUse \"bytes32\" for a Hash value\n\n\nSee: \nhttps://github.com/ethereumjs/ethereumjs-abi\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntypes\n\n\nArray\n.\nstring\n\n\narray of type names.\n\n\n\n\n\n\nvalues\n\n\nArray\n.\nany\n\n\nthe values to pack and hash. These must appear in the same order in which the types are ordered.\n\n\n\n\n\n\n\n\nReturns:\n \nstring\n\n\n\n\n\n\n\u00abStatic\u00bb numberToPermissionsString\n\n\n\u25ba \nnumberToPermissionsString\n(permissions: \nSchemePermissions\n): \nstring\n\n\nDefined in \nutils.ts:221\n\n\nConvert SchemePermissions | DefaultSchemePermissions to a scheme permissions string\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npermissions\n\n\nSchemePermissions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nstring\n\n\n\n\n\n\n\u00abStatic\u00bb permissionsStringToNumber\n\n\n\u25ba \npermissionsStringToNumber\n(permissions: \nstring\n): \nSchemePermissions\n\n\nDefined in \nutils.ts:212\n\n\nConvert scheme permissions string to a number\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npermissions\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\n\u00abStatic\u00bb requireContract\n\n\n\u25ba \nrequireContract\n(contractName: \nstring\n): \nPromise\n.\nany\n\n\nDefined in \nutils.ts:26\n\n\nReturns Truffle contract wrapper given the name of the contract (like \"SchemeRegistrar\"). Optimized for synchronicity issues encountered with MetaMask. Throws an exception if it can't load the contract. Uses the asynchronous web.eth.getAccounts to obtain the default account (good with MetaMask).\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncontractName\n\n\nstring\n\n\nlike \"SchemeRegistrar\"\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany", 
            "title": "Utils"
        }, 
        {
            "location": "/api/classes/Utils/#class-utils", 
            "text": "", 
            "title": "Class: Utils"
        }, 
        {
            "location": "/api/classes/Utils/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/Utils/#accessors", 
            "text": "NULL_ADDRESS  NULL_HASH", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/Utils/#methods", 
            "text": "SHA3  getDefaultAccount  getEthBalance  getGenTokenAddress  getGenTokenBalance  getNetworkId  getNetworkName  getTokenBalance  getTruffleArtifactForContract  getWeb3  keccak256  numberToPermissionsString  permissionsStringToNumber  requireContract", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/Utils/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/Utils/#static-null_address", 
            "text": "getNULL_ADDRESS():  Address  Defined in  utils.ts:17  Returns:   Address", 
            "title": "\u00abStatic\u00bb NULL_ADDRESS"
        }, 
        {
            "location": "/api/classes/Utils/#static-null_hash", 
            "text": "getNULL_HASH():  Hash  Defined in  utils.ts:18  Returns:   Hash", 
            "title": "\u00abStatic\u00bb NULL_HASH"
        }, 
        {
            "location": "/api/classes/Utils/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/Utils/#static-sha3", 
            "text": "\u25ba  SHA3 (str:  string ):  string  Defined in  utils.ts:178  Return the hash of a string the same way solidity would, and to a format that will be properly translated into a bytes32 that solidity expects  Parameters:     Param  Type  Description      str  string  a string     Returns:   string", 
            "title": "\u00abStatic\u00bb SHA3"
        }, 
        {
            "location": "/api/classes/Utils/#static-getdefaultaccount", 
            "text": "\u25ba  getDefaultAccount ():  Promise . string  Defined in  utils.ts:123  Returns the address of the default user account.  Has the side-effect of setting web3.eth.defaultAccount.  Throws an exception on failure.  Returns:   Promise . string", 
            "title": "\u00abStatic\u00bb getDefaultAccount"
        }, 
        {
            "location": "/api/classes/Utils/#static-getethbalance", 
            "text": "\u25ba  getEthBalance (agentAddress:  Address ):  Promise . BigNumber  Defined in  utils.ts:159  Return the current ETH balance for the given agent.  Parameters:     Param  Type  Description      agentAddress  Address  -     Returns:   Promise . BigNumber", 
            "title": "\u00abStatic\u00bb getEthBalance"
        }, 
        {
            "location": "/api/classes/Utils/#static-getgentokenaddress", 
            "text": "\u25ba  getGenTokenAddress ():  Promise . string  Defined in  utils.ts:271  Returns promise of the address of the global GEN token.  Returns:   Promise . string", 
            "title": "\u00abStatic\u00bb getGenTokenAddress"
        }, 
        {
            "location": "/api/classes/Utils/#static-getgentokenbalance", 
            "text": "\u25ba  getGenTokenBalance (agentAddress:  Address ):  Promise . BigNumber  Defined in  utils.ts:283  Returns a promise of the given account's GEN token balance.  Parameters:     Param  Type  Description      agentAddress  Address  -     Returns:   Promise . BigNumber", 
            "title": "\u00abStatic\u00bb getGenTokenBalance"
        }, 
        {
            "location": "/api/classes/Utils/#static-getnetworkid", 
            "text": "\u25ba  getNetworkId ():  Promise . string  Defined in  utils.ts:261  Returns promise of the id of the current network  Returns:   Promise . string", 
            "title": "\u00abStatic\u00bb getNetworkId"
        }, 
        {
            "location": "/api/classes/Utils/#static-getnetworkname", 
            "text": "\u25ba  getNetworkName (id?:  string ):  Promise . string  Defined in  utils.ts:233  Returns promise of the name of the current or given network  Parameters:     Param  Type  Description      id  string  Optional id of the network     Returns:   Promise . string", 
            "title": "\u00abStatic\u00bb getNetworkName"
        }, 
        {
            "location": "/api/classes/Utils/#static-gettokenbalance", 
            "text": "\u25ba  getTokenBalance (agentAddress:  Address , tokenAddress:  Address ):  Promise . BigNumber  Defined in  utils.ts:140  Return the current token balance for the given token and agent.  Parameters:     Param  Type  Description      agentAddress  Address  -    tokenAddress  Address  -     Returns:   Promise . BigNumber", 
            "title": "\u00abStatic\u00bb getTokenBalance"
        }, 
        {
            "location": "/api/classes/Utils/#static-gettruffleartifactforcontract", 
            "text": "\u25ba  getTruffleArtifactForContract (contractName:  string ):  any  Defined in  utils.ts:292  Returns the truffle artifact json for the given contract  Parameters:     Param  Type  Description      contractName  string  -     Returns:   any", 
            "title": "\u00abStatic\u00bb getTruffleArtifactForContract"
        }, 
        {
            "location": "/api/classes/Utils/#static-getweb3", 
            "text": "\u25ba  getWeb3 ():  Promise . Web3  Defined in  utils.ts:51  Returns the web3 object. When called for the first time, web3 is initialized from the Arc.js configuration. Throws an exception when web3 cannot be initialized.  Returns:   Promise . Web3", 
            "title": "\u00abStatic\u00bb getWeb3"
        }, 
        {
            "location": "/api/classes/Utils/#static-keccak256", 
            "text": "\u25ba  keccak256 (types:  Array . string , values:  Array . any ):  string  Defined in  utils.ts:204  Return the tightly-packed hash of any arbitrary array of objects just as Solidity's  keccak256  function would do.  Items in the  types  array must appear in the same order in which the values would be passed to Solidity's  keccak256  function.  Type names can be: \"bytes[N]' - fails if (N   1 || N   32) \"string' \"bool' \"address' \"uint[N]' - fails if ((N % 8) || (N   8) || (N   256)) \"int[N]' - fails if ((N % 8) || (N   8) || (N   256))  Use \"bytes32\" for a Hash value  See:  https://github.com/ethereumjs/ethereumjs-abi  Parameters:     Param  Type  Description      types  Array . string  array of type names.    values  Array . any  the values to pack and hash. These must appear in the same order in which the types are ordered.     Returns:   string", 
            "title": "\u00abStatic\u00bb keccak256"
        }, 
        {
            "location": "/api/classes/Utils/#static-numbertopermissionsstring", 
            "text": "\u25ba  numberToPermissionsString (permissions:  SchemePermissions ):  string  Defined in  utils.ts:221  Convert SchemePermissions | DefaultSchemePermissions to a scheme permissions string  Parameters:     Param  Type  Description      permissions  SchemePermissions  -     Returns:   string", 
            "title": "\u00abStatic\u00bb numberToPermissionsString"
        }, 
        {
            "location": "/api/classes/Utils/#static-permissionsstringtonumber", 
            "text": "\u25ba  permissionsStringToNumber (permissions:  string ):  SchemePermissions  Defined in  utils.ts:212  Convert scheme permissions string to a number  Parameters:     Param  Type  Description      permissions  string  -     Returns:   SchemePermissions", 
            "title": "\u00abStatic\u00bb permissionsStringToNumber"
        }, 
        {
            "location": "/api/classes/Utils/#static-requirecontract", 
            "text": "\u25ba  requireContract (contractName:  string ):  Promise . any  Defined in  utils.ts:26  Returns Truffle contract wrapper given the name of the contract (like \"SchemeRegistrar\"). Optimized for synchronicity issues encountered with MetaMask. Throws an exception if it can't load the contract. Uses the asynchronous web.eth.getAccounts to obtain the default account (good with MetaMask).  Parameters:     Param  Type  Description      contractName  string  like \"SchemeRegistrar\"     Returns:   Promise . any", 
            "title": "\u00abStatic\u00bb requireContract"
        }, 
        {
            "location": "/api/classes/UtilsInternal/", 
            "text": "API Reference\n \n \nUtilsInternal\n\n\nClass: UtilsInternal\n\n\nUtils not meant to be exported to the public\n\n\nIndex\n\n\nMethods\n\n\n\n\nensureArray\n\n\ngetRandomNumber\n\n\ngetWeb3Sync\n\n\nlastBlock\n\n\nsleep\n\n\nstopWatchingAsync\n\n\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb ensureArray\n\n\n\u25ba \nensureArray\nT(arr: \nArray\n.\nT\n\u23ae\nT\n): \nArray\n.\nT\n\n\nDefined in \nutilsInternal.ts:15\n\n\nType parameters:\n\n\nT\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\narr\n\n\nArray\n.\nT\n\u23ae\nT\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nArray\n.\nT\n\n\n\n\n\n\n\u00abStatic\u00bb getRandomNumber\n\n\n\u25ba \ngetRandomNumber\n(): \nnumber\n\n\nDefined in \nutilsInternal.ts:38\n\n\nReturns:\n \nnumber\n\n\n\n\n\n\n\u00abStatic\u00bb getWeb3Sync\n\n\n\u25ba \ngetWeb3Sync\n(): \nWeb3\n\n\nDefined in \nutilsInternal.ts:42\n\n\nReturns:\n \nWeb3\n\n\n\n\n\n\n\u00abStatic\u00bb lastBlock\n\n\n\u25ba \nlastBlock\n(): \nPromise\n.\nnumber\n\n\nDefined in \nutilsInternal.ts:25\n\n\nReturns the last mined block in the chain.\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\n\u00abStatic\u00bb sleep\n\n\n\u25ba \nsleep\n(milliseconds: \nnumber\n): \nPromise\n.\nany\n\n\nDefined in \nutilsInternal.ts:11\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmilliseconds\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\n\u00abStatic\u00bb stopWatchingAsync\n\n\n\u25ba \nstopWatchingAsync\n(filter: \nFilterResult\n): \nPromise\n.\nany\n\n\nDefined in \nutilsInternal.ts:34\n\n\nFor environments that don't allow synchronous functions\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfilter\n\n\nFilterResult\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany", 
            "title": "UtilsInternal"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#class-utilsinternal", 
            "text": "Utils not meant to be exported to the public", 
            "title": "Class: UtilsInternal"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#methods", 
            "text": "ensureArray  getRandomNumber  getWeb3Sync  lastBlock  sleep  stopWatchingAsync", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#static-ensurearray", 
            "text": "\u25ba  ensureArray T(arr:  Array . T \u23ae T ):  Array . T  Defined in  utilsInternal.ts:15  Type parameters:", 
            "title": "\u00abStatic\u00bb ensureArray"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#t", 
            "text": "Parameters:     Param  Type  Description      arr  Array . T \u23ae T  -     Returns:   Array . T", 
            "title": "T"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#static-getrandomnumber", 
            "text": "\u25ba  getRandomNumber ():  number  Defined in  utilsInternal.ts:38  Returns:   number", 
            "title": "\u00abStatic\u00bb getRandomNumber"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#static-getweb3sync", 
            "text": "\u25ba  getWeb3Sync ():  Web3  Defined in  utilsInternal.ts:42  Returns:   Web3", 
            "title": "\u00abStatic\u00bb getWeb3Sync"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#static-lastblock", 
            "text": "\u25ba  lastBlock ():  Promise . number  Defined in  utilsInternal.ts:25  Returns the last mined block in the chain.  Returns:   Promise . number", 
            "title": "\u00abStatic\u00bb lastBlock"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#static-sleep", 
            "text": "\u25ba  sleep (milliseconds:  number ):  Promise . any  Defined in  utilsInternal.ts:11  Parameters:     Param  Type  Description      milliseconds  number  -     Returns:   Promise . any", 
            "title": "\u00abStatic\u00bb sleep"
        }, 
        {
            "location": "/api/classes/UtilsInternal/#static-stopwatchingasync", 
            "text": "\u25ba  stopWatchingAsync (filter:  FilterResult ):  Promise . any  Defined in  utilsInternal.ts:34  For environments that don't allow synchronous functions  Parameters:     Param  Type  Description      filter  FilterResult  -     Returns:   Promise . any", 
            "title": "\u00abStatic\u00bb stopWatchingAsync"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/", 
            "text": "API Reference\n \n \nVestingSchemeWrapper\n\n\nClass: VestingSchemeWrapper\n\n\nHierarchy\n\n\n\u21b3  \nProposalGeneratorBase\n\n\n\u21b3 VestingSchemeWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nSchemeWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nAgreementCancel\n\n\nAgreementProposal\n\n\nCollect\n\n\nNewVestedAgreement\n\n\nProposalExecuted\n\n\nProposedVestedAgreement\n\n\nRevokeSignToCancelAgreement\n\n\nSignToCancelAgreement\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\ncollect\n\n\ncreate\n\n\nestimateGas\n\n\ngetAgreement\n\n\ngetController\n\n\ngetDefaultPermissions\n\n\ngetExecutedProposals\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetProposalAgreementId\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\ngetSchemePermissions\n\n\ngetVotableProposal\n\n\ngetVotableProposals\n\n\ngetVotingMachine\n\n\ngetVotingMachineAddress\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nproposeVestingAgreement\n\n\nrevokeSignToCancel\n\n\nsetParameters\n\n\nsignToCancel\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew VestingSchemeWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nVestingSchemeWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\nconstructor\n\n\nOverrides \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \nproposalGeneratorBase.ts:10\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\n-\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nVestingSchemeWrapper\n\n\n\n\nProperties\n\n\n\n\nAgreementCancel\n\n\n\u25cf  AgreementCancel\n:  \nEventFetcherFactory\nAgreementCancelEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:50\n\n\n\n\n\n\nAgreementProposal\n\n\n\u25cf  AgreementProposal\n:  \nEventFetcherFactory\nAgreementProposalEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:43\n\n\nfired when a proposal is submitted to create an agreement\n\n\n\n\n\n\nCollect\n\n\n\u25cf  Collect\n:  \nEventFetcherFactory\nCollectEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:51\n\n\n\n\n\n\nNewVestedAgreement\n\n\n\u25cf  NewVestedAgreement\n:  \nEventFetcherFactory\nNewVestedAgreementEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:47\n\n\nfired when an agreement is created through \ncreate\n (not-through a proposal process)\n\n\n\n\n\n\nProposalExecuted\n\n\n\u25cf  ProposalExecuted\n:  \nEventFetcherFactory\nSchemeProposalExecutedEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:35\n\n\nfired when a proposal is executed whether an agreement is created or not.\n\n\n\n\n\n\nProposedVestedAgreement\n\n\n\u25cf  ProposedVestedAgreement\n:  \nEventFetcherFactory\nProposedVestedAgreementEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:39\n\n\nfired when proposal is executed and an agreement is created\n\n\n\n\n\n\nRevokeSignToCancelAgreement\n\n\n\u25cf  RevokeSignToCancelAgreement\n:  \nEventFetcherFactory\nRevokeSignToCancelAgreementEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:49\n\n\n\n\n\n\nSignToCancelAgreement\n\n\n\u25cf  SignToCancelAgreement\n:  \nEventFetcherFactory\nSignToCancelAgreementEventResult\n \n\n\nDefined in \nwrappers/vestingScheme.ts:48\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nVestingSchemeWrapper\n  =  VestingSchemeFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/vestingScheme.ts:27\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Vesting Scheme\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/vestingScheme.ts:26\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"VestingScheme\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/vestingScheme.ts:25\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\ncollect\n\n\n\u25ba \ncollect\n(options?: \nCollectVestingAgreementConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/vestingScheme.ts:217\n\n\nCollects for a beneficiary, according to the agreement\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nCollectVestingAgreementConfig\n\n\n{} as CollectVestingAgreementConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ncreate\n\n\n\u25ba \ncreate\n(options?: \nCreateVestingAgreementConfig\n): \nPromise\n.\nArcTransactionAgreementResult\n\n\nDefined in \nwrappers/vestingScheme.ts:104\n\n\nCreate a new vesting agreement\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nCreateVestingAgreementConfig\n\n\n{} as CreateVestingAgreementConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionAgreementResult\n\n\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetAgreement\n\n\n\u25ba \ngetAgreement\n(agreementId: \nnumber\n): \nPromise\n.\nAgreement\n\n\nDefined in \nwrappers/vestingScheme.ts:296\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nagreementId\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAgreement\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetDefaultPermissions\n\n\nDefined in \nwrappers/vestingScheme.ts:324\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetExecutedProposals\n\n\n\u25ba \ngetExecutedProposals\n(avatarAddress: \nAddress\n): \nEntityFetcherFactory\nVestingSchemeSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\nDefined in \nwrappers/vestingScheme.ts:258\n\n\nEntityFetcherFactory for executed proposals.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nVestingSchemeSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/vestingScheme.ts:336\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nStandardSchemeParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/vestingScheme.ts:303\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetProposalAgreementId\n\n\n\u25ba \ngetProposalAgreementId\n(proposalId: \nHash\n): \nPromise\n.\nnumber\n\n\nDefined in \nwrappers/vestingScheme.ts:283\n\n\nReturns a promise of the agreementId associated with the given proposal. The result is 0 if the proposal has not been executed or is not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemeParameters\n\n\nDefined in \nwrappers/vestingScheme.ts:332\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemePermissions\n\n\nDefined in \nwrappers/vestingScheme.ts:328\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\ngetVotableProposal\n\n\n\u25ba \ngetVotableProposal\n(avatarAddress: \nAddress\n, proposalId: \nHash\n): \nPromise\n.\nAgreementProposal\n\n\nDefined in \nwrappers/vestingScheme.ts:289\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAgreementProposal\n\n\n\n\n\n\ngetVotableProposals\n\n\n\u25ba \ngetVotableProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nAgreementProposal\n, \nSchemeProposalExecutedEventResult\n\n\nDefined in \nwrappers/vestingScheme.ts:238\n\n\nEntityFetcherFactory for votable Agreement.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nAgreementProposal\n, \nSchemeProposalExecutedEventResult\n\n\n\n\n\n\ngetVotingMachine\n\n\n\u25ba \ngetVotingMachine\n(avatarAddress: \nAddress\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachine\n\n\nDefined in \nproposalGeneratorBase.ts:30\n\n\nReturn IntVoteInterfaceWrapper for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ngetVotingMachineAddress\n\n\n\u25ba \ngetVotingMachineAddress\n(avatarAddress: \nAddress\n): \nPromise\n.\nAddress\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachineAddress\n\n\nDefined in \nproposalGeneratorBase.ts:22\n\n\nReturn the address of the voting machine for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAddress\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nproposeVestingAgreement\n\n\n\u25ba \nproposeVestingAgreement\n(options?: \nProposeVestingAgreementConfig\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/vestingScheme.ts:64\n\n\nSubmit a proposal to create a vesting agreement.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeVestingAgreementConfig\n\n\n{} as ProposeVestingAgreementConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nrevokeSignToCancel\n\n\n\u25ba \nrevokeSignToCancel\n(options?: \nRevokeSignToCancelVestingAgreementConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/vestingScheme.ts:195\n\n\nRevoke vote for cancelling a vesting agreement\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nRevokeSignToCancelVestingAgreementConfig\n\n\n\n\n\n\n\n\n\n\n{} as RevokeSignToCancelVestingAgreementConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nStandardSchemeParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/vestingScheme.ts:310\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash\n\n\n\n\n\n\nsignToCancel\n\n\n\u25ba \nsignToCancel\n(options?: \nSignToCancelVestingAgreementConfig\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/vestingScheme.ts:173\n\n\nSign to cancel a vesting agreement\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nSignToCancelVestingAgreementConfig\n\n\n\n\n\n\n\n\n\n\n{} as SignToCancelVestingAgreementConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "VestingSchemeWrapper"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#class-vestingschemewrapper", 
            "text": "", 
            "title": "Class: VestingSchemeWrapper"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#hierarchy", 
            "text": "\u21b3   ProposalGeneratorBase  \u21b3 VestingSchemeWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#implements", 
            "text": "IContractWrapperBase  SchemeWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#properties", 
            "text": "AgreementCancel  AgreementProposal  Collect  NewVestedAgreement  ProposalExecuted  ProposedVestedAgreement  RevokeSignToCancelAgreement  SignToCancelAgreement  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#methods", 
            "text": "collect  create  estimateGas  getAgreement  getController  getDefaultPermissions  getExecutedProposals  getParameters  getParametersArray  getParametersHash  getProposalAgreementId  getSchemeParameters  getSchemeParametersHash  getSchemePermissions  getVotableProposal  getVotableProposals  getVotingMachine  getVotingMachineAddress  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  proposeVestingAgreement  revokeSignToCancel  setParameters  signToCancel", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#new-vestingschemewrappersoliditycontract-any-web3eventservice-web3eventservice-vestingschemewrapper", 
            "text": "Inherited from  ProposalGeneratorBase . constructor  Overrides  ContractWrapperBase . constructor  Defined in  proposalGeneratorBase.ts:10  Parameters:     Param  Type  Description      solidityContract  any  -    web3EventService  Web3EventService  -     Returns:   VestingSchemeWrapper", 
            "title": "\u2295 new VestingSchemeWrapper(solidityContract: any, web3EventService: Web3EventService): VestingSchemeWrapper"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#agreementcancel", 
            "text": "\u25cf  AgreementCancel :   EventFetcherFactory AgreementCancelEventResult    Defined in  wrappers/vestingScheme.ts:50", 
            "title": "AgreementCancel"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#agreementproposal", 
            "text": "\u25cf  AgreementProposal :   EventFetcherFactory AgreementProposalEventResult    Defined in  wrappers/vestingScheme.ts:43  fired when a proposal is submitted to create an agreement", 
            "title": "AgreementProposal"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#collect", 
            "text": "\u25cf  Collect :   EventFetcherFactory CollectEventResult    Defined in  wrappers/vestingScheme.ts:51", 
            "title": "Collect"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#newvestedagreement", 
            "text": "\u25cf  NewVestedAgreement :   EventFetcherFactory NewVestedAgreementEventResult    Defined in  wrappers/vestingScheme.ts:47  fired when an agreement is created through  create  (not-through a proposal process)", 
            "title": "NewVestedAgreement"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#proposalexecuted", 
            "text": "\u25cf  ProposalExecuted :   EventFetcherFactory SchemeProposalExecutedEventResult    Defined in  wrappers/vestingScheme.ts:35  fired when a proposal is executed whether an agreement is created or not.", 
            "title": "ProposalExecuted"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#proposedvestedagreement", 
            "text": "\u25cf  ProposedVestedAgreement :   EventFetcherFactory ProposedVestedAgreementEventResult    Defined in  wrappers/vestingScheme.ts:39  fired when proposal is executed and an agreement is created", 
            "title": "ProposedVestedAgreement"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#revokesigntocancelagreement", 
            "text": "\u25cf  RevokeSignToCancelAgreement :   EventFetcherFactory RevokeSignToCancelAgreementEventResult    Defined in  wrappers/vestingScheme.ts:49", 
            "title": "RevokeSignToCancelAgreement"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#signtocancelagreement", 
            "text": "\u25cf  SignToCancelAgreement :   EventFetcherFactory SignToCancelAgreementEventResult    Defined in  wrappers/vestingScheme.ts:48", 
            "title": "SignToCancelAgreement"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory VestingSchemeWrapper   =  VestingSchemeFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/vestingScheme.ts:27", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Vesting Scheme\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/vestingScheme.ts:26", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#name", 
            "text": "\u25cf  name :   string   = \"VestingScheme\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/vestingScheme.ts:25", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#collect_1", 
            "text": "\u25ba  collect (options?:  CollectVestingAgreementConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/vestingScheme.ts:217  Collects for a beneficiary, according to the agreement  Parameters:     Param  Type  Default value  Description      options  CollectVestingAgreementConfig  {} as CollectVestingAgreementConfig   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "collect"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#create", 
            "text": "\u25ba  create (options?:  CreateVestingAgreementConfig ):  Promise . ArcTransactionAgreementResult  Defined in  wrappers/vestingScheme.ts:104  Create a new vesting agreement  Parameters:     Param  Type  Default value  Description      options  CreateVestingAgreementConfig  {} as CreateVestingAgreementConfig   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionAgreementResult", 
            "title": "create"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getagreement", 
            "text": "\u25ba  getAgreement (agreementId:  number ):  Promise . Agreement  Defined in  wrappers/vestingScheme.ts:296  Parameters:     Param  Type  Description      agreementId  number  -     Returns:   Promise . Agreement", 
            "title": "getAgreement"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Implementation of  SchemeWrapper . getDefaultPermissions  Defined in  wrappers/vestingScheme.ts:324  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getexecutedproposals", 
            "text": "\u25ba  getExecutedProposals (avatarAddress:  Address ):  EntityFetcherFactory VestingSchemeSchemeProposalExecuted ,  SchemeProposalExecutedEventResult  Defined in  wrappers/vestingScheme.ts:258  EntityFetcherFactory for executed proposals.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   EntityFetcherFactory VestingSchemeSchemeProposalExecuted ,  SchemeProposalExecutedEventResult", 
            "title": "getExecutedProposals"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/vestingScheme.ts:336  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  StandardSchemeParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/vestingScheme.ts:303  Parameters:     Param  Type  Description      params  StandardSchemeParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getproposalagreementid", 
            "text": "\u25ba  getProposalAgreementId (proposalId:  Hash ):  Promise . number  Defined in  wrappers/vestingScheme.ts:283  Returns a promise of the agreementId associated with the given proposal. The result is 0 if the proposal has not been executed or is not found.  Parameters:     Param  Type  Description      proposalId  Hash  -     Returns:   Promise . number", 
            "title": "getProposalAgreementId"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getSchemeParameters  Defined in  wrappers/vestingScheme.ts:332  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Implementation of  SchemeWrapper . getSchemePermissions  Defined in  wrappers/vestingScheme.ts:328  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getvotableproposal", 
            "text": "\u25ba  getVotableProposal (avatarAddress:  Address , proposalId:  Hash ):  Promise . AgreementProposal  Defined in  wrappers/vestingScheme.ts:289  Parameters:     Param  Type  Description      avatarAddress  Address  -    proposalId  Hash  -     Returns:   Promise . AgreementProposal", 
            "title": "getVotableProposal"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getvotableproposals", 
            "text": "\u25ba  getVotableProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory AgreementProposal ,  SchemeProposalExecutedEventResult  Defined in  wrappers/vestingScheme.ts:238  EntityFetcherFactory for votable Agreement.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory AgreementProposal ,  SchemeProposalExecutedEventResult", 
            "title": "getVotableProposals"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getvotingmachine", 
            "text": "\u25ba  getVotingMachine (avatarAddress:  Address ):  Promise . IntVoteInterfaceWrapper  Inherited from  ProposalGeneratorBase . getVotingMachine  Defined in  proposalGeneratorBase.ts:30  Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "getVotingMachine"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#getvotingmachineaddress", 
            "text": "\u25ba  getVotingMachineAddress (avatarAddress:  Address ):  Promise . Address  Inherited from  ProposalGeneratorBase . getVotingMachineAddress  Defined in  proposalGeneratorBase.ts:22  Return the address of the voting machine for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Address", 
            "title": "getVotingMachineAddress"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#proposevestingagreement", 
            "text": "\u25ba  proposeVestingAgreement (options?:  ProposeVestingAgreementConfig ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/vestingScheme.ts:64  Submit a proposal to create a vesting agreement.  Parameters:     Param  Type  Default value  Description      options  ProposeVestingAgreementConfig  {} as ProposeVestingAgreementConfig   TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeVestingAgreement"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#revokesigntocancel", 
            "text": "\u25ba  revokeSignToCancel (options?:  RevokeSignToCancelVestingAgreementConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/vestingScheme.ts:195  Revoke vote for cancelling a vesting agreement  Parameters:     Param  Type  Default value  Description      options  RevokeSignToCancelVestingAgreementConfig      {} as RevokeSignToCancelVestingAgreementConfig   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult", 
            "title": "revokeSignToCancel"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  StandardSchemeParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/vestingScheme.ts:310  Parameters:     Param  Type  Description      params  StandardSchemeParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/VestingSchemeWrapper/#signtocancel", 
            "text": "\u25ba  signToCancel (options?:  SignToCancelVestingAgreementConfig ):  Promise . ArcTransactionResult  Defined in  wrappers/vestingScheme.ts:173  Sign to cancel a vesting agreement  Parameters:     Param  Type  Default value  Description      options  SignToCancelVestingAgreementConfig      {} as SignToCancelVestingAgreementConfig   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionResult", 
            "title": "signToCancel"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/", 
            "text": "API Reference\n \n \nVoteInOrganizationSchemeWrapper\n\n\nClass: VoteInOrganizationSchemeWrapper\n\n\nHierarchy\n\n\n\u21b3  \nProposalGeneratorBase\n\n\n\u21b3 VoteInOrganizationSchemeWrapper\n\n\nImplements\n\n\n\n\nIContractWrapperBase\n\n\nSchemeWrapper\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nProperties\n\n\n\n\nNewVoteProposal\n\n\nProposalDeleted\n\n\nProposalExecuted\n\n\nVoteOnBehalf\n\n\ncontract\n\n\nfactory\n\n\nfriendlyName\n\n\nname\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\ngetController\n\n\ngetDefaultPermissions\n\n\ngetExecutedProposals\n\n\ngetParameters\n\n\ngetParametersArray\n\n\ngetParametersHash\n\n\ngetSchemeParameters\n\n\ngetSchemeParametersHash\n\n\ngetSchemePermissions\n\n\ngetVotableProposal\n\n\ngetVotableProposals\n\n\ngetVotingMachine\n\n\ngetVotingMachineAddress\n\n\nhydrateFromAt\n\n\nhydrateFromDeployed\n\n\nhydrateFromNew\n\n\nproposeVoteInOrganization\n\n\nsetParameters\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew VoteInOrganizationSchemeWrapper\n(solidityContract: \nany\n, web3EventService: \nWeb3EventService\n): \nVoteInOrganizationSchemeWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\nconstructor\n\n\nOverrides \nContractWrapperBase\n.\nconstructor\n\n\nDefined in \nproposalGeneratorBase.ts:10\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsolidityContract\n\n\nany\n\n\n-\n\n\n\n\n\n\nweb3EventService\n\n\nWeb3EventService\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nVoteInOrganizationSchemeWrapper\n\n\n\n\nProperties\n\n\n\n\nNewVoteProposal\n\n\n\u25cf  NewVoteProposal\n:  \nEventFetcherFactory\nNewVoteProposalEventResult\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:31\n\n\nEvents\n\n\n\n\n\n\nProposalDeleted\n\n\n\u25cf  ProposalDeleted\n:  \nEventFetcherFactory\nProposalDeletedEventResult\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:33\n\n\n\n\n\n\nProposalExecuted\n\n\n\u25cf  ProposalExecuted\n:  \nEventFetcherFactory\nSchemeProposalExecutedEventResult\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:32\n\n\n\n\n\n\nVoteOnBehalf\n\n\n\u25cf  VoteOnBehalf\n:  \nEventFetcherFactory\nVoteOnBehalfEventResult\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:34\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nImplementation of \nIContractWrapperBase\n.\ncontract\n\n\nInherited from \nContractWrapperBase\n.\ncontract\n\n\nDefined in \ncontractWrapperBase.ts:62\n\n\nThe underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nVoteInOrganizationSchemeWrapper\n  =  VoteInOrganizationSchemeFactory\n\n\nImplementation of \nIContractWrapperBase\n.\nfactory\n\n\nOverrides \nContractWrapperBase\n.\nfactory\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:26\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n  = \"Vote In Organization Scheme\"\n\n\nImplementation of \nIContractWrapperBase\n.\nfriendlyName\n\n\nOverrides \nContractWrapperBase\n.\nfriendlyName\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:25\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n  = \"VoteInOrganizationScheme\"\n\n\nImplementation of \nIContractWrapperBase\n.\nname\n\n\nOverrides \nContractWrapperBase\n.\nname\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:24\n\n\n\n\nAccessors\n\n\n\n\naddress\n\n\ngetaddress(): \nAddress\n\n\nInherited from \nContractWrapperBase\n.\naddress\n\n\nDefined in \ncontractWrapperBase.ts:57\n\n\nThe address of the contract\n\n\nReturns:\n \nAddress\n\n\n\n\nMethods\n\n\n\n\nestimateGas\n\n\n\u25ba \nestimateGas\n(func: \nITruffleContractFunction\n, params: \nArray\n.\nany\n, web3Params?: \nany\n): \nPromise\n.\nnumber\n\n\nInherited from \nContractWrapperBase\n.\nestimateGas\n\n\nDefined in \ncontractWrapperBase.ts:192\n\n\nEstimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfunc\n\n\nITruffleContractFunction\n\n\n-\n\n\nThe function\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\nThe parameters to send to the function\n\n\n\n\n\n\nweb3Params\n\n\nany\n\n\n{}\n\n\nThe web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetController\n\n\nInherited from \nContractWrapperBase\n.\ngetController\n\n\nDefined in \ncontractWrapperBase.ts:178\n\n\nReturns the controller associated with the given avatar\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetDefaultPermissions\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:142\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetExecutedProposals\n\n\n\u25ba \ngetExecutedProposals\n(avatarAddress: \nAddress\n): \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:95\n\n\nEntityFetcherFactory for executed proposals.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nSchemeProposalExecuted\n, \nSchemeProposalExecutedEventResult\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetParameters\n\n\nOverrides \nContractWrapperBase\n.\ngetParameters\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:154\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nImplementation of \nIContractWrapperBase\n.\ngetParametersArray\n\n\nInherited from \nContractWrapperBase\n.\ngetParametersArray\n\n\nDefined in \ncontractWrapperBase.ts:170\n\n\nGiven a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nStandardSchemeParams\n): \nPromise\n.\nHash\n\n\nOverrides \nContractWrapperBase\n.\ngetParametersHash\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:121\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nStandardSchemeParams\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemeParameters\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:150\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nStandardSchemeParams\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nImplementation of \nIContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nInherited from \nContractWrapperBase\n.\ngetSchemeParametersHash\n\n\nDefined in \ncontractWrapperBase.ts:160\n\n\nGiven an avatar address, returns the schemes parameters hash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nImplementation of \nSchemeWrapper\n.\ngetSchemePermissions\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:146\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\ngetVotableProposal\n\n\n\u25ba \ngetVotableProposal\n(avatarAddress: \nAddress\n, proposalId: \nHash\n): \nPromise\n.\nVotableVoteInOrganizationProposal\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:113\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\nproposalId\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nVotableVoteInOrganizationProposal\n\n\n\n\n\n\ngetVotableProposals\n\n\n\u25ba \ngetVotableProposals\n(avatarAddress: \nAddress\n): \nPromise\n.\nEntityFetcherFactory\nVotableVoteInOrganizationProposal\n, \nNewVoteProposalEventResult\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:74\n\n\nEntityFetcherFactory for votable VoteInOrganizationProposal.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nEntityFetcherFactory\nVotableVoteInOrganizationProposal\n, \nNewVoteProposalEventResult\n\n\n\n\n\n\ngetVotingMachine\n\n\n\u25ba \ngetVotingMachine\n(avatarAddress: \nAddress\n): \nPromise\n.\nIntVoteInterfaceWrapper\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachine\n\n\nDefined in \nproposalGeneratorBase.ts:30\n\n\nReturn IntVoteInterfaceWrapper for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIntVoteInterfaceWrapper\n\n\n\n\n\n\ngetVotingMachineAddress\n\n\n\u25ba \ngetVotingMachineAddress\n(avatarAddress: \nAddress\n): \nPromise\n.\nAddress\n\n\nInherited from \nProposalGeneratorBase\n.\ngetVotingMachineAddress\n\n\nDefined in \nproposalGeneratorBase.ts:22\n\n\nReturn the address of the voting machine for this scheme as registered with the given avatar.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nAddress\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromAt\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromAt\n\n\nDefined in \ncontractWrapperBase.ts:96\n\n\nInitialize from a given address on the current network.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\nof the deployed contract\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromDeployed\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromDeployed\n\n\nDefined in \ncontractWrapperBase.ts:114\n\n\nInitialize as it was migrated by Arc.js on the current network.\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis or undefined if not found\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nIContractWrapperBase\n\n\nImplementation of \nIContractWrapperBase\n.\nhydrateFromNew\n\n\nInherited from \nContractWrapperBase\n.\nhydrateFromNew\n\n\nDefined in \ncontractWrapperBase.ts:77\n\n\nInitialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\nthis\n\n\n\n\n\n\nproposeVoteInOrganization\n\n\n\u25ba \nproposeVoteInOrganization\n(options?: \nVoteInOrganizationProposeVoteConfig\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:40\n\n\nSubmit a proposal to vote on a proposal in another DAO.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteInOrganizationProposeVoteConfig\n\n\n\n\n\n\n\n\n\n\n{} as VoteInOrganizationProposeVoteConfig \n TxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nStandardSchemeParams\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nOverrides \nContractWrapperBase\n.\nsetParameters\n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:128\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nStandardSchemeParams\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "VoteInOrganizationSchemeWrapper"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#class-voteinorganizationschemewrapper", 
            "text": "", 
            "title": "Class: VoteInOrganizationSchemeWrapper"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#hierarchy", 
            "text": "\u21b3   ProposalGeneratorBase  \u21b3 VoteInOrganizationSchemeWrapper", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#implements", 
            "text": "IContractWrapperBase  SchemeWrapper", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#properties", 
            "text": "NewVoteProposal  ProposalDeleted  ProposalExecuted  VoteOnBehalf  contract  factory  friendlyName  name", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#accessors", 
            "text": "address", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#methods", 
            "text": "estimateGas  getController  getDefaultPermissions  getExecutedProposals  getParameters  getParametersArray  getParametersHash  getSchemeParameters  getSchemeParametersHash  getSchemePermissions  getVotableProposal  getVotableProposals  getVotingMachine  getVotingMachineAddress  hydrateFromAt  hydrateFromDeployed  hydrateFromNew  proposeVoteInOrganization  setParameters", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#new-voteinorganizationschemewrappersoliditycontract-any-web3eventservice-web3eventservice-voteinorganizationschemewrapper", 
            "text": "Inherited from  ProposalGeneratorBase . constructor  Overrides  ContractWrapperBase . constructor  Defined in  proposalGeneratorBase.ts:10  Parameters:     Param  Type  Description      solidityContract  any  -    web3EventService  Web3EventService  -     Returns:   VoteInOrganizationSchemeWrapper", 
            "title": "\u2295 new VoteInOrganizationSchemeWrapper(solidityContract: any, web3EventService: Web3EventService): VoteInOrganizationSchemeWrapper"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#newvoteproposal", 
            "text": "\u25cf  NewVoteProposal :   EventFetcherFactory NewVoteProposalEventResult    Defined in  wrappers/voteInOrganizationScheme.ts:31  Events", 
            "title": "NewVoteProposal"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#proposaldeleted", 
            "text": "\u25cf  ProposalDeleted :   EventFetcherFactory ProposalDeletedEventResult    Defined in  wrappers/voteInOrganizationScheme.ts:33", 
            "title": "ProposalDeleted"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#proposalexecuted", 
            "text": "\u25cf  ProposalExecuted :   EventFetcherFactory SchemeProposalExecutedEventResult    Defined in  wrappers/voteInOrganizationScheme.ts:32", 
            "title": "ProposalExecuted"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#voteonbehalf", 
            "text": "\u25cf  VoteOnBehalf :   EventFetcherFactory VoteOnBehalfEventResult    Defined in  wrappers/voteInOrganizationScheme.ts:34", 
            "title": "VoteOnBehalf"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#contract", 
            "text": "\u25cf  contract :   any    Implementation of  IContractWrapperBase . contract  Inherited from  ContractWrapperBase . contract  Defined in  contractWrapperBase.ts:62  The underlying truffle contract object. Use this to access parts of the contract that aren't accessible via the wrapper.", 
            "title": "contract"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory VoteInOrganizationSchemeWrapper   =  VoteInOrganizationSchemeFactory  Implementation of  IContractWrapperBase . factory  Overrides  ContractWrapperBase . factory  Defined in  wrappers/voteInOrganizationScheme.ts:26", 
            "title": "factory"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#friendlyname", 
            "text": "\u25cf  friendlyName :   string   = \"Vote In Organization Scheme\"  Implementation of  IContractWrapperBase . friendlyName  Overrides  ContractWrapperBase . friendlyName  Defined in  wrappers/voteInOrganizationScheme.ts:25", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#name", 
            "text": "\u25cf  name :   string   = \"VoteInOrganizationScheme\"  Implementation of  IContractWrapperBase . name  Overrides  ContractWrapperBase . name  Defined in  wrappers/voteInOrganizationScheme.ts:24", 
            "title": "name"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#accessors_1", 
            "text": "", 
            "title": "Accessors"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#address", 
            "text": "getaddress():  Address  Inherited from  ContractWrapperBase . address  Defined in  contractWrapperBase.ts:57  The address of the contract  Returns:   Address", 
            "title": "address"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#estimategas", 
            "text": "\u25ba  estimateGas (func:  ITruffleContractFunction , params:  Array . any , web3Params?:  any ):  Promise . number  Inherited from  ContractWrapperBase . estimateGas  Defined in  contractWrapperBase.ts:192  Estimate conservatively the amount of gas required to execute the given function with the given parameters. Adds 21000 to the estimate computed by web3.  Parameters:     Param  Type  Default value  Description      func  ITruffleContractFunction  -  The function    params  Array . any  -  The parameters to send to the function    web3Params  any  {}  The web3 parameters (like \"from\", for example). If it contains \"gas\"then that value is returned, effectively a no-op.     Returns:   Promise . number", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Implementation of  IContractWrapperBase . getController  Inherited from  ContractWrapperBase . getController  Defined in  contractWrapperBase.ts:178  Returns the controller associated with the given avatar  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Implementation of  SchemeWrapper . getDefaultPermissions  Defined in  wrappers/voteInOrganizationScheme.ts:142  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getexecutedproposals", 
            "text": "\u25ba  getExecutedProposals (avatarAddress:  Address ):  EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult  Defined in  wrappers/voteInOrganizationScheme.ts:95  EntityFetcherFactory for executed proposals.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   EntityFetcherFactory SchemeProposalExecuted ,  SchemeProposalExecutedEventResult", 
            "title": "getExecutedProposals"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getParameters  Overrides  ContractWrapperBase . getParameters  Defined in  wrappers/voteInOrganizationScheme.ts:154  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Implementation of  IContractWrapperBase . getParametersArray  Inherited from  ContractWrapperBase . getParametersArray  Defined in  contractWrapperBase.ts:170  Given a hash, returns the associated parameters as an array, ordered by the order in which the parameters appear in the contract's Parameters struct.  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  StandardSchemeParams ):  Promise . Hash  Overrides  ContractWrapperBase . getParametersHash  Defined in  wrappers/voteInOrganizationScheme.ts:121  Parameters:     Param  Type  Description      params  StandardSchemeParams  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . StandardSchemeParams  Implementation of  SchemeWrapper . getSchemeParameters  Defined in  wrappers/voteInOrganizationScheme.ts:150  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . StandardSchemeParams", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Implementation of  IContractWrapperBase . getSchemeParametersHash  Inherited from  ContractWrapperBase . getSchemeParametersHash  Defined in  contractWrapperBase.ts:160  Given an avatar address, returns the schemes parameters hash  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Implementation of  SchemeWrapper . getSchemePermissions  Defined in  wrappers/voteInOrganizationScheme.ts:146  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getvotableproposal", 
            "text": "\u25ba  getVotableProposal (avatarAddress:  Address , proposalId:  Hash ):  Promise . VotableVoteInOrganizationProposal  Defined in  wrappers/voteInOrganizationScheme.ts:113  Parameters:     Param  Type  Description      avatarAddress  Address  -    proposalId  Hash  -     Returns:   Promise . VotableVoteInOrganizationProposal", 
            "title": "getVotableProposal"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getvotableproposals", 
            "text": "\u25ba  getVotableProposals (avatarAddress:  Address ):  Promise . EntityFetcherFactory VotableVoteInOrganizationProposal ,  NewVoteProposalEventResult  Defined in  wrappers/voteInOrganizationScheme.ts:74  EntityFetcherFactory for votable VoteInOrganizationProposal.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . EntityFetcherFactory VotableVoteInOrganizationProposal ,  NewVoteProposalEventResult", 
            "title": "getVotableProposals"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getvotingmachine", 
            "text": "\u25ba  getVotingMachine (avatarAddress:  Address ):  Promise . IntVoteInterfaceWrapper  Inherited from  ProposalGeneratorBase . getVotingMachine  Defined in  proposalGeneratorBase.ts:30  Return IntVoteInterfaceWrapper for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . IntVoteInterfaceWrapper", 
            "title": "getVotingMachine"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#getvotingmachineaddress", 
            "text": "\u25ba  getVotingMachineAddress (avatarAddress:  Address ):  Promise . Address  Inherited from  ProposalGeneratorBase . getVotingMachineAddress  Defined in  proposalGeneratorBase.ts:22  Return the address of the voting machine for this scheme as registered with the given avatar.  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Address", 
            "title": "getVotingMachineAddress"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromAt  Inherited from  ContractWrapperBase . hydrateFromAt  Defined in  contractWrapperBase.ts:96  Initialize from a given address on the current network.  Parameters:     Param  Type  Description      address  string  of the deployed contract     Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromDeployed  Inherited from  ContractWrapperBase . hydrateFromDeployed  Defined in  contractWrapperBase.ts:114  Initialize as it was migrated by Arc.js on the current network.  Returns:   Promise . IContractWrapperBase \nthis or undefined if not found", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . IContractWrapperBase  Implementation of  IContractWrapperBase . hydrateFromNew  Inherited from  ContractWrapperBase . hydrateFromNew  Defined in  contractWrapperBase.ts:77  Initialize from a newly-migrated instance. This will migrate a new instance of the contract to the net.  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . IContractWrapperBase \nthis", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#proposevoteinorganization", 
            "text": "\u25ba  proposeVoteInOrganization (options?:  VoteInOrganizationProposeVoteConfig ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/voteInOrganizationScheme.ts:40  Submit a proposal to vote on a proposal in another DAO.  Parameters:     Param  Type  Default value  Description      options  VoteInOrganizationProposeVoteConfig      {} as VoteInOrganizationProposeVoteConfig   TxGeneratingFunctionOptions  -       Returns:   Promise . ArcTransactionProposalResult", 
            "title": "proposeVoteInOrganization"
        }, 
        {
            "location": "/api/classes/VoteInOrganizationSchemeWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  StandardSchemeParams TxGeneratingFunctionOptions ):  Promise . ArcTransactionDataResult Hash  Overrides  ContractWrapperBase . setParameters  Defined in  wrappers/voteInOrganizationScheme.ts:128  Parameters:     Param  Type  Description      params  StandardSchemeParams TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/classes/Web3EventService/", 
            "text": "API Reference\n \n \nWeb3EventService\n\n\nClass: Web3EventService\n\n\nSupport for working with events that originate from Arc contracts and are served up by Web3.\n\n\nSee \nArc Web3 Events in Arc.js\n.\n\n\nIndex\n\n\nMethods\n\n\n\n\ncreateEntityFetcherFactory\n\n\ncreateEventFetcherFactory\n\n\n\n\n\n\nMethods\n\n\n\n\ncreateEntityFetcherFactory\n\n\n\u25ba \ncreateEntityFetcherFactory\nTEntity,TEventArgs(eventFetcherFactory: \nEventFetcherFactory\nTEventArgs\n, transformEventCallback: \nTransformEventCallback\nTEntity\n, \nTEventArgs\n, baseArgFilter?: \nany\n): \nEntityFetcherFactory\nTEntity\n, \nTEventArgs\n\n\nDefined in \nweb3EventService.ts:154\n\n\nConverts a \nEventFetcherFactory\nTEventArgs\n into a \nEntityFetcherFactory\nTEntity, TEventArgs\n. So whenever a web3 event is received by the given \nEventFetcherFactory\n, we transform the \nTEventArgs\n into \nTEntities\n.\n\n\nNote that the callback parameter of \nEntityFetcher.get\n is optional; you may alternatively obtain the promise of a \nArray\nTEntity\n from the return value of \nget\n.\n\n\nSee \nArc Web3 Events in Arc.js\n.\n\n\nType parameters:\n\n\nTEntity\n\n\nTEventArgs\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\neventFetcherFactory\n\n\nEventFetcherFactory\nTEventArgs\n\n\n-\n\n\n-\n\n\n\n\n\n\ntransformEventCallback\n\n\nTransformEventCallback\nTEntity\n, \nTEventArgs\n\n\n-\n\n\nFunction to convert an instance of TEventArgs intothe promise of an instance of TEntity. If it returns \nundefined\n then no entityis returned for that event, so this is a programatic way in which eventscan be filtered.\n\n\n\n\n\n\nbaseArgFilter\n\n\nany\n\n\n{}\n\n\narg filter to always merge into any supplied argFilter.\n\n\n\n\n\n\n\n\nReturns:\n \nEntityFetcherFactory\nTEntity\n, \nTEventArgs\n\n\n\n\n\n\ncreateEventFetcherFactory\n\n\n\u25ba \ncreateEventFetcherFactory\nTEventArgs(baseEvent: \nany\n, preProcessEvent?: \nPreProcessEventCallback\nTEventArgs\n, baseArgFilter?: \nany\n): \nEventFetcherFactory\nTEventArgs\n\n\nDefined in \nweb3EventService.ts:32\n\n\nReturns a function that creates an EventFetcher\n. For subclasses to use to create their event handlers. This is identical to what you get with Truffle, except with enhancements.\n\n\nNote that the callback parameter of \nEventFetcher.get\n is optional; you may alternatively obtain the promise of a \nArray\nTEventArgs\n from the return value of \nget\n.\n\n\nSee \nArc Web3 Events in Arc.js\n.\n\ntype\n: TEventArgs - name of the event args (EventResult) interface, like NewProposalEventResult\n\n\nType parameters:\n\n\nTEventArgs\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbaseEvent\n\n\nany\n\n\n-\n\n\nthe event from the Truffle contract.\n\n\n\n\n\n\npreProcessEvent\n\n\nPreProcessEventCallback\nTEventArgs\n\n\n-\n\n\noptionally supply this to modify the err and log arguments before they arepassed to the \nget\n/\nwatch\n callback.\n\n\n\n\n\n\nbaseArgFilter\n\n\nany\n\n\n{}\n\n\narg filter to always merge into any supplied argFilter.\n\n\n\n\n\n\n\n\nReturns:\n \nEventFetcherFactory\nTEventArgs", 
            "title": "Web3EventService"
        }, 
        {
            "location": "/api/classes/Web3EventService/#class-web3eventservice", 
            "text": "Support for working with events that originate from Arc contracts and are served up by Web3.  See  Arc Web3 Events in Arc.js .", 
            "title": "Class: Web3EventService"
        }, 
        {
            "location": "/api/classes/Web3EventService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/Web3EventService/#methods", 
            "text": "createEntityFetcherFactory  createEventFetcherFactory", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/Web3EventService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/Web3EventService/#createentityfetcherfactory", 
            "text": "\u25ba  createEntityFetcherFactory TEntity,TEventArgs(eventFetcherFactory:  EventFetcherFactory TEventArgs , transformEventCallback:  TransformEventCallback TEntity ,  TEventArgs , baseArgFilter?:  any ):  EntityFetcherFactory TEntity ,  TEventArgs  Defined in  web3EventService.ts:154  Converts a  EventFetcherFactory TEventArgs  into a  EntityFetcherFactory TEntity, TEventArgs . So whenever a web3 event is received by the given  EventFetcherFactory , we transform the  TEventArgs  into  TEntities .  Note that the callback parameter of  EntityFetcher.get  is optional; you may alternatively obtain the promise of a  Array TEntity  from the return value of  get .  See  Arc Web3 Events in Arc.js .  Type parameters:", 
            "title": "createEntityFetcherFactory"
        }, 
        {
            "location": "/api/classes/Web3EventService/#tentity", 
            "text": "", 
            "title": "TEntity"
        }, 
        {
            "location": "/api/classes/Web3EventService/#teventargs", 
            "text": "Parameters:     Param  Type  Default value  Description      eventFetcherFactory  EventFetcherFactory TEventArgs  -  -    transformEventCallback  TransformEventCallback TEntity ,  TEventArgs  -  Function to convert an instance of TEventArgs intothe promise of an instance of TEntity. If it returns  undefined  then no entityis returned for that event, so this is a programatic way in which eventscan be filtered.    baseArgFilter  any  {}  arg filter to always merge into any supplied argFilter.     Returns:   EntityFetcherFactory TEntity ,  TEventArgs", 
            "title": "TEventArgs"
        }, 
        {
            "location": "/api/classes/Web3EventService/#createeventfetcherfactory", 
            "text": "\u25ba  createEventFetcherFactory TEventArgs(baseEvent:  any , preProcessEvent?:  PreProcessEventCallback TEventArgs , baseArgFilter?:  any ):  EventFetcherFactory TEventArgs  Defined in  web3EventService.ts:32  Returns a function that creates an EventFetcher . For subclasses to use to create their event handlers. This is identical to what you get with Truffle, except with enhancements.  Note that the callback parameter of  EventFetcher.get  is optional; you may alternatively obtain the promise of a  Array TEventArgs  from the return value of  get .  See  Arc Web3 Events in Arc.js . type : TEventArgs - name of the event args (EventResult) interface, like NewProposalEventResult  Type parameters:", 
            "title": "createEventFetcherFactory"
        }, 
        {
            "location": "/api/classes/Web3EventService/#teventargs_1", 
            "text": "Parameters:     Param  Type  Default value  Description      baseEvent  any  -  the event from the Truffle contract.    preProcessEvent  PreProcessEventCallback TEventArgs  -  optionally supply this to modify the err and log arguments before they arepassed to the  get / watch  callback.    baseArgFilter  any  {}  arg filter to always merge into any supplied argFilter.     Returns:   EventFetcherFactory TEventArgs", 
            "title": "TEventArgs"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/", 
            "text": "API Reference\n \n \nWeb3EventSubscription\n\n\nClass: Web3EventSubscription\n\n\nType parameters\n\n\nTEventArgs\n\n\nImplements\n\n\n\n\nIEventSubscription\n\n\n\n\nIndex\n\n\nConstructors\n\n\n\n\nconstructor\n\n\n\n\nMethods\n\n\n\n\nunsubscribe\n\n\n\n\n\n\nConstructors\n\n\n\n\n\u2295 \nnew Web3EventSubscription\n(subscription: \nIEventSubscription\n, fetcher: \nEventFetcher\nTEventArgs\n): \nWeb3EventSubscription\n\n\nDefined in \nweb3EventService.ts:585\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsubscription\n\n\nIEventSubscription\n\n\n-\n\n\n\n\n\n\nfetcher\n\n\nEventFetcher\nTEventArgs\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nWeb3EventSubscription\n\n\n\n\nMethods\n\n\n\n\nunsubscribe\n\n\n\u25ba \nunsubscribe\n(milliseconds?: \nnumber\n): \nPromise\n.\nvoid\n\n\nImplementation of \nIEventSubscription\n.\nunsubscribe\n\n\nDefined in \nweb3EventService.ts:595\n\n\nUnsubscribe from all of the events\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmilliseconds\n\n\nnumber\n\n\n-1\n\n\nnumber of milliseconds to timeout.Default is -1 which means not to timeout at all.\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "Web3EventSubscription"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#class-web3eventsubscription", 
            "text": "", 
            "title": "Class: Web3EventSubscription"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#teventargs", 
            "text": "", 
            "title": "TEventArgs"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#implements", 
            "text": "IEventSubscription", 
            "title": "Implements"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#constructors", 
            "text": "constructor", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#methods", 
            "text": "unsubscribe", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#constructors_1", 
            "text": "", 
            "title": "Constructors"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#new-web3eventsubscriptionsubscription-ieventsubscription-fetcher-eventfetcherteventargs-web3eventsubscription", 
            "text": "Defined in  web3EventService.ts:585  Parameters:     Param  Type  Description      subscription  IEventSubscription  -    fetcher  EventFetcher TEventArgs  -     Returns:   Web3EventSubscription", 
            "title": "\u2295 new Web3EventSubscription(subscription: IEventSubscription, fetcher: EventFetcherTEventArgs): Web3EventSubscription"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/Web3EventSubscription/#unsubscribe", 
            "text": "\u25ba  unsubscribe (milliseconds?:  number ):  Promise . void  Implementation of  IEventSubscription . unsubscribe  Defined in  web3EventService.ts:595  Unsubscribe from all of the events  Parameters:     Param  Type  Default value  Description      milliseconds  number  -1  number of milliseconds to timeout.Default is -1 which means not to timeout at all.     Returns:   Promise . void", 
            "title": "unsubscribe"
        }, 
        {
            "location": "/api/classes/WrapperService/", 
            "text": "API Reference\n \n \nWrapperService\n\n\nClass: WrapperService\n\n\nService that provides access to Arc.js contract wrapper classes and class factories.\n\n\nIndex\n\n\nProperties\n\n\n\n\nfactories\n\n\nwrappers\n\n\nwrappersByAddress\n\n\nwrappersByType\n\n\n\n\nMethods\n\n\n\n\nconfirmContractType\n\n\ngetContractWrapper\n\n\ninitialize\n\n\n\n\n\n\nProperties\n\n\n\n\n\u00abStatic\u00bb factories\n\n\n\u25cf  factories\n:  \nArcWrapperFactories\n  =  {} as ArcWrapperFactories\n\n\nDefined in \nwrapperService.ts:161\n\n\nWrapper factories by name. Use these when you want to do \n.at()\n or \n.new()\n. You can also use for \ndeployed()\n, but the wrappers for deployed contracts are directly available from the \nwrappers\n and \nwrappersByType\n properties.\n\n\n\n\n\n\n\u00abStatic\u00bb wrappers\n\n\n\u25cf  wrappers\n:  \nArcWrappers\n  =  {} as ArcWrappers\n\n\nDefined in \nwrapperService.ts:151\n\n\nWrappers by name, hydrated with contracts as deployed by the running version of Arc.js.\n\n\n\n\n\n\n\u00abStatic\u00bb wrappersByAddress\n\n\n\u25cf  wrappersByAddress\n:  \nMap\n.\nAddress\n,.\nIContractWrapperBase\n  =  new Map\n()\n\n\nDefined in \nwrapperService.ts:171\n\n\nMap of contract wrappers keyed by address. For example:\n\n\nconst wrapper = WrapperService.wrappersByAddress.get(anAddress);\n\n\nCurrently only returns the wrappers for contracts that were deployed by the running version of Arc.js.\n\n\n\n\n\n\n\u00abStatic\u00bb wrappersByType\n\n\n\u25cf  wrappersByType\n:  \nArcWrappersByType\n  =  {} as ArcWrappersByType\n\n\nDefined in \nwrapperService.ts:155\n\n\nContract wrapper factories grouped by type\n\n\n\n\nMethods\n\n\n\n\n\u00abStatic\u00bb confirmContractType\n\n\n\u25ba \nconfirmContractType\n(contractWrapperFound: \nany\n): \nPromise\n.\nboolean\n\n\nDefined in \nwrapperService.ts:307\n\n\nConfirm the given contract wrapper wraps the same contract as it purports to, and is the one deployed in the running version of Arc.js.\n\n\nThis will reject wrappers of different versions of contracts with the same name in Arc.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncontractWrapperFound\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\n\u00abStatic\u00bb getContractWrapper\n\n\n\u25ba \ngetContractWrapper\n(contractName: \nstring\n, address?: \nstring\n): \nPromise\n.\nIContractWrapperBase\n\u23ae\nundefined\n\n\nDefined in \nwrapperService.ts:284\n\n\nReturns the promise of an Arc.js contract wrapper or undefined if not found.\n\n\nMost useful when you have both contract name and address and wish to most efficiently return the associated wrapper, or undefined when not found.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncontractName\n\n\nstring\n\n\nname of an Arc contract, like \"SchemeRegistrar\"\n\n\n\n\n\n\naddress\n\n\nstring\n\n\noptional\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nIContractWrapperBase\n\u23ae\nundefined\n\n\n\n\n\n\n\u00abStatic\u00bb initialize\n\n\n\u25ba \ninitialize\n(options?: \nWrapperServiceInitializeOptions\n): \nPromise\n.\nvoid\n\n\nDefined in \nwrapperService.ts:179\n\n\ninitialize() must be called before any of the static properties will have values. It is called by ArcInitialize(), which in tur must be invoked by any application using Arc.js.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nWrapperServiceInitializeOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "WrapperService"
        }, 
        {
            "location": "/api/classes/WrapperService/#class-wrapperservice", 
            "text": "Service that provides access to Arc.js contract wrapper classes and class factories.", 
            "title": "Class: WrapperService"
        }, 
        {
            "location": "/api/classes/WrapperService/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/classes/WrapperService/#properties", 
            "text": "factories  wrappers  wrappersByAddress  wrappersByType", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/WrapperService/#methods", 
            "text": "confirmContractType  getContractWrapper  initialize", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/WrapperService/#properties_1", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/classes/WrapperService/#static-factories", 
            "text": "\u25cf  factories :   ArcWrapperFactories   =  {} as ArcWrapperFactories  Defined in  wrapperService.ts:161  Wrapper factories by name. Use these when you want to do  .at()  or  .new() . You can also use for  deployed() , but the wrappers for deployed contracts are directly available from the  wrappers  and  wrappersByType  properties.", 
            "title": "\u00abStatic\u00bb factories"
        }, 
        {
            "location": "/api/classes/WrapperService/#static-wrappers", 
            "text": "\u25cf  wrappers :   ArcWrappers   =  {} as ArcWrappers  Defined in  wrapperService.ts:151  Wrappers by name, hydrated with contracts as deployed by the running version of Arc.js.", 
            "title": "\u00abStatic\u00bb wrappers"
        }, 
        {
            "location": "/api/classes/WrapperService/#static-wrappersbyaddress", 
            "text": "\u25cf  wrappersByAddress :   Map . Address ,. IContractWrapperBase   =  new Map ()  Defined in  wrapperService.ts:171  Map of contract wrappers keyed by address. For example:  const wrapper = WrapperService.wrappersByAddress.get(anAddress);  Currently only returns the wrappers for contracts that were deployed by the running version of Arc.js.", 
            "title": "\u00abStatic\u00bb wrappersByAddress"
        }, 
        {
            "location": "/api/classes/WrapperService/#static-wrappersbytype", 
            "text": "\u25cf  wrappersByType :   ArcWrappersByType   =  {} as ArcWrappersByType  Defined in  wrapperService.ts:155  Contract wrapper factories grouped by type", 
            "title": "\u00abStatic\u00bb wrappersByType"
        }, 
        {
            "location": "/api/classes/WrapperService/#methods_1", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/classes/WrapperService/#static-confirmcontracttype", 
            "text": "\u25ba  confirmContractType (contractWrapperFound:  any ):  Promise . boolean  Defined in  wrapperService.ts:307  Confirm the given contract wrapper wraps the same contract as it purports to, and is the one deployed in the running version of Arc.js.  This will reject wrappers of different versions of contracts with the same name in Arc.  Parameters:     Param  Type  Description      contractWrapperFound  any  -     Returns:   Promise . boolean", 
            "title": "\u00abStatic\u00bb confirmContractType"
        }, 
        {
            "location": "/api/classes/WrapperService/#static-getcontractwrapper", 
            "text": "\u25ba  getContractWrapper (contractName:  string , address?:  string ):  Promise . IContractWrapperBase \u23ae undefined  Defined in  wrapperService.ts:284  Returns the promise of an Arc.js contract wrapper or undefined if not found.  Most useful when you have both contract name and address and wish to most efficiently return the associated wrapper, or undefined when not found.  Parameters:     Param  Type  Description      contractName  string  name of an Arc contract, like \"SchemeRegistrar\"    address  string  optional     Returns:   Promise . IContractWrapperBase \u23ae undefined", 
            "title": "\u00abStatic\u00bb getContractWrapper"
        }, 
        {
            "location": "/api/classes/WrapperService/#static-initialize", 
            "text": "\u25ba  initialize (options?:  WrapperServiceInitializeOptions ):  Promise . void  Defined in  wrapperService.ts:179  initialize() must be called before any of the static properties will have values. It is called by ArcInitialize(), which in tur must be invoked by any application using Arc.js.  Parameters:     Param  Type  Description      options  WrapperServiceInitializeOptions  -     Returns:   Promise . void", 
            "title": "\u00abStatic\u00bb initialize"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/", 
            "text": "API Reference\n \n \nBinaryVoteResult\n\n\nEnumeration: BinaryVoteResult\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nAbstain\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nAbstain\n\n\n Abstain\n:    = 0\n\n\nDefined in \ncommonTypes.ts:8\n\n\n\n\n\n\nNo\n\n\n No\n:    = 2\n\n\nDefined in \ncommonTypes.ts:10\n\n\n\n\n\n\nYes\n\n\n Yes\n:    = 1\n\n\nDefined in \ncommonTypes.ts:9", 
            "title": "BinaryVoteResult"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/#enumeration-binaryvoteresult", 
            "text": "", 
            "title": "Enumeration: BinaryVoteResult"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/#enumeration-members", 
            "text": "Abstain  No  Yes", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/#abstain", 
            "text": "Abstain :    = 0  Defined in  commonTypes.ts:8", 
            "title": "Abstain"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/#no", 
            "text": "No :    = 2  Defined in  commonTypes.ts:10", 
            "title": "No"
        }, 
        {
            "location": "/api/enums/BinaryVoteResult/#yes", 
            "text": "Yes :    = 1  Defined in  commonTypes.ts:9", 
            "title": "Yes"
        }, 
        {
            "location": "/api/enums/ExecutionState/", 
            "text": "API Reference\n \n \nExecutionState\n\n\nEnumeration: ExecutionState\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nBoostedBarCrossed\n\n\nBoostedTimeOut\n\n\nNone\n\n\nPreBoostedBarCrossed\n\n\nPreBoostedTimeOut\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nBoostedBarCrossed\n\n\n BoostedBarCrossed\n:    = 4\n\n\nDefined in \nwrappers/genesisProtocol.ts:1256\n\n\n\n\n\n\nBoostedTimeOut\n\n\n BoostedTimeOut\n:    = 3\n\n\nDefined in \nwrappers/genesisProtocol.ts:1255\n\n\n\n\n\n\nNone\n\n\n None\n:    = 0\n\n\nDefined in \nwrappers/genesisProtocol.ts:1252\n\n\n\n\n\n\nPreBoostedBarCrossed\n\n\n PreBoostedBarCrossed\n:    = 2\n\n\nDefined in \nwrappers/genesisProtocol.ts:1254\n\n\n\n\n\n\nPreBoostedTimeOut\n\n\n PreBoostedTimeOut\n:    = 1\n\n\nDefined in \nwrappers/genesisProtocol.ts:1253", 
            "title": "ExecutionState"
        }, 
        {
            "location": "/api/enums/ExecutionState/#enumeration-executionstate", 
            "text": "", 
            "title": "Enumeration: ExecutionState"
        }, 
        {
            "location": "/api/enums/ExecutionState/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/ExecutionState/#enumeration-members", 
            "text": "BoostedBarCrossed  BoostedTimeOut  None  PreBoostedBarCrossed  PreBoostedTimeOut", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/ExecutionState/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/ExecutionState/#boostedbarcrossed", 
            "text": "BoostedBarCrossed :    = 4  Defined in  wrappers/genesisProtocol.ts:1256", 
            "title": "BoostedBarCrossed"
        }, 
        {
            "location": "/api/enums/ExecutionState/#boostedtimeout", 
            "text": "BoostedTimeOut :    = 3  Defined in  wrappers/genesisProtocol.ts:1255", 
            "title": "BoostedTimeOut"
        }, 
        {
            "location": "/api/enums/ExecutionState/#none", 
            "text": "None :    = 0  Defined in  wrappers/genesisProtocol.ts:1252", 
            "title": "None"
        }, 
        {
            "location": "/api/enums/ExecutionState/#preboostedbarcrossed", 
            "text": "PreBoostedBarCrossed :    = 2  Defined in  wrappers/genesisProtocol.ts:1254", 
            "title": "PreBoostedBarCrossed"
        }, 
        {
            "location": "/api/enums/ExecutionState/#preboostedtimeout", 
            "text": "PreBoostedTimeOut :    = 1  Defined in  wrappers/genesisProtocol.ts:1253", 
            "title": "PreBoostedTimeOut"
        }, 
        {
            "location": "/api/enums/GlobalConstraintProposalType/", 
            "text": "API Reference\n \n \nGlobalConstraintProposalType\n\n\nEnumeration: GlobalConstraintProposalType\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nAdd\n\n\nRemove\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nAdd\n\n\n Add\n:    = 1\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:300\n\n\n\n\n\n\nRemove\n\n\n Remove\n:    = 2\n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:301", 
            "title": "GlobalConstraintProposalType"
        }, 
        {
            "location": "/api/enums/GlobalConstraintProposalType/#enumeration-globalconstraintproposaltype", 
            "text": "", 
            "title": "Enumeration: GlobalConstraintProposalType"
        }, 
        {
            "location": "/api/enums/GlobalConstraintProposalType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/GlobalConstraintProposalType/#enumeration-members", 
            "text": "Add  Remove", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/GlobalConstraintProposalType/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/GlobalConstraintProposalType/#add", 
            "text": "Add :    = 1  Defined in  wrappers/globalConstraintRegistrar.ts:300", 
            "title": "Add"
        }, 
        {
            "location": "/api/enums/GlobalConstraintProposalType/#remove", 
            "text": "Remove :    = 2  Defined in  wrappers/globalConstraintRegistrar.ts:301", 
            "title": "Remove"
        }, 
        {
            "location": "/api/enums/LogLevel/", 
            "text": "API Reference\n \n \nLogLevel\n\n\nEnumeration: LogLevel\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nall\n\n\ndebug\n\n\nerror\n\n\ninfo\n\n\nnone\n\n\nwarn\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nall\n\n\n all\n:    = 15\n\n\nDefined in \nloggingService.ts:9\n\n\n\n\n\n\ndebug\n\n\n debug\n:    = 4\n\n\nDefined in \nloggingService.ts:7\n\n\n\n\n\n\nerror\n\n\n error\n:    = 8\n\n\nDefined in \nloggingService.ts:8\n\n\n\n\n\n\ninfo\n\n\n info\n:    = 1\n\n\nDefined in \nloggingService.ts:5\n\n\n\n\n\n\nnone\n\n\n none\n:    = 0\n\n\nDefined in \nloggingService.ts:4\n\n\n\n\n\n\nwarn\n\n\n warn\n:    = 2\n\n\nDefined in \nloggingService.ts:6", 
            "title": "LogLevel"
        }, 
        {
            "location": "/api/enums/LogLevel/#enumeration-loglevel", 
            "text": "", 
            "title": "Enumeration: LogLevel"
        }, 
        {
            "location": "/api/enums/LogLevel/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/LogLevel/#enumeration-members", 
            "text": "all  debug  error  info  none  warn", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/LogLevel/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/LogLevel/#all", 
            "text": "all :    = 15  Defined in  loggingService.ts:9", 
            "title": "all"
        }, 
        {
            "location": "/api/enums/LogLevel/#debug", 
            "text": "debug :    = 4  Defined in  loggingService.ts:7", 
            "title": "debug"
        }, 
        {
            "location": "/api/enums/LogLevel/#error", 
            "text": "error :    = 8  Defined in  loggingService.ts:8", 
            "title": "error"
        }, 
        {
            "location": "/api/enums/LogLevel/#info", 
            "text": "info :    = 1  Defined in  loggingService.ts:5", 
            "title": "info"
        }, 
        {
            "location": "/api/enums/LogLevel/#none", 
            "text": "none :    = 0  Defined in  loggingService.ts:4", 
            "title": "none"
        }, 
        {
            "location": "/api/enums/LogLevel/#warn", 
            "text": "warn :    = 2  Defined in  loggingService.ts:6", 
            "title": "warn"
        }, 
        {
            "location": "/api/enums/ProposalState/", 
            "text": "API Reference\n \n \nProposalState\n\n\nEnumeration: ProposalState\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nBoosted\n\n\nClosed\n\n\nExecuted\n\n\nNone\n\n\nPreBoosted\n\n\nQuietEndingPeriod\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nBoosted\n\n\n Boosted\n:   \n\n\nDefined in \nwrappers/genesisProtocol.ts:1275\n\n\n\n\n\n\nClosed\n\n\n Closed\n:   \n\n\nDefined in \nwrappers/genesisProtocol.ts:1272\n\n\n\n\n\n\nExecuted\n\n\n Executed\n:   \n\n\nDefined in \nwrappers/genesisProtocol.ts:1273\n\n\n\n\n\n\nNone\n\n\n None\n:   \n\n\nDefined in \nwrappers/genesisProtocol.ts:1271\n\n\n\n\n\n\nPreBoosted\n\n\n PreBoosted\n:   \n\n\nDefined in \nwrappers/genesisProtocol.ts:1274\n\n\n\n\n\n\nQuietEndingPeriod\n\n\n QuietEndingPeriod\n:   \n\n\nDefined in \nwrappers/genesisProtocol.ts:1276", 
            "title": "ProposalState"
        }, 
        {
            "location": "/api/enums/ProposalState/#enumeration-proposalstate", 
            "text": "", 
            "title": "Enumeration: ProposalState"
        }, 
        {
            "location": "/api/enums/ProposalState/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/ProposalState/#enumeration-members", 
            "text": "Boosted  Closed  Executed  None  PreBoosted  QuietEndingPeriod", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/ProposalState/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/ProposalState/#boosted", 
            "text": "Boosted :     Defined in  wrappers/genesisProtocol.ts:1275", 
            "title": "Boosted"
        }, 
        {
            "location": "/api/enums/ProposalState/#closed", 
            "text": "Closed :     Defined in  wrappers/genesisProtocol.ts:1272", 
            "title": "Closed"
        }, 
        {
            "location": "/api/enums/ProposalState/#executed", 
            "text": "Executed :     Defined in  wrappers/genesisProtocol.ts:1273", 
            "title": "Executed"
        }, 
        {
            "location": "/api/enums/ProposalState/#none", 
            "text": "None :     Defined in  wrappers/genesisProtocol.ts:1271", 
            "title": "None"
        }, 
        {
            "location": "/api/enums/ProposalState/#preboosted", 
            "text": "PreBoosted :     Defined in  wrappers/genesisProtocol.ts:1274", 
            "title": "PreBoosted"
        }, 
        {
            "location": "/api/enums/ProposalState/#quietendingperiod", 
            "text": "QuietEndingPeriod :     Defined in  wrappers/genesisProtocol.ts:1276", 
            "title": "QuietEndingPeriod"
        }, 
        {
            "location": "/api/enums/RewardType/", 
            "text": "API Reference\n \n \nRewardType\n\n\nEnumeration: RewardType\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nEth\n\n\nExternalToken\n\n\nNativeToken\n\n\nReputation\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nEth\n\n\n Eth\n:    = 2\n\n\nDefined in \nwrappers/contributionReward.ts:561\n\n\n\n\n\n\nExternalToken\n\n\n ExternalToken\n:    = 3\n\n\nDefined in \nwrappers/contributionReward.ts:562\n\n\n\n\n\n\nNativeToken\n\n\n NativeToken\n:    = 1\n\n\nDefined in \nwrappers/contributionReward.ts:560\n\n\n\n\n\n\nReputation\n\n\n Reputation\n:    = 0\n\n\nDefined in \nwrappers/contributionReward.ts:559", 
            "title": "RewardType"
        }, 
        {
            "location": "/api/enums/RewardType/#enumeration-rewardtype", 
            "text": "", 
            "title": "Enumeration: RewardType"
        }, 
        {
            "location": "/api/enums/RewardType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/RewardType/#enumeration-members", 
            "text": "Eth  ExternalToken  NativeToken  Reputation", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/RewardType/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/RewardType/#eth", 
            "text": "Eth :    = 2  Defined in  wrappers/contributionReward.ts:561", 
            "title": "Eth"
        }, 
        {
            "location": "/api/enums/RewardType/#externaltoken", 
            "text": "ExternalToken :    = 3  Defined in  wrappers/contributionReward.ts:562", 
            "title": "ExternalToken"
        }, 
        {
            "location": "/api/enums/RewardType/#nativetoken", 
            "text": "NativeToken :    = 1  Defined in  wrappers/contributionReward.ts:560", 
            "title": "NativeToken"
        }, 
        {
            "location": "/api/enums/RewardType/#reputation", 
            "text": "Reputation :    = 0  Defined in  wrappers/contributionReward.ts:559", 
            "title": "Reputation"
        }, 
        {
            "location": "/api/enums/SchemePermissions/", 
            "text": "API Reference\n \n \nSchemePermissions\n\n\nEnumeration: SchemePermissions\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nAll\n\n\nCanAddRemoveGlobalConstraints\n\n\nCanCallDelegateCall\n\n\nCanRegisterSchemes\n\n\nCanUpgradeController\n\n\nIsRegistered\n\n\nNone\n\n\n\n\nFunctions\n\n\n\n\nfromString\n\n\ntoString\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nAll\n\n\n All\n:    = 31\n\n\nDefined in \ncommonTypes.ts:23\n\n\n\n\n\n\nCanAddRemoveGlobalConstraints\n\n\n CanAddRemoveGlobalConstraints\n:    = 4\n\n\nDefined in \ncommonTypes.ts:20\n\n\n\n\n\n\nCanCallDelegateCall\n\n\n CanCallDelegateCall\n:    = 16\n\n\nDefined in \ncommonTypes.ts:22\n\n\n\n\n\n\nCanRegisterSchemes\n\n\n CanRegisterSchemes\n:    = 2\n\n\nDefined in \ncommonTypes.ts:19\n\n\n\n\n\n\nCanUpgradeController\n\n\n CanUpgradeController\n:    = 8\n\n\nDefined in \ncommonTypes.ts:21\n\n\n\n\n\n\nIsRegistered\n\n\n IsRegistered\n:    = 1\n\n\nDefined in \ncommonTypes.ts:18\n\n\nA scheme always automatically gets this bit when registered to a DAO\n\n\n\n\n\n\nNone\n\n\n None\n:    = 0\n\n\nDefined in \ncommonTypes.ts:14\n\n\n\n\nFunctions\n\n\n\n\nfromString\n\n\n\u25ba \nfromString\n(perms: \nstring\n): \nSchemePermissions\n\n\nDefined in \ncommonTypes.ts:56\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nperms\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ntoString\n\n\n\u25ba \ntoString\n(perms: \nSchemePermissions\n): \nstring\n\n\nDefined in \ncommonTypes.ts:53\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nperms\n\n\nSchemePermissions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nstring", 
            "title": "SchemePermissions"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#enumeration-schemepermissions", 
            "text": "", 
            "title": "Enumeration: SchemePermissions"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#enumeration-members", 
            "text": "All  CanAddRemoveGlobalConstraints  CanCallDelegateCall  CanRegisterSchemes  CanUpgradeController  IsRegistered  None", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#functions", 
            "text": "fromString  toString", 
            "title": "Functions"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#all", 
            "text": "All :    = 31  Defined in  commonTypes.ts:23", 
            "title": "All"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#canaddremoveglobalconstraints", 
            "text": "CanAddRemoveGlobalConstraints :    = 4  Defined in  commonTypes.ts:20", 
            "title": "CanAddRemoveGlobalConstraints"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#cancalldelegatecall", 
            "text": "CanCallDelegateCall :    = 16  Defined in  commonTypes.ts:22", 
            "title": "CanCallDelegateCall"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#canregisterschemes", 
            "text": "CanRegisterSchemes :    = 2  Defined in  commonTypes.ts:19", 
            "title": "CanRegisterSchemes"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#canupgradecontroller", 
            "text": "CanUpgradeController :    = 8  Defined in  commonTypes.ts:21", 
            "title": "CanUpgradeController"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#isregistered", 
            "text": "IsRegistered :    = 1  Defined in  commonTypes.ts:18  A scheme always automatically gets this bit when registered to a DAO", 
            "title": "IsRegistered"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#none", 
            "text": "None :    = 0  Defined in  commonTypes.ts:14", 
            "title": "None"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#functions_1", 
            "text": "", 
            "title": "Functions"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#fromstring", 
            "text": "\u25ba  fromString (perms:  string ):  SchemePermissions  Defined in  commonTypes.ts:56  Parameters:     Param  Type  Description      perms  string  -     Returns:   SchemePermissions", 
            "title": "fromString"
        }, 
        {
            "location": "/api/enums/SchemePermissions/#tostring", 
            "text": "\u25ba  toString (perms:  SchemePermissions ):  string  Defined in  commonTypes.ts:53  Parameters:     Param  Type  Description      perms  SchemePermissions  -     Returns:   string", 
            "title": "toString"
        }, 
        {
            "location": "/api/enums/SchemeRegistrarProposalType/", 
            "text": "API Reference\n \n \nSchemeRegistrarProposalType\n\n\nEnumeration: SchemeRegistrarProposalType\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nAdd\n\n\nRemove\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nAdd\n\n\n Add\n:    = 1\n\n\nDefined in \nwrappers/schemeRegistrar.ts:361\n\n\n\n\n\n\nRemove\n\n\n Remove\n:    = 2\n\n\nDefined in \nwrappers/schemeRegistrar.ts:362", 
            "title": "SchemeRegistrarProposalType"
        }, 
        {
            "location": "/api/enums/SchemeRegistrarProposalType/#enumeration-schemeregistrarproposaltype", 
            "text": "", 
            "title": "Enumeration: SchemeRegistrarProposalType"
        }, 
        {
            "location": "/api/enums/SchemeRegistrarProposalType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/SchemeRegistrarProposalType/#enumeration-members", 
            "text": "Add  Remove", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/SchemeRegistrarProposalType/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/SchemeRegistrarProposalType/#add", 
            "text": "Add :    = 1  Defined in  wrappers/schemeRegistrar.ts:361", 
            "title": "Add"
        }, 
        {
            "location": "/api/enums/SchemeRegistrarProposalType/#remove", 
            "text": "Remove :    = 2  Defined in  wrappers/schemeRegistrar.ts:362", 
            "title": "Remove"
        }, 
        {
            "location": "/api/enums/TransactionStage/", 
            "text": "API Reference\n \n \nTransactionStage\n\n\nEnumeration: TransactionStage\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nconfirmed\n\n\nkickoff\n\n\nmined\n\n\nsent\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nconfirmed\n\n\n confirmed\n:   \n\n\nDefined in \ntransactionService.ts:595\n\n\n\n\n\n\nkickoff\n\n\n kickoff\n:   \n\n\nDefined in \ntransactionService.ts:592\n\n\n\n\n\n\nmined\n\n\n mined\n:   \n\n\nDefined in \ntransactionService.ts:594\n\n\n\n\n\n\nsent\n\n\n sent\n:   \n\n\nDefined in \ntransactionService.ts:593", 
            "title": "TransactionStage"
        }, 
        {
            "location": "/api/enums/TransactionStage/#enumeration-transactionstage", 
            "text": "", 
            "title": "Enumeration: TransactionStage"
        }, 
        {
            "location": "/api/enums/TransactionStage/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/TransactionStage/#enumeration-members", 
            "text": "confirmed  kickoff  mined  sent", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/TransactionStage/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/TransactionStage/#confirmed", 
            "text": "confirmed :     Defined in  transactionService.ts:595", 
            "title": "confirmed"
        }, 
        {
            "location": "/api/enums/TransactionStage/#kickoff", 
            "text": "kickoff :     Defined in  transactionService.ts:592", 
            "title": "kickoff"
        }, 
        {
            "location": "/api/enums/TransactionStage/#mined", 
            "text": "mined :     Defined in  transactionService.ts:594", 
            "title": "mined"
        }, 
        {
            "location": "/api/enums/TransactionStage/#sent", 
            "text": "sent :     Defined in  transactionService.ts:593", 
            "title": "sent"
        }, 
        {
            "location": "/api/enums/UpgradeSchemeProposalType/", 
            "text": "API Reference\n \n \nUpgradeSchemeProposalType\n\n\nEnumeration: UpgradeSchemeProposalType\n\n\nIndex\n\n\nEnumeration members\n\n\n\n\nController\n\n\nUpgradeScheme\n\n\n\n\n\n\nEnumeration members\n\n\n\n\nController\n\n\n Controller\n:    = 1\n\n\nDefined in \nwrappers/upgradeScheme.ts:288\n\n\n\n\n\n\nUpgradeScheme\n\n\n UpgradeScheme\n:    = 2\n\n\nDefined in \nwrappers/upgradeScheme.ts:289", 
            "title": "UpgradeSchemeProposalType"
        }, 
        {
            "location": "/api/enums/UpgradeSchemeProposalType/#enumeration-upgradeschemeproposaltype", 
            "text": "", 
            "title": "Enumeration: UpgradeSchemeProposalType"
        }, 
        {
            "location": "/api/enums/UpgradeSchemeProposalType/#index", 
            "text": "", 
            "title": "Index"
        }, 
        {
            "location": "/api/enums/UpgradeSchemeProposalType/#enumeration-members", 
            "text": "Controller  UpgradeScheme", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/UpgradeSchemeProposalType/#enumeration-members_1", 
            "text": "", 
            "title": "Enumeration members"
        }, 
        {
            "location": "/api/enums/UpgradeSchemeProposalType/#controller", 
            "text": "Controller :    = 1  Defined in  wrappers/upgradeScheme.ts:288", 
            "title": "Controller"
        }, 
        {
            "location": "/api/enums/UpgradeSchemeProposalType/#upgradescheme", 
            "text": "UpgradeScheme :    = 2  Defined in  wrappers/upgradeScheme.ts:289", 
            "title": "UpgradeScheme"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParams/", 
            "text": "API Reference\n \n \nAbsoluteVoteParams\n\n\nInterface: AbsoluteVoteParams\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb ownerVote\n\n\n\u25cf  ownerVote\n:  \nboolean\n \n\n\nDefined in \nwrappers/absoluteVote.ts:170\n\n\n\n\n\n\nreputation\n\n\n\u25cf  reputation\n:  \nstring\n \n\n\nDefined in \nwrappers/absoluteVote.ts:171\n\n\n\n\n\n\n\u00abOptional\u00bb votePerc\n\n\n\u25cf  votePerc\n:  \nnumber\n \n\n\nDefined in \nwrappers/absoluteVote.ts:172", 
            "title": "AbsoluteVoteParams"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParams/#interface-absolutevoteparams", 
            "text": "", 
            "title": "Interface: AbsoluteVoteParams"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParams/#optional-ownervote", 
            "text": "\u25cf  ownerVote :   boolean    Defined in  wrappers/absoluteVote.ts:170", 
            "title": "\u00abOptional\u00bb ownerVote"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParams/#reputation", 
            "text": "\u25cf  reputation :   string    Defined in  wrappers/absoluteVote.ts:171", 
            "title": "reputation"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParams/#optional-voteperc", 
            "text": "\u25cf  votePerc :   number    Defined in  wrappers/absoluteVote.ts:172", 
            "title": "\u00abOptional\u00bb votePerc"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParamsResult/", 
            "text": "API Reference\n \n \nAbsoluteVoteParamsResult\n\n\nInterface: AbsoluteVoteParamsResult\n\n\nProperties\n\n\n\n\nownerVote\n\n\n\u25cf  ownerVote\n:  \nboolean\n \n\n\nDefined in \nwrappers/absoluteVote.ts:176\n\n\n\n\n\n\nreputation\n\n\n\u25cf  reputation\n:  \nstring\n \n\n\nDefined in \nwrappers/absoluteVote.ts:177\n\n\n\n\n\n\nvotePerc\n\n\n\u25cf  votePerc\n:  \nnumber\n \n\n\nDefined in \nwrappers/absoluteVote.ts:178", 
            "title": "AbsoluteVoteParamsResult"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParamsResult/#interface-absolutevoteparamsresult", 
            "text": "", 
            "title": "Interface: AbsoluteVoteParamsResult"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParamsResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParamsResult/#ownervote", 
            "text": "\u25cf  ownerVote :   boolean    Defined in  wrappers/absoluteVote.ts:176", 
            "title": "ownerVote"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParamsResult/#reputation", 
            "text": "\u25cf  reputation :   string    Defined in  wrappers/absoluteVote.ts:177", 
            "title": "reputation"
        }, 
        {
            "location": "/api/interfaces/AbsoluteVoteParamsResult/#voteperc", 
            "text": "\u25cf  votePerc :   number    Defined in  wrappers/absoluteVote.ts:178", 
            "title": "votePerc"
        }, 
        {
            "location": "/api/interfaces/Agreement/", 
            "text": "API Reference\n \n \nAgreement\n\n\nInterface: Agreement\n\n\nHierarchy\n\n\nAgreementBase\n\n\n\u21b3 Agreement\n\n\nProperties\n\n\n\n\nagreementId\n\n\n\u25cf  agreementId\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:615\n\n\n\n\n\n\namountPerPeriod\n\n\n\u25cf  amountPerPeriod\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\namountPerPeriod\n\n\nDefined in \nwrappers/vestingScheme.ts:619\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nInherited from \nAgreementBase\n.\nbeneficiaryAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:620\n\n\n\n\n\n\ncliffInPeriods\n\n\n\u25cf  cliffInPeriods\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\ncliffInPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:621\n\n\n\n\n\n\ncollectedPeriods\n\n\n\u25cf  collectedPeriods\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\ncollectedPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:622\n\n\n\n\n\n\nnumOfAgreedPeriods\n\n\n\u25cf  numOfAgreedPeriods\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nnumOfAgreedPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:623\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nperiodLength\n\n\nDefined in \nwrappers/vestingScheme.ts:624\n\n\n\n\n\n\nreturnOnCancelAddress\n\n\n\u25cf  returnOnCancelAddress\n:  \nAddress\n \n\n\nInherited from \nAgreementBase\n.\nreturnOnCancelAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:625\n\n\n\n\n\n\nsignaturesReqToCancel\n\n\n\u25cf  signaturesReqToCancel\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nsignaturesReqToCancel\n\n\nDefined in \nwrappers/vestingScheme.ts:626\n\n\n\n\n\n\nstartingBlock\n\n\n\u25cf  startingBlock\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nstartingBlock\n\n\nDefined in \nwrappers/vestingScheme.ts:627\n\n\n\n\n\n\ntokenAddress\n\n\n\u25cf  tokenAddress\n:  \nAddress\n \n\n\nInherited from \nAgreementBase\n.\ntokenAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:628", 
            "title": "Agreement"
        }, 
        {
            "location": "/api/interfaces/Agreement/#interface-agreement", 
            "text": "", 
            "title": "Interface: Agreement"
        }, 
        {
            "location": "/api/interfaces/Agreement/#hierarchy", 
            "text": "AgreementBase  \u21b3 Agreement", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/Agreement/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/Agreement/#agreementid", 
            "text": "\u25cf  agreementId :   number    Defined in  wrappers/vestingScheme.ts:615", 
            "title": "agreementId"
        }, 
        {
            "location": "/api/interfaces/Agreement/#amountperperiod", 
            "text": "\u25cf  amountPerPeriod :   BigNumber.BigNumber    Inherited from  AgreementBase . amountPerPeriod  Defined in  wrappers/vestingScheme.ts:619", 
            "title": "amountPerPeriod"
        }, 
        {
            "location": "/api/interfaces/Agreement/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Inherited from  AgreementBase . beneficiaryAddress  Defined in  wrappers/vestingScheme.ts:620", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/Agreement/#cliffinperiods", 
            "text": "\u25cf  cliffInPeriods :   BigNumber.BigNumber    Inherited from  AgreementBase . cliffInPeriods  Defined in  wrappers/vestingScheme.ts:621", 
            "title": "cliffInPeriods"
        }, 
        {
            "location": "/api/interfaces/Agreement/#collectedperiods", 
            "text": "\u25cf  collectedPeriods :   BigNumber.BigNumber    Inherited from  AgreementBase . collectedPeriods  Defined in  wrappers/vestingScheme.ts:622", 
            "title": "collectedPeriods"
        }, 
        {
            "location": "/api/interfaces/Agreement/#numofagreedperiods", 
            "text": "\u25cf  numOfAgreedPeriods :   BigNumber.BigNumber    Inherited from  AgreementBase . numOfAgreedPeriods  Defined in  wrappers/vestingScheme.ts:623", 
            "title": "numOfAgreedPeriods"
        }, 
        {
            "location": "/api/interfaces/Agreement/#periodlength", 
            "text": "\u25cf  periodLength :   BigNumber.BigNumber    Inherited from  AgreementBase . periodLength  Defined in  wrappers/vestingScheme.ts:624", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/Agreement/#returnoncanceladdress", 
            "text": "\u25cf  returnOnCancelAddress :   Address    Inherited from  AgreementBase . returnOnCancelAddress  Defined in  wrappers/vestingScheme.ts:625", 
            "title": "returnOnCancelAddress"
        }, 
        {
            "location": "/api/interfaces/Agreement/#signaturesreqtocancel", 
            "text": "\u25cf  signaturesReqToCancel :   BigNumber.BigNumber    Inherited from  AgreementBase . signaturesReqToCancel  Defined in  wrappers/vestingScheme.ts:626", 
            "title": "signaturesReqToCancel"
        }, 
        {
            "location": "/api/interfaces/Agreement/#startingblock", 
            "text": "\u25cf  startingBlock :   BigNumber.BigNumber    Inherited from  AgreementBase . startingBlock  Defined in  wrappers/vestingScheme.ts:627", 
            "title": "startingBlock"
        }, 
        {
            "location": "/api/interfaces/Agreement/#tokenaddress", 
            "text": "\u25cf  tokenAddress :   Address    Inherited from  AgreementBase . tokenAddress  Defined in  wrappers/vestingScheme.ts:628", 
            "title": "tokenAddress"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/", 
            "text": "API Reference\n \n \nAgreementBase\n\n\nInterface: AgreementBase\n\n\nHierarchy\n\n\nAgreementBase\n\n\n\u21b3  \nAgreementProposal\n\n\n\u21b3  \nAgreement\n\n\nProperties\n\n\n\n\namountPerPeriod\n\n\n\u25cf  amountPerPeriod\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:619\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:620\n\n\n\n\n\n\ncliffInPeriods\n\n\n\u25cf  cliffInPeriods\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:621\n\n\n\n\n\n\ncollectedPeriods\n\n\n\u25cf  collectedPeriods\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:622\n\n\n\n\n\n\nnumOfAgreedPeriods\n\n\n\u25cf  numOfAgreedPeriods\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:623\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:624\n\n\n\n\n\n\nreturnOnCancelAddress\n\n\n\u25cf  returnOnCancelAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:625\n\n\n\n\n\n\nsignaturesReqToCancel\n\n\n\u25cf  signaturesReqToCancel\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:626\n\n\n\n\n\n\nstartingBlock\n\n\n\u25cf  startingBlock\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:627\n\n\n\n\n\n\ntokenAddress\n\n\n\u25cf  tokenAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:628", 
            "title": "AgreementBase"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#interface-agreementbase", 
            "text": "", 
            "title": "Interface: AgreementBase"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#hierarchy", 
            "text": "AgreementBase  \u21b3   AgreementProposal  \u21b3   Agreement", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#amountperperiod", 
            "text": "\u25cf  amountPerPeriod :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:619", 
            "title": "amountPerPeriod"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Defined in  wrappers/vestingScheme.ts:620", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#cliffinperiods", 
            "text": "\u25cf  cliffInPeriods :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:621", 
            "title": "cliffInPeriods"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#collectedperiods", 
            "text": "\u25cf  collectedPeriods :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:622", 
            "title": "collectedPeriods"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#numofagreedperiods", 
            "text": "\u25cf  numOfAgreedPeriods :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:623", 
            "title": "numOfAgreedPeriods"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#periodlength", 
            "text": "\u25cf  periodLength :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:624", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#returnoncanceladdress", 
            "text": "\u25cf  returnOnCancelAddress :   Address    Defined in  wrappers/vestingScheme.ts:625", 
            "title": "returnOnCancelAddress"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#signaturesreqtocancel", 
            "text": "\u25cf  signaturesReqToCancel :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:626", 
            "title": "signaturesReqToCancel"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#startingblock", 
            "text": "\u25cf  startingBlock :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:627", 
            "title": "startingBlock"
        }, 
        {
            "location": "/api/interfaces/AgreementBase/#tokenaddress", 
            "text": "\u25cf  tokenAddress :   Address    Defined in  wrappers/vestingScheme.ts:628", 
            "title": "tokenAddress"
        }, 
        {
            "location": "/api/interfaces/AgreementCancelEventResult/", 
            "text": "API Reference\n \n \nAgreementCancelEventResult\n\n\nInterface: AgreementCancelEventResult\n\n\nProperties\n\n\n\n\n_agreementId\n\n\n\u25cf  _agreementId\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:500\n\n\nindexed", 
            "title": "AgreementCancelEventResult"
        }, 
        {
            "location": "/api/interfaces/AgreementCancelEventResult/#interface-agreementcanceleventresult", 
            "text": "", 
            "title": "Interface: AgreementCancelEventResult"
        }, 
        {
            "location": "/api/interfaces/AgreementCancelEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AgreementCancelEventResult/#_agreementid", 
            "text": "\u25cf  _agreementId :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:500  indexed", 
            "title": "_agreementId"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/", 
            "text": "API Reference\n \n \nAgreementProposal\n\n\nInterface: AgreementProposal\n\n\nHierarchy\n\n\nAgreementBase\n\n\n\u21b3 AgreementProposal\n\n\nProperties\n\n\n\n\namountPerPeriod\n\n\n\u25cf  amountPerPeriod\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\namountPerPeriod\n\n\nDefined in \nwrappers/vestingScheme.ts:619\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nInherited from \nAgreementBase\n.\nbeneficiaryAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:620\n\n\n\n\n\n\ncliffInPeriods\n\n\n\u25cf  cliffInPeriods\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\ncliffInPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:621\n\n\n\n\n\n\ncollectedPeriods\n\n\n\u25cf  collectedPeriods\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\ncollectedPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:622\n\n\n\n\n\n\nnumOfAgreedPeriods\n\n\n\u25cf  numOfAgreedPeriods\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nnumOfAgreedPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:623\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nperiodLength\n\n\nDefined in \nwrappers/vestingScheme.ts:624\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/vestingScheme.ts:611\n\n\nindexed\n\n\n\n\n\n\nreturnOnCancelAddress\n\n\n\u25cf  returnOnCancelAddress\n:  \nAddress\n \n\n\nInherited from \nAgreementBase\n.\nreturnOnCancelAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:625\n\n\n\n\n\n\nsignaturesReqToCancel\n\n\n\u25cf  signaturesReqToCancel\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nsignaturesReqToCancel\n\n\nDefined in \nwrappers/vestingScheme.ts:626\n\n\n\n\n\n\nstartingBlock\n\n\n\u25cf  startingBlock\n:  \nBigNumber.BigNumber\n \n\n\nInherited from \nAgreementBase\n.\nstartingBlock\n\n\nDefined in \nwrappers/vestingScheme.ts:627\n\n\n\n\n\n\ntokenAddress\n\n\n\u25cf  tokenAddress\n:  \nAddress\n \n\n\nInherited from \nAgreementBase\n.\ntokenAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:628", 
            "title": "AgreementProposal"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#interface-agreementproposal", 
            "text": "", 
            "title": "Interface: AgreementProposal"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#hierarchy", 
            "text": "AgreementBase  \u21b3 AgreementProposal", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#amountperperiod", 
            "text": "\u25cf  amountPerPeriod :   BigNumber.BigNumber    Inherited from  AgreementBase . amountPerPeriod  Defined in  wrappers/vestingScheme.ts:619", 
            "title": "amountPerPeriod"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Inherited from  AgreementBase . beneficiaryAddress  Defined in  wrappers/vestingScheme.ts:620", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#cliffinperiods", 
            "text": "\u25cf  cliffInPeriods :   BigNumber.BigNumber    Inherited from  AgreementBase . cliffInPeriods  Defined in  wrappers/vestingScheme.ts:621", 
            "title": "cliffInPeriods"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#collectedperiods", 
            "text": "\u25cf  collectedPeriods :   BigNumber.BigNumber    Inherited from  AgreementBase . collectedPeriods  Defined in  wrappers/vestingScheme.ts:622", 
            "title": "collectedPeriods"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#numofagreedperiods", 
            "text": "\u25cf  numOfAgreedPeriods :   BigNumber.BigNumber    Inherited from  AgreementBase . numOfAgreedPeriods  Defined in  wrappers/vestingScheme.ts:623", 
            "title": "numOfAgreedPeriods"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#periodlength", 
            "text": "\u25cf  periodLength :   BigNumber.BigNumber    Inherited from  AgreementBase . periodLength  Defined in  wrappers/vestingScheme.ts:624", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/vestingScheme.ts:611  indexed", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#returnoncanceladdress", 
            "text": "\u25cf  returnOnCancelAddress :   Address    Inherited from  AgreementBase . returnOnCancelAddress  Defined in  wrappers/vestingScheme.ts:625", 
            "title": "returnOnCancelAddress"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#signaturesreqtocancel", 
            "text": "\u25cf  signaturesReqToCancel :   BigNumber.BigNumber    Inherited from  AgreementBase . signaturesReqToCancel  Defined in  wrappers/vestingScheme.ts:626", 
            "title": "signaturesReqToCancel"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#startingblock", 
            "text": "\u25cf  startingBlock :   BigNumber.BigNumber    Inherited from  AgreementBase . startingBlock  Defined in  wrappers/vestingScheme.ts:627", 
            "title": "startingBlock"
        }, 
        {
            "location": "/api/interfaces/AgreementProposal/#tokenaddress", 
            "text": "\u25cf  tokenAddress :   Address    Inherited from  AgreementBase . tokenAddress  Defined in  wrappers/vestingScheme.ts:628", 
            "title": "tokenAddress"
        }, 
        {
            "location": "/api/interfaces/AgreementProposalEventResult/", 
            "text": "API Reference\n \n \nAgreementProposalEventResult\n\n\nInterface: AgreementProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:449\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/vestingScheme.ts:453\n\n\nindexed", 
            "title": "AgreementProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/AgreementProposalEventResult/#interface-agreementproposaleventresult", 
            "text": "", 
            "title": "Interface: AgreementProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/AgreementProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AgreementProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/vestingScheme.ts:449  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/AgreementProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/vestingScheme.ts:453  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/AllowanceOptions/", 
            "text": "API Reference\n \n \nAllowanceOptions\n\n\nInterface: AllowanceOptions\n\n\nProperties\n\n\n\n\nowner\n\n\n\u25cf  owner\n:  \nAddress\n \n\n\nDefined in \nwrappers/daoToken.ts:383\n\n\n\n\n\n\nspender\n\n\n\u25cf  spender\n:  \nAddress\n \n\n\nDefined in \nwrappers/daoToken.ts:384", 
            "title": "AllowanceOptions"
        }, 
        {
            "location": "/api/interfaces/AllowanceOptions/#interface-allowanceoptions", 
            "text": "", 
            "title": "Interface: AllowanceOptions"
        }, 
        {
            "location": "/api/interfaces/AllowanceOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AllowanceOptions/#owner", 
            "text": "\u25cf  owner :   Address    Defined in  wrappers/daoToken.ts:383", 
            "title": "owner"
        }, 
        {
            "location": "/api/interfaces/AllowanceOptions/#spender", 
            "text": "\u25cf  spender :   Address    Defined in  wrappers/daoToken.ts:384", 
            "title": "spender"
        }, 
        {
            "location": "/api/interfaces/ApprovalEventResult/", 
            "text": "API Reference\n \n \nApprovalEventResult\n\n\nInterface: ApprovalEventResult\n\n\nProperties\n\n\n\n\nowner\n\n\n\u25cf  owner\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:255\n\n\nThe account from which the tokens originated. indexed\n\n\n\n\n\n\nspender\n\n\n\u25cf  spender\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:260\n\n\nThe account that was approved-to and initiated the transfer on behalf of owner. indexed\n\n\n\n\n\n\nvalue\n\n\n\u25cf  value\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/standardToken.ts:267\n\n\nWhen the event is emitted by \napprove\n, then this is the amount that was requested for approval from spender by owner by the specific function call. When the event is emitted by \nincreaseApproval\n or \ndecreaseApproval\n, then this is the current net amount approved to transfer from spender by owner.", 
            "title": "ApprovalEventResult"
        }, 
        {
            "location": "/api/interfaces/ApprovalEventResult/#interface-approvaleventresult", 
            "text": "", 
            "title": "Interface: ApprovalEventResult"
        }, 
        {
            "location": "/api/interfaces/ApprovalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ApprovalEventResult/#owner", 
            "text": "\u25cf  owner :   Address    Defined in  wrappers/standardToken.ts:255  The account from which the tokens originated. indexed", 
            "title": "owner"
        }, 
        {
            "location": "/api/interfaces/ApprovalEventResult/#spender", 
            "text": "\u25cf  spender :   Address    Defined in  wrappers/standardToken.ts:260  The account that was approved-to and initiated the transfer on behalf of owner. indexed", 
            "title": "spender"
        }, 
        {
            "location": "/api/interfaces/ApprovalEventResult/#value", 
            "text": "\u25cf  value :   BigNumber    Defined in  wrappers/standardToken.ts:267  When the event is emitted by  approve , then this is the amount that was requested for approval from spender by owner by the specific function call. When the event is emitted by  increaseApproval  or  decreaseApproval , then this is the current net amount approved to transfer from spender by owner.", 
            "title": "value"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/", 
            "text": "API Reference\n \n \nApproveAndCallOptions\n\n\nInterface: ApproveAndCallOptions\n\n\nHierarchy\n\n\nStandardTokenApproveOptions\n\n\n\u21b3 ApproveAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nInherited from \nStandardTokenApproveOptions\n.\namount\n\n\nDefined in \nwrappers/standardToken.ts:237\n\n\nAmount to approve to transfer.\n\n\n\n\n\n\ncallData\n\n\n\u25cf  callData\n:  \nstring\n \n\n\nDefined in \nwrappers/iErc827Token.ts:56\n\n\n\n\n\n\n\u00abOptional\u00bb owner\n\n\n\u25cf  owner\n:  \nAddress\n \n\n\nInherited from \nStandardTokenApproveOptions\n.\nowner\n\n\nDefined in \nwrappers/standardToken.ts:242\n\n\nThe account that has the tokens to spend. Default is msg.sender.\n\n\n\n\n\n\nspender\n\n\n\u25cf  spender\n:  \nAddress\n \n\n\nInherited from \nStandardTokenApproveOptions\n.\nspender\n\n\nDefined in \nwrappers/standardToken.ts:247\n\n\nThe account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "ApproveAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/#interface-approveandcalloptions", 
            "text": "", 
            "title": "Interface: ApproveAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/#hierarchy", 
            "text": "StandardTokenApproveOptions  \u21b3 ApproveAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Inherited from  StandardTokenApproveOptions . amount  Defined in  wrappers/standardToken.ts:237  Amount to approve to transfer.", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/#calldata", 
            "text": "\u25cf  callData :   string    Defined in  wrappers/iErc827Token.ts:56", 
            "title": "callData"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/#optional-owner", 
            "text": "\u25cf  owner :   Address    Inherited from  StandardTokenApproveOptions . owner  Defined in  wrappers/standardToken.ts:242  The account that has the tokens to spend. Default is msg.sender.", 
            "title": "\u00abOptional\u00bb owner"
        }, 
        {
            "location": "/api/interfaces/ApproveAndCallOptions/#spender", 
            "text": "\u25cf  spender :   Address    Inherited from  StandardTokenApproveOptions . spender  Defined in  wrappers/standardToken.ts:247  The account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "spender"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/", 
            "text": "API Reference\n \n \nArcWrapperFactories\n\n\nInterface: ArcWrapperFactories\n\n\nAn object with property names being a contract key and property value as the corresponding wrapper factory (IContractWrapperFactory\nTWrapper).\n\n\nProperties\n\n\n\n\nAbsoluteVote\n\n\n\u25cf  AbsoluteVote\n:  \nIContractWrapperFactory\nAbsoluteVoteWrapper\n \n\n\nDefined in \nwrapperService.ts:76\n\n\n\n\n\n\nContributionReward\n\n\n\u25cf  ContributionReward\n:  \nIContractWrapperFactory\nContributionRewardWrapper\n \n\n\nDefined in \nwrapperService.ts:77\n\n\n\n\n\n\nDaoCreator\n\n\n\u25cf  DaoCreator\n:  \nIContractWrapperFactory\nDaoCreatorWrapper\n \n\n\nDefined in \nwrapperService.ts:78\n\n\n\n\n\n\nDaoToken\n\n\n\u25cf  DaoToken\n:  \nIContractWrapperFactory\nDaoTokenWrapper\n \n\n\nDefined in \nwrapperService.ts:79\n\n\n\n\n\n\nGenesisProtocol\n\n\n\u25cf  GenesisProtocol\n:  \nIContractWrapperFactory\nGenesisProtocolWrapper\n \n\n\nDefined in \nwrapperService.ts:80\n\n\n\n\n\n\nGlobalConstraintRegistrar\n\n\n\u25cf  GlobalConstraintRegistrar\n:  \nIContractWrapperFactory\nGlobalConstraintRegistrarWrapper\n \n\n\nDefined in \nwrapperService.ts:81\n\n\n\n\n\n\nIntVoteInterface\n\n\n\u25cf  IntVoteInterface\n:  \nIContractWrapperFactory\nIntVoteInterfaceWrapper\n \n\n\nDefined in \nwrapperService.ts:82\n\n\n\n\n\n\nMintableToken\n\n\n\u25cf  MintableToken\n:  \nIContractWrapperFactory\nMintableTokenWrapper\n \n\n\nDefined in \nwrapperService.ts:83\n\n\n\n\n\n\nRedeemer\n\n\n\u25cf  Redeemer\n:  \nIContractWrapperFactory\nRedeemerWrapper\n \n\n\nDefined in \nwrapperService.ts:84\n\n\n\n\n\n\nReputation\n\n\n\u25cf  Reputation\n:  \nIContractWrapperFactory\nReputationWrapper\n \n\n\nDefined in \nwrapperService.ts:85\n\n\n\n\n\n\nSchemeRegistrar\n\n\n\u25cf  SchemeRegistrar\n:  \nIContractWrapperFactory\nSchemeRegistrarWrapper\n \n\n\nDefined in \nwrapperService.ts:86\n\n\n\n\n\n\nStandardToken\n\n\n\u25cf  StandardToken\n:  \nIContractWrapperFactory\nStandardTokenWrapper\n \n\n\nDefined in \nwrapperService.ts:87\n\n\n\n\n\n\nTokenCapGC\n\n\n\u25cf  TokenCapGC\n:  \nIContractWrapperFactory\nTokenCapGCWrapper\n \n\n\nDefined in \nwrapperService.ts:88\n\n\n\n\n\n\nUpgradeScheme\n\n\n\u25cf  UpgradeScheme\n:  \nIContractWrapperFactory\nUpgradeSchemeWrapper\n \n\n\nDefined in \nwrapperService.ts:89\n\n\n\n\n\n\nVestingScheme\n\n\n\u25cf  VestingScheme\n:  \nIContractWrapperFactory\nVestingSchemeWrapper\n \n\n\nDefined in \nwrapperService.ts:90\n\n\n\n\n\n\nVoteInOrganizationScheme\n\n\n\u25cf  VoteInOrganizationScheme\n:  \nIContractWrapperFactory\nVoteInOrganizationSchemeWrapper\n \n\n\nDefined in \nwrapperService.ts:91", 
            "title": "ArcWrapperFactories"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#interface-arcwrapperfactories", 
            "text": "An object with property names being a contract key and property value as the corresponding wrapper factory (IContractWrapperFactory TWrapper).", 
            "title": "Interface: ArcWrapperFactories"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#absolutevote", 
            "text": "\u25cf  AbsoluteVote :   IContractWrapperFactory AbsoluteVoteWrapper    Defined in  wrapperService.ts:76", 
            "title": "AbsoluteVote"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#contributionreward", 
            "text": "\u25cf  ContributionReward :   IContractWrapperFactory ContributionRewardWrapper    Defined in  wrapperService.ts:77", 
            "title": "ContributionReward"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#daocreator", 
            "text": "\u25cf  DaoCreator :   IContractWrapperFactory DaoCreatorWrapper    Defined in  wrapperService.ts:78", 
            "title": "DaoCreator"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#daotoken", 
            "text": "\u25cf  DaoToken :   IContractWrapperFactory DaoTokenWrapper    Defined in  wrapperService.ts:79", 
            "title": "DaoToken"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#genesisprotocol", 
            "text": "\u25cf  GenesisProtocol :   IContractWrapperFactory GenesisProtocolWrapper    Defined in  wrapperService.ts:80", 
            "title": "GenesisProtocol"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#globalconstraintregistrar", 
            "text": "\u25cf  GlobalConstraintRegistrar :   IContractWrapperFactory GlobalConstraintRegistrarWrapper    Defined in  wrapperService.ts:81", 
            "title": "GlobalConstraintRegistrar"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#intvoteinterface", 
            "text": "\u25cf  IntVoteInterface :   IContractWrapperFactory IntVoteInterfaceWrapper    Defined in  wrapperService.ts:82", 
            "title": "IntVoteInterface"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#mintabletoken", 
            "text": "\u25cf  MintableToken :   IContractWrapperFactory MintableTokenWrapper    Defined in  wrapperService.ts:83", 
            "title": "MintableToken"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#redeemer", 
            "text": "\u25cf  Redeemer :   IContractWrapperFactory RedeemerWrapper    Defined in  wrapperService.ts:84", 
            "title": "Redeemer"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#reputation", 
            "text": "\u25cf  Reputation :   IContractWrapperFactory ReputationWrapper    Defined in  wrapperService.ts:85", 
            "title": "Reputation"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#schemeregistrar", 
            "text": "\u25cf  SchemeRegistrar :   IContractWrapperFactory SchemeRegistrarWrapper    Defined in  wrapperService.ts:86", 
            "title": "SchemeRegistrar"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#standardtoken", 
            "text": "\u25cf  StandardToken :   IContractWrapperFactory StandardTokenWrapper    Defined in  wrapperService.ts:87", 
            "title": "StandardToken"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#tokencapgc", 
            "text": "\u25cf  TokenCapGC :   IContractWrapperFactory TokenCapGCWrapper    Defined in  wrapperService.ts:88", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#upgradescheme", 
            "text": "\u25cf  UpgradeScheme :   IContractWrapperFactory UpgradeSchemeWrapper    Defined in  wrapperService.ts:89", 
            "title": "UpgradeScheme"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#vestingscheme", 
            "text": "\u25cf  VestingScheme :   IContractWrapperFactory VestingSchemeWrapper    Defined in  wrapperService.ts:90", 
            "title": "VestingScheme"
        }, 
        {
            "location": "/api/interfaces/ArcWrapperFactories/#voteinorganizationscheme", 
            "text": "\u25cf  VoteInOrganizationScheme :   IContractWrapperFactory VoteInOrganizationSchemeWrapper    Defined in  wrapperService.ts:91", 
            "title": "VoteInOrganizationScheme"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/", 
            "text": "API Reference\n \n \nArcWrappers\n\n\nInterface: ArcWrappers\n\n\nAn object with property names being a contract key and property value as the corresponding wrapper. Only deployed wrappers are included here. Other wrappers may be obtained via their factory.\n\n\nProperties\n\n\n\n\nAbsoluteVote\n\n\n\u25cf  AbsoluteVote\n:  \nAbsoluteVoteWrapper\n \n\n\nDefined in \nwrapperService.ts:100\n\n\n\n\n\n\nContributionReward\n\n\n\u25cf  ContributionReward\n:  \nContributionRewardWrapper\n \n\n\nDefined in \nwrapperService.ts:101\n\n\n\n\n\n\nDaoCreator\n\n\n\u25cf  DaoCreator\n:  \nDaoCreatorWrapper\n \n\n\nDefined in \nwrapperService.ts:102\n\n\n\n\n\n\nGenesisProtocol\n\n\n\u25cf  GenesisProtocol\n:  \nGenesisProtocolWrapper\n \n\n\nDefined in \nwrapperService.ts:103\n\n\n\n\n\n\nGlobalConstraintRegistrar\n\n\n\u25cf  GlobalConstraintRegistrar\n:  \nGlobalConstraintRegistrarWrapper\n \n\n\nDefined in \nwrapperService.ts:104\n\n\n\n\n\n\nRedeemer\n\n\n\u25cf  Redeemer\n:  \nRedeemerWrapper\n \n\n\nDefined in \nwrapperService.ts:105\n\n\n\n\n\n\nSchemeRegistrar\n\n\n\u25cf  SchemeRegistrar\n:  \nSchemeRegistrarWrapper\n \n\n\nDefined in \nwrapperService.ts:106\n\n\n\n\n\n\nTokenCapGC\n\n\n\u25cf  TokenCapGC\n:  \nTokenCapGCWrapper\n \n\n\nDefined in \nwrapperService.ts:107\n\n\n\n\n\n\nUpgradeScheme\n\n\n\u25cf  UpgradeScheme\n:  \nUpgradeSchemeWrapper\n \n\n\nDefined in \nwrapperService.ts:108\n\n\n\n\n\n\nVestingScheme\n\n\n\u25cf  VestingScheme\n:  \nVestingSchemeWrapper\n \n\n\nDefined in \nwrapperService.ts:109\n\n\n\n\n\n\nVoteInOrganizationScheme\n\n\n\u25cf  VoteInOrganizationScheme\n:  \nVoteInOrganizationSchemeWrapper\n \n\n\nDefined in \nwrapperService.ts:110", 
            "title": "ArcWrappers"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#interface-arcwrappers", 
            "text": "An object with property names being a contract key and property value as the corresponding wrapper. Only deployed wrappers are included here. Other wrappers may be obtained via their factory.", 
            "title": "Interface: ArcWrappers"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#absolutevote", 
            "text": "\u25cf  AbsoluteVote :   AbsoluteVoteWrapper    Defined in  wrapperService.ts:100", 
            "title": "AbsoluteVote"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#contributionreward", 
            "text": "\u25cf  ContributionReward :   ContributionRewardWrapper    Defined in  wrapperService.ts:101", 
            "title": "ContributionReward"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#daocreator", 
            "text": "\u25cf  DaoCreator :   DaoCreatorWrapper    Defined in  wrapperService.ts:102", 
            "title": "DaoCreator"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#genesisprotocol", 
            "text": "\u25cf  GenesisProtocol :   GenesisProtocolWrapper    Defined in  wrapperService.ts:103", 
            "title": "GenesisProtocol"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#globalconstraintregistrar", 
            "text": "\u25cf  GlobalConstraintRegistrar :   GlobalConstraintRegistrarWrapper    Defined in  wrapperService.ts:104", 
            "title": "GlobalConstraintRegistrar"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#redeemer", 
            "text": "\u25cf  Redeemer :   RedeemerWrapper    Defined in  wrapperService.ts:105", 
            "title": "Redeemer"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#schemeregistrar", 
            "text": "\u25cf  SchemeRegistrar :   SchemeRegistrarWrapper    Defined in  wrapperService.ts:106", 
            "title": "SchemeRegistrar"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#tokencapgc", 
            "text": "\u25cf  TokenCapGC :   TokenCapGCWrapper    Defined in  wrapperService.ts:107", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#upgradescheme", 
            "text": "\u25cf  UpgradeScheme :   UpgradeSchemeWrapper    Defined in  wrapperService.ts:108", 
            "title": "UpgradeScheme"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#vestingscheme", 
            "text": "\u25cf  VestingScheme :   VestingSchemeWrapper    Defined in  wrapperService.ts:109", 
            "title": "VestingScheme"
        }, 
        {
            "location": "/api/interfaces/ArcWrappers/#voteinorganizationscheme", 
            "text": "\u25cf  VoteInOrganizationScheme :   VoteInOrganizationSchemeWrapper    Defined in  wrapperService.ts:110", 
            "title": "VoteInOrganizationScheme"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/", 
            "text": "API Reference\n \n \nArcWrappersByType\n\n\nInterface: ArcWrappersByType\n\n\nArc.js wrapper factories grouped by type.\n\n\nProperties\n\n\n\n\nallWrappers\n\n\n\u25cf  allWrappers\n:  \nArray\n.\nIContractWrapperBase\n \n\n\nDefined in \nwrapperService.ts:120\n\n\nAll wrapped contracts\n\n\n\n\n\n\nglobalConstraints\n\n\n\u25cf  globalConstraints\n:  \nArray\n.\nIContractWrapperBase\n \n\n\nDefined in \nwrapperService.ts:136\n\n\nAll wrapped global constraints\n\n\n\n\n\n\nother\n\n\n\u25cf  other\n:  \nArray\n.\nIContractWrapperBase\n \n\n\nDefined in \nwrapperService.ts:140\n\n\nOther types of wrappers\n\n\n\n\n\n\nproposalGeneratingSchemes\n\n\n\u25cf  proposalGeneratingSchemes\n:  \nArray\n.\nIContractWrapperBase\n \n\n\nDefined in \nwrapperService.ts:128\n\n\nAll wrapped schemes that can generate proposals\n\n\n\n\n\n\nschemes\n\n\n\u25cf  schemes\n:  \nArray\n.\nIContractWrapperBase\n \n\n\nDefined in \nwrapperService.ts:124\n\n\nAll wrapped schemes\n\n\n\n\n\n\nvotingMachines\n\n\n\u25cf  votingMachines\n:  \nArray\n.\nIContractWrapperBase\n \n\n\nDefined in \nwrapperService.ts:132\n\n\nAll wrapped voting machines", 
            "title": "ArcWrappersByType"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#interface-arcwrappersbytype", 
            "text": "Arc.js wrapper factories grouped by type.", 
            "title": "Interface: ArcWrappersByType"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#allwrappers", 
            "text": "\u25cf  allWrappers :   Array . IContractWrapperBase    Defined in  wrapperService.ts:120  All wrapped contracts", 
            "title": "allWrappers"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#globalconstraints", 
            "text": "\u25cf  globalConstraints :   Array . IContractWrapperBase    Defined in  wrapperService.ts:136  All wrapped global constraints", 
            "title": "globalConstraints"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#other", 
            "text": "\u25cf  other :   Array . IContractWrapperBase    Defined in  wrapperService.ts:140  Other types of wrappers", 
            "title": "other"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#proposalgeneratingschemes", 
            "text": "\u25cf  proposalGeneratingSchemes :   Array . IContractWrapperBase    Defined in  wrapperService.ts:128  All wrapped schemes that can generate proposals", 
            "title": "proposalGeneratingSchemes"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#schemes", 
            "text": "\u25cf  schemes :   Array . IContractWrapperBase    Defined in  wrapperService.ts:124  All wrapped schemes", 
            "title": "schemes"
        }, 
        {
            "location": "/api/interfaces/ArcWrappersByType/#votingmachines", 
            "text": "\u25cf  votingMachines :   Array . IContractWrapperBase    Defined in  wrapperService.ts:132  All wrapped voting machines", 
            "title": "votingMachines"
        }, 
        {
            "location": "/api/interfaces/AVVoteProposalEventResult/", 
            "text": "API Reference\n \n \nAVVoteProposalEventResult\n\n\nInterface: AVVoteProposalEventResult\n\n\nProperties\n\n\n\n\n_isOwnerVote\n\n\n\u25cf  _isOwnerVote\n:  \nboolean\n \n\n\nDefined in \nwrappers/absoluteVote.ts:186\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/absoluteVote.ts:185\n\n\nindexed", 
            "title": "AVVoteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/AVVoteProposalEventResult/#interface-avvoteproposaleventresult", 
            "text": "", 
            "title": "Interface: AVVoteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/AVVoteProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/AVVoteProposalEventResult/#_isownervote", 
            "text": "\u25cf  _isOwnerVote :   boolean    Defined in  wrappers/absoluteVote.ts:186", 
            "title": "_isOwnerVote"
        }, 
        {
            "location": "/api/interfaces/AVVoteProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/absoluteVote.ts:185  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/BurnableTokenBurnOptions/", 
            "text": "API Reference\n \n \nBurnableTokenBurnOptions\n\n\nInterface: BurnableTokenBurnOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/iBurnableToken.ts:23\n\n\nAmount to burn", 
            "title": "BurnableTokenBurnOptions"
        }, 
        {
            "location": "/api/interfaces/BurnableTokenBurnOptions/#interface-burnabletokenburnoptions", 
            "text": "", 
            "title": "Interface: BurnableTokenBurnOptions"
        }, 
        {
            "location": "/api/interfaces/BurnableTokenBurnOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/BurnableTokenBurnOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber    Defined in  wrappers/iBurnableToken.ts:23  Amount to burn", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/BurnEventResult/", 
            "text": "API Reference\n \n \nBurnEventResult\n\n\nInterface: BurnEventResult\n\n\nProperties\n\n\n\n\nburner\n\n\n\u25cf  burner\n:  \nAddress\n \n\n\nDefined in \nwrappers/iBurnableToken.ts:31\n\n\nWho burnt the tokens indexed\n\n\n\n\n\n\nvalue\n\n\n\u25cf  value\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/iBurnableToken.ts:35\n\n\nAmount burnt", 
            "title": "BurnEventResult"
        }, 
        {
            "location": "/api/interfaces/BurnEventResult/#interface-burneventresult", 
            "text": "", 
            "title": "Interface: BurnEventResult"
        }, 
        {
            "location": "/api/interfaces/BurnEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/BurnEventResult/#burner", 
            "text": "\u25cf  burner :   Address    Defined in  wrappers/iBurnableToken.ts:31  Who burnt the tokens indexed", 
            "title": "burner"
        }, 
        {
            "location": "/api/interfaces/BurnEventResult/#value", 
            "text": "\u25cf  value :   BigNumber    Defined in  wrappers/iBurnableToken.ts:35  Amount burnt", 
            "title": "value"
        }, 
        {
            "location": "/api/interfaces/CancelProposalEventResult/", 
            "text": "API Reference\n \n \nCancelProposalEventResult\n\n\nInterface: CancelProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:67\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:71\n\n\nindexed", 
            "title": "CancelProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/CancelProposalEventResult/#interface-cancelproposaleventresult", 
            "text": "", 
            "title": "Interface: CancelProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/CancelProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/CancelProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/iIntVoteInterface.ts:67  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/CancelProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/iIntVoteInterface.ts:71  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/CancelVotingEventResult/", 
            "text": "API Reference\n \n \nCancelVotingEventResult\n\n\nInterface: CancelVotingEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:78\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:82\n\n\nindexed\n\n\n\n\n\n\n_voter\n\n\n\u25cf  _voter\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:86\n\n\nindexed", 
            "title": "CancelVotingEventResult"
        }, 
        {
            "location": "/api/interfaces/CancelVotingEventResult/#interface-cancelvotingeventresult", 
            "text": "", 
            "title": "Interface: CancelVotingEventResult"
        }, 
        {
            "location": "/api/interfaces/CancelVotingEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/CancelVotingEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/iIntVoteInterface.ts:78  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/CancelVotingEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/iIntVoteInterface.ts:82  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/CancelVotingEventResult/#_voter", 
            "text": "\u25cf  _voter :   Address    Defined in  wrappers/iIntVoteInterface.ts:86  indexed", 
            "title": "_voter"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/", 
            "text": "API Reference\n \n \nChangeApprovalAndCallOptions\n\n\nInterface: ChangeApprovalAndCallOptions\n\n\nHierarchy\n\n\nStandardTokenChangeApprovalOptions\n\n\n\u21b3 ChangeApprovalAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nInherited from \nStandardTokenChangeApprovalOptions\n.\namount\n\n\nDefined in \nwrappers/standardToken.ts:308\n\n\n\n\n\n\ncallData\n\n\n\u25cf  callData\n:  \nstring\n \n\n\nDefined in \nwrappers/iErc827Token.ts:68\n\n\n\n\n\n\n\u00abOptional\u00bb owner\n\n\n\u25cf  owner\n:  \nAddress\n \n\n\nInherited from \nStandardTokenChangeApprovalOptions\n.\nowner\n\n\nDefined in \nwrappers/standardToken.ts:313\n\n\nThe account that has the tokens to spend. Default is msg.sender.\n\n\n\n\n\n\nspender\n\n\n\u25cf  spender\n:  \nAddress\n \n\n\nInherited from \nStandardTokenChangeApprovalOptions\n.\nspender\n\n\nDefined in \nwrappers/standardToken.ts:318\n\n\nThe account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "ChangeApprovalAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/#interface-changeapprovalandcalloptions", 
            "text": "", 
            "title": "Interface: ChangeApprovalAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/#hierarchy", 
            "text": "StandardTokenChangeApprovalOptions  \u21b3 ChangeApprovalAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Inherited from  StandardTokenChangeApprovalOptions . amount  Defined in  wrappers/standardToken.ts:308", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/#calldata", 
            "text": "\u25cf  callData :   string    Defined in  wrappers/iErc827Token.ts:68", 
            "title": "callData"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/#optional-owner", 
            "text": "\u25cf  owner :   Address    Inherited from  StandardTokenChangeApprovalOptions . owner  Defined in  wrappers/standardToken.ts:313  The account that has the tokens to spend. Default is msg.sender.", 
            "title": "\u00abOptional\u00bb owner"
        }, 
        {
            "location": "/api/interfaces/ChangeApprovalAndCallOptions/#spender", 
            "text": "\u25cf  spender :   Address    Inherited from  StandardTokenChangeApprovalOptions . spender  Defined in  wrappers/standardToken.ts:318  The account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "spender"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/", 
            "text": "API Reference\n \n \nChangeUpgradeSchemeProposalEventResult\n\n\nInterface: ChangeUpgradeSchemeProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:248\n\n\nindexed\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:252\n\n\nindexed\n\n\n\n\n\n\n_newUpgradeScheme\n\n\n\u25cf  _newUpgradeScheme\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:258\n\n\n\n\n\n\n_params\n\n\n\u25cf  _params\n:  \nHash\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:253\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:257\n\n\nindexed", 
            "title": "ChangeUpgradeSchemeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/#interface-changeupgradeschemeproposaleventresult", 
            "text": "", 
            "title": "Interface: ChangeUpgradeSchemeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/upgradeScheme.ts:248  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/upgradeScheme.ts:252  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_newupgradescheme", 
            "text": "\u25cf  _newUpgradeScheme :   Address    Defined in  wrappers/upgradeScheme.ts:258", 
            "title": "_newUpgradeScheme"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_params", 
            "text": "\u25cf  _params :   Hash    Defined in  wrappers/upgradeScheme.ts:253", 
            "title": "_params"
        }, 
        {
            "location": "/api/interfaces/ChangeUpgradeSchemeProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/upgradeScheme.ts:257  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/CollectEventResult/", 
            "text": "API Reference\n \n \nCollectEventResult\n\n\nInterface: CollectEventResult\n\n\nProperties\n\n\n\n\n_agreementId\n\n\n\u25cf  _agreementId\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:507\n\n\nindexed", 
            "title": "CollectEventResult"
        }, 
        {
            "location": "/api/interfaces/CollectEventResult/#interface-collecteventresult", 
            "text": "", 
            "title": "Interface: CollectEventResult"
        }, 
        {
            "location": "/api/interfaces/CollectEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/CollectEventResult/#_agreementid", 
            "text": "\u25cf  _agreementId :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:507  indexed", 
            "title": "_agreementId"
        }, 
        {
            "location": "/api/interfaces/CollectVestingAgreementConfig/", 
            "text": "API Reference\n \n \nCollectVestingAgreementConfig\n\n\nInterface: CollectVestingAgreementConfig\n\n\nProperties\n\n\n\n\nagreementId\n\n\n\u25cf  agreementId\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:593\n\n\nthe agreementId", 
            "title": "CollectVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/CollectVestingAgreementConfig/#interface-collectvestingagreementconfig", 
            "text": "", 
            "title": "Interface: CollectVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/CollectVestingAgreementConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/CollectVestingAgreementConfig/#agreementid", 
            "text": "\u25cf  agreementId :   number    Defined in  wrappers/vestingScheme.ts:593  the agreementId", 
            "title": "agreementId"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/", 
            "text": "API Reference\n \n \nCommonVestingAgreementConfig\n\n\nInterface: CommonVestingAgreementConfig\n\n\nHierarchy\n\n\nCommonVestingAgreementConfig\n\n\n\u21b3  \nCreateVestingAgreementConfig\n\n\n\u21b3  \nProposeVestingAgreementConfig\n\n\nProperties\n\n\n\n\namountPerPeriod\n\n\n\u25cf  amountPerPeriod\n:  \nBigNumber.BigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/vestingScheme.ts:531\n\n\nThe number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:514\n\n\nAddress of the recipient of the proposed agreement.\n\n\n\n\n\n\ncliffInPeriods\n\n\n\u25cf  cliffInPeriods\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:547\n\n\nThe minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.\n\n\n\n\n\n\nnumOfAgreedPeriods\n\n\n\u25cf  numOfAgreedPeriods\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:541\n\n\nmaximum number of periods that can be paid out. Must be greater than zero.\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:536\n\n\nnumber of blocks in a period. Must be greater than zero.\n\n\n\n\n\n\nreturnOnCancelAddress\n\n\n\u25cf  returnOnCancelAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:518\n\n\nWhere to send the tokens in case of cancellation\n\n\n\n\n\n\nsignaturesReqToCancel\n\n\n\u25cf  signaturesReqToCancel\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:552\n\n\nThe number of signatures required to cancel agreement. See signToCancel.\n\n\n\n\n\n\nsigners\n\n\n\u25cf  signers\n:  \nArray\n.\nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:557\n\n\nAn array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.\n\n\n\n\n\n\n\u00abOptional\u00bb startingBlock\n\n\n\u25cf  startingBlock\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:524\n\n\nOptional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.", 
            "title": "CommonVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#interface-commonvestingagreementconfig", 
            "text": "", 
            "title": "Interface: CommonVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#hierarchy", 
            "text": "CommonVestingAgreementConfig  \u21b3   CreateVestingAgreementConfig  \u21b3   ProposeVestingAgreementConfig", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#amountperperiod", 
            "text": "\u25cf  amountPerPeriod :   BigNumber.BigNumber \u23ae string    Defined in  wrappers/vestingScheme.ts:531  The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.", 
            "title": "amountPerPeriod"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Defined in  wrappers/vestingScheme.ts:514  Address of the recipient of the proposed agreement.", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#cliffinperiods", 
            "text": "\u25cf  cliffInPeriods :   number    Defined in  wrappers/vestingScheme.ts:547  The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.", 
            "title": "cliffInPeriods"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#numofagreedperiods", 
            "text": "\u25cf  numOfAgreedPeriods :   number    Defined in  wrappers/vestingScheme.ts:541  maximum number of periods that can be paid out. Must be greater than zero.", 
            "title": "numOfAgreedPeriods"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#periodlength", 
            "text": "\u25cf  periodLength :   number    Defined in  wrappers/vestingScheme.ts:536  number of blocks in a period. Must be greater than zero.", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#returnoncanceladdress", 
            "text": "\u25cf  returnOnCancelAddress :   Address    Defined in  wrappers/vestingScheme.ts:518  Where to send the tokens in case of cancellation", 
            "title": "returnOnCancelAddress"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#signaturesreqtocancel", 
            "text": "\u25cf  signaturesReqToCancel :   number    Defined in  wrappers/vestingScheme.ts:552  The number of signatures required to cancel agreement. See signToCancel.", 
            "title": "signaturesReqToCancel"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#signers", 
            "text": "\u25cf  signers :   Array . Address    Defined in  wrappers/vestingScheme.ts:557  An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.", 
            "title": "signers"
        }, 
        {
            "location": "/api/interfaces/CommonVestingAgreementConfig/#optional-startingblock", 
            "text": "\u25cf  startingBlock :   number    Defined in  wrappers/vestingScheme.ts:524  Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.", 
            "title": "\u00abOptional\u00bb startingBlock"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/", 
            "text": "API Reference\n \n \nContributionProposal\n\n\nInterface: ContributionProposal\n\n\nProperties\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:590\n\n\n\n\n\n\ncontributionDescriptionHash\n\n\n\u25cf  contributionDescriptionHash\n:  \nHash\n \n\n\nDefined in \nwrappers/contributionReward.ts:591\n\n\n\n\n\n\nethReward\n\n\n\u25cf  ethReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:592\n\n\n\n\n\n\nexecutionTime\n\n\n\u25cf  executionTime\n:  \nnumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:593\n\n\n\n\n\n\nexternalToken\n\n\n\u25cf  externalToken\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:594\n\n\n\n\n\n\nexternalTokenReward\n\n\n\u25cf  externalTokenReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:595\n\n\n\n\n\n\nnativeTokenReward\n\n\n\u25cf  nativeTokenReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:596\n\n\n\n\n\n\nnumberOfPeriods\n\n\n\u25cf  numberOfPeriods\n:  \nnumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:597\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nnumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:598\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/contributionReward.ts:589\n\n\n\n\n\n\nreputationChange\n\n\n\u25cf  reputationChange\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:599", 
            "title": "ContributionProposal"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#interface-contributionproposal", 
            "text": "", 
            "title": "Interface: ContributionProposal"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Defined in  wrappers/contributionReward.ts:590", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#contributiondescriptionhash", 
            "text": "\u25cf  contributionDescriptionHash :   Hash    Defined in  wrappers/contributionReward.ts:591", 
            "title": "contributionDescriptionHash"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#ethreward", 
            "text": "\u25cf  ethReward :   BigNumber    Defined in  wrappers/contributionReward.ts:592", 
            "title": "ethReward"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#executiontime", 
            "text": "\u25cf  executionTime :   number    Defined in  wrappers/contributionReward.ts:593", 
            "title": "executionTime"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#externaltoken", 
            "text": "\u25cf  externalToken :   Address    Defined in  wrappers/contributionReward.ts:594", 
            "title": "externalToken"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#externaltokenreward", 
            "text": "\u25cf  externalTokenReward :   BigNumber    Defined in  wrappers/contributionReward.ts:595", 
            "title": "externalTokenReward"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#nativetokenreward", 
            "text": "\u25cf  nativeTokenReward :   BigNumber    Defined in  wrappers/contributionReward.ts:596", 
            "title": "nativeTokenReward"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#numberofperiods", 
            "text": "\u25cf  numberOfPeriods :   number    Defined in  wrappers/contributionReward.ts:597", 
            "title": "numberOfPeriods"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#periodlength", 
            "text": "\u25cf  periodLength :   number    Defined in  wrappers/contributionReward.ts:598", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/contributionReward.ts:589", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/ContributionProposal/#reputationchange", 
            "text": "\u25cf  reputationChange :   BigNumber    Defined in  wrappers/contributionReward.ts:599", 
            "title": "reputationChange"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParams/", 
            "text": "API Reference\n \n \nContributionRewardParams\n\n\nInterface: ContributionRewardParams\n\n\nHierarchy\n\n\nStandardSchemeParams\n\n\n\u21b3 ContributionRewardParams\n\n\nProperties\n\n\n\n\norgNativeTokenFee\n\n\n\u25cf  orgNativeTokenFee\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:666\n\n\n\n\n\n\nvoteParametersHash\n\n\n\u25cf  voteParametersHash\n:  \nHash\n \n\n\nInherited from \nStandardSchemeParams\n.\nvoteParametersHash\n\n\nDefined in \niContractWrapperBase.ts:174\n\n\nHash of the voting machine parameters to use when voting on a proposal.\n\n\n\n\n\n\nvotingMachineAddress\n\n\n\u25cf  votingMachineAddress\n:  \nAddress\n \n\n\nInherited from \nStandardSchemeParams\n.\nvotingMachineAddress\n\n\nDefined in \niContractWrapperBase.ts:178\n\n\nAddress of the voting machine to use when voting on a proposal.", 
            "title": "ContributionRewardParams"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParams/#interface-contributionrewardparams", 
            "text": "", 
            "title": "Interface: ContributionRewardParams"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParams/#hierarchy", 
            "text": "StandardSchemeParams  \u21b3 ContributionRewardParams", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParams/#orgnativetokenfee", 
            "text": "\u25cf  orgNativeTokenFee :   BigNumber \u23ae string    Defined in  wrappers/contributionReward.ts:666", 
            "title": "orgNativeTokenFee"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParams/#voteparametershash", 
            "text": "\u25cf  voteParametersHash :   Hash    Inherited from  StandardSchemeParams . voteParametersHash  Defined in  iContractWrapperBase.ts:174  Hash of the voting machine parameters to use when voting on a proposal.", 
            "title": "voteParametersHash"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParams/#votingmachineaddress", 
            "text": "\u25cf  votingMachineAddress :   Address    Inherited from  StandardSchemeParams . votingMachineAddress  Defined in  iContractWrapperBase.ts:178  Address of the voting machine to use when voting on a proposal.", 
            "title": "votingMachineAddress"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParamsReturn/", 
            "text": "API Reference\n \n \nContributionRewardParamsReturn\n\n\nInterface: ContributionRewardParamsReturn\n\n\nHierarchy\n\n\nStandardSchemeParams\n\n\n\u21b3 ContributionRewardParamsReturn\n\n\nProperties\n\n\n\n\norgNativeTokenFee\n\n\n\u25cf  orgNativeTokenFee\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:670\n\n\n\n\n\n\nvoteParametersHash\n\n\n\u25cf  voteParametersHash\n:  \nHash\n \n\n\nInherited from \nStandardSchemeParams\n.\nvoteParametersHash\n\n\nDefined in \niContractWrapperBase.ts:174\n\n\nHash of the voting machine parameters to use when voting on a proposal.\n\n\n\n\n\n\nvotingMachineAddress\n\n\n\u25cf  votingMachineAddress\n:  \nAddress\n \n\n\nInherited from \nStandardSchemeParams\n.\nvotingMachineAddress\n\n\nDefined in \niContractWrapperBase.ts:178\n\n\nAddress of the voting machine to use when voting on a proposal.", 
            "title": "ContributionRewardParamsReturn"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParamsReturn/#interface-contributionrewardparamsreturn", 
            "text": "", 
            "title": "Interface: ContributionRewardParamsReturn"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParamsReturn/#hierarchy", 
            "text": "StandardSchemeParams  \u21b3 ContributionRewardParamsReturn", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParamsReturn/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParamsReturn/#orgnativetokenfee", 
            "text": "\u25cf  orgNativeTokenFee :   BigNumber    Defined in  wrappers/contributionReward.ts:670", 
            "title": "orgNativeTokenFee"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParamsReturn/#voteparametershash", 
            "text": "\u25cf  voteParametersHash :   Hash    Inherited from  StandardSchemeParams . voteParametersHash  Defined in  iContractWrapperBase.ts:174  Hash of the voting machine parameters to use when voting on a proposal.", 
            "title": "voteParametersHash"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardParamsReturn/#votingmachineaddress", 
            "text": "\u25cf  votingMachineAddress :   Address    Inherited from  StandardSchemeParams . votingMachineAddress  Defined in  iContractWrapperBase.ts:178  Address of the voting machine to use when voting on a proposal.", 
            "title": "votingMachineAddress"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/", 
            "text": "API Reference\n \n \nContributionRewardRedeemParams\n\n\nInterface: ContributionRewardRedeemParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:761\n\n\nThe avatar under which the proposal was made\n\n\n\n\n\n\n\u00abOptional\u00bb ethers\n\n\n\u25cf  ethers\n:  \nboolean\n \n\n\nDefined in \nwrappers/contributionReward.ts:776\n\n\ntrue to reward ethers Default is false\n\n\n\n\n\n\n\u00abOptional\u00bb externalTokens\n\n\n\u25cf  externalTokens\n:  \nboolean\n \n\n\nDefined in \nwrappers/contributionReward.ts:781\n\n\ntrue to reward external tokens Default is false\n\n\n\n\n\n\n\u00abOptional\u00bb nativeTokens\n\n\n\u25cf  nativeTokens\n:  \nboolean\n \n\n\nDefined in \nwrappers/contributionReward.ts:771\n\n\ntrue to reward native tokens Default is false\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:757\n\n\nThe reward proposal\n\n\n\n\n\n\n\u00abOptional\u00bb reputation\n\n\n\u25cf  reputation\n:  \nboolean\n \n\n\nDefined in \nwrappers/contributionReward.ts:766\n\n\ntrue to credit/debit reputation Default is false", 
            "title": "ContributionRewardRedeemParams"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#interface-contributionrewardredeemparams", 
            "text": "", 
            "title": "Interface: ContributionRewardRedeemParams"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/contributionReward.ts:761  The avatar under which the proposal was made", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#optional-ethers", 
            "text": "\u25cf  ethers :   boolean    Defined in  wrappers/contributionReward.ts:776  true to reward ethers Default is false", 
            "title": "\u00abOptional\u00bb ethers"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#optional-externaltokens", 
            "text": "\u25cf  externalTokens :   boolean    Defined in  wrappers/contributionReward.ts:781  true to reward external tokens Default is false", 
            "title": "\u00abOptional\u00bb externalTokens"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#optional-nativetokens", 
            "text": "\u25cf  nativeTokens :   boolean    Defined in  wrappers/contributionReward.ts:771  true to reward native tokens Default is false", 
            "title": "\u00abOptional\u00bb nativeTokens"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/contributionReward.ts:757  The reward proposal", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardRedeemParams/#optional-reputation", 
            "text": "\u25cf  reputation :   boolean    Defined in  wrappers/contributionReward.ts:766  true to credit/debit reputation Default is false", 
            "title": "\u00abOptional\u00bb reputation"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardSpecifiedRedemptionParams/", 
            "text": "API Reference\n \n \nContributionRewardSpecifiedRedemptionParams\n\n\nInterface: ContributionRewardSpecifiedRedemptionParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:677\n\n\nThe avatar under which the proposal was made\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:681\n\n\nThe reward proposal", 
            "title": "ContributionRewardSpecifiedRedemptionParams"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardSpecifiedRedemptionParams/#interface-contributionrewardspecifiedredemptionparams", 
            "text": "", 
            "title": "Interface: ContributionRewardSpecifiedRedemptionParams"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardSpecifiedRedemptionParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardSpecifiedRedemptionParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/contributionReward.ts:677  The avatar under which the proposal was made", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ContributionRewardSpecifiedRedemptionParams/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/contributionReward.ts:681  The reward proposal", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/", 
            "text": "API Reference\n \n \nControllerAddGlobalConstraintsEventLogEntry\n\n\nInterface: ControllerAddGlobalConstraintsEventLogEntry\n\n\nProperties\n\n\n\n\n_globalConstraint\n\n\n\u25cf  _globalConstraint\n:  \nAddress\n \n\n\nDefined in dao.ts:428\n\n\n\n\n\n\n_params\n\n\n\u25cf  _params\n:  \nHash\n \n\n\nDefined in dao.ts:429", 
            "title": "ControllerAddGlobalConstraintsEventLogEntry"
        }, 
        {
            "location": "/api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#interface-controlleraddglobalconstraintseventlogentry", 
            "text": "", 
            "title": "Interface: ControllerAddGlobalConstraintsEventLogEntry"
        }, 
        {
            "location": "/api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#_globalconstraint", 
            "text": "\u25cf  _globalConstraint :   Address    Defined in dao.ts:428", 
            "title": "_globalConstraint"
        }, 
        {
            "location": "/api/interfaces/ControllerAddGlobalConstraintsEventLogEntry/#_params", 
            "text": "\u25cf  _params :   Hash    Defined in dao.ts:429", 
            "title": "_params"
        }, 
        {
            "location": "/api/interfaces/ControllerRegisterSchemeEventLogEntry/", 
            "text": "API Reference\n \n \nControllerRegisterSchemeEventLogEntry\n\n\nInterface: ControllerRegisterSchemeEventLogEntry\n\n\nProperties\n\n\n\n\n_scheme\n\n\n\u25cf  _scheme\n:  \nAddress\n \n\n\nDefined in dao.ts:433", 
            "title": "ControllerRegisterSchemeEventLogEntry"
        }, 
        {
            "location": "/api/interfaces/ControllerRegisterSchemeEventLogEntry/#interface-controllerregisterschemeeventlogentry", 
            "text": "", 
            "title": "Interface: ControllerRegisterSchemeEventLogEntry"
        }, 
        {
            "location": "/api/interfaces/ControllerRegisterSchemeEventLogEntry/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ControllerRegisterSchemeEventLogEntry/#_scheme", 
            "text": "\u25cf  _scheme :   Address    Defined in dao.ts:433", 
            "title": "_scheme"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/", 
            "text": "API Reference\n \n \nCreateVestingAgreementConfig\n\n\nInterface: CreateVestingAgreementConfig\n\n\nHierarchy\n\n\nCommonVestingAgreementConfig\n\n\n\u21b3 CreateVestingAgreementConfig\n\n\nProperties\n\n\n\n\namountPerPeriod\n\n\n\u25cf  amountPerPeriod\n:  \nBigNumber.BigNumber\n\u23ae\nstring\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\namountPerPeriod\n\n\nDefined in \nwrappers/vestingScheme.ts:531\n\n\nThe number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nbeneficiaryAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:514\n\n\nAddress of the recipient of the proposed agreement.\n\n\n\n\n\n\ncliffInPeriods\n\n\n\u25cf  cliffInPeriods\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\ncliffInPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:547\n\n\nThe minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.\n\n\n\n\n\n\nnumOfAgreedPeriods\n\n\n\u25cf  numOfAgreedPeriods\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nnumOfAgreedPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:541\n\n\nmaximum number of periods that can be paid out. Must be greater than zero.\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nperiodLength\n\n\nDefined in \nwrappers/vestingScheme.ts:536\n\n\nnumber of blocks in a period. Must be greater than zero.\n\n\n\n\n\n\nreturnOnCancelAddress\n\n\n\u25cf  returnOnCancelAddress\n:  \nAddress\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nreturnOnCancelAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:518\n\n\nWhere to send the tokens in case of cancellation\n\n\n\n\n\n\nsignaturesReqToCancel\n\n\n\u25cf  signaturesReqToCancel\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nsignaturesReqToCancel\n\n\nDefined in \nwrappers/vestingScheme.ts:552\n\n\nThe number of signatures required to cancel agreement. See signToCancel.\n\n\n\n\n\n\nsigners\n\n\n\u25cf  signers\n:  \nArray\n.\nAddress\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nsigners\n\n\nDefined in \nwrappers/vestingScheme.ts:557\n\n\nAn array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.\n\n\n\n\n\n\n\u00abOptional\u00bb startingBlock\n\n\n\u25cf  startingBlock\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nstartingBlock\n\n\nDefined in \nwrappers/vestingScheme.ts:524\n\n\nOptional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.\n\n\n\n\n\n\ntoken\n\n\n\u25cf  token\n:  \nstring\n \n\n\nDefined in \nwrappers/vestingScheme.ts:565\n\n\nThe address of the token that will be used to pay for the creation of the agreement. The caller (msg.Sender) must have the funds to pay in that token.", 
            "title": "CreateVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#interface-createvestingagreementconfig", 
            "text": "", 
            "title": "Interface: CreateVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#hierarchy", 
            "text": "CommonVestingAgreementConfig  \u21b3 CreateVestingAgreementConfig", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#amountperperiod", 
            "text": "\u25cf  amountPerPeriod :   BigNumber.BigNumber \u23ae string    Inherited from  CommonVestingAgreementConfig . amountPerPeriod  Defined in  wrappers/vestingScheme.ts:531  The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.", 
            "title": "amountPerPeriod"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Inherited from  CommonVestingAgreementConfig . beneficiaryAddress  Defined in  wrappers/vestingScheme.ts:514  Address of the recipient of the proposed agreement.", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#cliffinperiods", 
            "text": "\u25cf  cliffInPeriods :   number    Inherited from  CommonVestingAgreementConfig . cliffInPeriods  Defined in  wrappers/vestingScheme.ts:547  The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.", 
            "title": "cliffInPeriods"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#numofagreedperiods", 
            "text": "\u25cf  numOfAgreedPeriods :   number    Inherited from  CommonVestingAgreementConfig . numOfAgreedPeriods  Defined in  wrappers/vestingScheme.ts:541  maximum number of periods that can be paid out. Must be greater than zero.", 
            "title": "numOfAgreedPeriods"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#periodlength", 
            "text": "\u25cf  periodLength :   number    Inherited from  CommonVestingAgreementConfig . periodLength  Defined in  wrappers/vestingScheme.ts:536  number of blocks in a period. Must be greater than zero.", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#returnoncanceladdress", 
            "text": "\u25cf  returnOnCancelAddress :   Address    Inherited from  CommonVestingAgreementConfig . returnOnCancelAddress  Defined in  wrappers/vestingScheme.ts:518  Where to send the tokens in case of cancellation", 
            "title": "returnOnCancelAddress"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#signaturesreqtocancel", 
            "text": "\u25cf  signaturesReqToCancel :   number    Inherited from  CommonVestingAgreementConfig . signaturesReqToCancel  Defined in  wrappers/vestingScheme.ts:552  The number of signatures required to cancel agreement. See signToCancel.", 
            "title": "signaturesReqToCancel"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#signers", 
            "text": "\u25cf  signers :   Array . Address    Inherited from  CommonVestingAgreementConfig . signers  Defined in  wrappers/vestingScheme.ts:557  An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.", 
            "title": "signers"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#optional-startingblock", 
            "text": "\u25cf  startingBlock :   number    Inherited from  CommonVestingAgreementConfig . startingBlock  Defined in  wrappers/vestingScheme.ts:524  Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.", 
            "title": "\u00abOptional\u00bb startingBlock"
        }, 
        {
            "location": "/api/interfaces/CreateVestingAgreementConfig/#token", 
            "text": "\u25cf  token :   string    Defined in  wrappers/vestingScheme.ts:565  The address of the token that will be used to pay for the creation of the agreement. The caller (msg.Sender) must have the funds to pay in that token.", 
            "title": "token"
        }, 
        {
            "location": "/api/interfaces/DaoGlobalConstraintInfo/", 
            "text": "API Reference\n \n \nDaoGlobalConstraintInfo\n\n\nInterface: DaoGlobalConstraintInfo\n\n\nReturned from DAO.getGlobalConstraints\n\n\nProperties\n\n\n\n\naddress\n\n\n\u25cf  address\n:  \nstring\n \n\n\nDefined in dao.ts:416\n\n\nGlobal constraint address\n\n\n\n\n\n\nparamsHash\n\n\n\u25cf  paramsHash\n:  \nstring\n \n\n\nDefined in dao.ts:424\n\n\nhash of the constraint parameters\n\n\n\n\n\n\nwrapper\n\n\n\u25cf  wrapper\n:  \nIContractWrapperBase\n \n\n\nDefined in dao.ts:420\n\n\nWrapper class for the constraint if it was deployed by the running version of Arc.js", 
            "title": "DaoGlobalConstraintInfo"
        }, 
        {
            "location": "/api/interfaces/DaoGlobalConstraintInfo/#interface-daoglobalconstraintinfo", 
            "text": "Returned from DAO.getGlobalConstraints", 
            "title": "Interface: DaoGlobalConstraintInfo"
        }, 
        {
            "location": "/api/interfaces/DaoGlobalConstraintInfo/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/DaoGlobalConstraintInfo/#address", 
            "text": "\u25cf  address :   string    Defined in dao.ts:416  Global constraint address", 
            "title": "address"
        }, 
        {
            "location": "/api/interfaces/DaoGlobalConstraintInfo/#paramshash", 
            "text": "\u25cf  paramsHash :   string    Defined in dao.ts:424  hash of the constraint parameters", 
            "title": "paramsHash"
        }, 
        {
            "location": "/api/interfaces/DaoGlobalConstraintInfo/#wrapper", 
            "text": "\u25cf  wrapper :   IContractWrapperBase    Defined in dao.ts:420  Wrapper class for the constraint if it was deployed by the running version of Arc.js", 
            "title": "wrapper"
        }, 
        {
            "location": "/api/interfaces/DaoSchemeInfo/", 
            "text": "API Reference\n \n \nDaoSchemeInfo\n\n\nInterface: DaoSchemeInfo\n\n\nReturned from DAO.getSchemes\n\n\nProperties\n\n\n\n\naddress\n\n\n\u25cf  address\n:  \nstring\n \n\n\nDefined in dao.ts:402\n\n\nScheme address\n\n\n\n\n\n\n\u00abOptional\u00bb wrapper\n\n\n\u25cf  wrapper\n:  \nIContractWrapperBase\n \n\n\nDefined in dao.ts:406\n\n\nWrapper class for the scheme if it was deployed by the running version of Arc.js", 
            "title": "DaoSchemeInfo"
        }, 
        {
            "location": "/api/interfaces/DaoSchemeInfo/#interface-daoschemeinfo", 
            "text": "Returned from DAO.getSchemes", 
            "title": "Interface: DaoSchemeInfo"
        }, 
        {
            "location": "/api/interfaces/DaoSchemeInfo/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/DaoSchemeInfo/#address", 
            "text": "\u25cf  address :   string    Defined in dao.ts:402  Scheme address", 
            "title": "address"
        }, 
        {
            "location": "/api/interfaces/DaoSchemeInfo/#optional-wrapper", 
            "text": "\u25cf  wrapper :   IContractWrapperBase    Defined in dao.ts:406  Wrapper class for the scheme if it was deployed by the running version of Arc.js", 
            "title": "\u00abOptional\u00bb wrapper"
        }, 
        {
            "location": "/api/interfaces/DaoTokenBurnOptions/", 
            "text": "API Reference\n \n \nDaoTokenBurnOptions\n\n\nInterface: DaoTokenBurnOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/daoToken.ts:379\n\n\nAmount to burn", 
            "title": "DaoTokenBurnOptions"
        }, 
        {
            "location": "/api/interfaces/DaoTokenBurnOptions/#interface-daotokenburnoptions", 
            "text": "", 
            "title": "Interface: DaoTokenBurnOptions"
        }, 
        {
            "location": "/api/interfaces/DaoTokenBurnOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/DaoTokenBurnOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/daoToken.ts:379  Amount to burn", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/DaoTokenMintOptions/", 
            "text": "API Reference\n \n \nDaoTokenMintOptions\n\n\nInterface: DaoTokenMintOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/daoToken.ts:372\n\n\nAmount to mint\n\n\n\n\n\n\nrecipient\n\n\n\u25cf  recipient\n:  \nAddress\n \n\n\nDefined in \nwrappers/daoToken.ts:368\n\n\nThe token recipient", 
            "title": "DaoTokenMintOptions"
        }, 
        {
            "location": "/api/interfaces/DaoTokenMintOptions/#interface-daotokenmintoptions", 
            "text": "", 
            "title": "Interface: DaoTokenMintOptions"
        }, 
        {
            "location": "/api/interfaces/DaoTokenMintOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/DaoTokenMintOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/daoToken.ts:372  Amount to mint", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/DaoTokenMintOptions/#recipient", 
            "text": "\u25cf  recipient :   Address    Defined in  wrappers/daoToken.ts:368  The token recipient", 
            "title": "recipient"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/", 
            "text": "API Reference\n \n \nEntityFetcher\n\n\nInterface: EntityFetcher\n\n\nReturned by EntityFetcherFactory\n.\n\n\nType parameters\n\n\nTDest\n\n\nTSrc\n\n\nProperties\n\n\n\n\nget\n\n\n\u25cf  get\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:434\n\n\nGet an array of \nTDest\n from Web3, given the filter supplied to the EntityFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of \nget\n. If \nrequiredDepth\n is set then will not invoke the callback until the transaction has been mined to the requiredDepth.\n\n\nType declaration\n\n\n\u25ba(callback?: \nEntityGetCallback\nTDest\n, requiredDepth?: \nnumber\n): \nPromise\n.\nArray\n.\nTDest\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nEntityGetCallback\nTDest\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nTDest\n\n\n\n\n\n\nsubscribe\n\n\n\u25cf  subscribe\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:453\n\n\nWatch for \nTDest\ns from Web3, given the filter supplied to the EntityFetcherFactory. The Pub.Sub is published once per event firing. \nsubscribe\n returns the subscription on which you must remember to call \nunsubscribe\n when you are done watching. If \nrequiredDepth\n is set then will not invoke the callback until the transaction has been mined to the requiredDepth.\n\n\nSupply whatever name you want for \neventName\n. This enables you to scope event handlers across event types and schemes.\n\n\nType declaration\n\n\n\u25ba(eventName: \nstring\n, callback?: \nEntityWatchSubscriptionCallback\nTDest\n, requiredDepth?: \nnumber\n): \nIEventSubscription\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\neventName\n\n\nstring\n\n\n-\n\n\n\n\n\n\ncallback\n\n\nEntityWatchSubscriptionCallback\nTDest\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nIEventSubscription\n\n\n\n\n\n\nwatch\n\n\n\u25cf  watch\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:441\n\n\nWatch for \nTDest\ns from Web3, given the filter supplied to the EntityFetcherFactory. The callback is invoked once per event firing. If \nrequiredDepth\n is set then will not invoke the callback until the transaction has been mined to the requiredDepth.\n\n\nType declaration\n\n\n\u25ba(callback: \nEntityWatchCallback\nTDest\n, requiredDepth?: \nnumber\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nEntityWatchCallback\nTDest\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\nMethods\n\n\n\n\nstopWatching\n\n\n\u25ba \nstopWatching\n(callback?: \nfnVoid\n): \nvoid\n\n\nDefined in \nweb3EventService.ts:460\n\n\nStop watching the event.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nfnVoid\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nstopWatchingAsync\n\n\n\u25ba \nstopWatchingAsync\n(): \nPromise\n.\nvoid\n\n\nDefined in \nweb3EventService.ts:465\n\n\nAsynchronously stop watching the event, for environments where synchronous methods are not allowed.\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "EntityFetcher"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#interface-entityfetcher", 
            "text": "Returned by EntityFetcherFactory .", 
            "title": "Interface: EntityFetcher"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#tdest", 
            "text": "", 
            "title": "TDest"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#tsrc", 
            "text": "", 
            "title": "TSrc"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#get", 
            "text": "\u25cf  get :   function    Defined in  web3EventService.ts:434  Get an array of  TDest  from Web3, given the filter supplied to the EntityFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of  get . If  requiredDepth  is set then will not invoke the callback until the transaction has been mined to the requiredDepth.", 
            "title": "get"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#type-declaration", 
            "text": "\u25ba(callback?:  EntityGetCallback TDest , requiredDepth?:  number ):  Promise . Array . TDest  Parameters:     Param  Type  Description      callback  EntityGetCallback TDest  -    requiredDepth  number  -     Returns:   Promise . Array . TDest", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#subscribe", 
            "text": "\u25cf  subscribe :   function    Defined in  web3EventService.ts:453  Watch for  TDest s from Web3, given the filter supplied to the EntityFetcherFactory. The Pub.Sub is published once per event firing.  subscribe  returns the subscription on which you must remember to call  unsubscribe  when you are done watching. If  requiredDepth  is set then will not invoke the callback until the transaction has been mined to the requiredDepth.  Supply whatever name you want for  eventName . This enables you to scope event handlers across event types and schemes.", 
            "title": "subscribe"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#type-declaration_1", 
            "text": "\u25ba(eventName:  string , callback?:  EntityWatchSubscriptionCallback TDest , requiredDepth?:  number ):  IEventSubscription  Parameters:     Param  Type  Description      eventName  string  -    callback  EntityWatchSubscriptionCallback TDest  -    requiredDepth  number  -     Returns:   IEventSubscription", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#watch", 
            "text": "\u25cf  watch :   function    Defined in  web3EventService.ts:441  Watch for  TDest s from Web3, given the filter supplied to the EntityFetcherFactory. The callback is invoked once per event firing. If  requiredDepth  is set then will not invoke the callback until the transaction has been mined to the requiredDepth.", 
            "title": "watch"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#type-declaration_2", 
            "text": "\u25ba(callback:  EntityWatchCallback TDest , requiredDepth?:  number ):  void  Parameters:     Param  Type  Description      callback  EntityWatchCallback TDest  -    requiredDepth  number  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#stopwatching", 
            "text": "\u25ba  stopWatching (callback?:  fnVoid ):  void  Defined in  web3EventService.ts:460  Stop watching the event.  Parameters:     Param  Type  Description      callback  fnVoid  -     Returns:   void", 
            "title": "stopWatching"
        }, 
        {
            "location": "/api/interfaces/EntityFetcher/#stopwatchingasync", 
            "text": "\u25ba  stopWatchingAsync ():  Promise . void  Defined in  web3EventService.ts:465  Asynchronously stop watching the event, for environments where synchronous methods are not allowed.  Returns:   Promise . void", 
            "title": "stopWatchingAsync"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/", 
            "text": "API Reference\n \n \nEventFetcher\n\n\nInterface: EventFetcher\n\n\nReturned by EventFetcherFactory\n. See web3 documentation article for more information about events: \nhttps://github.com/ethereum/wiki/wiki/JavaScript-API#contract-events\n\n\ntype\n: TEventArgs The type of the \nargs\n object.\n\n\nType parameters\n\n\nTEventArgs\n\n\nProperties\n\n\n\n\nget\n\n\n\u25cf  get\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:519\n\n\nGet an array of \nDecodedLogEntryEvent\n from Web3, given the filter supplied to the EventFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of \nget\n. If \nrequiredDepth\n is set then will not invoke the callback until the transaction has been mined to the requiredDepth.\n\n\nType declaration\n\n\n\u25ba(callback?: \nEventGetCallback\nTEventArgs\n, requiredDepth?: \nnumber\n): \nPromise\n.\nArray\n.\nDecodedLogEntryEvent\n.\nTEventArgs\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nEventGetCallback\nTEventArgs\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nDecodedLogEntryEvent\n.\nTEventArgs\n\n\n\n\n\n\nsubscribe\n\n\n\u25cf  subscribe\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:540\n\n\nWatch for \nDecodedLogEntryEvent\ns from Web3, given the filter supplied to the EventFetcherFactory. The Pub.Sub is published once per event firing. \nsubscribe\n returns the subscription on which you must remember to call \nunsubscribe\n when you are done watching. If \nrequiredDepth\n is set then will not invoke the callback until the transaction has been mined to the requiredDepth.\n\n\nSupply whatever name you want for \neventName\n. This enables you to scope event handlers across event types and schemes.\n\n\nType declaration\n\n\n\u25ba(eventName: \nstring\n, callback?: \nEventWatchSubscriptionCallback\nTEventArgs\n, requiredDepth?: \nnumber\n): \nIEventSubscription\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\neventName\n\n\nstring\n\n\n-\n\n\n\n\n\n\ncallback\n\n\nEventWatchSubscriptionCallback\nTEventArgs\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nIEventSubscription\n\n\n\n\n\n\nwatch\n\n\n\u25cf  watch\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:528\n\n\nWatch for \nDecodedLogEntryEvent\ns from Web3, given the filter supplied to the EventFetcherFactory. The callback is invoked once per event firing. If \nrequiredDepth\n is set then will not invoke the callback until the transaction has been mined to the requiredDepth.\n\n\nType declaration\n\n\n\u25ba(callback: \nEventWatchCallback\nTEventArgs\n, requiredDepth?: \nnumber\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nEventWatchCallback\nTEventArgs\n\n\n-\n\n\n\n\n\n\nrequiredDepth\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\nMethods\n\n\n\n\nstopWatching\n\n\n\u25ba \nstopWatching\n(callback?: \nfnVoid\n): \nvoid\n\n\nDefined in \nweb3EventService.ts:547\n\n\nStop watching the event.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nfnVoid\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nstopWatchingAsync\n\n\n\u25ba \nstopWatchingAsync\n(): \nPromise\n.\nvoid\n\n\nDefined in \nweb3EventService.ts:552\n\n\nAsynchronously stop watching the event, for environments where synchronous methods are not allowed.\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "EventFetcher"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#interface-eventfetcher", 
            "text": "Returned by EventFetcherFactory . See web3 documentation article for more information about events:  https://github.com/ethereum/wiki/wiki/JavaScript-API#contract-events  type : TEventArgs The type of the  args  object.", 
            "title": "Interface: EventFetcher"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#teventargs", 
            "text": "", 
            "title": "TEventArgs"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#get", 
            "text": "\u25cf  get :   function    Defined in  web3EventService.ts:519  Get an array of  DecodedLogEntryEvent  from Web3, given the filter supplied to the EventFetcherFactory. You may supply a callback, which will be given the array, or you may accept the promise of the array from the return value of  get . If  requiredDepth  is set then will not invoke the callback until the transaction has been mined to the requiredDepth.", 
            "title": "get"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#type-declaration", 
            "text": "\u25ba(callback?:  EventGetCallback TEventArgs , requiredDepth?:  number ):  Promise . Array . DecodedLogEntryEvent . TEventArgs  Parameters:     Param  Type  Description      callback  EventGetCallback TEventArgs  -    requiredDepth  number  -     Returns:   Promise . Array . DecodedLogEntryEvent . TEventArgs", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#subscribe", 
            "text": "\u25cf  subscribe :   function    Defined in  web3EventService.ts:540  Watch for  DecodedLogEntryEvent s from Web3, given the filter supplied to the EventFetcherFactory. The Pub.Sub is published once per event firing.  subscribe  returns the subscription on which you must remember to call  unsubscribe  when you are done watching. If  requiredDepth  is set then will not invoke the callback until the transaction has been mined to the requiredDepth.  Supply whatever name you want for  eventName . This enables you to scope event handlers across event types and schemes.", 
            "title": "subscribe"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#type-declaration_1", 
            "text": "\u25ba(eventName:  string , callback?:  EventWatchSubscriptionCallback TEventArgs , requiredDepth?:  number ):  IEventSubscription  Parameters:     Param  Type  Description      eventName  string  -    callback  EventWatchSubscriptionCallback TEventArgs  -    requiredDepth  number  -     Returns:   IEventSubscription", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#watch", 
            "text": "\u25cf  watch :   function    Defined in  web3EventService.ts:528  Watch for  DecodedLogEntryEvent s from Web3, given the filter supplied to the EventFetcherFactory. The callback is invoked once per event firing. If  requiredDepth  is set then will not invoke the callback until the transaction has been mined to the requiredDepth.", 
            "title": "watch"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#type-declaration_2", 
            "text": "\u25ba(callback:  EventWatchCallback TEventArgs , requiredDepth?:  number ):  void  Parameters:     Param  Type  Description      callback  EventWatchCallback TEventArgs  -    requiredDepth  number  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#stopwatching", 
            "text": "\u25ba  stopWatching (callback?:  fnVoid ):  void  Defined in  web3EventService.ts:547  Stop watching the event.  Parameters:     Param  Type  Description      callback  fnVoid  -     Returns:   void", 
            "title": "stopWatching"
        }, 
        {
            "location": "/api/interfaces/EventFetcher/#stopwatchingasync", 
            "text": "\u25ba  stopWatchingAsync ():  Promise . void  Defined in  web3EventService.ts:552  Asynchronously stop watching the event, for environments where synchronous methods are not allowed.  Returns:   Promise . void", 
            "title": "stopWatchingAsync"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/", 
            "text": "API Reference\n \n \nEventFetcherFilterObject\n\n\nInterface: EventFetcherFilterObject\n\n\nOptions supplied to \nEventFetcherFactory\n and thence to \nget and\nwatch`.\n\n\nHierarchy\n\n\nEventFetcherFilterObject\n\n\n\u21b3  \nGetParticipantsOptions\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb address\n\n\n\u25cf  address\n:  \nstring\n \n\n\nDefined in \nweb3EventService.ts:576\n\n\n\n\n\n\n\u00abOptional\u00bb fromBlock\n\n\n\u25cf  fromBlock\n:  \nnumber\n\u23ae\nstring\n \n\n\nDefined in \nweb3EventService.ts:574\n\n\n\n\n\n\n\u00abOptional\u00bb suppressDups\n\n\n\u25cf  suppressDups\n:  \nboolean\n \n\n\nDefined in \nweb3EventService.ts:582\n\n\ntrue to suppress duplicate events (see \nhttps://github.com/ethereum/web3.js/issues/398)\n). The default is true.\n\n\n\n\n\n\n\u00abOptional\u00bb toBlock\n\n\n\u25cf  toBlock\n:  \nnumber\n\u23ae\nstring\n \n\n\nDefined in \nweb3EventService.ts:575\n\n\n\n\n\n\n\u00abOptional\u00bb topics\n\n\n\u25cf  topics\n:  \nArray\n.\nLogTopic\n \n\n\nDefined in \nweb3EventService.ts:577", 
            "title": "EventFetcherFilterObject"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#interface-eventfetcherfilterobject", 
            "text": "Options supplied to  EventFetcherFactory  and thence to  get and watch`.", 
            "title": "Interface: EventFetcherFilterObject"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#hierarchy", 
            "text": "EventFetcherFilterObject  \u21b3   GetParticipantsOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#optional-address", 
            "text": "\u25cf  address :   string    Defined in  web3EventService.ts:576", 
            "title": "\u00abOptional\u00bb address"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#optional-fromblock", 
            "text": "\u25cf  fromBlock :   number \u23ae string    Defined in  web3EventService.ts:574", 
            "title": "\u00abOptional\u00bb fromBlock"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#optional-suppressdups", 
            "text": "\u25cf  suppressDups :   boolean    Defined in  web3EventService.ts:582  true to suppress duplicate events (see  https://github.com/ethereum/web3.js/issues/398) ). The default is true.", 
            "title": "\u00abOptional\u00bb suppressDups"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#optional-toblock", 
            "text": "\u25cf  toBlock :   number \u23ae string    Defined in  web3EventService.ts:575", 
            "title": "\u00abOptional\u00bb toBlock"
        }, 
        {
            "location": "/api/interfaces/EventFetcherFilterObject/#optional-topics", 
            "text": "\u25cf  topics :   Array . LogTopic    Defined in  web3EventService.ts:577", 
            "title": "\u00abOptional\u00bb topics"
        }, 
        {
            "location": "/api/interfaces/EventHasPropertyId/", 
            "text": "API Reference\n \n \nEventHasPropertyId\n\n\nInterface: EventHasPropertyId\n\n\nProperties\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nproposalService.ts:134", 
            "title": "EventHasPropertyId"
        }, 
        {
            "location": "/api/interfaces/EventHasPropertyId/#interface-eventhaspropertyid", 
            "text": "", 
            "title": "Interface: EventHasPropertyId"
        }, 
        {
            "location": "/api/interfaces/EventHasPropertyId/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/EventHasPropertyId/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  proposalService.ts:134", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/EventPreProcessorReturn/", 
            "text": "API Reference\n \n \nEventPreProcessorReturn\n\n\nInterface: EventPreProcessorReturn\n\n\nType parameters\n\n\nTEventArgs\n\n\nProperties\n\n\n\n\nerror\n\n\n\u25cf  error\n:  \nError\n \n\n\nDefined in \nweb3EventService.ts:382\n\n\n\n\n\n\nlog\n\n\n\u25cf  log\n:  \nArray\n.\nDecodedLogEntryEvent\n.\nTEventArgs\n \n\n\nDefined in \nweb3EventService.ts:382", 
            "title": "EventPreProcessorReturn"
        }, 
        {
            "location": "/api/interfaces/EventPreProcessorReturn/#interface-eventpreprocessorreturn", 
            "text": "", 
            "title": "Interface: EventPreProcessorReturn"
        }, 
        {
            "location": "/api/interfaces/EventPreProcessorReturn/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/interfaces/EventPreProcessorReturn/#teventargs", 
            "text": "", 
            "title": "TEventArgs"
        }, 
        {
            "location": "/api/interfaces/EventPreProcessorReturn/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/EventPreProcessorReturn/#error", 
            "text": "\u25cf  error :   Error    Defined in  web3EventService.ts:382", 
            "title": "error"
        }, 
        {
            "location": "/api/interfaces/EventPreProcessorReturn/#log", 
            "text": "\u25cf  log :   Array . DecodedLogEntryEvent . TEventArgs    Defined in  web3EventService.ts:382", 
            "title": "log"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/", 
            "text": "API Reference\n \n \nExecutedGenesisProposal\n\n\nInterface: ExecutedGenesisProposal\n\n\nHierarchy\n\n\nGenesisProtocolProposal\n\n\n\u21b3 ExecutedGenesisProposal\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nInherited from \nGenesisProtocolProposal\n.\navatarAddress\n\n\nDefined in \nwrappers/genesisProtocol.ts:1333\n\n\n\n\n\n\nboostedPhaseTime\n\n\n\u25cf  boostedPhaseTime\n:  \nnumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nboostedPhaseTime\n\n\nDefined in \nwrappers/genesisProtocol.ts:1337\n\n\nin seconds\n\n\n\n\n\n\ncurrentBoostedVotePeriodLimit\n\n\n\u25cf  currentBoostedVotePeriodLimit\n:  \nnumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\ncurrentBoostedVotePeriodLimit\n\n\nDefined in \nwrappers/genesisProtocol.ts:1341\n\n\nin seconds\n\n\n\n\n\n\ndaoBountyRemain\n\n\n\u25cf  daoBountyRemain\n:  \nBigNumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\ndaoBountyRemain\n\n\nDefined in \nwrappers/genesisProtocol.ts:1342\n\n\n\n\n\n\ndecision\n\n\n\u25cf  decision\n:  \nBinaryVoteResult\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1324\n\n\n\n\n\n\nexecutable\n\n\n\u25cf  executable\n:  \nAddress\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nexecutable\n\n\nDefined in \nwrappers/genesisProtocol.ts:1343\n\n\n\n\n\n\nexecutionState\n\n\n\u25cf  executionState\n:  \nExecutionState\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1329\n\n\n\n\n\n\nlostReputation\n\n\n\u25cf  lostReputation\n:  \nBigNumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nlostReputation\n\n\nDefined in \nwrappers/genesisProtocol.ts:1344\n\n\n\n\n\n\nnumOfChoices\n\n\n\u25cf  numOfChoices\n:  \nnumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nnumOfChoices\n\n\nDefined in \nwrappers/genesisProtocol.ts:1345\n\n\n\n\n\n\nparamsHash\n\n\n\u25cf  paramsHash\n:  \nHash\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nparamsHash\n\n\nDefined in \nwrappers/genesisProtocol.ts:1346\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nproposalId\n\n\nDefined in \nwrappers/genesisProtocol.ts:1347\n\n\n\n\n\n\nproposer\n\n\n\u25cf  proposer\n:  \nAddress\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nproposer\n\n\nDefined in \nwrappers/genesisProtocol.ts:1348\n\n\n\n\n\n\nstate\n\n\n\u25cf  state\n:  \nProposalState\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nstate\n\n\nDefined in \nwrappers/genesisProtocol.ts:1349\n\n\n\n\n\n\nsubmittedTime\n\n\n\u25cf  submittedTime\n:  \nnumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nsubmittedTime\n\n\nDefined in \nwrappers/genesisProtocol.ts:1353\n\n\nin seconds\n\n\n\n\n\n\ntotalReputation\n\n\n\u25cf  totalReputation\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1328\n\n\ntotal reputation in the DAO at the time the proposal is created in the voting machine\n\n\n\n\n\n\nvotersStakes\n\n\n\u25cf  votersStakes\n:  \nBigNumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nvotersStakes\n\n\nDefined in \nwrappers/genesisProtocol.ts:1354\n\n\n\n\n\n\nwinningVote\n\n\n\u25cf  winningVote\n:  \nnumber\n \n\n\nInherited from \nGenesisProtocolProposal\n.\nwinningVote\n\n\nDefined in \nwrappers/genesisProtocol.ts:1355", 
            "title": "ExecutedGenesisProposal"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#interface-executedgenesisproposal", 
            "text": "", 
            "title": "Interface: ExecutedGenesisProposal"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#hierarchy", 
            "text": "GenesisProtocolProposal  \u21b3 ExecutedGenesisProposal", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Inherited from  GenesisProtocolProposal . avatarAddress  Defined in  wrappers/genesisProtocol.ts:1333", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#boostedphasetime", 
            "text": "\u25cf  boostedPhaseTime :   number    Inherited from  GenesisProtocolProposal . boostedPhaseTime  Defined in  wrappers/genesisProtocol.ts:1337  in seconds", 
            "title": "boostedPhaseTime"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#currentboostedvoteperiodlimit", 
            "text": "\u25cf  currentBoostedVotePeriodLimit :   number    Inherited from  GenesisProtocolProposal . currentBoostedVotePeriodLimit  Defined in  wrappers/genesisProtocol.ts:1341  in seconds", 
            "title": "currentBoostedVotePeriodLimit"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#daobountyremain", 
            "text": "\u25cf  daoBountyRemain :   BigNumber    Inherited from  GenesisProtocolProposal . daoBountyRemain  Defined in  wrappers/genesisProtocol.ts:1342", 
            "title": "daoBountyRemain"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#decision", 
            "text": "\u25cf  decision :   BinaryVoteResult    Defined in  wrappers/genesisProtocol.ts:1324", 
            "title": "decision"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#executable", 
            "text": "\u25cf  executable :   Address    Inherited from  GenesisProtocolProposal . executable  Defined in  wrappers/genesisProtocol.ts:1343", 
            "title": "executable"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#executionstate", 
            "text": "\u25cf  executionState :   ExecutionState    Defined in  wrappers/genesisProtocol.ts:1329", 
            "title": "executionState"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#lostreputation", 
            "text": "\u25cf  lostReputation :   BigNumber    Inherited from  GenesisProtocolProposal . lostReputation  Defined in  wrappers/genesisProtocol.ts:1344", 
            "title": "lostReputation"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#numofchoices", 
            "text": "\u25cf  numOfChoices :   number    Inherited from  GenesisProtocolProposal . numOfChoices  Defined in  wrappers/genesisProtocol.ts:1345", 
            "title": "numOfChoices"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#paramshash", 
            "text": "\u25cf  paramsHash :   Hash    Inherited from  GenesisProtocolProposal . paramsHash  Defined in  wrappers/genesisProtocol.ts:1346", 
            "title": "paramsHash"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Inherited from  GenesisProtocolProposal . proposalId  Defined in  wrappers/genesisProtocol.ts:1347", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#proposer", 
            "text": "\u25cf  proposer :   Address    Inherited from  GenesisProtocolProposal . proposer  Defined in  wrappers/genesisProtocol.ts:1348", 
            "title": "proposer"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#state", 
            "text": "\u25cf  state :   ProposalState    Inherited from  GenesisProtocolProposal . state  Defined in  wrappers/genesisProtocol.ts:1349", 
            "title": "state"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#submittedtime", 
            "text": "\u25cf  submittedTime :   number    Inherited from  GenesisProtocolProposal . submittedTime  Defined in  wrappers/genesisProtocol.ts:1353  in seconds", 
            "title": "submittedTime"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#totalreputation", 
            "text": "\u25cf  totalReputation :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1328  total reputation in the DAO at the time the proposal is created in the voting machine", 
            "title": "totalReputation"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#votersstakes", 
            "text": "\u25cf  votersStakes :   BigNumber    Inherited from  GenesisProtocolProposal . votersStakes  Defined in  wrappers/genesisProtocol.ts:1354", 
            "title": "votersStakes"
        }, 
        {
            "location": "/api/interfaces/ExecutedGenesisProposal/#winningvote", 
            "text": "\u25cf  winningVote :   number    Inherited from  GenesisProtocolProposal . winningVote  Defined in  wrappers/genesisProtocol.ts:1355", 
            "title": "winningVote"
        }, 
        {
            "location": "/api/interfaces/ExecutedProposal/", 
            "text": "API Reference\n \n \nExecutedProposal\n\n\nInterface: ExecutedProposal\n\n\nProperties\n\n\n\n\ndecision\n\n\n\u25cf  decision\n:  \nnumber\n \n\n\nDefined in \nproposalService.ts:150\n\n\nthe vote choice that won.\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nproposalService.ts:154\n\n\nThe id of the proposal that was executed.\n\n\n\n\n\n\ntotalReputation\n\n\n\u25cf  totalReputation\n:  \nBigNumber\n \n\n\nDefined in \nproposalService.ts:158\n\n\nThe total reputation in the DAO at the time the proposal was executed", 
            "title": "ExecutedProposal"
        }, 
        {
            "location": "/api/interfaces/ExecutedProposal/#interface-executedproposal", 
            "text": "", 
            "title": "Interface: ExecutedProposal"
        }, 
        {
            "location": "/api/interfaces/ExecutedProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ExecutedProposal/#decision", 
            "text": "\u25cf  decision :   number    Defined in  proposalService.ts:150  the vote choice that won.", 
            "title": "decision"
        }, 
        {
            "location": "/api/interfaces/ExecutedProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  proposalService.ts:154  The id of the proposal that was executed.", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/ExecutedProposal/#totalreputation", 
            "text": "\u25cf  totalReputation :   BigNumber    Defined in  proposalService.ts:158  The total reputation in the DAO at the time the proposal was executed", 
            "title": "totalReputation"
        }, 
        {
            "location": "/api/interfaces/ExecuteProposalEventResult/", 
            "text": "API Reference\n \n \nExecuteProposalEventResult\n\n\nInterface: ExecuteProposalEventResult\n\n\nfired by voting machines\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:110\n\n\nindexed\n\n\n\n\n\n\n_decision\n\n\n\u25cf  _decision\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:114\n\n\nthe vote choice that won.\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:118\n\n\nindexed\n\n\n\n\n\n\n_totalReputation\n\n\n\u25cf  _totalReputation\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:122\n\n\nThe total reputation in the DAO at the time the proposal was executed", 
            "title": "ExecuteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/ExecuteProposalEventResult/#interface-executeproposaleventresult", 
            "text": "fired by voting machines", 
            "title": "Interface: ExecuteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/ExecuteProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ExecuteProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/iIntVoteInterface.ts:110  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/ExecuteProposalEventResult/#_decision", 
            "text": "\u25cf  _decision :   BigNumber    Defined in  wrappers/iIntVoteInterface.ts:114  the vote choice that won.", 
            "title": "_decision"
        }, 
        {
            "location": "/api/interfaces/ExecuteProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/iIntVoteInterface.ts:118  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/ExecuteProposalEventResult/#_totalreputation", 
            "text": "\u25cf  _totalReputation :   BigNumber    Defined in  wrappers/iIntVoteInterface.ts:122  The total reputation in the DAO at the time the proposal was executed", 
            "title": "_totalReputation"
        }, 
        {
            "location": "/api/interfaces/ForgedDaoInfo/", 
            "text": "API Reference\n \n \nForgedDaoInfo\n\n\nInterface: ForgedDaoInfo\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nDefined in scripts/createGenesisDao.ts:34\n\n\n\n\n\n\ndaoCreatorInst\n\n\n\u25cf  daoCreatorInst\n:  \nany\n \n\n\nDefined in scripts/createGenesisDao.ts:36\n\n\n\n\n\n\norgName\n\n\n\u25cf  orgName\n:  \nstring\n \n\n\nDefined in scripts/createGenesisDao.ts:35", 
            "title": "ForgedDaoInfo"
        }, 
        {
            "location": "/api/interfaces/ForgedDaoInfo/#interface-forgeddaoinfo", 
            "text": "", 
            "title": "Interface: ForgedDaoInfo"
        }, 
        {
            "location": "/api/interfaces/ForgedDaoInfo/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ForgedDaoInfo/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Defined in scripts/createGenesisDao.ts:34", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/ForgedDaoInfo/#daocreatorinst", 
            "text": "\u25cf  daoCreatorInst :   any    Defined in scripts/createGenesisDao.ts:36", 
            "title": "daoCreatorInst"
        }, 
        {
            "location": "/api/interfaces/ForgedDaoInfo/#orgname", 
            "text": "\u25cf  orgName :   string    Defined in scripts/createGenesisDao.ts:35", 
            "title": "orgName"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/", 
            "text": "API Reference\n \n \nForgeOrgConfig\n\n\nInterface: ForgeOrgConfig\n\n\noptions for DaoCreator.forgeOrg\n\n\nHierarchy\n\n\nForgeOrgConfig\n\n\n\u21b3  \nNewDaoConfig\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb founders\n\n\n\u25cf  founders\n:  \nArray\n.\nFounderConfig\n \n\n\nDefined in \nwrappers/daoCreator.ts:438\n\n\nOptional array describing founders. Default is [].\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:421\n\n\nThe name of the new DAO.\n\n\n\n\n\n\n\u00abOptional\u00bb tokenCap\n\n\n\u25cf  tokenCap\n:  \nBigNumber.BigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:425\n\n\nOptional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap.\n\n\n\n\n\n\ntokenName\n\n\n\u25cf  tokenName\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:429\n\n\nThe name of the token to be associated with the DAO\n\n\n\n\n\n\ntokenSymbol\n\n\n\u25cf  tokenSymbol\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:433\n\n\nThe symbol of the token to be associated with the DAO\n\n\n\n\n\n\n\u00abOptional\u00bb universalController\n\n\n\u25cf  universalController\n:  \nboolean\n \n\n\nDefined in \nwrappers/daoCreator.ts:443\n\n\ntrue to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true.", 
            "title": "ForgeOrgConfig"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#interface-forgeorgconfig", 
            "text": "options for DaoCreator.forgeOrg", 
            "title": "Interface: ForgeOrgConfig"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#hierarchy", 
            "text": "ForgeOrgConfig  \u21b3   NewDaoConfig", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#optional-founders", 
            "text": "\u25cf  founders :   Array . FounderConfig    Defined in  wrappers/daoCreator.ts:438  Optional array describing founders. Default is [].", 
            "title": "\u00abOptional\u00bb founders"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#name", 
            "text": "\u25cf  name :   string    Defined in  wrappers/daoCreator.ts:421  The name of the new DAO.", 
            "title": "name"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#optional-tokencap", 
            "text": "\u25cf  tokenCap :   BigNumber.BigNumber \u23ae string    Defined in  wrappers/daoCreator.ts:425  Optional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap.", 
            "title": "\u00abOptional\u00bb tokenCap"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#tokenname", 
            "text": "\u25cf  tokenName :   string    Defined in  wrappers/daoCreator.ts:429  The name of the token to be associated with the DAO", 
            "title": "tokenName"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#tokensymbol", 
            "text": "\u25cf  tokenSymbol :   string    Defined in  wrappers/daoCreator.ts:433  The symbol of the token to be associated with the DAO", 
            "title": "tokenSymbol"
        }, 
        {
            "location": "/api/interfaces/ForgeOrgConfig/#optional-universalcontroller", 
            "text": "\u25cf  universalController :   boolean    Defined in  wrappers/daoCreator.ts:443  true to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true.", 
            "title": "\u00abOptional\u00bb universalController"
        }, 
        {
            "location": "/api/interfaces/FounderConfig/", 
            "text": "API Reference\n \n \nFounderConfig\n\n\nInterface: FounderConfig\n\n\nProperties\n\n\n\n\naddress\n\n\n\u25cf  address\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:379\n\n\nFounders' address\n\n\n\n\n\n\nreputation\n\n\n\u25cf  reputation\n:  \nstring\n\u23ae\nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/daoCreator.ts:389\n\n\nstring | BigNumber reputation amount to be awarded to each founder. Should be given in Wei.\n\n\n\n\n\n\ntokens\n\n\n\u25cf  tokens\n:  \nstring\n\u23ae\nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/daoCreator.ts:384\n\n\nstring | BigNumber token amount to be awarded to each founder. Should be given in Wei.", 
            "title": "FounderConfig"
        }, 
        {
            "location": "/api/interfaces/FounderConfig/#interface-founderconfig", 
            "text": "", 
            "title": "Interface: FounderConfig"
        }, 
        {
            "location": "/api/interfaces/FounderConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/FounderConfig/#address", 
            "text": "\u25cf  address :   string    Defined in  wrappers/daoCreator.ts:379  Founders' address", 
            "title": "address"
        }, 
        {
            "location": "/api/interfaces/FounderConfig/#reputation", 
            "text": "\u25cf  reputation :   string \u23ae BigNumber.BigNumber    Defined in  wrappers/daoCreator.ts:389  string | BigNumber reputation amount to be awarded to each founder. Should be given in Wei.", 
            "title": "reputation"
        }, 
        {
            "location": "/api/interfaces/FounderConfig/#tokens", 
            "text": "\u25cf  tokens :   string \u23ae BigNumber.BigNumber    Defined in  wrappers/daoCreator.ts:384  string | BigNumber token amount to be awarded to each founder. Should be given in Wei.", 
            "title": "tokens"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolDaoTokenBalances/", 
            "text": "API Reference\n \n \nGenesisProtocolDaoTokenBalances\n\n\nInterface: GenesisProtocolDaoTokenBalances\n\n\nProperties\n\n\n\n\nnativeToken\n\n\n\u25cf  nativeToken\n:  \nany\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1287\n\n\nThe native token's truffle contract\n\n\n\n\n\n\nnativeTokenBalance\n\n\n\u25cf  nativeTokenBalance\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1291\n\n\nThe avatar's balance off native tokens, in Wei\n\n\n\n\n\n\nstakingToken\n\n\n\u25cf  stakingToken\n:  \nany\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1295\n\n\nThe standard token's truffle contract\n\n\n\n\n\n\nstakingTokenBalance\n\n\n\u25cf  stakingTokenBalance\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1299\n\n\nThe avatar's balance of staking tokens, in Wei", 
            "title": "GenesisProtocolDaoTokenBalances"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolDaoTokenBalances/#interface-genesisprotocoldaotokenbalances", 
            "text": "", 
            "title": "Interface: GenesisProtocolDaoTokenBalances"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolDaoTokenBalances/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolDaoTokenBalances/#nativetoken", 
            "text": "\u25cf  nativeToken :   any    Defined in  wrappers/genesisProtocol.ts:1287  The native token's truffle contract", 
            "title": "nativeToken"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolDaoTokenBalances/#nativetokenbalance", 
            "text": "\u25cf  nativeTokenBalance :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1291  The avatar's balance off native tokens, in Wei", 
            "title": "nativeTokenBalance"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolDaoTokenBalances/#stakingtoken", 
            "text": "\u25cf  stakingToken :   any    Defined in  wrappers/genesisProtocol.ts:1295  The standard token's truffle contract", 
            "title": "stakingToken"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolDaoTokenBalances/#stakingtokenbalance", 
            "text": "\u25cf  stakingTokenBalance :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1299  The avatar's balance of staking tokens, in Wei", 
            "title": "stakingTokenBalance"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/", 
            "text": "API Reference\n \n \nGenesisProtocolParams\n\n\nInterface: GenesisProtocolParams\n\n\nProperties\n\n\n\n\nboostedVotePeriodLimit\n\n\n\u25cf  boostedVotePeriodLimit\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:988\n\n\nThe time limit in seconds for a proposal to be in the boosted phase, inclusive of the quietEndingPeriod, in seconds. Default is 259200 (three days).\n\n\n\n\n\n\ndaoBountyConst\n\n\n\u25cf  daoBountyConst\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:994\n\n\nMultiple of a winning stake to be rewarded as bounty. Must be greater than stakerFeeRatioForVoters and less than 2*stakerFeeRatioForVoters. Default is 75.\n\n\n\n\n\n\ndaoBountyLimit\n\n\n\u25cf  daoBountyLimit\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:999\n\n\nUpper bound on the total bounty amount on a proposal. Default is 100, converted to Wei.\n\n\n\n\n\n\nminimumStakingFee\n\n\n\u25cf  minimumStakingFee\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1005\n\n\nA floor on the staking fee which is normally computed using \nGenesisProtocolParams.stakerFeeRatioForVoters\n, in Wei. Default is 0.\n\n\n\n\n\n\npreBoostedVotePeriodLimit\n\n\n\u25cf  preBoostedVotePeriodLimit\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1013\n\n\nThe time limit in seconds that a proposal can be in the preBoosted phase before it will be automatically closed, in seconds, with a winning vote of NO, regardless of the actual value of the winning vote at the time expiration. Note an attempt must be made to execute before the proposal state will actually change. Default is 1814400 (three weeks).\n\n\n\n\n\n\npreBoostedVoteRequiredPercentage\n\n\n\u25cf  preBoostedVoteRequiredPercentage\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1022\n\n\nThe percent of the DAO's total supply of reputation that, when exceeded by the amount of reputation behind a vote (yes or no), will result in the immediate execution of the proposal, during either the preboosted or boosted phases. Must be greater than zero and less than or equal to 100. Default is 50.\n\n\n\n\n\n\nproposingRepRewardConstA\n\n\n\u25cf  proposingRepRewardConstA\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1028\n\n\nConstant A in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.\n\n\n\n\n\n\nproposingRepRewardConstB\n\n\n\u25cf  proposingRepRewardConstB\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1034\n\n\nConstant B in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.\n\n\n\n\n\n\nquietEndingPeriod\n\n\n\u25cf  quietEndingPeriod\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1044\n\n\nThe duration, in seconds, at the end of the boosted phase during which any vote that changes the outcome of a proposal will cause the boosted phase to be extended by the amount of the quietEndingPeriod. If the quietEndingPeriod expires then the proposal expires and may be executed. It is a moving window: If the winning vote switches during the quietEndingPeriod then it restarts at the point in time when the vote switched, thus extending the boosted period. Default is 86400 (one day).\n\n\n\n\n\n\nstakerFeeRatioForVoters\n\n\n\u25cf  stakerFeeRatioForVoters\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1052\n\n\nFor executed proposals, the percentage of staked tokens that is rewarded to all voters, regardless of the vote outcome, the staked vote outcome, or how the voter voted. Voters share this amount in proportion to the amount of reputation they voted. Must be between 0 and 100. Default is 50.\n\n\n\n\n\n\nthresholdConstA\n\n\n\u25cf  thresholdConstA\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1060\n\n\nConstant A in the threshold calculation, in Wei. See \nGenesisProtocolWrapper.getThreshold\n. If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be between 0 and 100000000 (converted to Wei). Default is 7, converted to Wei.\n\n\n\n\n\n\nthresholdConstB\n\n\n\u25cf  thresholdConstB\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1068\n\n\nConstant B in the threshold calculation. See \nGenesisProtocolWrapper.getThreshold\n. If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be greater than zero and less than or equal to 100000000. Default is 3.\n\n\n\n\n\n\nvotersGainRepRatioFromLostRep\n\n\n\u25cf  votersGainRepRatioFromLostRep\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1075\n\n\nThe percentage of losing pre-boosted voters' lost reputation (see votersReputationLossRatio) rewarded to winning pre-boosted voters. Must be between 0 and 100. Default is 80.\n\n\n\n\n\n\nvotersReputationLossRatio\n\n\n\u25cf  votersReputationLossRatio\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1081\n\n\nThe percentage of reputation deducted from losing pre-boosted voters. Must be between 0 and 100. Default is 1.", 
            "title": "GenesisProtocolParams"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#interface-genesisprotocolparams", 
            "text": "", 
            "title": "Interface: GenesisProtocolParams"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#boostedvoteperiodlimit", 
            "text": "\u25cf  boostedVotePeriodLimit :   number    Defined in  wrappers/genesisProtocol.ts:988  The time limit in seconds for a proposal to be in the boosted phase, inclusive of the quietEndingPeriod, in seconds. Default is 259200 (three days).", 
            "title": "boostedVotePeriodLimit"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#daobountyconst", 
            "text": "\u25cf  daoBountyConst :   number    Defined in  wrappers/genesisProtocol.ts:994  Multiple of a winning stake to be rewarded as bounty. Must be greater than stakerFeeRatioForVoters and less than 2*stakerFeeRatioForVoters. Default is 75.", 
            "title": "daoBountyConst"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#daobountylimit", 
            "text": "\u25cf  daoBountyLimit :   BigNumber \u23ae string    Defined in  wrappers/genesisProtocol.ts:999  Upper bound on the total bounty amount on a proposal. Default is 100, converted to Wei.", 
            "title": "daoBountyLimit"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#minimumstakingfee", 
            "text": "\u25cf  minimumStakingFee :   BigNumber \u23ae string    Defined in  wrappers/genesisProtocol.ts:1005  A floor on the staking fee which is normally computed using  GenesisProtocolParams.stakerFeeRatioForVoters , in Wei. Default is 0.", 
            "title": "minimumStakingFee"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#preboostedvoteperiodlimit", 
            "text": "\u25cf  preBoostedVotePeriodLimit :   number    Defined in  wrappers/genesisProtocol.ts:1013  The time limit in seconds that a proposal can be in the preBoosted phase before it will be automatically closed, in seconds, with a winning vote of NO, regardless of the actual value of the winning vote at the time expiration. Note an attempt must be made to execute before the proposal state will actually change. Default is 1814400 (three weeks).", 
            "title": "preBoostedVotePeriodLimit"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#preboostedvoterequiredpercentage", 
            "text": "\u25cf  preBoostedVoteRequiredPercentage :   number    Defined in  wrappers/genesisProtocol.ts:1022  The percent of the DAO's total supply of reputation that, when exceeded by the amount of reputation behind a vote (yes or no), will result in the immediate execution of the proposal, during either the preboosted or boosted phases. Must be greater than zero and less than or equal to 100. Default is 50.", 
            "title": "preBoostedVoteRequiredPercentage"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#proposingreprewardconsta", 
            "text": "\u25cf  proposingRepRewardConstA :   number    Defined in  wrappers/genesisProtocol.ts:1028  Constant A in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.", 
            "title": "proposingRepRewardConstA"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#proposingreprewardconstb", 
            "text": "\u25cf  proposingRepRewardConstB :   number    Defined in  wrappers/genesisProtocol.ts:1034  Constant B in the calculation of the proposer's reputation reward. Must be between 0 and 100000000. Default is 5.", 
            "title": "proposingRepRewardConstB"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#quietendingperiod", 
            "text": "\u25cf  quietEndingPeriod :   number    Defined in  wrappers/genesisProtocol.ts:1044  The duration, in seconds, at the end of the boosted phase during which any vote that changes the outcome of a proposal will cause the boosted phase to be extended by the amount of the quietEndingPeriod. If the quietEndingPeriod expires then the proposal expires and may be executed. It is a moving window: If the winning vote switches during the quietEndingPeriod then it restarts at the point in time when the vote switched, thus extending the boosted period. Default is 86400 (one day).", 
            "title": "quietEndingPeriod"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#stakerfeeratioforvoters", 
            "text": "\u25cf  stakerFeeRatioForVoters :   number    Defined in  wrappers/genesisProtocol.ts:1052  For executed proposals, the percentage of staked tokens that is rewarded to all voters, regardless of the vote outcome, the staked vote outcome, or how the voter voted. Voters share this amount in proportion to the amount of reputation they voted. Must be between 0 and 100. Default is 50.", 
            "title": "stakerFeeRatioForVoters"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#thresholdconsta", 
            "text": "\u25cf  thresholdConstA :   BigNumber \u23ae string    Defined in  wrappers/genesisProtocol.ts:1060  Constant A in the threshold calculation, in Wei. See  GenesisProtocolWrapper.getThreshold . If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be between 0 and 100000000 (converted to Wei). Default is 7, converted to Wei.", 
            "title": "thresholdConstA"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#thresholdconstb", 
            "text": "\u25cf  thresholdConstB :   number    Defined in  wrappers/genesisProtocol.ts:1068  Constant B in the threshold calculation. See  GenesisProtocolWrapper.getThreshold . If the difference between Yes and No votes exceeds the threshold, then the proposal may be boosted. Must be greater than zero and less than or equal to 100000000. Default is 3.", 
            "title": "thresholdConstB"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#votersgainrepratiofromlostrep", 
            "text": "\u25cf  votersGainRepRatioFromLostRep :   number    Defined in  wrappers/genesisProtocol.ts:1075  The percentage of losing pre-boosted voters' lost reputation (see votersReputationLossRatio) rewarded to winning pre-boosted voters. Must be between 0 and 100. Default is 80.", 
            "title": "votersGainRepRatioFromLostRep"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolParams/#votersreputationlossratio", 
            "text": "\u25cf  votersReputationLossRatio :   number    Defined in  wrappers/genesisProtocol.ts:1081  The percentage of reputation deducted from losing pre-boosted voters. Must be between 0 and 100. Default is 1.", 
            "title": "votersReputationLossRatio"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/", 
            "text": "API Reference\n \n \nGenesisProtocolProposal\n\n\nInterface: GenesisProtocolProposal\n\n\nHierarchy\n\n\nGenesisProtocolProposal\n\n\n\u21b3  \nExecutedGenesisProposal\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1333\n\n\n\n\n\n\nboostedPhaseTime\n\n\n\u25cf  boostedPhaseTime\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1337\n\n\nin seconds\n\n\n\n\n\n\ncurrentBoostedVotePeriodLimit\n\n\n\u25cf  currentBoostedVotePeriodLimit\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1341\n\n\nin seconds\n\n\n\n\n\n\ndaoBountyRemain\n\n\n\u25cf  daoBountyRemain\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1342\n\n\n\n\n\n\nexecutable\n\n\n\u25cf  executable\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1343\n\n\n\n\n\n\nlostReputation\n\n\n\u25cf  lostReputation\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1344\n\n\n\n\n\n\nnumOfChoices\n\n\n\u25cf  numOfChoices\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1345\n\n\n\n\n\n\nparamsHash\n\n\n\u25cf  paramsHash\n:  \nHash\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1346\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1347\n\n\n\n\n\n\nproposer\n\n\n\u25cf  proposer\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1348\n\n\n\n\n\n\nstate\n\n\n\u25cf  state\n:  \nProposalState\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1349\n\n\n\n\n\n\nsubmittedTime\n\n\n\u25cf  submittedTime\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1353\n\n\nin seconds\n\n\n\n\n\n\nvotersStakes\n\n\n\u25cf  votersStakes\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1354\n\n\n\n\n\n\nwinningVote\n\n\n\u25cf  winningVote\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1355", 
            "title": "GenesisProtocolProposal"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#interface-genesisprotocolproposal", 
            "text": "", 
            "title": "Interface: GenesisProtocolProposal"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#hierarchy", 
            "text": "GenesisProtocolProposal  \u21b3   ExecutedGenesisProposal", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Defined in  wrappers/genesisProtocol.ts:1333", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#boostedphasetime", 
            "text": "\u25cf  boostedPhaseTime :   number    Defined in  wrappers/genesisProtocol.ts:1337  in seconds", 
            "title": "boostedPhaseTime"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#currentboostedvoteperiodlimit", 
            "text": "\u25cf  currentBoostedVotePeriodLimit :   number    Defined in  wrappers/genesisProtocol.ts:1341  in seconds", 
            "title": "currentBoostedVotePeriodLimit"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#daobountyremain", 
            "text": "\u25cf  daoBountyRemain :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1342", 
            "title": "daoBountyRemain"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#executable", 
            "text": "\u25cf  executable :   Address    Defined in  wrappers/genesisProtocol.ts:1343", 
            "title": "executable"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#lostreputation", 
            "text": "\u25cf  lostReputation :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1344", 
            "title": "lostReputation"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#numofchoices", 
            "text": "\u25cf  numOfChoices :   number    Defined in  wrappers/genesisProtocol.ts:1345", 
            "title": "numOfChoices"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#paramshash", 
            "text": "\u25cf  paramsHash :   Hash    Defined in  wrappers/genesisProtocol.ts:1346", 
            "title": "paramsHash"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/genesisProtocol.ts:1347", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#proposer", 
            "text": "\u25cf  proposer :   Address    Defined in  wrappers/genesisProtocol.ts:1348", 
            "title": "proposer"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#state", 
            "text": "\u25cf  state :   ProposalState    Defined in  wrappers/genesisProtocol.ts:1349", 
            "title": "state"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#submittedtime", 
            "text": "\u25cf  submittedTime :   number    Defined in  wrappers/genesisProtocol.ts:1353  in seconds", 
            "title": "submittedTime"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#votersstakes", 
            "text": "\u25cf  votersStakes :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1354", 
            "title": "votersStakes"
        }, 
        {
            "location": "/api/interfaces/GenesisProtocolProposal/#winningvote", 
            "text": "\u25cf  winningVote :   number    Defined in  wrappers/genesisProtocol.ts:1355", 
            "title": "winningVote"
        }, 
        {
            "location": "/api/interfaces/GetAgreementParams/", 
            "text": "API Reference\n \n \nGetAgreementParams\n\n\nInterface: GetAgreementParams\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb agreementId\n\n\n\u25cf  agreementId\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:604\n\n\nOptional agreement Id\n\n\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:600\n\n\nThe address of the avatar", 
            "title": "GetAgreementParams"
        }, 
        {
            "location": "/api/interfaces/GetAgreementParams/#interface-getagreementparams", 
            "text": "", 
            "title": "Interface: GetAgreementParams"
        }, 
        {
            "location": "/api/interfaces/GetAgreementParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetAgreementParams/#optional-agreementid", 
            "text": "\u25cf  agreementId :   number    Defined in  wrappers/vestingScheme.ts:604  Optional agreement Id", 
            "title": "\u00abOptional\u00bb agreementId"
        }, 
        {
            "location": "/api/interfaces/GetAgreementParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/vestingScheme.ts:600  The address of the avatar", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/GetAllowedRangeOfChoicesResult/", 
            "text": "API Reference\n \n \nGetAllowedRangeOfChoicesResult\n\n\nInterface: GetAllowedRangeOfChoicesResult\n\n\nProperties\n\n\n\n\nmaxVote\n\n\n\u25cf  maxVote\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:147\n\n\n\n\n\n\nminVote\n\n\n\u25cf  minVote\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:146", 
            "title": "GetAllowedRangeOfChoicesResult"
        }, 
        {
            "location": "/api/interfaces/GetAllowedRangeOfChoicesResult/#interface-getallowedrangeofchoicesresult", 
            "text": "", 
            "title": "Interface: GetAllowedRangeOfChoicesResult"
        }, 
        {
            "location": "/api/interfaces/GetAllowedRangeOfChoicesResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetAllowedRangeOfChoicesResult/#maxvote", 
            "text": "\u25cf  maxVote :   number    Defined in  wrappers/iIntVoteInterface.ts:147", 
            "title": "maxVote"
        }, 
        {
            "location": "/api/interfaces/GetAllowedRangeOfChoicesResult/#minvote", 
            "text": "\u25cf  minVote :   number    Defined in  wrappers/iIntVoteInterface.ts:146", 
            "title": "minVote"
        }, 
        {
            "location": "/api/interfaces/GetBeneficiaryRewardsParams/", 
            "text": "API Reference\n \n \nGetBeneficiaryRewardsParams\n\n\nInterface: GetBeneficiaryRewardsParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:688\n\n\nThe avatar under which the proposals were created\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:692\n\n\nThe agent who is to receive the rewards\n\n\n\n\n\n\n\u00abOptional\u00bb proposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:696\n\n\nOptionally filter on the given proposalId", 
            "title": "GetBeneficiaryRewardsParams"
        }, 
        {
            "location": "/api/interfaces/GetBeneficiaryRewardsParams/#interface-getbeneficiaryrewardsparams", 
            "text": "", 
            "title": "Interface: GetBeneficiaryRewardsParams"
        }, 
        {
            "location": "/api/interfaces/GetBeneficiaryRewardsParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetBeneficiaryRewardsParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/contributionReward.ts:688  The avatar under which the proposals were created", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/GetBeneficiaryRewardsParams/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   string    Defined in  wrappers/contributionReward.ts:692  The agent who is to receive the rewards", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/GetBeneficiaryRewardsParams/#optional-proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/contributionReward.ts:696  Optionally filter on the given proposalId", 
            "title": "\u00abOptional\u00bb proposalId"
        }, 
        {
            "location": "/api/interfaces/GetDaosOptions/", 
            "text": "API Reference\n \n \nGetDaosOptions\n\n\nInterface: GetDaosOptions\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb daoCreatorAddress\n\n\n\u25cf  daoCreatorAddress\n:  \nAddress\n \n\n\nDefined in dao.ts:439", 
            "title": "GetDaosOptions"
        }, 
        {
            "location": "/api/interfaces/GetDaosOptions/#interface-getdaosoptions", 
            "text": "", 
            "title": "Interface: GetDaosOptions"
        }, 
        {
            "location": "/api/interfaces/GetDaosOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetDaosOptions/#optional-daocreatoraddress", 
            "text": "\u25cf  daoCreatorAddress :   Address    Defined in dao.ts:439", 
            "title": "\u00abOptional\u00bb daoCreatorAddress"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/", 
            "text": "API Reference\n \n \nGetGenesisProtocolParamsResult\n\n\nInterface: GetGenesisProtocolParamsResult\n\n\nProperties\n\n\n\n\nboostedVotePeriodLimit\n\n\n\u25cf  boostedVotePeriodLimit\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1085\n\n\n\n\n\n\ndaoBountyConst\n\n\n\u25cf  daoBountyConst\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1086\n\n\n\n\n\n\ndaoBountyLimit\n\n\n\u25cf  daoBountyLimit\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1087\n\n\n\n\n\n\nminimumStakingFee\n\n\n\u25cf  minimumStakingFee\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1088\n\n\n\n\n\n\npreBoostedVotePeriodLimit\n\n\n\u25cf  preBoostedVotePeriodLimit\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1089\n\n\n\n\n\n\npreBoostedVoteRequiredPercentage\n\n\n\u25cf  preBoostedVoteRequiredPercentage\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1090\n\n\n\n\n\n\nproposingRepRewardConstA\n\n\n\u25cf  proposingRepRewardConstA\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1091\n\n\n\n\n\n\nproposingRepRewardConstB\n\n\n\u25cf  proposingRepRewardConstB\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1092\n\n\n\n\n\n\nquietEndingPeriod\n\n\n\u25cf  quietEndingPeriod\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1093\n\n\n\n\n\n\nstakerFeeRatioForVoters\n\n\n\u25cf  stakerFeeRatioForVoters\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1094\n\n\n\n\n\n\nthresholdConstA\n\n\n\u25cf  thresholdConstA\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1095\n\n\n\n\n\n\nthresholdConstB\n\n\n\u25cf  thresholdConstB\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1096\n\n\n\n\n\n\nvotersGainRepRatioFromLostRep\n\n\n\u25cf  votersGainRepRatioFromLostRep\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1097\n\n\n\n\n\n\nvotersReputationLossRatio\n\n\n\u25cf  votersReputationLossRatio\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1098", 
            "title": "GetGenesisProtocolParamsResult"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#interface-getgenesisprotocolparamsresult", 
            "text": "", 
            "title": "Interface: GetGenesisProtocolParamsResult"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#boostedvoteperiodlimit", 
            "text": "\u25cf  boostedVotePeriodLimit :   number    Defined in  wrappers/genesisProtocol.ts:1085", 
            "title": "boostedVotePeriodLimit"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#daobountyconst", 
            "text": "\u25cf  daoBountyConst :   number    Defined in  wrappers/genesisProtocol.ts:1086", 
            "title": "daoBountyConst"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#daobountylimit", 
            "text": "\u25cf  daoBountyLimit :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1087", 
            "title": "daoBountyLimit"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#minimumstakingfee", 
            "text": "\u25cf  minimumStakingFee :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1088", 
            "title": "minimumStakingFee"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#preboostedvoteperiodlimit", 
            "text": "\u25cf  preBoostedVotePeriodLimit :   number    Defined in  wrappers/genesisProtocol.ts:1089", 
            "title": "preBoostedVotePeriodLimit"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#preboostedvoterequiredpercentage", 
            "text": "\u25cf  preBoostedVoteRequiredPercentage :   number    Defined in  wrappers/genesisProtocol.ts:1090", 
            "title": "preBoostedVoteRequiredPercentage"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#proposingreprewardconsta", 
            "text": "\u25cf  proposingRepRewardConstA :   number    Defined in  wrappers/genesisProtocol.ts:1091", 
            "title": "proposingRepRewardConstA"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#proposingreprewardconstb", 
            "text": "\u25cf  proposingRepRewardConstB :   number    Defined in  wrappers/genesisProtocol.ts:1092", 
            "title": "proposingRepRewardConstB"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#quietendingperiod", 
            "text": "\u25cf  quietEndingPeriod :   number    Defined in  wrappers/genesisProtocol.ts:1093", 
            "title": "quietEndingPeriod"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#stakerfeeratioforvoters", 
            "text": "\u25cf  stakerFeeRatioForVoters :   number    Defined in  wrappers/genesisProtocol.ts:1094", 
            "title": "stakerFeeRatioForVoters"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#thresholdconsta", 
            "text": "\u25cf  thresholdConstA :   BigNumber \u23ae string    Defined in  wrappers/genesisProtocol.ts:1095", 
            "title": "thresholdConstA"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#thresholdconstb", 
            "text": "\u25cf  thresholdConstB :   number    Defined in  wrappers/genesisProtocol.ts:1096", 
            "title": "thresholdConstB"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#votersgainrepratiofromlostrep", 
            "text": "\u25cf  votersGainRepRatioFromLostRep :   number    Defined in  wrappers/genesisProtocol.ts:1097", 
            "title": "votersGainRepRatioFromLostRep"
        }, 
        {
            "location": "/api/interfaces/GetGenesisProtocolParamsResult/#votersreputationlossratio", 
            "text": "\u25cf  votersReputationLossRatio :   number    Defined in  wrappers/genesisProtocol.ts:1098", 
            "title": "votersReputationLossRatio"
        }, 
        {
            "location": "/api/interfaces/GetNumberOfChoicesConfig/", 
            "text": "API Reference\n \n \nGetNumberOfChoicesConfig\n\n\nInterface: GetNumberOfChoicesConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1377\n\n\nunique hash of proposal index", 
            "title": "GetNumberOfChoicesConfig"
        }, 
        {
            "location": "/api/interfaces/GetNumberOfChoicesConfig/#interface-getnumberofchoicesconfig", 
            "text": "", 
            "title": "Interface: GetNumberOfChoicesConfig"
        }, 
        {
            "location": "/api/interfaces/GetNumberOfChoicesConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetNumberOfChoicesConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1377  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/", 
            "text": "API Reference\n \n \nGetParticipantsOptions\n\n\nInterface: GetParticipantsOptions\n\n\nHierarchy\n\n\nEventFetcherFilterObject\n\n\n\u21b3 GetParticipantsOptions\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb address\n\n\n\u25cf  address\n:  \nstring\n \n\n\nInherited from \nEventFetcherFilterObject\n.\naddress\n\n\nDefined in \nweb3EventService.ts:576\n\n\n\n\n\n\n\u00abOptional\u00bb fromBlock\n\n\n\u25cf  fromBlock\n:  \nnumber\n\u23ae\nstring\n \n\n\nInherited from \nEventFetcherFilterObject\n.\nfromBlock\n\n\nDefined in \nweb3EventService.ts:574\n\n\n\n\n\n\n\u00abOptional\u00bb participantAddress\n\n\n\u25cf  participantAddress\n:  \nAddress\n \n\n\nDefined in dao.ts:446\n\n\noptional address of a single participant to filter on\n\n\n\n\n\n\n\u00abOptional\u00bb returnReputations\n\n\n\u25cf  returnReputations\n:  \nboolean\n \n\n\nDefined in dao.ts:450\n\n\ntrue to retrieve and return the current reputation of each participant\n\n\n\n\n\n\n\u00abOptional\u00bb suppressDups\n\n\n\u25cf  suppressDups\n:  \nboolean\n \n\n\nInherited from \nEventFetcherFilterObject\n.\nsuppressDups\n\n\nDefined in \nweb3EventService.ts:582\n\n\ntrue to suppress duplicate events (see \nhttps://github.com/ethereum/web3.js/issues/398)\n). The default is true.\n\n\n\n\n\n\n\u00abOptional\u00bb toBlock\n\n\n\u25cf  toBlock\n:  \nnumber\n\u23ae\nstring\n \n\n\nInherited from \nEventFetcherFilterObject\n.\ntoBlock\n\n\nDefined in \nweb3EventService.ts:575\n\n\n\n\n\n\n\u00abOptional\u00bb topics\n\n\n\u25cf  topics\n:  \nArray\n.\nLogTopic\n \n\n\nInherited from \nEventFetcherFilterObject\n.\ntopics\n\n\nDefined in \nweb3EventService.ts:577", 
            "title": "GetParticipantsOptions"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#interface-getparticipantsoptions", 
            "text": "", 
            "title": "Interface: GetParticipantsOptions"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#hierarchy", 
            "text": "EventFetcherFilterObject  \u21b3 GetParticipantsOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#optional-address", 
            "text": "\u25cf  address :   string    Inherited from  EventFetcherFilterObject . address  Defined in  web3EventService.ts:576", 
            "title": "\u00abOptional\u00bb address"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#optional-fromblock", 
            "text": "\u25cf  fromBlock :   number \u23ae string    Inherited from  EventFetcherFilterObject . fromBlock  Defined in  web3EventService.ts:574", 
            "title": "\u00abOptional\u00bb fromBlock"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#optional-participantaddress", 
            "text": "\u25cf  participantAddress :   Address    Defined in dao.ts:446  optional address of a single participant to filter on", 
            "title": "\u00abOptional\u00bb participantAddress"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#optional-returnreputations", 
            "text": "\u25cf  returnReputations :   boolean    Defined in dao.ts:450  true to retrieve and return the current reputation of each participant", 
            "title": "\u00abOptional\u00bb returnReputations"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#optional-suppressdups", 
            "text": "\u25cf  suppressDups :   boolean    Inherited from  EventFetcherFilterObject . suppressDups  Defined in  web3EventService.ts:582  true to suppress duplicate events (see  https://github.com/ethereum/web3.js/issues/398) ). The default is true.", 
            "title": "\u00abOptional\u00bb suppressDups"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#optional-toblock", 
            "text": "\u25cf  toBlock :   number \u23ae string    Inherited from  EventFetcherFilterObject . toBlock  Defined in  web3EventService.ts:575", 
            "title": "\u00abOptional\u00bb toBlock"
        }, 
        {
            "location": "/api/interfaces/GetParticipantsOptions/#optional-topics", 
            "text": "\u25cf  topics :   Array . LogTopic    Inherited from  EventFetcherFilterObject . topics  Defined in  web3EventService.ts:577", 
            "title": "\u00abOptional\u00bb topics"
        }, 
        {
            "location": "/api/interfaces/GetProposalAvatarConfig/", 
            "text": "API Reference\n \n \nGetProposalAvatarConfig\n\n\nInterface: GetProposalAvatarConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1216\n\n\nunique hash of proposal index", 
            "title": "GetProposalAvatarConfig"
        }, 
        {
            "location": "/api/interfaces/GetProposalAvatarConfig/#interface-getproposalavatarconfig", 
            "text": "", 
            "title": "Interface: GetProposalAvatarConfig"
        }, 
        {
            "location": "/api/interfaces/GetProposalAvatarConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetProposalAvatarConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1216  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/", 
            "text": "API Reference\n \n \nGetProposalEventsOptions\n\n\nInterface: GetProposalEventsOptions\n\n\nType parameters\n\n\nTProposal\n\n\nTEventArgs :  \nEventHasPropertyId\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb baseArgFilter\n\n\n\u25cf  baseArgFilter\n:  \nany\n \n\n\nDefined in \nproposalService.ts:175\n\n\nOptional to filter events on the given filter, like \n{ _avatar: [anAddress] }\n. This will be merged with any filter that the caller provides when creating the EntityFetcher.\n\n\n\n\n\n\nproposalsEventFetcher\n\n\n\u25cf  proposalsEventFetcher\n:  \nEventFetcherFactory\nTEventArgs\n \n\n\nDefined in \nproposalService.ts:165\n\n\nEvent fetcher to use to get or watch the event that supplies \nTEventArgs\n.\n\n\n\n\n\n\ntransformEventCallback\n\n\n\u25cf  transformEventCallback\n:  \nTransformEventCallback\nTProposal\n, \nTEventArgs\n \n\n\nDefined in \nproposalService.ts:170\n\n\nReturns Promise of \nTProposal\n given \nTEventArgs\n for the event. Return of \nundefined\n will be ignored, not passed-on to the caller.\n\n\n\n\n\n\n\u00abOptional\u00bb votableOnly\n\n\n\u25cf  votableOnly\n:  \nboolean\n \n\n\nDefined in \nproposalService.ts:179\n\n\nTrue to only return votable proposals. Default is false.\n\n\n\n\n\n\n\u00abOptional\u00bb votingMachine\n\n\n\u25cf  votingMachine\n:  \nIntVoteInterfaceWrapper\n \n\n\nDefined in \nproposalService.ts:184\n\n\nUsed to determine whether proposals are votable. This is only required when votableOnly is set to \ntrue\n.", 
            "title": "GetProposalEventsOptions"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#interface-getproposaleventsoptions", 
            "text": "", 
            "title": "Interface: GetProposalEventsOptions"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#tproposal", 
            "text": "", 
            "title": "TProposal"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#teventargs-eventhaspropertyid", 
            "text": "", 
            "title": "TEventArgs :  EventHasPropertyId"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#optional-baseargfilter", 
            "text": "\u25cf  baseArgFilter :   any    Defined in  proposalService.ts:175  Optional to filter events on the given filter, like  { _avatar: [anAddress] } . This will be merged with any filter that the caller provides when creating the EntityFetcher.", 
            "title": "\u00abOptional\u00bb baseArgFilter"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#proposalseventfetcher", 
            "text": "\u25cf  proposalsEventFetcher :   EventFetcherFactory TEventArgs    Defined in  proposalService.ts:165  Event fetcher to use to get or watch the event that supplies  TEventArgs .", 
            "title": "proposalsEventFetcher"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#transformeventcallback", 
            "text": "\u25cf  transformEventCallback :   TransformEventCallback TProposal ,  TEventArgs    Defined in  proposalService.ts:170  Returns Promise of  TProposal  given  TEventArgs  for the event. Return of  undefined  will be ignored, not passed-on to the caller.", 
            "title": "transformEventCallback"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#optional-votableonly", 
            "text": "\u25cf  votableOnly :   boolean    Defined in  proposalService.ts:179  True to only return votable proposals. Default is false.", 
            "title": "\u00abOptional\u00bb votableOnly"
        }, 
        {
            "location": "/api/interfaces/GetProposalEventsOptions/#optional-votingmachine", 
            "text": "\u25cf  votingMachine :   IntVoteInterfaceWrapper    Defined in  proposalService.ts:184  Used to determine whether proposals are votable. This is only required when votableOnly is set to  true .", 
            "title": "\u00abOptional\u00bb votingMachine"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusConfig/", 
            "text": "API Reference\n \n \nGetProposalStatusConfig\n\n\nInterface: GetProposalStatusConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1202\n\n\nunique hash of proposal index", 
            "title": "GetProposalStatusConfig"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusConfig/#interface-getproposalstatusconfig", 
            "text": "", 
            "title": "Interface: GetProposalStatusConfig"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1202  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/", 
            "text": "API Reference\n \n \nGetProposalStatusResult\n\n\nInterface: GetProposalStatusResult\n\n\nProperties\n\n\n\n\npreBoostedVotesNo\n\n\n\u25cf  preBoostedVotesNo\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1110\n\n\nNumber of preboosted votes against\n\n\n\n\n\n\npreBoostedVotesYes\n\n\n\u25cf  preBoostedVotesYes\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1114\n\n\nNumber of preboosted votes for\n\n\n\n\n\n\nstakesNo\n\n\n\u25cf  stakesNo\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1118\n\n\nNumber of staking tokens staked against\n\n\n\n\n\n\nstakesYes\n\n\n\u25cf  stakesYes\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1122\n\n\nNumber of staking tokens staked for\n\n\n\n\n\n\ntotalStaked\n\n\n\u25cf  totalStaked\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1130\n\n\nTotal number of staking tokens currently redeemable by everyone\n\n\n\n\n\n\ntotalStakerStakes\n\n\n\u25cf  totalStakerStakes\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1126\n\n\nNumber of staking tokens currently redeemable by stakers", 
            "title": "GetProposalStatusResult"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#interface-getproposalstatusresult", 
            "text": "", 
            "title": "Interface: GetProposalStatusResult"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#preboostedvotesno", 
            "text": "\u25cf  preBoostedVotesNo :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1110  Number of preboosted votes against", 
            "title": "preBoostedVotesNo"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#preboostedvotesyes", 
            "text": "\u25cf  preBoostedVotesYes :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1114  Number of preboosted votes for", 
            "title": "preBoostedVotesYes"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#stakesno", 
            "text": "\u25cf  stakesNo :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1118  Number of staking tokens staked against", 
            "title": "stakesNo"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#stakesyes", 
            "text": "\u25cf  stakesYes :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1122  Number of staking tokens staked for", 
            "title": "stakesYes"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#totalstaked", 
            "text": "\u25cf  totalStaked :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1130  Total number of staking tokens currently redeemable by everyone", 
            "title": "totalStaked"
        }, 
        {
            "location": "/api/interfaces/GetProposalStatusResult/#totalstakerstakes", 
            "text": "\u25cf  totalStakerStakes :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1126  Number of staking tokens currently redeemable by stakers", 
            "title": "totalStakerStakes"
        }, 
        {
            "location": "/api/interfaces/GetScoreConfig/", 
            "text": "API Reference\n \n \nGetScoreConfig\n\n\nInterface: GetScoreConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1180\n\n\nunique hash of proposal index", 
            "title": "GetScoreConfig"
        }, 
        {
            "location": "/api/interfaces/GetScoreConfig/#interface-getscoreconfig", 
            "text": "", 
            "title": "Interface: GetScoreConfig"
        }, 
        {
            "location": "/api/interfaces/GetScoreConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetScoreConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1180  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsConfig/", 
            "text": "API Reference\n \n \nGetScoreThresholdParamsConfig\n\n\nInterface: GetScoreThresholdParamsConfig\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1223\n\n\nthe DAO's avatar address", 
            "title": "GetScoreThresholdParamsConfig"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsConfig/#interface-getscorethresholdparamsconfig", 
            "text": "", 
            "title": "Interface: GetScoreThresholdParamsConfig"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsConfig/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/genesisProtocol.ts:1223  the DAO's avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsResult/", 
            "text": "API Reference\n \n \nGetScoreThresholdParamsResult\n\n\nInterface: GetScoreThresholdParamsResult\n\n\nProperties\n\n\n\n\nthresholdConstA\n\n\n\u25cf  thresholdConstA\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1134\n\n\n\n\n\n\nthresholdConstB\n\n\n\u25cf  thresholdConstB\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1135", 
            "title": "GetScoreThresholdParamsResult"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsResult/#interface-getscorethresholdparamsresult", 
            "text": "", 
            "title": "Interface: GetScoreThresholdParamsResult"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsResult/#thresholdconsta", 
            "text": "\u25cf  thresholdConstA :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1134", 
            "title": "thresholdConstA"
        }, 
        {
            "location": "/api/interfaces/GetScoreThresholdParamsResult/#thresholdconstb", 
            "text": "\u25cf  thresholdConstB :   number    Defined in  wrappers/genesisProtocol.ts:1135", 
            "title": "thresholdConstB"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoConfig/", 
            "text": "API Reference\n \n \nGetStakerInfoConfig\n\n\nInterface: GetStakerInfoConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1230\n\n\nunique hash of proposal index\n\n\n\n\n\n\nstaker\n\n\n\u25cf  staker\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1234\n\n\naddress of the staking agent", 
            "title": "GetStakerInfoConfig"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoConfig/#interface-getstakerinfoconfig", 
            "text": "", 
            "title": "Interface: GetStakerInfoConfig"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1230  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoConfig/#staker", 
            "text": "\u25cf  staker :   string    Defined in  wrappers/genesisProtocol.ts:1234  address of the staking agent", 
            "title": "staker"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoResult/", 
            "text": "API Reference\n \n \nGetStakerInfoResult\n\n\nInterface: GetStakerInfoResult\n\n\nProperties\n\n\n\n\nstake\n\n\n\u25cf  stake\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1140\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1139", 
            "title": "GetStakerInfoResult"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoResult/#interface-getstakerinforesult", 
            "text": "", 
            "title": "Interface: GetStakerInfoResult"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoResult/#stake", 
            "text": "\u25cf  stake :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1140", 
            "title": "stake"
        }, 
        {
            "location": "/api/interfaces/GetStakerInfoResult/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/genesisProtocol.ts:1139", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/GetStateConfig/", 
            "text": "API Reference\n \n \nGetStateConfig\n\n\nInterface: GetStateConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1248\n\n\nunique hash of proposal index", 
            "title": "GetStateConfig"
        }, 
        {
            "location": "/api/interfaces/GetStateConfig/#interface-getstateconfig", 
            "text": "", 
            "title": "Interface: GetStateConfig"
        }, 
        {
            "location": "/api/interfaces/GetStateConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetStateConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1248  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetThresholdConfig/", 
            "text": "API Reference\n \n \nGetThresholdConfig\n\n\nInterface: GetThresholdConfig\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1187\n\n\nthe DAO's avatar address", 
            "title": "GetThresholdConfig"
        }, 
        {
            "location": "/api/interfaces/GetThresholdConfig/#interface-getthresholdconfig", 
            "text": "", 
            "title": "Interface: GetThresholdConfig"
        }, 
        {
            "location": "/api/interfaces/GetThresholdConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetThresholdConfig/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/genesisProtocol.ts:1187  the DAO's avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/GetTokenBalancesOptions/", 
            "text": "API Reference\n \n \nGetTokenBalancesOptions\n\n\nInterface: GetTokenBalancesOptions\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1280\n\n\nDefined in \nwrappers/genesisProtocol.ts:1370", 
            "title": "GetTokenBalancesOptions"
        }, 
        {
            "location": "/api/interfaces/GetTokenBalancesOptions/#interface-gettokenbalancesoptions", 
            "text": "", 
            "title": "Interface: GetTokenBalancesOptions"
        }, 
        {
            "location": "/api/interfaces/GetTokenBalancesOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetTokenBalancesOptions/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Defined in  wrappers/genesisProtocol.ts:1280  Defined in  wrappers/genesisProtocol.ts:1370", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/GetTokenCapGcParamsResult/", 
            "text": "API Reference\n \n \nGetTokenCapGcParamsResult\n\n\nInterface: GetTokenCapGcParamsResult\n\n\nProperties\n\n\n\n\ncap\n\n\n\u25cf  cap\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/tokenCapGC.ts:68\n\n\n\n\n\n\ntoken\n\n\n\u25cf  token\n:  \nAddress\n \n\n\nDefined in \nwrappers/tokenCapGC.ts:69", 
            "title": "GetTokenCapGcParamsResult"
        }, 
        {
            "location": "/api/interfaces/GetTokenCapGcParamsResult/#interface-gettokencapgcparamsresult", 
            "text": "", 
            "title": "Interface: GetTokenCapGcParamsResult"
        }, 
        {
            "location": "/api/interfaces/GetTokenCapGcParamsResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetTokenCapGcParamsResult/#cap", 
            "text": "\u25cf  cap :   BigNumber    Defined in  wrappers/tokenCapGC.ts:68", 
            "title": "cap"
        }, 
        {
            "location": "/api/interfaces/GetTokenCapGcParamsResult/#token", 
            "text": "\u25cf  token :   Address    Defined in  wrappers/tokenCapGC.ts:69", 
            "title": "token"
        }, 
        {
            "location": "/api/interfaces/GetTotalReputationSupplyConfig/", 
            "text": "API Reference\n \n \nGetTotalReputationSupplyConfig\n\n\nInterface: GetTotalReputationSupplyConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1209\n\n\nunique hash of proposal index", 
            "title": "GetTotalReputationSupplyConfig"
        }, 
        {
            "location": "/api/interfaces/GetTotalReputationSupplyConfig/#interface-gettotalreputationsupplyconfig", 
            "text": "", 
            "title": "Interface: GetTotalReputationSupplyConfig"
        }, 
        {
            "location": "/api/interfaces/GetTotalReputationSupplyConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetTotalReputationSupplyConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1209  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoConfig/", 
            "text": "API Reference\n \n \nGetVoterInfoConfig\n\n\nInterface: GetVoterInfoConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1194\n\n\nunique hash of proposal index\n\n\n\n\n\n\nvoter\n\n\n\u25cf  voter\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1195", 
            "title": "GetVoterInfoConfig"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoConfig/#interface-getvoterinfoconfig", 
            "text": "", 
            "title": "Interface: GetVoterInfoConfig"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1194  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoConfig/#voter", 
            "text": "\u25cf  voter :   string    Defined in  wrappers/genesisProtocol.ts:1195", 
            "title": "voter"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoResult/", 
            "text": "API Reference\n \n \nGetVoterInfoResult\n\n\nInterface: GetVoterInfoResult\n\n\nProperties\n\n\n\n\nreputation\n\n\n\u25cf  reputation\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1103\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1102", 
            "title": "GetVoterInfoResult"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoResult/#interface-getvoterinforesult", 
            "text": "", 
            "title": "Interface: GetVoterInfoResult"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoResult/#reputation", 
            "text": "\u25cf  reputation :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1103", 
            "title": "reputation"
        }, 
        {
            "location": "/api/interfaces/GetVoterInfoResult/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/genesisProtocol.ts:1102", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/GetVoteStatusConfig/", 
            "text": "API Reference\n \n \nGetVoteStatusConfig\n\n\nInterface: GetVoteStatusConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1362\n\n\nunique hash of proposal index\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1366\n\n\nthe choice of vote, like 1 (YES) or 2 (NO).", 
            "title": "GetVoteStatusConfig"
        }, 
        {
            "location": "/api/interfaces/GetVoteStatusConfig/#interface-getvotestatusconfig", 
            "text": "", 
            "title": "Interface: GetVoteStatusConfig"
        }, 
        {
            "location": "/api/interfaces/GetVoteStatusConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetVoteStatusConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1362  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GetVoteStatusConfig/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/genesisProtocol.ts:1366  the choice of vote, like 1 (YES) or 2 (NO).", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/GetWinningVoteConfig/", 
            "text": "API Reference\n \n \nGetWinningVoteConfig\n\n\nInterface: GetWinningVoteConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1241\n\n\nunique hash of proposal index", 
            "title": "GetWinningVoteConfig"
        }, 
        {
            "location": "/api/interfaces/GetWinningVoteConfig/#interface-getwinningvoteconfig", 
            "text": "", 
            "title": "Interface: GetWinningVoteConfig"
        }, 
        {
            "location": "/api/interfaces/GetWinningVoteConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GetWinningVoteConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1241  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/GPExecuteProposalEventResult/", 
            "text": "API Reference\n \n \nGPExecuteProposalEventResult\n\n\nInterface: GPExecuteProposalEventResult\n\n\nProperties\n\n\n\n\n_executionState\n\n\n\u25cf  _executionState\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1267\n\n\n_executionState.toNumber() will give you a value from the enum \nExecutionState\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1263\n\n\nindexed", 
            "title": "GPExecuteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/GPExecuteProposalEventResult/#interface-gpexecuteproposaleventresult", 
            "text": "", 
            "title": "Interface: GPExecuteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/GPExecuteProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/GPExecuteProposalEventResult/#_executionstate", 
            "text": "\u25cf  _executionState :   BigNumber    Defined in  wrappers/genesisProtocol.ts:1267  _executionState.toNumber() will give you a value from the enum  ExecutionState", 
            "title": "_executionState"
        }, 
        {
            "location": "/api/interfaces/GPExecuteProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/genesisProtocol.ts:1263  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/HasContract/", 
            "text": "API Reference\n \n \nHasContract\n\n\nInterface: HasContract\n\n\nHierarchy\n\n\nHasContract\n\n\n\u21b3  \nIContractWrapperBase\n\n\nProperties\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nDefined in \ncommonTypes.ts:63", 
            "title": "HasContract"
        }, 
        {
            "location": "/api/interfaces/HasContract/#interface-hascontract", 
            "text": "", 
            "title": "Interface: HasContract"
        }, 
        {
            "location": "/api/interfaces/HasContract/#hierarchy", 
            "text": "HasContract  \u21b3   IContractWrapperBase", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/HasContract/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/HasContract/#contract", 
            "text": "\u25cf  contract :   any    Defined in  commonTypes.ts:63", 
            "title": "contract"
        }, 
        {
            "location": "/api/interfaces/IBurnableTokenWrapper/", 
            "text": "API Reference\n \n \nIBurnableTokenWrapper\n\n\nInterface: IBurnableTokenWrapper\n\n\nImplemented by\n\n\n\n\nDaoTokenWrapper\n\n\n\n\nProperties\n\n\n\n\nBurn\n\n\n\u25cf  Burn\n:  \nEventFetcherFactory\nBurnEventResult\n \n\n\nDefined in \nwrappers/iBurnableToken.ts:10\n\n\n\n\nMethods\n\n\n\n\nburn\n\n\n\u25ba \nburn\n(options: \nBurnableTokenBurnOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iBurnableToken.ts:16\n\n\nBurn the given number of tokens\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nBurnableTokenBurnOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "IBurnableTokenWrapper"
        }, 
        {
            "location": "/api/interfaces/IBurnableTokenWrapper/#interface-iburnabletokenwrapper", 
            "text": "", 
            "title": "Interface: IBurnableTokenWrapper"
        }, 
        {
            "location": "/api/interfaces/IBurnableTokenWrapper/#implemented-by", 
            "text": "DaoTokenWrapper", 
            "title": "Implemented by"
        }, 
        {
            "location": "/api/interfaces/IBurnableTokenWrapper/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/IBurnableTokenWrapper/#burn", 
            "text": "\u25cf  Burn :   EventFetcherFactory BurnEventResult    Defined in  wrappers/iBurnableToken.ts:10", 
            "title": "Burn"
        }, 
        {
            "location": "/api/interfaces/IBurnableTokenWrapper/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/IBurnableTokenWrapper/#burn_1", 
            "text": "\u25ba  burn (options:  BurnableTokenBurnOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iBurnableToken.ts:16  Burn the given number of tokens  Parameters:     Param  Type  Description      options  BurnableTokenBurnOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "burn"
        }, 
        {
            "location": "/api/interfaces/IConfigService/", 
            "text": "API Reference\n \n \nIConfigService\n\n\nInterface: IConfigService\n\n\nMethods\n\n\n\n\nget\n\n\n\u25ba \nget\n(setting: \nstring\n): \nany\n\n\nDefined in \niConfigService.ts:2\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nany\n\n\n\n\n\n\nset\n\n\n\u25ba \nset\n(setting: \nstring\n, value: \nany\n): \nvoid\n\n\nDefined in \niConfigService.ts:3\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetting\n\n\nstring\n\n\n-\n\n\n\n\n\n\nvalue\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "IConfigService"
        }, 
        {
            "location": "/api/interfaces/IConfigService/#interface-iconfigservice", 
            "text": "", 
            "title": "Interface: IConfigService"
        }, 
        {
            "location": "/api/interfaces/IConfigService/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/IConfigService/#get", 
            "text": "\u25ba  get (setting:  string ):  any  Defined in  iConfigService.ts:2  Parameters:     Param  Type  Description      setting  string  -     Returns:   any", 
            "title": "get"
        }, 
        {
            "location": "/api/interfaces/IConfigService/#set", 
            "text": "\u25ba  set (setting:  string , value:  any ):  void  Defined in  iConfigService.ts:3  Parameters:     Param  Type  Description      setting  string  -    value  any  -     Returns:   void", 
            "title": "set"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/", 
            "text": "API Reference\n \n \nIContractWrapperBase\n\n\nInterface: IContractWrapperBase\n\n\nHierarchy\n\n\nHasContract\n\n\n\u21b3 IContractWrapperBase\n\n\nImplemented by\n\n\n\n\nAbsoluteVoteWrapper\n\n\nContractWrapperBase\n\n\nContributionRewardWrapper\n\n\nDaoCreatorWrapper\n\n\nDaoTokenWrapper\n\n\nGenesisProtocolWrapper\n\n\nGlobalConstraintRegistrarWrapper\n\n\nIntVoteInterfaceWrapper\n\n\nMintableTokenWrapper\n\n\nProposalGeneratorBase\n\n\nRedeemerWrapper\n\n\nReputationWrapper\n\n\nSchemeRegistrarWrapper\n\n\nStandardTokenWrapper\n\n\nTokenCapGCWrapper\n\n\nUpgradeSchemeWrapper\n\n\nVestingSchemeWrapper\n\n\nVoteInOrganizationSchemeWrapper\n\n\n\n\nProperties\n\n\n\n\naddress\n\n\n\u25cf  address\n:  \nAddress\n \n\n\nDefined in \niContractWrapperBase.ts:13\n\n\n\n\n\n\ncontract\n\n\n\u25cf  contract\n:  \nany\n \n\n\nInherited from \nHasContract\n.\ncontract\n\n\nDefined in \ncommonTypes.ts:63\n\n\n\n\n\n\nfactory\n\n\n\u25cf  factory\n:  \nIContractWrapperFactory\nany\n \n\n\nDefined in \niContractWrapperBase.ts:10\n\n\n\n\n\n\nfriendlyName\n\n\n\u25cf  friendlyName\n:  \nstring\n \n\n\nDefined in \niContractWrapperBase.ts:12\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n \n\n\nDefined in \niContractWrapperBase.ts:11\n\n\n\n\nMethods\n\n\n\n\ngetController\n\n\n\u25ba \ngetController\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:22\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:18\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetParametersArray\n\n\n\u25ba \ngetParametersArray\n(paramsHash: \nHash\n): \nPromise\n.\nArray\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:21\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArray\n.\nany\n\n\n\n\n\n\ngetParametersHash\n\n\n\u25ba \ngetParametersHash\n(params: \nany\n): \nPromise\n.\nHash\n\n\nDefined in \niContractWrapperBase.ts:20\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\ngetSchemeParametersHash\n\n\n\u25ba \ngetSchemeParametersHash\n(avatarAddress: \nAddress\n): \nPromise\n.\nHash\n\n\nDefined in \niContractWrapperBase.ts:19\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\n\n\n\n\nhydrateFromAt\n\n\n\u25ba \nhydrateFromAt\n(address: \nstring\n): \nPromise\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:15\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\nhydrateFromDeployed\n\n\n\u25ba \nhydrateFromDeployed\n(): \nPromise\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:16\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\nhydrateFromNew\n\n\n\u25ba \nhydrateFromNew\n(...rest: \nArray\n.\nany\n): \nPromise\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:14\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(...params: \nArray\n.\nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nDefined in \niContractWrapperBase.ts:17\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "IContractWrapperBase"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#interface-icontractwrapperbase", 
            "text": "", 
            "title": "Interface: IContractWrapperBase"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#hierarchy", 
            "text": "HasContract  \u21b3 IContractWrapperBase", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#implemented-by", 
            "text": "AbsoluteVoteWrapper  ContractWrapperBase  ContributionRewardWrapper  DaoCreatorWrapper  DaoTokenWrapper  GenesisProtocolWrapper  GlobalConstraintRegistrarWrapper  IntVoteInterfaceWrapper  MintableTokenWrapper  ProposalGeneratorBase  RedeemerWrapper  ReputationWrapper  SchemeRegistrarWrapper  StandardTokenWrapper  TokenCapGCWrapper  UpgradeSchemeWrapper  VestingSchemeWrapper  VoteInOrganizationSchemeWrapper", 
            "title": "Implemented by"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#address", 
            "text": "\u25cf  address :   Address    Defined in  iContractWrapperBase.ts:13", 
            "title": "address"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#contract", 
            "text": "\u25cf  contract :   any    Inherited from  HasContract . contract  Defined in  commonTypes.ts:63", 
            "title": "contract"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#factory", 
            "text": "\u25cf  factory :   IContractWrapperFactory any    Defined in  iContractWrapperBase.ts:10", 
            "title": "factory"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#friendlyname", 
            "text": "\u25cf  friendlyName :   string    Defined in  iContractWrapperBase.ts:12", 
            "title": "friendlyName"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#name", 
            "text": "\u25cf  name :   string    Defined in  iContractWrapperBase.ts:11", 
            "title": "name"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#getcontroller", 
            "text": "\u25ba  getController (avatarAddress:  Address ):  Promise . any  Defined in  iContractWrapperBase.ts:22  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getController"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Defined in  iContractWrapperBase.ts:18  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#getparametersarray", 
            "text": "\u25ba  getParametersArray (paramsHash:  Hash ):  Promise . Array . any  Defined in  iContractWrapperBase.ts:21  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . Array . any", 
            "title": "getParametersArray"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#getparametershash", 
            "text": "\u25ba  getParametersHash (params:  any ):  Promise . Hash  Defined in  iContractWrapperBase.ts:20  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . Hash", 
            "title": "getParametersHash"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#getschemeparametershash", 
            "text": "\u25ba  getSchemeParametersHash (avatarAddress:  Address ):  Promise . Hash  Defined in  iContractWrapperBase.ts:19  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . Hash", 
            "title": "getSchemeParametersHash"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#hydratefromat", 
            "text": "\u25ba  hydrateFromAt (address:  string ):  Promise . any  Defined in  iContractWrapperBase.ts:15  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . any", 
            "title": "hydrateFromAt"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#hydratefromdeployed", 
            "text": "\u25ba  hydrateFromDeployed ():  Promise . any  Defined in  iContractWrapperBase.ts:16  Returns:   Promise . any", 
            "title": "hydrateFromDeployed"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#hydratefromnew", 
            "text": "\u25ba  hydrateFromNew (...rest:  Array . any ):  Promise . any  Defined in  iContractWrapperBase.ts:14  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . any", 
            "title": "hydrateFromNew"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperBase/#setparameters", 
            "text": "\u25ba  setParameters (...params:  Array . any ):  Promise . ArcTransactionDataResult Hash  Defined in  iContractWrapperBase.ts:17  Parameters:     Param  Type  Description      params  Array . any  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/", 
            "text": "API Reference\n \n \nIContractWrapperFactory\n\n\nInterface: IContractWrapperFactory\n\n\nType parameters\n\n\nTWrapper :  \nIContractWrapperBase\n\n\nImplemented by\n\n\n\n\nContractWrapperFactory\n\n\nDaoCreatorFactoryType\n\n\nDaoTokenFactoryType\n\n\nGenesisProtocolFactoryType\n\n\nIntVoteInterfaceFactoryType\n\n\nMintableTokenFactoryType\n\n\nRedeemerFactoryType\n\n\nReputationFactoryType\n\n\nStandardTokenFactoryType\n\n\n\n\nProperties\n\n\n\n\nat\n\n\n\u25cf  at\n:  \nfunction\n \n\n\nDefined in \niContractWrapperBase.ts:27\n\n\nType declaration\n\n\n\u25ba(address: \nstring\n): \nPromise\n.\nTWrapper\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTWrapper\n\n\n\n\n\n\ndeployed\n\n\n\u25cf  deployed\n:  \nfunction\n \n\n\nDefined in \niContractWrapperBase.ts:28\n\n\nType declaration\n\n\n\u25ba(): \nPromise\n.\nTWrapper\n\n\nReturns:\n \nPromise\n.\nTWrapper\n\n\n\n\n\n\nnew\n\n\n\u25cf  new\n:  \nfunction\n \n\n\nDefined in \niContractWrapperBase.ts:26\n\n\nType declaration\n\n\n\u25ba(...rest: \nArray\n.\nany\n): \nPromise\n.\nTWrapper\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nTWrapper", 
            "title": "IContractWrapperFactory"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#interface-icontractwrapperfactory", 
            "text": "", 
            "title": "Interface: IContractWrapperFactory"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#type-parameters", 
            "text": "", 
            "title": "Type parameters"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#twrapper-icontractwrapperbase", 
            "text": "", 
            "title": "TWrapper :  IContractWrapperBase"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#implemented-by", 
            "text": "ContractWrapperFactory  DaoCreatorFactoryType  DaoTokenFactoryType  GenesisProtocolFactoryType  IntVoteInterfaceFactoryType  MintableTokenFactoryType  RedeemerFactoryType  ReputationFactoryType  StandardTokenFactoryType", 
            "title": "Implemented by"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#at", 
            "text": "\u25cf  at :   function    Defined in  iContractWrapperBase.ts:27", 
            "title": "at"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#type-declaration", 
            "text": "\u25ba(address:  string ):  Promise . TWrapper  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . TWrapper", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#deployed", 
            "text": "\u25cf  deployed :   function    Defined in  iContractWrapperBase.ts:28", 
            "title": "deployed"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#type-declaration_1", 
            "text": "\u25ba():  Promise . TWrapper  Returns:   Promise . TWrapper", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#new", 
            "text": "\u25cf  new :   function    Defined in  iContractWrapperBase.ts:26", 
            "title": "new"
        }, 
        {
            "location": "/api/interfaces/IContractWrapperFactory/#type-declaration_2", 
            "text": "\u25ba(...rest:  Array . any ):  Promise . TWrapper  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . TWrapper", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/", 
            "text": "API Reference\n \n \nIErc827TokenWrapper\n\n\nInterface: IErc827TokenWrapper\n\n\nImplemented by\n\n\n\n\nDaoTokenWrapper\n\n\n\n\nMethods\n\n\n\n\napproveAndCall\n\n\n\u25ba \napproveAndCall\n(options: \nApproveAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iErc827Token.ts:19\n\n\nApprove transfer of tokens by msg.sender (or \nonBehalfOf\n, if given) from the given \"spender\". Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nApproveAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ndecreaseApprovalAndCall\n\n\n\u25ba \ndecreaseApprovalAndCall\n(options: \nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iErc827Token.ts:51\n\n\nDecrease the number of tokens approved that msg.sender (or \nonBehalfOf\n if given) may transfer from the given \"spender\". Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nincreaseApprovalAndCall\n\n\n\u25ba \nincreaseApprovalAndCall\n(options: \nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iErc827Token.ts:42\n\n\nIncrease the number of tokens approved that msg.sender (or \nonBehalfOf\n, if given) may transfer from the given \"spender\". Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nChangeApprovalAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ntransferAndCall\n\n\n\u25ba \ntransferAndCall\n(options: \nTransferAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iErc827Token.ts:26\n\n\nTransfer tokens from the current account to another. Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nTransferAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ntransferFromAndCall\n\n\n\u25ba \ntransferFromAndCall\n(options: \nTransferFromAndCallOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iErc827Token.ts:33\n\n\nTransfer tokens from one address to another. Then call the function specified by \ncallData\n, all in a single transaction.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nTransferFromAndCallOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "IErc827TokenWrapper"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#interface-ierc827tokenwrapper", 
            "text": "", 
            "title": "Interface: IErc827TokenWrapper"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#implemented-by", 
            "text": "DaoTokenWrapper", 
            "title": "Implemented by"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#approveandcall", 
            "text": "\u25ba  approveAndCall (options:  ApproveAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iErc827Token.ts:19  Approve transfer of tokens by msg.sender (or  onBehalfOf , if given) from the given \"spender\". Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  ApproveAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "approveAndCall"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#decreaseapprovalandcall", 
            "text": "\u25ba  decreaseApprovalAndCall (options:  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iErc827Token.ts:51  Decrease the number of tokens approved that msg.sender (or  onBehalfOf  if given) may transfer from the given \"spender\". Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "decreaseApprovalAndCall"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#increaseapprovalandcall", 
            "text": "\u25ba  increaseApprovalAndCall (options:  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iErc827Token.ts:42  Increase the number of tokens approved that msg.sender (or  onBehalfOf , if given) may transfer from the given \"spender\". Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  ChangeApprovalAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "increaseApprovalAndCall"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#transferandcall", 
            "text": "\u25ba  transferAndCall (options:  TransferAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iErc827Token.ts:26  Transfer tokens from the current account to another. Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  TransferAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transferAndCall"
        }, 
        {
            "location": "/api/interfaces/IErc827TokenWrapper/#transferfromandcall", 
            "text": "\u25ba  transferFromAndCall (options:  TransferFromAndCallOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iErc827Token.ts:33  Transfer tokens from one address to another. Then call the function specified by  callData , all in a single transaction.  Parameters:     Param  Type  Description      options  TransferFromAndCallOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "transferFromAndCall"
        }, 
        {
            "location": "/api/interfaces/IEventSubscription/", 
            "text": "API Reference\n \n \nIEventSubscription\n\n\nInterface: IEventSubscription\n\n\nImplemented by\n\n\n\n\nEventSubscription\n\n\nSubscriptionCollection\n\n\nWeb3EventSubscription\n\n\n\n\nMethods\n\n\n\n\nunsubscribe\n\n\n\u25ba \nunsubscribe\n(milliseconds?: \nnumber\n): \nPromise\n.\nvoid\n\n\nDefined in \npubSubEventService.ts:200\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmilliseconds\n\n\nnumber\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "IEventSubscription"
        }, 
        {
            "location": "/api/interfaces/IEventSubscription/#interface-ieventsubscription", 
            "text": "", 
            "title": "Interface: IEventSubscription"
        }, 
        {
            "location": "/api/interfaces/IEventSubscription/#implemented-by", 
            "text": "EventSubscription  SubscriptionCollection  Web3EventSubscription", 
            "title": "Implemented by"
        }, 
        {
            "location": "/api/interfaces/IEventSubscription/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/IEventSubscription/#unsubscribe", 
            "text": "\u25ba  unsubscribe (milliseconds?:  number ):  Promise . void  Defined in  pubSubEventService.ts:200  Parameters:     Param  Type  Description      milliseconds  number  -     Returns:   Promise . void", 
            "title": "unsubscribe"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/", 
            "text": "API Reference\n \n \nIIntVoteInterface\n\n\nInterface: IIntVoteInterface\n\n\nThe Arc contract \nIntVoteInterface\n.\n\n\nImplemented by\n\n\n\n\nAbsoluteVoteWrapper\n\n\nGenesisProtocolWrapper\n\n\nIntVoteInterfaceWrapper\n\n\n\n\nProperties\n\n\n\n\nCancelProposal\n\n\n\u25cf  CancelProposal\n:  \nEventFetcherFactory\nCancelProposalEventResult\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:12\n\n\n\n\n\n\nCancelVoting\n\n\n\u25cf  CancelVoting\n:  \nEventFetcherFactory\nCancelVotingEventResult\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:15\n\n\n\n\n\n\nExecuteProposal\n\n\n\u25cf  ExecuteProposal\n:  \nEventFetcherFactory\nExecuteProposalEventResult\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:13\n\n\n\n\n\n\nNewProposal\n\n\n\u25cf  NewProposal\n:  \nEventFetcherFactory\nNewProposalEventResult\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:11\n\n\n\n\n\n\nVoteProposal\n\n\n\u25cf  VoteProposal\n:  \nEventFetcherFactory\nVoteProposalEventResult\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:14\n\n\n\n\n\n\naddress\n\n\n\u25cf  address\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:17\n\n\n\n\nMethods\n\n\n\n\ncancelProposal\n\n\n\u25ba \ncancelProposal\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:20\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ncancelVote\n\n\n\u25ba \ncancelVote\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:25\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nexecute\n\n\n\u25ba \nexecute\n(options: \nProposalIdOption\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:30\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\ngetNumberOfChoices\n\n\n\u25ba \ngetNumberOfChoices\n(options: \nProposalIdOption\n): \nPromise\n.\nnumber\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:26\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nnumber\n\n\n\n\n\n\nisAbstainAllow\n\n\n\u25ba \nisAbstainAllow\n(): \nPromise\n.\nboolean\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:29\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nisVotable\n\n\n\u25ba \nisVotable\n(options: \nProposalIdOption\n): \nPromise\n.\nboolean\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:27\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposalIdOption\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nboolean\n\n\n\n\n\n\nownerVote\n\n\n\u25ba \nownerVote\n(options: \nOwnerVoteOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:21\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nOwnerVoteOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\npropose\n\n\n\u25ba \npropose\n(options: \nProposeOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionProposalResult\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:19\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nProposeOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionProposalResult\n\n\n\n\n\n\nvote\n\n\n\u25ba \nvote\n(options: \nVoteOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:22\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult\n\n\n\n\n\n\nvoteStatus\n\n\n\u25ba \nvoteStatus\n(options: \nVoteStatusOptions\n): \nPromise\n.\nBigNumber\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:28\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteStatusOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nBigNumber\n\n\n\n\n\n\nvoteWithSpecifiedAmounts\n\n\n\u25ba \nvoteWithSpecifiedAmounts\n(options: \nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n): \nPromise\n.\nArcTransactionResult\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:23\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nVoteWithSpecifiedAmountsOptions\nTxGeneratingFunctionOptions\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionResult", 
            "title": "IIntVoteInterface"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#interface-iintvoteinterface", 
            "text": "The Arc contract  IntVoteInterface .", 
            "title": "Interface: IIntVoteInterface"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#implemented-by", 
            "text": "AbsoluteVoteWrapper  GenesisProtocolWrapper  IntVoteInterfaceWrapper", 
            "title": "Implemented by"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#cancelproposal", 
            "text": "\u25cf  CancelProposal :   EventFetcherFactory CancelProposalEventResult    Defined in  wrappers/iIntVoteInterface.ts:12", 
            "title": "CancelProposal"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#cancelvoting", 
            "text": "\u25cf  CancelVoting :   EventFetcherFactory CancelVotingEventResult    Defined in  wrappers/iIntVoteInterface.ts:15", 
            "title": "CancelVoting"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#executeproposal", 
            "text": "\u25cf  ExecuteProposal :   EventFetcherFactory ExecuteProposalEventResult    Defined in  wrappers/iIntVoteInterface.ts:13", 
            "title": "ExecuteProposal"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#newproposal", 
            "text": "\u25cf  NewProposal :   EventFetcherFactory NewProposalEventResult    Defined in  wrappers/iIntVoteInterface.ts:11", 
            "title": "NewProposal"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#voteproposal", 
            "text": "\u25cf  VoteProposal :   EventFetcherFactory VoteProposalEventResult    Defined in  wrappers/iIntVoteInterface.ts:14", 
            "title": "VoteProposal"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#address", 
            "text": "\u25cf  address :   Address    Defined in  wrappers/iIntVoteInterface.ts:17", 
            "title": "address"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#cancelproposal_1", 
            "text": "\u25ba  cancelProposal (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iIntVoteInterface.ts:20  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelProposal"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#cancelvote", 
            "text": "\u25ba  cancelVote (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iIntVoteInterface.ts:25  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "cancelVote"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#execute", 
            "text": "\u25ba  execute (options:  ProposalIdOption TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iIntVoteInterface.ts:30  Parameters:     Param  Type  Description      options  ProposalIdOption TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "execute"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#getnumberofchoices", 
            "text": "\u25ba  getNumberOfChoices (options:  ProposalIdOption ):  Promise . number  Defined in  wrappers/iIntVoteInterface.ts:26  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . number", 
            "title": "getNumberOfChoices"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#isabstainallow", 
            "text": "\u25ba  isAbstainAllow ():  Promise . boolean  Defined in  wrappers/iIntVoteInterface.ts:29  Returns:   Promise . boolean", 
            "title": "isAbstainAllow"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#isvotable", 
            "text": "\u25ba  isVotable (options:  ProposalIdOption ):  Promise . boolean  Defined in  wrappers/iIntVoteInterface.ts:27  Parameters:     Param  Type  Description      options  ProposalIdOption  -     Returns:   Promise . boolean", 
            "title": "isVotable"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#ownervote", 
            "text": "\u25ba  ownerVote (options:  OwnerVoteOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iIntVoteInterface.ts:21  Parameters:     Param  Type  Description      options  OwnerVoteOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "ownerVote"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#propose", 
            "text": "\u25ba  propose (options:  ProposeOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionProposalResult  Defined in  wrappers/iIntVoteInterface.ts:19  Parameters:     Param  Type  Description      options  ProposeOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionProposalResult", 
            "title": "propose"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#vote", 
            "text": "\u25ba  vote (options:  VoteOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iIntVoteInterface.ts:22  Parameters:     Param  Type  Description      options  VoteOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#votestatus", 
            "text": "\u25ba  voteStatus (options:  VoteStatusOptions ):  Promise . BigNumber  Defined in  wrappers/iIntVoteInterface.ts:28  Parameters:     Param  Type  Description      options  VoteStatusOptions  -     Returns:   Promise . BigNumber", 
            "title": "voteStatus"
        }, 
        {
            "location": "/api/interfaces/IIntVoteInterface/#votewithspecifiedamounts", 
            "text": "\u25ba  voteWithSpecifiedAmounts (options:  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions ):  Promise . ArcTransactionResult  Defined in  wrappers/iIntVoteInterface.ts:23  Parameters:     Param  Type  Description      options  VoteWithSpecifiedAmountsOptions TxGeneratingFunctionOptions  -     Returns:   Promise . ArcTransactionResult", 
            "title": "voteWithSpecifiedAmounts"
        }, 
        {
            "location": "/api/interfaces/ILogger/", 
            "text": "API Reference\n \n \nILogger\n\n\nInterface: ILogger\n\n\nMethods\n\n\n\n\ndebug\n\n\n\u25ba \ndebug\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:18\n\n\nLogs a debug message.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\nThe message to log.\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nerror\n\n\n\u25ba \nerror\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:39\n\n\nLogs an error.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\nThe message to log.\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\ninfo\n\n\n\u25ba \ninfo\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:25\n\n\nLogs info.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\nThe message to log.\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nwarn\n\n\n\u25ba \nwarn\n(message: \nstring\n): \nvoid\n\n\nDefined in \nloggingService.ts:32\n\n\nLogs a warning.\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\nThe message to log.\n\n\n\n\n\n\n\n\nReturns:\n \nvoid", 
            "title": "ILogger"
        }, 
        {
            "location": "/api/interfaces/ILogger/#interface-ilogger", 
            "text": "", 
            "title": "Interface: ILogger"
        }, 
        {
            "location": "/api/interfaces/ILogger/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/ILogger/#debug", 
            "text": "\u25ba  debug (message:  string ):  void  Defined in  loggingService.ts:18  Logs a debug message.  Parameters:     Param  Type  Description      message  string  The message to log.     Returns:   void", 
            "title": "debug"
        }, 
        {
            "location": "/api/interfaces/ILogger/#error", 
            "text": "\u25ba  error (message:  string ):  void  Defined in  loggingService.ts:39  Logs an error.  Parameters:     Param  Type  Description      message  string  The message to log.     Returns:   void", 
            "title": "error"
        }, 
        {
            "location": "/api/interfaces/ILogger/#info", 
            "text": "\u25ba  info (message:  string ):  void  Defined in  loggingService.ts:25  Logs info.  Parameters:     Param  Type  Description      message  string  The message to log.     Returns:   void", 
            "title": "info"
        }, 
        {
            "location": "/api/interfaces/ILogger/#warn", 
            "text": "\u25ba  warn (message:  string ):  void  Defined in  loggingService.ts:32  Logs a warning.  Parameters:     Param  Type  Description      message  string  The message to log.     Returns:   void", 
            "title": "warn"
        }, 
        {
            "location": "/api/interfaces/InitializeArcOptions/", 
            "text": "API Reference\n \n \nInitializeArcOptions\n\n\nInterface: InitializeArcOptions\n\n\nOptions for \nInitializeArcJs\n\n\nHierarchy\n\n\nWrapperServiceInitializeOptions\n\n\n\u21b3 InitializeArcOptions\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb filter\n\n\n\u25cf  filter\n:  \nWrapperFilter\n \n\n\nInherited from \nWrapperServiceInitializeOptions\n.\nfilter\n\n\nDefined in \nwrapperService.ts:374\n\n\nOption filter to only initialize the contracts whose name is set to true. Any that are omitted or set to false here will appear as \nnull\n in WrapperService.wrappers and WrapperService.wrappersByType, and will not be available in WrapperService.wrappersByAddress. But their factories will still be available in WrapperService.factories.\n\n\n\n\n\n\n\u00abOptional\u00bb useNetworkDefaultsFor\n\n\n\u25cf  useNetworkDefaultsFor\n:  \nstring\n \n\n\nDefined in index.ts:66\n\n\nName of the network for which to use the defaults found in Arc.js/truffle.js. Overwrites config settings network, providerUrl and providerPort.\n\n\n\n\n\n\n\u00abOptional\u00bb watchForAccountChanges\n\n\n\u25cf  watchForAccountChanges\n:  \nboolean\n \n\n\nDefined in index.ts:71\n\n\nSet to true to watch for changes in the current user account. Default is false. See \nAccountService.initiateAccountWatch\n.", 
            "title": "InitializeArcOptions"
        }, 
        {
            "location": "/api/interfaces/InitializeArcOptions/#interface-initializearcoptions", 
            "text": "Options for  InitializeArcJs", 
            "title": "Interface: InitializeArcOptions"
        }, 
        {
            "location": "/api/interfaces/InitializeArcOptions/#hierarchy", 
            "text": "WrapperServiceInitializeOptions  \u21b3 InitializeArcOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/InitializeArcOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/InitializeArcOptions/#optional-filter", 
            "text": "\u25cf  filter :   WrapperFilter    Inherited from  WrapperServiceInitializeOptions . filter  Defined in  wrapperService.ts:374  Option filter to only initialize the contracts whose name is set to true. Any that are omitted or set to false here will appear as  null  in WrapperService.wrappers and WrapperService.wrappersByType, and will not be available in WrapperService.wrappersByAddress. But their factories will still be available in WrapperService.factories.", 
            "title": "\u00abOptional\u00bb filter"
        }, 
        {
            "location": "/api/interfaces/InitializeArcOptions/#optional-usenetworkdefaultsfor", 
            "text": "\u25cf  useNetworkDefaultsFor :   string    Defined in index.ts:66  Name of the network for which to use the defaults found in Arc.js/truffle.js. Overwrites config settings network, providerUrl and providerPort.", 
            "title": "\u00abOptional\u00bb useNetworkDefaultsFor"
        }, 
        {
            "location": "/api/interfaces/InitializeArcOptions/#optional-watchforaccountchanges", 
            "text": "\u25cf  watchForAccountChanges :   boolean    Defined in index.ts:71  Set to true to watch for changes in the current user account. Default is false. See  AccountService.initiateAccountWatch .", 
            "title": "\u00abOptional\u00bb watchForAccountChanges"
        }, 
        {
            "location": "/api/interfaces/InitialSchemesSetEventResult/", 
            "text": "API Reference\n \n \nInitialSchemesSetEventResult\n\n\nInterface: InitialSchemesSetEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/daoCreator.ts:372", 
            "title": "InitialSchemesSetEventResult"
        }, 
        {
            "location": "/api/interfaces/InitialSchemesSetEventResult/#interface-initialschemesseteventresult", 
            "text": "", 
            "title": "Interface: InitialSchemesSetEventResult"
        }, 
        {
            "location": "/api/interfaces/InitialSchemesSetEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/InitialSchemesSetEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/daoCreator.ts:372", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/", 
            "text": "API Reference\n \n \nITruffleContractFunction\n\n\nInterface: ITruffleContractFunction\n\n\nHierarchy\n\n\nfunction\n\n\n\u21b3 ITruffleContractFunction\n\n\nCallable\n\n\n\u25ba \n__call\n(args?: \nArray\n.\nany\n): \nPromise\n.\nHash\n\n\nDefined in \ncontractWrapperBase.ts:387\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nargs\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash\n\n\nProperties\n\n\n\n\nestimateGas\n\n\n\u25cf  estimateGas\n:  \nfunction\n \n\n\nDefined in \ncontractWrapperBase.ts:391\n\n\nType declaration\n\n\n\u25ba(args?: \nArray\n.\nany\n): \nnumber\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nargs\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nnumber\n\n\n\n\n\n\nsendTransaction\n\n\n\u25cf  sendTransaction\n:  \nfunction\n \n\n\nDefined in \ncontractWrapperBase.ts:390\n\n\nType declaration\n\n\n\u25ba(args?: \nArray\n.\nany\n): \nPromise\n.\nHash\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nargs\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nHash", 
            "title": "ITruffleContractFunction"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#interface-itrufflecontractfunction", 
            "text": "", 
            "title": "Interface: ITruffleContractFunction"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#hierarchy", 
            "text": "function  \u21b3 ITruffleContractFunction", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#callable", 
            "text": "\u25ba  __call (args?:  Array . any ):  Promise . Hash  Defined in  contractWrapperBase.ts:387  Parameters:     Param  Type  Description      args  Array . any  -     Returns:   Promise . Hash", 
            "title": "Callable"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#estimategas", 
            "text": "\u25cf  estimateGas :   function    Defined in  contractWrapperBase.ts:391", 
            "title": "estimateGas"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#type-declaration", 
            "text": "\u25ba(args?:  Array . any ):  number  Parameters:     Param  Type  Description      args  Array . any  -     Returns:   number", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#sendtransaction", 
            "text": "\u25cf  sendTransaction :   function    Defined in  contractWrapperBase.ts:390", 
            "title": "sendTransaction"
        }, 
        {
            "location": "/api/interfaces/ITruffleContractFunction/#type-declaration_1", 
            "text": "\u25ba(args?:  Array . any ):  Promise . Hash  Parameters:     Param  Type  Description      args  Array . any  -     Returns:   Promise . Hash", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/MintableTokenMintOptions/", 
            "text": "API Reference\n \n \nMintableTokenMintOptions\n\n\nInterface: MintableTokenMintOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/mintableToken.ts:141\n\n\nAmount to mint\n\n\n\n\n\n\nrecipient\n\n\n\u25cf  recipient\n:  \nAddress\n \n\n\nDefined in \nwrappers/mintableToken.ts:137\n\n\nThe token recipient", 
            "title": "MintableTokenMintOptions"
        }, 
        {
            "location": "/api/interfaces/MintableTokenMintOptions/#interface-mintabletokenmintoptions", 
            "text": "", 
            "title": "Interface: MintableTokenMintOptions"
        }, 
        {
            "location": "/api/interfaces/MintableTokenMintOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/MintableTokenMintOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/mintableToken.ts:141  Amount to mint", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/MintableTokenMintOptions/#recipient", 
            "text": "\u25cf  recipient :   Address    Defined in  wrappers/mintableToken.ts:137  The token recipient", 
            "title": "recipient"
        }, 
        {
            "location": "/api/interfaces/MintEventResult/", 
            "text": "API Reference\n \n \nMintEventResult\n\n\nInterface: MintEventResult\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/mintableToken.ts:153\n\n\nAmount minted\n\n\n\n\n\n\nto\n\n\n\u25cf  to\n:  \nAddress\n \n\n\nDefined in \nwrappers/mintableToken.ts:149\n\n\nThe token recipient indexed", 
            "title": "MintEventResult"
        }, 
        {
            "location": "/api/interfaces/MintEventResult/#interface-minteventresult", 
            "text": "", 
            "title": "Interface: MintEventResult"
        }, 
        {
            "location": "/api/interfaces/MintEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/MintEventResult/#amount", 
            "text": "\u25cf  amount :   BigNumber    Defined in  wrappers/mintableToken.ts:153  Amount minted", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/MintEventResult/#to", 
            "text": "\u25cf  to :   Address    Defined in  wrappers/mintableToken.ts:149  The token recipient indexed", 
            "title": "to"
        }, 
        {
            "location": "/api/interfaces/MintFinishedEventResult/", 
            "text": "API Reference\n \n \nMintFinishedEventResult\n\n\nInterface: MintFinishedEventResult", 
            "title": "MintFinishedEventResult"
        }, 
        {
            "location": "/api/interfaces/MintFinishedEventResult/#interface-mintfinishedeventresult", 
            "text": "", 
            "title": "Interface: MintFinishedEventResult"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/", 
            "text": "API Reference\n \n \nNewContributionProposalEventResult\n\n\nInterface: NewContributionProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:572\n\n\nindexed\n\n\n\n\n\n\n_beneficiary\n\n\n\u25cf  _beneficiary\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:573\n\n\n\n\n\n\n_contributionDescription\n\n\n\u25cf  _contributionDescription\n:  \nHash\n \n\n\nDefined in \nwrappers/contributionReward.ts:574\n\n\n\n\n\n\n_externalToken\n\n\n\u25cf  _externalToken\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:575\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:579\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/contributionReward.ts:583\n\n\nindexed\n\n\n\n\n\n\n_reputationChange\n\n\n\u25cf  _reputationChange\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:584\n\n\n\n\n\n\n_rewards\n\n\n\u25cf  _rewards\n:  \nArray\n.\nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:585", 
            "title": "NewContributionProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#interface-newcontributionproposaleventresult", 
            "text": "", 
            "title": "Interface: NewContributionProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/contributionReward.ts:572  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_beneficiary", 
            "text": "\u25cf  _beneficiary :   Address    Defined in  wrappers/contributionReward.ts:573", 
            "title": "_beneficiary"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_contributiondescription", 
            "text": "\u25cf  _contributionDescription :   Hash    Defined in  wrappers/contributionReward.ts:574", 
            "title": "_contributionDescription"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_externaltoken", 
            "text": "\u25cf  _externalToken :   Address    Defined in  wrappers/contributionReward.ts:575", 
            "title": "_externalToken"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/contributionReward.ts:579  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/contributionReward.ts:583  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_reputationchange", 
            "text": "\u25cf  _reputationChange :   BigNumber    Defined in  wrappers/contributionReward.ts:584", 
            "title": "_reputationChange"
        }, 
        {
            "location": "/api/interfaces/NewContributionProposalEventResult/#_rewards", 
            "text": "\u25cf  _rewards :   Array . BigNumber    Defined in  wrappers/contributionReward.ts:585", 
            "title": "_rewards"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/", 
            "text": "API Reference\n \n \nNewDaoConfig\n\n\nInterface: NewDaoConfig\n\n\nHierarchy\n\n\nForgeOrgConfig\n\n\nSchemesConfig\n\n\n\u21b3 NewDaoConfig\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb daoCreatorAddress\n\n\n\u25cf  daoCreatorAddress\n:  \nAddress\n \n\n\nDefined in dao.ts:392\n\n\nAddress of a DaoCreator to use. Default is the Arc DaoCreator supplied in this release of Arc.js. If given, the current Arc.js wrapper class must be compatible with Arc contract at the given address.\n\n\n\n\n\n\n\u00abOptional\u00bb founders\n\n\n\u25cf  founders\n:  \nArray\n.\nFounderConfig\n \n\n\nInherited from \nForgeOrgConfig\n.\nfounders\n\n\nDefined in \nwrappers/daoCreator.ts:438\n\n\nOptional array describing founders. Default is [].\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n \n\n\nInherited from \nForgeOrgConfig\n.\nname\n\n\nDefined in \nwrappers/daoCreator.ts:421\n\n\nThe name of the new DAO.\n\n\n\n\n\n\n\u00abOptional\u00bb schemes\n\n\n\u25cf  schemes\n:  \nArray\n.\nSchemeConfig\n \n\n\nInherited from \nSchemesConfig\n.\nschemes\n\n\nDefined in \nwrappers/daoCreator.ts:506\n\n\nAny Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.\n\n\n\n\n\n\n\u00abOptional\u00bb tokenCap\n\n\n\u25cf  tokenCap\n:  \nBigNumber.BigNumber\n\u23ae\nstring\n \n\n\nInherited from \nForgeOrgConfig\n.\ntokenCap\n\n\nDefined in \nwrappers/daoCreator.ts:425\n\n\nOptional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap.\n\n\n\n\n\n\ntokenName\n\n\n\u25cf  tokenName\n:  \nstring\n \n\n\nInherited from \nForgeOrgConfig\n.\ntokenName\n\n\nDefined in \nwrappers/daoCreator.ts:429\n\n\nThe name of the token to be associated with the DAO\n\n\n\n\n\n\ntokenSymbol\n\n\n\u25cf  tokenSymbol\n:  \nstring\n \n\n\nInherited from \nForgeOrgConfig\n.\ntokenSymbol\n\n\nDefined in \nwrappers/daoCreator.ts:433\n\n\nThe symbol of the token to be associated with the DAO\n\n\n\n\n\n\n\u00abOptional\u00bb universalController\n\n\n\u25cf  universalController\n:  \nboolean\n \n\n\nInherited from \nForgeOrgConfig\n.\nuniversalController\n\n\nDefined in \nwrappers/daoCreator.ts:443\n\n\ntrue to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true.\n\n\n\n\n\n\n\u00abOptional\u00bb votingMachineParams\n\n\n\u25cf  votingMachineParams\n:  \nNewDaoVotingMachineConfig\n \n\n\nInherited from \nSchemesConfig\n.\nvotingMachineParams\n\n\nDefined in \nwrappers/daoCreator.ts:500\n\n\nDefault votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters.\n\n\nNew schemes will be created these parameters.\n\n\n!!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.\n\n\nDefaults are described in \nNewDaoVotingMachineConfig\n.", 
            "title": "NewDaoConfig"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#interface-newdaoconfig", 
            "text": "", 
            "title": "Interface: NewDaoConfig"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#hierarchy", 
            "text": "ForgeOrgConfig  SchemesConfig  \u21b3 NewDaoConfig", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#optional-daocreatoraddress", 
            "text": "\u25cf  daoCreatorAddress :   Address    Defined in dao.ts:392  Address of a DaoCreator to use. Default is the Arc DaoCreator supplied in this release of Arc.js. If given, the current Arc.js wrapper class must be compatible with Arc contract at the given address.", 
            "title": "\u00abOptional\u00bb daoCreatorAddress"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#optional-founders", 
            "text": "\u25cf  founders :   Array . FounderConfig    Inherited from  ForgeOrgConfig . founders  Defined in  wrappers/daoCreator.ts:438  Optional array describing founders. Default is [].", 
            "title": "\u00abOptional\u00bb founders"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#name", 
            "text": "\u25cf  name :   string    Inherited from  ForgeOrgConfig . name  Defined in  wrappers/daoCreator.ts:421  The name of the new DAO.", 
            "title": "name"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#optional-schemes", 
            "text": "\u25cf  schemes :   Array . SchemeConfig    Inherited from  SchemesConfig . schemes  Defined in  wrappers/daoCreator.ts:506  Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.", 
            "title": "\u00abOptional\u00bb schemes"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#optional-tokencap", 
            "text": "\u25cf  tokenCap :   BigNumber.BigNumber \u23ae string    Inherited from  ForgeOrgConfig . tokenCap  Defined in  wrappers/daoCreator.ts:425  Optional cap on the number of tokens, in the DAO's token. Default is zero, which means no cap.", 
            "title": "\u00abOptional\u00bb tokenCap"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#tokenname", 
            "text": "\u25cf  tokenName :   string    Inherited from  ForgeOrgConfig . tokenName  Defined in  wrappers/daoCreator.ts:429  The name of the token to be associated with the DAO", 
            "title": "tokenName"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#tokensymbol", 
            "text": "\u25cf  tokenSymbol :   string    Inherited from  ForgeOrgConfig . tokenSymbol  Defined in  wrappers/daoCreator.ts:433  The symbol of the token to be associated with the DAO", 
            "title": "tokenSymbol"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#optional-universalcontroller", 
            "text": "\u25cf  universalController :   boolean    Inherited from  ForgeOrgConfig . universalController  Defined in  wrappers/daoCreator.ts:443  true to use the UniversalController contract, false to instantiate and use a new Controller contract. The default is true.", 
            "title": "\u00abOptional\u00bb universalController"
        }, 
        {
            "location": "/api/interfaces/NewDaoConfig/#optional-votingmachineparams", 
            "text": "\u25cf  votingMachineParams :   NewDaoVotingMachineConfig    Inherited from  SchemesConfig . votingMachineParams  Defined in  wrappers/daoCreator.ts:500  Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters.  New schemes will be created these parameters.  !!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.  Defaults are described in  NewDaoVotingMachineConfig .", 
            "title": "\u00abOptional\u00bb votingMachineParams"
        }, 
        {
            "location": "/api/interfaces/NewDaoVotingMachineConfig/", 
            "text": "API Reference\n \n \nNewDaoVotingMachineConfig\n\n\nInterface: NewDaoVotingMachineConfig\n\n\nIndexable\n\n\n[x: \nstring\n]:\nany\n\nYou can add your voting-machine-specific parameters here, like ownerVote, votePerc, etc\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb reputation\n\n\n\u25cf  reputation\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:397\n\n\nOptional Reputation address. Default is the new DAO's native reputation.\n\n\n\n\n\n\n\u00abOptional\u00bb votingMachineAddress\n\n\n\u25cf  votingMachineAddress\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:407\n\n\nOptional VotingMachine address Default is that of AbsoluteVote\n\n\n\n\n\n\n\u00abOptional\u00bb votingMachineName\n\n\n\u25cf  votingMachineName\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:402\n\n\nOptional VotingMachine name Default is AbsoluteVote", 
            "title": "NewDaoVotingMachineConfig"
        }, 
        {
            "location": "/api/interfaces/NewDaoVotingMachineConfig/#interface-newdaovotingmachineconfig", 
            "text": "", 
            "title": "Interface: NewDaoVotingMachineConfig"
        }, 
        {
            "location": "/api/interfaces/NewDaoVotingMachineConfig/#indexable", 
            "text": "[x:  string ]: any \nYou can add your voting-machine-specific parameters here, like ownerVote, votePerc, etc", 
            "title": "Indexable"
        }, 
        {
            "location": "/api/interfaces/NewDaoVotingMachineConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewDaoVotingMachineConfig/#optional-reputation", 
            "text": "\u25cf  reputation :   string    Defined in  wrappers/daoCreator.ts:397  Optional Reputation address. Default is the new DAO's native reputation.", 
            "title": "\u00abOptional\u00bb reputation"
        }, 
        {
            "location": "/api/interfaces/NewDaoVotingMachineConfig/#optional-votingmachineaddress", 
            "text": "\u25cf  votingMachineAddress :   string    Defined in  wrappers/daoCreator.ts:407  Optional VotingMachine address Default is that of AbsoluteVote", 
            "title": "\u00abOptional\u00bb votingMachineAddress"
        }, 
        {
            "location": "/api/interfaces/NewDaoVotingMachineConfig/#optional-votingmachinename", 
            "text": "\u25cf  votingMachineName :   string    Defined in  wrappers/daoCreator.ts:402  Optional VotingMachine name Default is AbsoluteVote", 
            "title": "\u00abOptional\u00bb votingMachineName"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/", 
            "text": "API Reference\n \n \nNewGlobalConstraintsProposalEventResult\n\n\nInterface: NewGlobalConstraintsProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:239\n\n\nindexed\n\n\n\n\n\n\n_gc\n\n\n\u25cf  _gc\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:244\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:243\n\n\nindexed\n\n\n\n\n\n\n_params\n\n\n\u25cf  _params\n:  \nHash\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:245\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:249\n\n\nindexed\n\n\n\n\n\n\n_voteToRemoveParams\n\n\n\u25cf  _voteToRemoveParams\n:  \nHash\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:250", 
            "title": "NewGlobalConstraintsProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#interface-newglobalconstraintsproposaleventresult", 
            "text": "", 
            "title": "Interface: NewGlobalConstraintsProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:239  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#_gc", 
            "text": "\u25cf  _gc :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:244", 
            "title": "_gc"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:243  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#_params", 
            "text": "\u25cf  _params :   Hash    Defined in  wrappers/globalConstraintRegistrar.ts:245", 
            "title": "_params"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/globalConstraintRegistrar.ts:249  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/NewGlobalConstraintsProposalEventResult/#_votetoremoveparams", 
            "text": "\u25cf  _voteToRemoveParams :   Hash    Defined in  wrappers/globalConstraintRegistrar.ts:250", 
            "title": "_voteToRemoveParams"
        }, 
        {
            "location": "/api/interfaces/NewOrgEventResult/", 
            "text": "API Reference\n \n \nNewOrgEventResult\n\n\nInterface: NewOrgEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/daoCreator.ts:369", 
            "title": "NewOrgEventResult"
        }, 
        {
            "location": "/api/interfaces/NewOrgEventResult/#interface-neworgeventresult", 
            "text": "", 
            "title": "Interface: NewOrgEventResult"
        }, 
        {
            "location": "/api/interfaces/NewOrgEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewOrgEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/daoCreator.ts:369", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/", 
            "text": "API Reference\n \n \nNewProposalEventResult\n\n\nInterface: NewProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:93\n\n\nindexed\n\n\n\n\n\n\n_numOfChoices\n\n\n\u25cf  _numOfChoices\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:94\n\n\n\n\n\n\n_paramsHash\n\n\n\u25cf  _paramsHash\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:95\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:99\n\n\nindexed\n\n\n\n\n\n\n_proposer\n\n\n\u25cf  _proposer\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:100", 
            "title": "NewProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/#interface-newproposaleventresult", 
            "text": "", 
            "title": "Interface: NewProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/iIntVoteInterface.ts:93  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/#_numofchoices", 
            "text": "\u25cf  _numOfChoices :   BigNumber    Defined in  wrappers/iIntVoteInterface.ts:94", 
            "title": "_numOfChoices"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/#_paramshash", 
            "text": "\u25cf  _paramsHash :   Hash    Defined in  wrappers/iIntVoteInterface.ts:95", 
            "title": "_paramsHash"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/iIntVoteInterface.ts:99  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/NewProposalEventResult/#_proposer", 
            "text": "\u25cf  _proposer :   Address    Defined in  wrappers/iIntVoteInterface.ts:100", 
            "title": "_proposer"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/", 
            "text": "API Reference\n \n \nNewSchemeProposalEventResult\n\n\nInterface: NewSchemeProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:278\n\n\nindexed\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:282\n\n\nindexed\n\n\n\n\n\n\n_parametersHash\n\n\n\u25cf  _parametersHash\n:  \nHash\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:284\n\n\n\n\n\n\n_permissions\n\n\n\u25cf  _permissions\n:  \nstring\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:283\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:288\n\n\nindexed\n\n\n\n\n\n\n_scheme\n\n\n\u25cf  _scheme\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:289", 
            "title": "NewSchemeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#interface-newschemeproposaleventresult", 
            "text": "", 
            "title": "Interface: NewSchemeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/schemeRegistrar.ts:278  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/schemeRegistrar.ts:282  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#_parametershash", 
            "text": "\u25cf  _parametersHash :   Hash    Defined in  wrappers/schemeRegistrar.ts:284", 
            "title": "_parametersHash"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#_permissions", 
            "text": "\u25cf  _permissions :   string    Defined in  wrappers/schemeRegistrar.ts:283", 
            "title": "_permissions"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/schemeRegistrar.ts:288  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/NewSchemeProposalEventResult/#_scheme", 
            "text": "\u25cf  _scheme :   Address    Defined in  wrappers/schemeRegistrar.ts:289", 
            "title": "_scheme"
        }, 
        {
            "location": "/api/interfaces/NewUpgradeProposalEventResult/", 
            "text": "API Reference\n \n \nNewUpgradeProposalEventResult\n\n\nInterface: NewUpgradeProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:232\n\n\nindexed\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:236\n\n\nindexed\n\n\n\n\n\n\n_newController\n\n\n\u25cf  _newController\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:237\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:241\n\n\nindexed", 
            "title": "NewUpgradeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewUpgradeProposalEventResult/#interface-newupgradeproposaleventresult", 
            "text": "", 
            "title": "Interface: NewUpgradeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewUpgradeProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewUpgradeProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/upgradeScheme.ts:232  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/NewUpgradeProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/upgradeScheme.ts:236  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/NewUpgradeProposalEventResult/#_newcontroller", 
            "text": "\u25cf  _newController :   Address    Defined in  wrappers/upgradeScheme.ts:237", 
            "title": "_newController"
        }, 
        {
            "location": "/api/interfaces/NewUpgradeProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/upgradeScheme.ts:241  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/NewVestedAgreementEventResult/", 
            "text": "API Reference\n \n \nNewVestedAgreementEventResult\n\n\nInterface: NewVestedAgreementEventResult\n\n\nProperties\n\n\n\n\n_agreementId\n\n\n\u25cf  _agreementId\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:460\n\n\nindexed", 
            "title": "NewVestedAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/NewVestedAgreementEventResult/#interface-newvestedagreementeventresult", 
            "text": "", 
            "title": "Interface: NewVestedAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/NewVestedAgreementEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewVestedAgreementEventResult/#_agreementid", 
            "text": "\u25cf  _agreementId :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:460  indexed", 
            "title": "_agreementId"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/", 
            "text": "API Reference\n \n \nNewVoteProposalEventResult\n\n\nInterface: NewVoteProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:220\n\n\nindexed\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:224\n\n\nindexed\n\n\n\n\n\n\n_originalIntVote\n\n\n\u25cf  _originalIntVote\n:  \nAddress\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:225\n\n\n\n\n\n\n_originalNumOfChoices\n\n\n\u25cf  _originalNumOfChoices\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:227\n\n\n\n\n\n\n_originalProposalId\n\n\n\u25cf  _originalProposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:226\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:231\n\n\nindexed", 
            "title": "NewVoteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#interface-newvoteproposaleventresult", 
            "text": "", 
            "title": "Interface: NewVoteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/voteInOrganizationScheme.ts:220  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/voteInOrganizationScheme.ts:224  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#_originalintvote", 
            "text": "\u25cf  _originalIntVote :   Address    Defined in  wrappers/voteInOrganizationScheme.ts:225", 
            "title": "_originalIntVote"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#_originalnumofchoices", 
            "text": "\u25cf  _originalNumOfChoices :   BigNumber    Defined in  wrappers/voteInOrganizationScheme.ts:227", 
            "title": "_originalNumOfChoices"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#_originalproposalid", 
            "text": "\u25cf  _originalProposalId :   Hash    Defined in  wrappers/voteInOrganizationScheme.ts:226", 
            "title": "_originalProposalId"
        }, 
        {
            "location": "/api/interfaces/NewVoteProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/voteInOrganizationScheme.ts:231  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/OwnerVoteOptions/", 
            "text": "API Reference\n \n \nOwnerVoteOptions\n\n\nInterface: OwnerVoteOptions\n\n\nHierarchy\n\n\nProposalIdOption\n\n\n\u21b3 OwnerVoteOptions\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nInherited from \nProposalIdOption\n.\nproposalId\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:60\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:42\n\n\n\n\n\n\nvoterAddress\n\n\n\u25cf  voterAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:43", 
            "title": "OwnerVoteOptions"
        }, 
        {
            "location": "/api/interfaces/OwnerVoteOptions/#interface-ownervoteoptions", 
            "text": "", 
            "title": "Interface: OwnerVoteOptions"
        }, 
        {
            "location": "/api/interfaces/OwnerVoteOptions/#hierarchy", 
            "text": "ProposalIdOption  \u21b3 OwnerVoteOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/OwnerVoteOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/OwnerVoteOptions/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Inherited from  ProposalIdOption . proposalId  Defined in  wrappers/iIntVoteInterface.ts:60", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/OwnerVoteOptions/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/iIntVoteInterface.ts:42", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/OwnerVoteOptions/#voteraddress", 
            "text": "\u25cf  voterAddress :   Address    Defined in  wrappers/iIntVoteInterface.ts:43", 
            "title": "voterAddress"
        }, 
        {
            "location": "/api/interfaces/Participant/", 
            "text": "API Reference\n \n \nParticipant\n\n\nInterface: Participant\n\n\nProperties\n\n\n\n\naddress\n\n\n\u25cf  address\n:  \nAddress\n \n\n\nDefined in dao.ts:454\n\n\n\n\n\n\n\u00abOptional\u00bb reputation\n\n\n\u25cf  reputation\n:  \nBigNumber\n \n\n\nDefined in dao.ts:455", 
            "title": "Participant"
        }, 
        {
            "location": "/api/interfaces/Participant/#interface-participant", 
            "text": "", 
            "title": "Interface: Participant"
        }, 
        {
            "location": "/api/interfaces/Participant/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/Participant/#address", 
            "text": "\u25cf  address :   Address    Defined in dao.ts:454", 
            "title": "address"
        }, 
        {
            "location": "/api/interfaces/Participant/#optional-reputation", 
            "text": "\u25cf  reputation :   BigNumber    Defined in dao.ts:455", 
            "title": "\u00abOptional\u00bb reputation"
        }, 
        {
            "location": "/api/interfaces/ProposalDeletedEventResult/", 
            "text": "API Reference\n \n \nProposalDeletedEventResult\n\n\nInterface: ProposalDeletedEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:8\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:12\n\n\nindexed", 
            "title": "ProposalDeletedEventResult"
        }, 
        {
            "location": "/api/interfaces/ProposalDeletedEventResult/#interface-proposaldeletedeventresult", 
            "text": "", 
            "title": "Interface: ProposalDeletedEventResult"
        }, 
        {
            "location": "/api/interfaces/ProposalDeletedEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposalDeletedEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/commonEventInterfaces.ts:8  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/ProposalDeletedEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/commonEventInterfaces.ts:12  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/ProposalEntity/", 
            "text": "API Reference\n \n \nProposalEntity\n\n\nInterface: ProposalEntity\n\n\nProperties\n\n\n\n\nvotingMachine\n\n\n\u25cf  votingMachine\n:  \nIntVoteInterfaceWrapper\n \n\n\nDefined in \nproposalService.ts:188", 
            "title": "ProposalEntity"
        }, 
        {
            "location": "/api/interfaces/ProposalEntity/#interface-proposalentity", 
            "text": "", 
            "title": "Interface: ProposalEntity"
        }, 
        {
            "location": "/api/interfaces/ProposalEntity/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposalEntity/#votingmachine", 
            "text": "\u25cf  votingMachine :   IntVoteInterfaceWrapper    Defined in  proposalService.ts:188", 
            "title": "votingMachine"
        }, 
        {
            "location": "/api/interfaces/ProposalExecutedEventResult/", 
            "text": "API Reference\n \n \nProposalExecutedEventResult\n\n\nInterface: ProposalExecutedEventResult\n\n\nfired by schemes\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:22\n\n\nindexed\n\n\n\n\n\n\n_param\n\n\n\u25cf  _param\n:  \nnumber\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:23\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:27\n\n\nindexed", 
            "title": "ProposalExecutedEventResult"
        }, 
        {
            "location": "/api/interfaces/ProposalExecutedEventResult/#interface-proposalexecutedeventresult", 
            "text": "fired by schemes", 
            "title": "Interface: ProposalExecutedEventResult"
        }, 
        {
            "location": "/api/interfaces/ProposalExecutedEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposalExecutedEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/commonEventInterfaces.ts:22  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/ProposalExecutedEventResult/#_param", 
            "text": "\u25cf  _param :   number    Defined in  wrappers/commonEventInterfaces.ts:23", 
            "title": "_param"
        }, 
        {
            "location": "/api/interfaces/ProposalExecutedEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/commonEventInterfaces.ts:27  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/ProposalIdOption/", 
            "text": "API Reference\n \n \nProposalIdOption\n\n\nInterface: ProposalIdOption\n\n\nHierarchy\n\n\nProposalIdOption\n\n\n\u21b3  \nOwnerVoteOptions\n\n\n\u21b3  \nVoteOptions\n\n\n\u21b3  \nVoteWithSpecifiedAmountsOptions\n\n\n\u21b3  \nVoteStatusOptions\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:60", 
            "title": "ProposalIdOption"
        }, 
        {
            "location": "/api/interfaces/ProposalIdOption/#interface-proposalidoption", 
            "text": "", 
            "title": "Interface: ProposalIdOption"
        }, 
        {
            "location": "/api/interfaces/ProposalIdOption/#hierarchy", 
            "text": "ProposalIdOption  \u21b3   OwnerVoteOptions  \u21b3   VoteOptions  \u21b3   VoteWithSpecifiedAmountsOptions  \u21b3   VoteStatusOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ProposalIdOption/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposalIdOption/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/iIntVoteInterface.ts:60", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/", 
            "text": "API Reference\n \n \nProposalRewards\n\n\nInterface: ProposalRewards\n\n\nProperties\n\n\n\n\nethAvailableToReward\n\n\n\u25cf  ethAvailableToReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:606\n\n\nThe amount of ETH the DAO currently has on hand to reward.\n\n\n\n\n\n\nethReward\n\n\n\u25cf  ethReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:610\n\n\nThe total ETH reward\n\n\n\n\n\n\nethRewardRedeemable\n\n\n\u25cf  ethRewardRedeemable\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:618\n\n\nThe currently-redeemable external token reward\n\n\n\n\n\n\nethRewardUnredeemed\n\n\n\u25cf  ethRewardUnredeemed\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:614\n\n\nThe total unredeemed amount of ETH\n\n\n\n\n\n\nexternalTokenReward\n\n\n\u25cf  externalTokenReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:626\n\n\nThe total external token reward\n\n\n\n\n\n\nexternalTokenRewardRedeemable\n\n\n\u25cf  externalTokenRewardRedeemable\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:634\n\n\nThe currently-redeemable external token reward\n\n\n\n\n\n\nexternalTokenRewardUnredeemed\n\n\n\u25cf  externalTokenRewardUnredeemed\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:630\n\n\nThe total unredeemed number of external tokens\n\n\n\n\n\n\nexternalTokensAvailableToReward\n\n\n\u25cf  externalTokensAvailableToReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:622\n\n\nThe amount of external tokens the DAO currently has on hand to reward.\n\n\n\n\n\n\nnativeTokenReward\n\n\n\u25cf  nativeTokenReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:638\n\n\nThe total native token reward\n\n\n\n\n\n\nnativeTokenRewardRedeemable\n\n\n\u25cf  nativeTokenRewardRedeemable\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:646\n\n\nThe currently-redeemable native token reward\n\n\n\n\n\n\nnativeTokenRewardUnredeemed\n\n\n\u25cf  nativeTokenRewardUnredeemed\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:642\n\n\nThe total unredeemed number of native tokens\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/contributionReward.ts:650\n\n\nThe proposal Id\n\n\n\n\n\n\nreputationChange\n\n\n\u25cf  reputationChange\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:654\n\n\nThe total reputation reward\n\n\n\n\n\n\nreputationChangeRedeemable\n\n\n\u25cf  reputationChangeRedeemable\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:662\n\n\nThe currently-redeemable reputation reward\n\n\n\n\n\n\nreputationChangeUnredeemed\n\n\n\u25cf  reputationChangeUnredeemed\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:658\n\n\nThe total unredeemed amount of reputation", 
            "title": "ProposalRewards"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#interface-proposalrewards", 
            "text": "", 
            "title": "Interface: ProposalRewards"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#ethavailabletoreward", 
            "text": "\u25cf  ethAvailableToReward :   BigNumber    Defined in  wrappers/contributionReward.ts:606  The amount of ETH the DAO currently has on hand to reward.", 
            "title": "ethAvailableToReward"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#ethreward", 
            "text": "\u25cf  ethReward :   BigNumber    Defined in  wrappers/contributionReward.ts:610  The total ETH reward", 
            "title": "ethReward"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#ethrewardredeemable", 
            "text": "\u25cf  ethRewardRedeemable :   BigNumber    Defined in  wrappers/contributionReward.ts:618  The currently-redeemable external token reward", 
            "title": "ethRewardRedeemable"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#ethrewardunredeemed", 
            "text": "\u25cf  ethRewardUnredeemed :   BigNumber    Defined in  wrappers/contributionReward.ts:614  The total unredeemed amount of ETH", 
            "title": "ethRewardUnredeemed"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#externaltokenreward", 
            "text": "\u25cf  externalTokenReward :   BigNumber    Defined in  wrappers/contributionReward.ts:626  The total external token reward", 
            "title": "externalTokenReward"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#externaltokenrewardredeemable", 
            "text": "\u25cf  externalTokenRewardRedeemable :   BigNumber    Defined in  wrappers/contributionReward.ts:634  The currently-redeemable external token reward", 
            "title": "externalTokenRewardRedeemable"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#externaltokenrewardunredeemed", 
            "text": "\u25cf  externalTokenRewardUnredeemed :   BigNumber    Defined in  wrappers/contributionReward.ts:630  The total unredeemed number of external tokens", 
            "title": "externalTokenRewardUnredeemed"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#externaltokensavailabletoreward", 
            "text": "\u25cf  externalTokensAvailableToReward :   BigNumber    Defined in  wrappers/contributionReward.ts:622  The amount of external tokens the DAO currently has on hand to reward.", 
            "title": "externalTokensAvailableToReward"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#nativetokenreward", 
            "text": "\u25cf  nativeTokenReward :   BigNumber    Defined in  wrappers/contributionReward.ts:638  The total native token reward", 
            "title": "nativeTokenReward"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#nativetokenrewardredeemable", 
            "text": "\u25cf  nativeTokenRewardRedeemable :   BigNumber    Defined in  wrappers/contributionReward.ts:646  The currently-redeemable native token reward", 
            "title": "nativeTokenRewardRedeemable"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#nativetokenrewardunredeemed", 
            "text": "\u25cf  nativeTokenRewardUnredeemed :   BigNumber    Defined in  wrappers/contributionReward.ts:642  The total unredeemed number of native tokens", 
            "title": "nativeTokenRewardUnredeemed"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/contributionReward.ts:650  The proposal Id", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#reputationchange", 
            "text": "\u25cf  reputationChange :   BigNumber    Defined in  wrappers/contributionReward.ts:654  The total reputation reward", 
            "title": "reputationChange"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#reputationchangeredeemable", 
            "text": "\u25cf  reputationChangeRedeemable :   BigNumber    Defined in  wrappers/contributionReward.ts:662  The currently-redeemable reputation reward", 
            "title": "reputationChangeRedeemable"
        }, 
        {
            "location": "/api/interfaces/ProposalRewards/#reputationchangeunredeemed", 
            "text": "\u25cf  reputationChangeUnredeemed :   BigNumber    Defined in  wrappers/contributionReward.ts:658  The total unredeemed amount of reputation", 
            "title": "reputationChangeUnredeemed"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/", 
            "text": "API Reference\n \n \nProposeContributionRewardParams\n\n\nInterface: ProposeContributionRewardParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/contributionReward.ts:703\n\n\navatar address\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:750\n\n\nbeneficiary address\n\n\n\n\n\n\ndescription\n\n\n\u25cf  description\n:  \nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:707\n\n\ndescription of the constraint\n\n\n\n\n\n\n\u00abOptional\u00bb ethReward\n\n\n\u25cf  ethReward\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:724\n\n\nReward per period, in ethers. Must be \n= 0. In Wei. Default is 0;\n\n\n\n\n\n\n\u00abOptional\u00bb externalToken\n\n\n\u25cf  externalToken\n:  \nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:746\n\n\nThe address of the external token (for externalTokenReward) Only required when externalTokenReward is non-zero.\n\n\n\n\n\n\n\u00abOptional\u00bb externalTokenReward\n\n\n\u25cf  externalTokenReward\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:730\n\n\nReward per period in the given external token. Must be \n= 0. In Wei. Default is 0;\n\n\n\n\n\n\n\u00abOptional\u00bb nativeTokenReward\n\n\n\u25cf  nativeTokenReward\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:718\n\n\nReward in tokens per period, in the DAO's native token. Must be \n= 0. In Wei. Default is 0;\n\n\n\n\n\n\nnumberOfPeriods\n\n\n\u25cf  numberOfPeriods\n:  \nnumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:741\n\n\nMaximum number of periods that can be paid out. Must be \n 0.\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nnumber\n \n\n\nDefined in \nwrappers/contributionReward.ts:736\n\n\nThe number of blocks in a period. Must be \n= 0. If zero then the rewards will be redeemable immediately upon proposal execution.\n\n\n\n\n\n\n\u00abOptional\u00bb reputationChange\n\n\n\u25cf  reputationChange\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/contributionReward.ts:712\n\n\nAmount of reputation change requested, per period. Can be negative. In Wei. Default is 0;", 
            "title": "ProposeContributionRewardParams"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#interface-proposecontributionrewardparams", 
            "text": "", 
            "title": "Interface: ProposeContributionRewardParams"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/contributionReward.ts:703  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   string    Defined in  wrappers/contributionReward.ts:750  beneficiary address", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#description", 
            "text": "\u25cf  description :   string    Defined in  wrappers/contributionReward.ts:707  description of the constraint", 
            "title": "description"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#optional-ethreward", 
            "text": "\u25cf  ethReward :   BigNumber \u23ae string    Defined in  wrappers/contributionReward.ts:724  Reward per period, in ethers. Must be  = 0. In Wei. Default is 0;", 
            "title": "\u00abOptional\u00bb ethReward"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#optional-externaltoken", 
            "text": "\u25cf  externalToken :   string    Defined in  wrappers/contributionReward.ts:746  The address of the external token (for externalTokenReward) Only required when externalTokenReward is non-zero.", 
            "title": "\u00abOptional\u00bb externalToken"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#optional-externaltokenreward", 
            "text": "\u25cf  externalTokenReward :   BigNumber \u23ae string    Defined in  wrappers/contributionReward.ts:730  Reward per period in the given external token. Must be  = 0. In Wei. Default is 0;", 
            "title": "\u00abOptional\u00bb externalTokenReward"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#optional-nativetokenreward", 
            "text": "\u25cf  nativeTokenReward :   BigNumber \u23ae string    Defined in  wrappers/contributionReward.ts:718  Reward in tokens per period, in the DAO's native token. Must be  = 0. In Wei. Default is 0;", 
            "title": "\u00abOptional\u00bb nativeTokenReward"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#numberofperiods", 
            "text": "\u25cf  numberOfPeriods :   number    Defined in  wrappers/contributionReward.ts:741  Maximum number of periods that can be paid out. Must be   0.", 
            "title": "numberOfPeriods"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#periodlength", 
            "text": "\u25cf  periodLength :   number    Defined in  wrappers/contributionReward.ts:736  The number of blocks in a period. Must be  = 0. If zero then the rewards will be redeemable immediately upon proposal execution.", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/ProposeContributionRewardParams/#optional-reputationchange", 
            "text": "\u25cf  reputationChange :   BigNumber \u23ae string    Defined in  wrappers/contributionReward.ts:712  Amount of reputation change requested, per period. Can be negative. In Wei. Default is 0;", 
            "title": "\u00abOptional\u00bb reputationChange"
        }, 
        {
            "location": "/api/interfaces/ProposeControllerParams/", 
            "text": "API Reference\n \n \nProposeControllerParams\n\n\nInterface: ProposeControllerParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:280\n\n\navatar address\n\n\n\n\n\n\ncontroller\n\n\n\u25cf  controller\n:  \nstring\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:284\n\n\ncontroller address", 
            "title": "ProposeControllerParams"
        }, 
        {
            "location": "/api/interfaces/ProposeControllerParams/#interface-proposecontrollerparams", 
            "text": "", 
            "title": "Interface: ProposeControllerParams"
        }, 
        {
            "location": "/api/interfaces/ProposeControllerParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeControllerParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/upgradeScheme.ts:280  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeControllerParams/#controller", 
            "text": "\u25cf  controller :   string    Defined in  wrappers/upgradeScheme.ts:284  controller address", 
            "title": "controller"
        }, 
        {
            "location": "/api/interfaces/ProposedVestedAgreementEventResult/", 
            "text": "API Reference\n \n \nProposedVestedAgreementEventResult\n\n\nInterface: ProposedVestedAgreementEventResult\n\n\nProperties\n\n\n\n\n_agreementId\n\n\n\u25cf  _agreementId\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:467\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/vestingScheme.ts:471\n\n\nindexed", 
            "title": "ProposedVestedAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/ProposedVestedAgreementEventResult/#interface-proposedvestedagreementeventresult", 
            "text": "", 
            "title": "Interface: ProposedVestedAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/ProposedVestedAgreementEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposedVestedAgreementEventResult/#_agreementid", 
            "text": "\u25cf  _agreementId :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:467  indexed", 
            "title": "_agreementId"
        }, 
        {
            "location": "/api/interfaces/ProposedVestedAgreementEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/vestingScheme.ts:471  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/", 
            "text": "API Reference\n \n \nProposeOptions\n\n\nInterface: ProposeOptions\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:34\n\n\n\n\n\n\nexecutable\n\n\n\u25cf  executable\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:35\n\n\n\n\n\n\nnumOfChoices\n\n\n\u25cf  numOfChoices\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:36\n\n\n\n\n\n\n\u00abOptional\u00bb proposalParameters\n\n\n\u25cf  proposalParameters\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:38\n\n\n\n\n\n\n\u00abOptional\u00bb proposerAddress\n\n\n\u25cf  proposerAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:37", 
            "title": "ProposeOptions"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/#interface-proposeoptions", 
            "text": "", 
            "title": "Interface: ProposeOptions"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Defined in  wrappers/iIntVoteInterface.ts:34", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/#executable", 
            "text": "\u25cf  executable :   Address    Defined in  wrappers/iIntVoteInterface.ts:35", 
            "title": "executable"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/#numofchoices", 
            "text": "\u25cf  numOfChoices :   number    Defined in  wrappers/iIntVoteInterface.ts:36", 
            "title": "numOfChoices"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/#optional-proposalparameters", 
            "text": "\u25cf  proposalParameters :   Hash    Defined in  wrappers/iIntVoteInterface.ts:38", 
            "title": "\u00abOptional\u00bb proposalParameters"
        }, 
        {
            "location": "/api/interfaces/ProposeOptions/#optional-proposeraddress", 
            "text": "\u25cf  proposerAddress :   Address    Defined in  wrappers/iIntVoteInterface.ts:37", 
            "title": "\u00abOptional\u00bb proposerAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifyGlobalConstraintParams/", 
            "text": "API Reference\n \n \nProposeToAddModifyGlobalConstraintParams\n\n\nInterface: ProposeToAddModifyGlobalConstraintParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:273\n\n\navatar address\n\n\n\n\n\n\nglobalConstraint\n\n\n\u25cf  globalConstraint\n:  \nstring\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:277\n\n\nthe address of the global constraint to add\n\n\n\n\n\n\nglobalConstraintParametersHash\n\n\n\u25cf  globalConstraintParametersHash\n:  \nstring\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:281\n\n\nhash of the parameters of the global contraint\n\n\n\n\n\n\nvotingMachineHash\n\n\n\u25cf  votingMachineHash\n:  \nstring\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:285\n\n\nvoting machine to use when voting to remove the global constraint", 
            "title": "ProposeToAddModifyGlobalConstraintParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifyGlobalConstraintParams/#interface-proposetoaddmodifyglobalconstraintparams", 
            "text": "", 
            "title": "Interface: ProposeToAddModifyGlobalConstraintParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifyGlobalConstraintParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifyGlobalConstraintParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:273  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifyGlobalConstraintParams/#globalconstraint", 
            "text": "\u25cf  globalConstraint :   string    Defined in  wrappers/globalConstraintRegistrar.ts:277  the address of the global constraint to add", 
            "title": "globalConstraint"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifyGlobalConstraintParams/#globalconstraintparametershash", 
            "text": "\u25cf  globalConstraintParametersHash :   string    Defined in  wrappers/globalConstraintRegistrar.ts:281  hash of the parameters of the global contraint", 
            "title": "globalConstraintParametersHash"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifyGlobalConstraintParams/#votingmachinehash", 
            "text": "\u25cf  votingMachineHash :   string    Defined in  wrappers/globalConstraintRegistrar.ts:285  voting machine to use when voting to remove the global constraint", 
            "title": "votingMachineHash"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/", 
            "text": "API Reference\n \n \nProposeToAddModifySchemeParams\n\n\nInterface: ProposeToAddModifySchemeParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:312\n\n\navatar address\n\n\n\n\n\n\n\u00abOptional\u00bb permissions\n\n\n\u25cf  permissions\n:  \nSchemePermissions\n\u23ae\nnull\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:336\n\n\nOptionally supply values from SchemePermissions or DefaultSchemePermissions.\n\n\nThis value is manditory for non-Arc schemes.\n\n\nFor Arc schemes the default is taken from DefaultSchemePermissions for the scheme given by schemeName.\n\n\n\n\n\n\n\u00abOptional\u00bb schemeAddress\n\n\n\u25cf  schemeAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:318\n\n\nOptional scheme address. Supply this if you are submitting a non-Arc scheme or wish to use a different Arc scheme than the default. In the latter case, you must also supply the schemeName.\n\n\n\n\n\n\n\u00abOptional\u00bb schemeName\n\n\n\u25cf  schemeName\n:  \nstring\n\u23ae\nnull\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:323\n\n\nScheme name, like \"SchemeRegistrar\" or \"ContributionReward\". Not required if you are registering a non-arc scheme.\n\n\n\n\n\n\nschemeParametersHash\n\n\n\u25cf  schemeParametersHash\n:  \nstring\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:327\n\n\nFash of scheme parameters. These must be already registered with the new scheme.", 
            "title": "ProposeToAddModifySchemeParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/#interface-proposetoaddmodifyschemeparams", 
            "text": "", 
            "title": "Interface: ProposeToAddModifySchemeParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/schemeRegistrar.ts:312  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/#optional-permissions", 
            "text": "\u25cf  permissions :   SchemePermissions \u23ae null    Defined in  wrappers/schemeRegistrar.ts:336  Optionally supply values from SchemePermissions or DefaultSchemePermissions.  This value is manditory for non-Arc schemes.  For Arc schemes the default is taken from DefaultSchemePermissions for the scheme given by schemeName.", 
            "title": "\u00abOptional\u00bb permissions"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/#optional-schemeaddress", 
            "text": "\u25cf  schemeAddress :   Address    Defined in  wrappers/schemeRegistrar.ts:318  Optional scheme address. Supply this if you are submitting a non-Arc scheme or wish to use a different Arc scheme than the default. In the latter case, you must also supply the schemeName.", 
            "title": "\u00abOptional\u00bb schemeAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/#optional-schemename", 
            "text": "\u25cf  schemeName :   string \u23ae null    Defined in  wrappers/schemeRegistrar.ts:323  Scheme name, like \"SchemeRegistrar\" or \"ContributionReward\". Not required if you are registering a non-arc scheme.", 
            "title": "\u00abOptional\u00bb schemeName"
        }, 
        {
            "location": "/api/interfaces/ProposeToAddModifySchemeParams/#schemeparametershash", 
            "text": "\u25cf  schemeParametersHash :   string    Defined in  wrappers/schemeRegistrar.ts:327  Fash of scheme parameters. These must be already registered with the new scheme.", 
            "title": "schemeParametersHash"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveGlobalConstraintParams/", 
            "text": "API Reference\n \n \nProposeToRemoveGlobalConstraintParams\n\n\nInterface: ProposeToRemoveGlobalConstraintParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:292\n\n\navatar address\n\n\n\n\n\n\nglobalConstraintAddress\n\n\n\u25cf  globalConstraintAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:296\n\n\nthe address of the global constraint to remove", 
            "title": "ProposeToRemoveGlobalConstraintParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveGlobalConstraintParams/#interface-proposetoremoveglobalconstraintparams", 
            "text": "", 
            "title": "Interface: ProposeToRemoveGlobalConstraintParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveGlobalConstraintParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveGlobalConstraintParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:292  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveGlobalConstraintParams/#globalconstraintaddress", 
            "text": "\u25cf  globalConstraintAddress :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:296  the address of the global constraint to remove", 
            "title": "globalConstraintAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveSchemeParams/", 
            "text": "API Reference\n \n \nProposeToRemoveSchemeParams\n\n\nInterface: ProposeToRemoveSchemeParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:343\n\n\navatar address\n\n\n\n\n\n\nschemeAddress\n\n\n\u25cf  schemeAddress\n:  \nstring\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:347\n\n\nthe address of the global constraint to remove", 
            "title": "ProposeToRemoveSchemeParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveSchemeParams/#interface-proposetoremoveschemeparams", 
            "text": "", 
            "title": "Interface: ProposeToRemoveSchemeParams"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveSchemeParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveSchemeParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/schemeRegistrar.ts:343  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeToRemoveSchemeParams/#schemeaddress", 
            "text": "\u25cf  schemeAddress :   string    Defined in  wrappers/schemeRegistrar.ts:347  the address of the global constraint to remove", 
            "title": "schemeAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeUpgradingSchemeParams/", 
            "text": "API Reference\n \n \nProposeUpgradingSchemeParams\n\n\nInterface: ProposeUpgradingSchemeParams\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:265\n\n\navatar address\n\n\n\n\n\n\nscheme\n\n\n\u25cf  scheme\n:  \nstring\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:269\n\n\nupgrading scheme address\n\n\n\n\n\n\nschemeParametersHash\n\n\n\u25cf  schemeParametersHash\n:  \nstring\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:273\n\n\nhash of the parameters of the upgrading scheme. These must be already registered with the new scheme.", 
            "title": "ProposeUpgradingSchemeParams"
        }, 
        {
            "location": "/api/interfaces/ProposeUpgradingSchemeParams/#interface-proposeupgradingschemeparams", 
            "text": "", 
            "title": "Interface: ProposeUpgradingSchemeParams"
        }, 
        {
            "location": "/api/interfaces/ProposeUpgradingSchemeParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeUpgradingSchemeParams/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/upgradeScheme.ts:265  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeUpgradingSchemeParams/#scheme", 
            "text": "\u25cf  scheme :   string    Defined in  wrappers/upgradeScheme.ts:269  upgrading scheme address", 
            "title": "scheme"
        }, 
        {
            "location": "/api/interfaces/ProposeUpgradingSchemeParams/#schemeparametershash", 
            "text": "\u25cf  schemeParametersHash :   string    Defined in  wrappers/upgradeScheme.ts:273  hash of the parameters of the upgrading scheme. These must be already registered with the new scheme.", 
            "title": "schemeParametersHash"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/", 
            "text": "API Reference\n \n \nProposeVestingAgreementConfig\n\n\nInterface: ProposeVestingAgreementConfig\n\n\nHierarchy\n\n\nCommonVestingAgreementConfig\n\n\n\u21b3 ProposeVestingAgreementConfig\n\n\nProperties\n\n\n\n\namountPerPeriod\n\n\n\u25cf  amountPerPeriod\n:  \nBigNumber.BigNumber\n\u23ae\nstring\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\namountPerPeriod\n\n\nDefined in \nwrappers/vestingScheme.ts:531\n\n\nThe number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.\n\n\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:572\n\n\nThe address of the avatar in which the proposal is being be made.\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nbeneficiaryAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:514\n\n\nAddress of the recipient of the proposed agreement.\n\n\n\n\n\n\ncliffInPeriods\n\n\n\u25cf  cliffInPeriods\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\ncliffInPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:547\n\n\nThe minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.\n\n\n\n\n\n\nnumOfAgreedPeriods\n\n\n\u25cf  numOfAgreedPeriods\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nnumOfAgreedPeriods\n\n\nDefined in \nwrappers/vestingScheme.ts:541\n\n\nmaximum number of periods that can be paid out. Must be greater than zero.\n\n\n\n\n\n\nperiodLength\n\n\n\u25cf  periodLength\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nperiodLength\n\n\nDefined in \nwrappers/vestingScheme.ts:536\n\n\nnumber of blocks in a period. Must be greater than zero.\n\n\n\n\n\n\nreturnOnCancelAddress\n\n\n\u25cf  returnOnCancelAddress\n:  \nAddress\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nreturnOnCancelAddress\n\n\nDefined in \nwrappers/vestingScheme.ts:518\n\n\nWhere to send the tokens in case of cancellation\n\n\n\n\n\n\nsignaturesReqToCancel\n\n\n\u25cf  signaturesReqToCancel\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nsignaturesReqToCancel\n\n\nDefined in \nwrappers/vestingScheme.ts:552\n\n\nThe number of signatures required to cancel agreement. See signToCancel.\n\n\n\n\n\n\nsigners\n\n\n\u25cf  signers\n:  \nArray\n.\nAddress\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nsigners\n\n\nDefined in \nwrappers/vestingScheme.ts:557\n\n\nAn array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.\n\n\n\n\n\n\n\u00abOptional\u00bb startingBlock\n\n\n\u25cf  startingBlock\n:  \nnumber\n \n\n\nInherited from \nCommonVestingAgreementConfig\n.\nstartingBlock\n\n\nDefined in \nwrappers/vestingScheme.ts:524\n\n\nOptional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.", 
            "title": "ProposeVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#interface-proposevestingagreementconfig", 
            "text": "", 
            "title": "Interface: ProposeVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#hierarchy", 
            "text": "CommonVestingAgreementConfig  \u21b3 ProposeVestingAgreementConfig", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#amountperperiod", 
            "text": "\u25cf  amountPerPeriod :   BigNumber.BigNumber \u23ae string    Inherited from  CommonVestingAgreementConfig . amountPerPeriod  Defined in  wrappers/vestingScheme.ts:531  The number of tokens to pay per period. Period is calculated as (number of blocks / periodLength). Should be expressed in Wei. Must be greater than zero.", 
            "title": "amountPerPeriod"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/vestingScheme.ts:572  The address of the avatar in which the proposal is being be made.", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Inherited from  CommonVestingAgreementConfig . beneficiaryAddress  Defined in  wrappers/vestingScheme.ts:514  Address of the recipient of the proposed agreement.", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#cliffinperiods", 
            "text": "\u25cf  cliffInPeriods :   number    Inherited from  CommonVestingAgreementConfig . cliffInPeriods  Defined in  wrappers/vestingScheme.ts:547  The minimum number of periods that must pass before the beneficiary may collect tokens under the agreement. Must be greater than or equal to zero.", 
            "title": "cliffInPeriods"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#numofagreedperiods", 
            "text": "\u25cf  numOfAgreedPeriods :   number    Inherited from  CommonVestingAgreementConfig . numOfAgreedPeriods  Defined in  wrappers/vestingScheme.ts:541  maximum number of periods that can be paid out. Must be greater than zero.", 
            "title": "numOfAgreedPeriods"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#periodlength", 
            "text": "\u25cf  periodLength :   number    Inherited from  CommonVestingAgreementConfig . periodLength  Defined in  wrappers/vestingScheme.ts:536  number of blocks in a period. Must be greater than zero.", 
            "title": "periodLength"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#returnoncanceladdress", 
            "text": "\u25cf  returnOnCancelAddress :   Address    Inherited from  CommonVestingAgreementConfig . returnOnCancelAddress  Defined in  wrappers/vestingScheme.ts:518  Where to send the tokens in case of cancellation", 
            "title": "returnOnCancelAddress"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#signaturesreqtocancel", 
            "text": "\u25cf  signaturesReqToCancel :   number    Inherited from  CommonVestingAgreementConfig . signaturesReqToCancel  Defined in  wrappers/vestingScheme.ts:552  The number of signatures required to cancel agreement. See signToCancel.", 
            "title": "signaturesReqToCancel"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#signers", 
            "text": "\u25cf  signers :   Array . Address    Inherited from  CommonVestingAgreementConfig . signers  Defined in  wrappers/vestingScheme.ts:557  An array of addresses of those who will be allowed to sign to cancel an agreement. The length of this array must be greater than or equal to signaturesReqToCancel.", 
            "title": "signers"
        }, 
        {
            "location": "/api/interfaces/ProposeVestingAgreementConfig/#optional-startingblock", 
            "text": "\u25cf  startingBlock :   number    Inherited from  CommonVestingAgreementConfig . startingBlock  Defined in  wrappers/vestingScheme.ts:524  Optional ethereum block number at which the agreement starts. Default is the current block number. Must be greater than or equal to zero.", 
            "title": "\u00abOptional\u00bb startingBlock"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/", 
            "text": "API Reference\n \n \nRedeeemableResult\n\n\nInterface: RedeeemableResult\n\n\nProperties\n\n\n\n\ncontributionRewardEther\n\n\n\u25cf  contributionRewardEther\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:114\n\n\n\n\n\n\ncontributionRewardExternalToken\n\n\n\u25cf  contributionRewardExternalToken\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:115\n\n\n\n\n\n\ncontributionRewardNativeToken\n\n\n\u25cf  contributionRewardNativeToken\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:116\n\n\n\n\n\n\ncontributionRewardReputation\n\n\n\u25cf  contributionRewardReputation\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:117\n\n\n\n\n\n\ndaoStakingBountyPotentialReward\n\n\n\u25cf  daoStakingBountyPotentialReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/redeemer.ts:119\n\n\n\n\n\n\ndaoStakingBountyReward\n\n\n\u25cf  daoStakingBountyReward\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/redeemer.ts:118\n\n\n\n\n\n\nproposalExecuted\n\n\n\u25cf  proposalExecuted\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:120\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/redeemer.ts:121\n\n\n\n\n\n\nproposerReputationAmount\n\n\n\u25cf  proposerReputationAmount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/redeemer.ts:122\n\n\n\n\n\n\nstakerReputationAmount\n\n\n\u25cf  stakerReputationAmount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/redeemer.ts:123\n\n\n\n\n\n\nstakerTokenAmount\n\n\n\u25cf  stakerTokenAmount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/redeemer.ts:124\n\n\n\n\n\n\nvoterReputationAmount\n\n\n\u25cf  voterReputationAmount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/redeemer.ts:125\n\n\n\n\n\n\nvoterTokenAmount\n\n\n\u25cf  voterTokenAmount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/redeemer.ts:126", 
            "title": "RedeeemableResult"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#interface-redeeemableresult", 
            "text": "", 
            "title": "Interface: RedeeemableResult"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#contributionrewardether", 
            "text": "\u25cf  contributionRewardEther :   boolean    Defined in  wrappers/redeemer.ts:114", 
            "title": "contributionRewardEther"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#contributionrewardexternaltoken", 
            "text": "\u25cf  contributionRewardExternalToken :   boolean    Defined in  wrappers/redeemer.ts:115", 
            "title": "contributionRewardExternalToken"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#contributionrewardnativetoken", 
            "text": "\u25cf  contributionRewardNativeToken :   boolean    Defined in  wrappers/redeemer.ts:116", 
            "title": "contributionRewardNativeToken"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#contributionrewardreputation", 
            "text": "\u25cf  contributionRewardReputation :   boolean    Defined in  wrappers/redeemer.ts:117", 
            "title": "contributionRewardReputation"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#daostakingbountypotentialreward", 
            "text": "\u25cf  daoStakingBountyPotentialReward :   BigNumber    Defined in  wrappers/redeemer.ts:119", 
            "title": "daoStakingBountyPotentialReward"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#daostakingbountyreward", 
            "text": "\u25cf  daoStakingBountyReward :   BigNumber    Defined in  wrappers/redeemer.ts:118", 
            "title": "daoStakingBountyReward"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#proposalexecuted", 
            "text": "\u25cf  proposalExecuted :   boolean    Defined in  wrappers/redeemer.ts:120", 
            "title": "proposalExecuted"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/redeemer.ts:121", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#proposerreputationamount", 
            "text": "\u25cf  proposerReputationAmount :   BigNumber    Defined in  wrappers/redeemer.ts:122", 
            "title": "proposerReputationAmount"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#stakerreputationamount", 
            "text": "\u25cf  stakerReputationAmount :   BigNumber    Defined in  wrappers/redeemer.ts:123", 
            "title": "stakerReputationAmount"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#stakertokenamount", 
            "text": "\u25cf  stakerTokenAmount :   BigNumber    Defined in  wrappers/redeemer.ts:124", 
            "title": "stakerTokenAmount"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#voterreputationamount", 
            "text": "\u25cf  voterReputationAmount :   BigNumber    Defined in  wrappers/redeemer.ts:125", 
            "title": "voterReputationAmount"
        }, 
        {
            "location": "/api/interfaces/RedeeemableResult/#votertokenamount", 
            "text": "\u25cf  voterTokenAmount :   BigNumber    Defined in  wrappers/redeemer.ts:126", 
            "title": "voterTokenAmount"
        }, 
        {
            "location": "/api/interfaces/RedeemConfig/", 
            "text": "API Reference\n \n \nRedeemConfig\n\n\nInterface: RedeemConfig\n\n\nProperties\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1166\n\n\nagent to whom to award the proposal payoffs\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1162\n\n\nunique hash of proposal index", 
            "title": "RedeemConfig"
        }, 
        {
            "location": "/api/interfaces/RedeemConfig/#interface-redeemconfig", 
            "text": "", 
            "title": "Interface: RedeemConfig"
        }, 
        {
            "location": "/api/interfaces/RedeemConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RedeemConfig/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Defined in  wrappers/genesisProtocol.ts:1166  agent to whom to award the proposal payoffs", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/RedeemConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1162  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/RedeemerOptions/", 
            "text": "API Reference\n \n \nRedeemerOptions\n\n\nInterface: RedeemerOptions\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/redeemer.ts:130\n\n\n\n\n\n\nbeneficiaryAddress\n\n\n\u25cf  beneficiaryAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/redeemer.ts:131\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/redeemer.ts:132", 
            "title": "RedeemerOptions"
        }, 
        {
            "location": "/api/interfaces/RedeemerOptions/#interface-redeemeroptions", 
            "text": "", 
            "title": "Interface: RedeemerOptions"
        }, 
        {
            "location": "/api/interfaces/RedeemerOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RedeemerOptions/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Defined in  wrappers/redeemer.ts:130", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/RedeemerOptions/#beneficiaryaddress", 
            "text": "\u25cf  beneficiaryAddress :   Address    Defined in  wrappers/redeemer.ts:131", 
            "title": "beneficiaryAddress"
        }, 
        {
            "location": "/api/interfaces/RedeemerOptions/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/redeemer.ts:132", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/", 
            "text": "API Reference\n \n \nRedeemerRedeemEventResult\n\n\nInterface: RedeemerRedeemEventResult\n\n\nProperties\n\n\n\n\n_contributionRewardEther\n\n\n\u25cf  _contributionRewardEther\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:136\n\n\n\n\n\n\n_contributionRewardExternalToken\n\n\n\u25cf  _contributionRewardExternalToken\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:137\n\n\n\n\n\n\n_contributionRewardNativeToken\n\n\n\u25cf  _contributionRewardNativeToken\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:138\n\n\n\n\n\n\n_contributionRewardReputation\n\n\n\u25cf  _contributionRewardReputation\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:139\n\n\n\n\n\n\n_execute\n\n\n\u25cf  _execute\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:143\n\n\nindexed\n\n\n\n\n\n\n_genesisProtocolDaoBounty\n\n\n\u25cf  _genesisProtocolDaoBounty\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:145\n\n\n\n\n\n\n_genesisProtocolRedeem\n\n\n\u25cf  _genesisProtocolRedeem\n:  \nboolean\n \n\n\nDefined in \nwrappers/redeemer.ts:144\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/redeemer.ts:146", 
            "title": "RedeemerRedeemEventResult"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#interface-redeemerredeemeventresult", 
            "text": "", 
            "title": "Interface: RedeemerRedeemEventResult"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_contributionrewardether", 
            "text": "\u25cf  _contributionRewardEther :   boolean    Defined in  wrappers/redeemer.ts:136", 
            "title": "_contributionRewardEther"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_contributionrewardexternaltoken", 
            "text": "\u25cf  _contributionRewardExternalToken :   boolean    Defined in  wrappers/redeemer.ts:137", 
            "title": "_contributionRewardExternalToken"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_contributionrewardnativetoken", 
            "text": "\u25cf  _contributionRewardNativeToken :   boolean    Defined in  wrappers/redeemer.ts:138", 
            "title": "_contributionRewardNativeToken"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_contributionrewardreputation", 
            "text": "\u25cf  _contributionRewardReputation :   boolean    Defined in  wrappers/redeemer.ts:139", 
            "title": "_contributionRewardReputation"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_execute", 
            "text": "\u25cf  _execute :   boolean    Defined in  wrappers/redeemer.ts:143  indexed", 
            "title": "_execute"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_genesisprotocoldaobounty", 
            "text": "\u25cf  _genesisProtocolDaoBounty :   boolean    Defined in  wrappers/redeemer.ts:145", 
            "title": "_genesisProtocolDaoBounty"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_genesisprotocolredeem", 
            "text": "\u25cf  _genesisProtocolRedeem :   boolean    Defined in  wrappers/redeemer.ts:144", 
            "title": "_genesisProtocolRedeem"
        }, 
        {
            "location": "/api/interfaces/RedeemerRedeemEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/redeemer.ts:146", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/RedeemEventResult/", 
            "text": "API Reference\n \n \nRedeemEventResult\n\n\nInterface: RedeemEventResult\n\n\nProperties\n\n\n\n\n_amount\n\n\n\u25cf  _amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:34\n\n\nthe amount redeemed\n\n\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:39\n\n\navatar address indexed\n\n\n\n\n\n\n_beneficiary\n\n\n\u25cf  _beneficiary\n:  \nAddress\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:43\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:47\n\n\nindexed", 
            "title": "RedeemEventResult"
        }, 
        {
            "location": "/api/interfaces/RedeemEventResult/#interface-redeemeventresult", 
            "text": "", 
            "title": "Interface: RedeemEventResult"
        }, 
        {
            "location": "/api/interfaces/RedeemEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RedeemEventResult/#_amount", 
            "text": "\u25cf  _amount :   BigNumber    Defined in  wrappers/commonEventInterfaces.ts:34  the amount redeemed", 
            "title": "_amount"
        }, 
        {
            "location": "/api/interfaces/RedeemEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/commonEventInterfaces.ts:39  avatar address indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/RedeemEventResult/#_beneficiary", 
            "text": "\u25cf  _beneficiary :   Address    Defined in  wrappers/commonEventInterfaces.ts:43  indexed", 
            "title": "_beneficiary"
        }, 
        {
            "location": "/api/interfaces/RedeemEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/commonEventInterfaces.ts:47  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/RefreshReputationEventResult/", 
            "text": "API Reference\n \n \nRefreshReputationEventResult\n\n\nInterface: RefreshReputationEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/absoluteVote.ts:197\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/absoluteVote.ts:193\n\n\nindexed\n\n\n\n\n\n\n_reputation\n\n\n\u25cf  _reputation\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/absoluteVote.ts:203\n\n\n\n\n\n\n_voter\n\n\n\u25cf  _voter\n:  \nAddress\n \n\n\nDefined in \nwrappers/absoluteVote.ts:201\n\n\nindexed", 
            "title": "RefreshReputationEventResult"
        }, 
        {
            "location": "/api/interfaces/RefreshReputationEventResult/#interface-refreshreputationeventresult", 
            "text": "", 
            "title": "Interface: RefreshReputationEventResult"
        }, 
        {
            "location": "/api/interfaces/RefreshReputationEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RefreshReputationEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/absoluteVote.ts:197  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/RefreshReputationEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/absoluteVote.ts:193  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/RefreshReputationEventResult/#_reputation", 
            "text": "\u25cf  _reputation :   BigNumber    Defined in  wrappers/absoluteVote.ts:203", 
            "title": "_reputation"
        }, 
        {
            "location": "/api/interfaces/RefreshReputationEventResult/#_voter", 
            "text": "\u25cf  _voter :   Address    Defined in  wrappers/absoluteVote.ts:201  indexed", 
            "title": "_voter"
        }, 
        {
            "location": "/api/interfaces/RemoveGlobalConstraintsProposalEventResult/", 
            "text": "API Reference\n \n \nRemoveGlobalConstraintsProposalEventResult\n\n\nInterface: RemoveGlobalConstraintsProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:257\n\n\nindexed\n\n\n\n\n\n\n_gc\n\n\n\u25cf  _gc\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:258\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:262\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:266\n\n\nindexed", 
            "title": "RemoveGlobalConstraintsProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/RemoveGlobalConstraintsProposalEventResult/#interface-removeglobalconstraintsproposaleventresult", 
            "text": "", 
            "title": "Interface: RemoveGlobalConstraintsProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/RemoveGlobalConstraintsProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:257  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_gc", 
            "text": "\u25cf  _gc :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:258", 
            "title": "_gc"
        }, 
        {
            "location": "/api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:262  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/RemoveGlobalConstraintsProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/globalConstraintRegistrar.ts:266  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/RemoveSchemeProposalEventResult/", 
            "text": "API Reference\n \n \nRemoveSchemeProposalEventResult\n\n\nInterface: RemoveSchemeProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:296\n\n\nindexed\n\n\n\n\n\n\n_intVoteInterface\n\n\n\u25cf  _intVoteInterface\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:300\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:304\n\n\nindexed\n\n\n\n\n\n\n_scheme\n\n\n\u25cf  _scheme\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:305", 
            "title": "RemoveSchemeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/RemoveSchemeProposalEventResult/#interface-removeschemeproposaleventresult", 
            "text": "", 
            "title": "Interface: RemoveSchemeProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/RemoveSchemeProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RemoveSchemeProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/schemeRegistrar.ts:296  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/RemoveSchemeProposalEventResult/#_intvoteinterface", 
            "text": "\u25cf  _intVoteInterface :   Address    Defined in  wrappers/schemeRegistrar.ts:300  indexed", 
            "title": "_intVoteInterface"
        }, 
        {
            "location": "/api/interfaces/RemoveSchemeProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/schemeRegistrar.ts:304  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/RemoveSchemeProposalEventResult/#_scheme", 
            "text": "\u25cf  _scheme :   Address    Defined in  wrappers/schemeRegistrar.ts:305", 
            "title": "_scheme"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnEventResult/", 
            "text": "API Reference\n \n \nReputationBurnEventResult\n\n\nInterface: ReputationBurnEventResult\n\n\nProperties\n\n\n\n\n_amount\n\n\n\u25cf  _amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/reputation.ts:150\n\n\nAmount burnt\n\n\n\n\n\n\n_from\n\n\n\u25cf  _from\n:  \nAddress\n \n\n\nDefined in \nwrappers/reputation.ts:146\n\n\nWhose reputation was burnt indexed", 
            "title": "ReputationBurnEventResult"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnEventResult/#interface-reputationburneventresult", 
            "text": "", 
            "title": "Interface: ReputationBurnEventResult"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnEventResult/#_amount", 
            "text": "\u25cf  _amount :   BigNumber    Defined in  wrappers/reputation.ts:150  Amount burnt", 
            "title": "_amount"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnEventResult/#_from", 
            "text": "\u25cf  _from :   Address    Defined in  wrappers/reputation.ts:146  Whose reputation was burnt indexed", 
            "title": "_from"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnOptions/", 
            "text": "API Reference\n \n \nReputationBurnOptions\n\n\nInterface: ReputationBurnOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/reputation.ts:126\n\n\nAmount to mint\n\n\n\n\n\n\nfrom\n\n\n\u25cf  from\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/reputation.ts:122", 
            "title": "ReputationBurnOptions"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnOptions/#interface-reputationburnoptions", 
            "text": "", 
            "title": "Interface: ReputationBurnOptions"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber    Defined in  wrappers/reputation.ts:126  Amount to mint", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/ReputationBurnOptions/#from", 
            "text": "\u25cf  from :   BigNumber    Defined in  wrappers/reputation.ts:122", 
            "title": "from"
        }, 
        {
            "location": "/api/interfaces/ReputationMintEventResult/", 
            "text": "API Reference\n \n \nReputationMintEventResult\n\n\nInterface: ReputationMintEventResult\n\n\nProperties\n\n\n\n\n_amount\n\n\n\u25cf  _amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/reputation.ts:138\n\n\nAmount minted\n\n\n\n\n\n\n_to\n\n\n\u25cf  _to\n:  \nAddress\n \n\n\nDefined in \nwrappers/reputation.ts:134\n\n\nThe recipient of reputation indexed", 
            "title": "ReputationMintEventResult"
        }, 
        {
            "location": "/api/interfaces/ReputationMintEventResult/#interface-reputationminteventresult", 
            "text": "", 
            "title": "Interface: ReputationMintEventResult"
        }, 
        {
            "location": "/api/interfaces/ReputationMintEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ReputationMintEventResult/#_amount", 
            "text": "\u25cf  _amount :   BigNumber    Defined in  wrappers/reputation.ts:138  Amount minted", 
            "title": "_amount"
        }, 
        {
            "location": "/api/interfaces/ReputationMintEventResult/#_to", 
            "text": "\u25cf  _to :   Address    Defined in  wrappers/reputation.ts:134  The recipient of reputation indexed", 
            "title": "_to"
        }, 
        {
            "location": "/api/interfaces/ReputationMintOptions/", 
            "text": "API Reference\n \n \nReputationMintOptions\n\n\nInterface: ReputationMintOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/reputation.ts:118\n\n\nAmount to mint\n\n\n\n\n\n\nrecipient\n\n\n\u25cf  recipient\n:  \nAddress\n \n\n\nDefined in \nwrappers/reputation.ts:114\n\n\nThe token recipient", 
            "title": "ReputationMintOptions"
        }, 
        {
            "location": "/api/interfaces/ReputationMintOptions/#interface-reputationmintoptions", 
            "text": "", 
            "title": "Interface: ReputationMintOptions"
        }, 
        {
            "location": "/api/interfaces/ReputationMintOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ReputationMintOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber    Defined in  wrappers/reputation.ts:118  Amount to mint", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/ReputationMintOptions/#recipient", 
            "text": "\u25cf  recipient :   Address    Defined in  wrappers/reputation.ts:114  The token recipient", 
            "title": "recipient"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelAgreementEventResult/", 
            "text": "API Reference\n \n \nRevokeSignToCancelAgreementEventResult\n\n\nInterface: RevokeSignToCancelAgreementEventResult\n\n\nProperties\n\n\n\n\n_agreementId\n\n\n\u25cf  _agreementId\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:489\n\n\nindexed\n\n\n\n\n\n\n_signer\n\n\n\u25cf  _signer\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:493\n\n\nindexed", 
            "title": "RevokeSignToCancelAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelAgreementEventResult/#interface-revokesigntocancelagreementeventresult", 
            "text": "", 
            "title": "Interface: RevokeSignToCancelAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelAgreementEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelAgreementEventResult/#_agreementid", 
            "text": "\u25cf  _agreementId :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:489  indexed", 
            "title": "_agreementId"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelAgreementEventResult/#_signer", 
            "text": "\u25cf  _signer :   Address    Defined in  wrappers/vestingScheme.ts:493  indexed", 
            "title": "_signer"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelVestingAgreementConfig/", 
            "text": "API Reference\n \n \nRevokeSignToCancelVestingAgreementConfig\n\n\nInterface: RevokeSignToCancelVestingAgreementConfig\n\n\nProperties\n\n\n\n\nagreementId\n\n\n\u25cf  agreementId\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:586\n\n\nthe agreementId", 
            "title": "RevokeSignToCancelVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelVestingAgreementConfig/#interface-revokesigntocancelvestingagreementconfig", 
            "text": "", 
            "title": "Interface: RevokeSignToCancelVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelVestingAgreementConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/RevokeSignToCancelVestingAgreementConfig/#agreementid", 
            "text": "\u25cf  agreementId :   number    Defined in  wrappers/vestingScheme.ts:586  the agreementId", 
            "title": "agreementId"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/", 
            "text": "API Reference\n \n \nSchemeConfig\n\n\nInterface: SchemeConfig\n\n\nConfiguration of an Arc scheme that you want to automatically register with a new DAO.\n\n\nIndexable\n\n\n[x: \nstring\n]:\nany\n\nYou can add other scheme parameters here. For example, ContributionReward requires orgNativeTokenFee. SchemeRegistrar has voteRemoveParametersHash.\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb address\n\n\n\u25cf  address\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:457\n\n\nScheme address if you don't want to use the scheme supplied in this release of Arc.js.\n\n\n\n\n\n\nname\n\n\n\u25cf  name\n:  \nstring\n \n\n\nDefined in \nwrappers/daoCreator.ts:453\n\n\nThe name of the Arc scheme. It must be an Arc scheme.\n\n\n\n\n\n\n\u00abOptional\u00bb permissions\n\n\n\u25cf  permissions\n:  \nSchemePermissions\n \n\n\nDefined in \nwrappers/daoCreator.ts:464\n\n\nExtra permissions on the scheme. The minimum permissions for the scheme will be enforced (or'd with anything you supply). See ContractWrapperBase.getDefaultPermissions for what this string should look like.\n\n\n\n\n\n\n\u00abOptional\u00bb votingMachineParams\n\n\n\u25cf  votingMachineParams\n:  \nNewDaoVotingMachineConfig\n \n\n\nDefined in \nwrappers/daoCreator.ts:478\n\n\nOptional votingMachine parameters if you have not supplied them in ForgeOrgConfig or want to override them. Note it costs more gas to add them here.\n\n\nNew schemes will be created with these parameters and the DAO's native reputation contract.\n\n\n!!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.\n\n\nDefaults are those of whatever voting machine is the default for DaoCreator. The default default VotingMachine is AbsoluteVote.", 
            "title": "SchemeConfig"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/#interface-schemeconfig", 
            "text": "Configuration of an Arc scheme that you want to automatically register with a new DAO.", 
            "title": "Interface: SchemeConfig"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/#indexable", 
            "text": "[x:  string ]: any \nYou can add other scheme parameters here. For example, ContributionReward requires orgNativeTokenFee. SchemeRegistrar has voteRemoveParametersHash.", 
            "title": "Indexable"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/#optional-address", 
            "text": "\u25cf  address :   string    Defined in  wrappers/daoCreator.ts:457  Scheme address if you don't want to use the scheme supplied in this release of Arc.js.", 
            "title": "\u00abOptional\u00bb address"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/#name", 
            "text": "\u25cf  name :   string    Defined in  wrappers/daoCreator.ts:453  The name of the Arc scheme. It must be an Arc scheme.", 
            "title": "name"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/#optional-permissions", 
            "text": "\u25cf  permissions :   SchemePermissions    Defined in  wrappers/daoCreator.ts:464  Extra permissions on the scheme. The minimum permissions for the scheme will be enforced (or'd with anything you supply). See ContractWrapperBase.getDefaultPermissions for what this string should look like.", 
            "title": "\u00abOptional\u00bb permissions"
        }, 
        {
            "location": "/api/interfaces/SchemeConfig/#optional-votingmachineparams", 
            "text": "\u25cf  votingMachineParams :   NewDaoVotingMachineConfig    Defined in  wrappers/daoCreator.ts:478  Optional votingMachine parameters if you have not supplied them in ForgeOrgConfig or want to override them. Note it costs more gas to add them here.  New schemes will be created with these parameters and the DAO's native reputation contract.  !!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.  Defaults are those of whatever voting machine is the default for DaoCreator. The default default VotingMachine is AbsoluteVote.", 
            "title": "\u00abOptional\u00bb votingMachineParams"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecuted/", 
            "text": "API Reference\n \n \nSchemeProposalExecuted\n\n\nInterface: SchemeProposalExecuted\n\n\nfired by schemes\n\n\nHierarchy\n\n\nSchemeProposalExecuted\n\n\n\u21b3  \nVestingSchemeSchemeProposalExecuted\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:54\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:56\n\n\n\n\n\n\nwinningVote\n\n\n\u25cf  winningVote\n:  \nnumber\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:55", 
            "title": "SchemeProposalExecuted"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecuted/#interface-schemeproposalexecuted", 
            "text": "fired by schemes", 
            "title": "Interface: SchemeProposalExecuted"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecuted/#hierarchy", 
            "text": "SchemeProposalExecuted  \u21b3   VestingSchemeSchemeProposalExecuted", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecuted/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecuted/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Defined in  wrappers/commonEventInterfaces.ts:54", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecuted/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/commonEventInterfaces.ts:56", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecuted/#winningvote", 
            "text": "\u25cf  winningVote :   number    Defined in  wrappers/commonEventInterfaces.ts:55", 
            "title": "winningVote"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecutedEventResult/", 
            "text": "API Reference\n \n \nSchemeProposalExecutedEventResult\n\n\nInterface: SchemeProposalExecutedEventResult\n\n\nfired by schemes\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:66\n\n\nindexed\n\n\n\n\n\n\n_param\n\n\n\u25cf  _param\n:  \nnumber\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:70\n\n\ntypically the winning vote\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/commonEventInterfaces.ts:74\n\n\nindexed", 
            "title": "SchemeProposalExecutedEventResult"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecutedEventResult/#interface-schemeproposalexecutedeventresult", 
            "text": "fired by schemes", 
            "title": "Interface: SchemeProposalExecutedEventResult"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecutedEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecutedEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/commonEventInterfaces.ts:66  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecutedEventResult/#_param", 
            "text": "\u25cf  _param :   number    Defined in  wrappers/commonEventInterfaces.ts:70  typically the winning vote", 
            "title": "_param"
        }, 
        {
            "location": "/api/interfaces/SchemeProposalExecutedEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/commonEventInterfaces.ts:74  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/SchemeRegistrarParams/", 
            "text": "API Reference\n \n \nSchemeRegistrarParams\n\n\nInterface: SchemeRegistrarParams\n\n\nHierarchy\n\n\nStandardSchemeParams\n\n\n\u21b3 SchemeRegistrarParams\n\n\nProperties\n\n\n\n\nvoteParametersHash\n\n\n\u25cf  voteParametersHash\n:  \nHash\n \n\n\nInherited from \nStandardSchemeParams\n.\nvoteParametersHash\n\n\nDefined in \niContractWrapperBase.ts:174\n\n\nHash of the voting machine parameters to use when voting on a proposal.\n\n\n\n\n\n\n\u00abOptional\u00bb voteRemoveParametersHash\n\n\n\u25cf  voteRemoveParametersHash\n:  \nHash\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:357\n\n\nOptional hash of voting machine parameters to use when voting on a proposal to unregister a scheme that is being registered.\n\n\nDefault is the value of voteParametersHash.\n\n\n\n\n\n\nvotingMachineAddress\n\n\n\u25cf  votingMachineAddress\n:  \nAddress\n \n\n\nInherited from \nStandardSchemeParams\n.\nvotingMachineAddress\n\n\nDefined in \niContractWrapperBase.ts:178\n\n\nAddress of the voting machine to use when voting on a proposal.", 
            "title": "SchemeRegistrarParams"
        }, 
        {
            "location": "/api/interfaces/SchemeRegistrarParams/#interface-schemeregistrarparams", 
            "text": "", 
            "title": "Interface: SchemeRegistrarParams"
        }, 
        {
            "location": "/api/interfaces/SchemeRegistrarParams/#hierarchy", 
            "text": "StandardSchemeParams  \u21b3 SchemeRegistrarParams", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/SchemeRegistrarParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SchemeRegistrarParams/#voteparametershash", 
            "text": "\u25cf  voteParametersHash :   Hash    Inherited from  StandardSchemeParams . voteParametersHash  Defined in  iContractWrapperBase.ts:174  Hash of the voting machine parameters to use when voting on a proposal.", 
            "title": "voteParametersHash"
        }, 
        {
            "location": "/api/interfaces/SchemeRegistrarParams/#optional-voteremoveparametershash", 
            "text": "\u25cf  voteRemoveParametersHash :   Hash    Defined in  wrappers/schemeRegistrar.ts:357  Optional hash of voting machine parameters to use when voting on a proposal to unregister a scheme that is being registered.  Default is the value of voteParametersHash.", 
            "title": "\u00abOptional\u00bb voteRemoveParametersHash"
        }, 
        {
            "location": "/api/interfaces/SchemeRegistrarParams/#votingmachineaddress", 
            "text": "\u25cf  votingMachineAddress :   Address    Inherited from  StandardSchemeParams . votingMachineAddress  Defined in  iContractWrapperBase.ts:178  Address of the voting machine to use when voting on a proposal.", 
            "title": "votingMachineAddress"
        }, 
        {
            "location": "/api/interfaces/SchemesConfig/", 
            "text": "API Reference\n \n \nSchemesConfig\n\n\nInterface: SchemesConfig\n\n\nHierarchy\n\n\nSchemesConfig\n\n\n\u21b3  \nSetSchemesConfig\n\n\n\u21b3  \nNewDaoConfig\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb schemes\n\n\n\u25cf  schemes\n:  \nArray\n.\nSchemeConfig\n \n\n\nDefined in \nwrappers/daoCreator.ts:506\n\n\nAny Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.\n\n\n\n\n\n\n\u00abOptional\u00bb votingMachineParams\n\n\n\u25cf  votingMachineParams\n:  \nNewDaoVotingMachineConfig\n \n\n\nDefined in \nwrappers/daoCreator.ts:500\n\n\nDefault votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters.\n\n\nNew schemes will be created these parameters.\n\n\n!!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.\n\n\nDefaults are described in \nNewDaoVotingMachineConfig\n.", 
            "title": "SchemesConfig"
        }, 
        {
            "location": "/api/interfaces/SchemesConfig/#interface-schemesconfig", 
            "text": "", 
            "title": "Interface: SchemesConfig"
        }, 
        {
            "location": "/api/interfaces/SchemesConfig/#hierarchy", 
            "text": "SchemesConfig  \u21b3   SetSchemesConfig  \u21b3   NewDaoConfig", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/SchemesConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SchemesConfig/#optional-schemes", 
            "text": "\u25cf  schemes :   Array . SchemeConfig    Defined in  wrappers/daoCreator.ts:506  Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.", 
            "title": "\u00abOptional\u00bb schemes"
        }, 
        {
            "location": "/api/interfaces/SchemesConfig/#optional-votingmachineparams", 
            "text": "\u25cf  votingMachineParams :   NewDaoVotingMachineConfig    Defined in  wrappers/daoCreator.ts:500  Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters.  New schemes will be created these parameters.  !!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.  Defaults are described in  NewDaoVotingMachineConfig .", 
            "title": "\u00abOptional\u00bb votingMachineParams"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/", 
            "text": "API Reference\n \n \nSchemeWrapper\n\n\nInterface: SchemeWrapper\n\n\nImplemented by\n\n\n\n\nContributionRewardWrapper\n\n\nGenesisProtocolWrapper\n\n\nGlobalConstraintRegistrarWrapper\n\n\nSchemeRegistrarWrapper\n\n\nUpgradeSchemeWrapper\n\n\nVestingSchemeWrapper\n\n\nVoteInOrganizationSchemeWrapper\n\n\n\n\nMethods\n\n\n\n\ngetDefaultPermissions\n\n\n\u25ba \ngetDefaultPermissions\n(): \nSchemePermissions\n\n\nDefined in \niContractWrapperBase.ts:185\n\n\nReturns:\n \nSchemePermissions\n\n\n\n\n\n\ngetParameters\n\n\n\u25ba \ngetParameters\n(paramsHash: \nHash\n): \nPromise\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:182\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparamsHash\n\n\nHash\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetSchemeParameters\n\n\n\u25ba \ngetSchemeParameters\n(avatarAddress: \nAddress\n): \nPromise\n.\nany\n\n\nDefined in \niContractWrapperBase.ts:184\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ngetSchemePermissions\n\n\n\u25ba \ngetSchemePermissions\n(avatarAddress: \nAddress\n): \nPromise\n.\nSchemePermissions\n\n\nDefined in \niContractWrapperBase.ts:186\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\navatarAddress\n\n\nAddress\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nSchemePermissions\n\n\n\n\n\n\nsetParameters\n\n\n\u25ba \nsetParameters\n(params: \nany\n): \nPromise\n.\nArcTransactionDataResult\nHash\n\n\nDefined in \niContractWrapperBase.ts:183\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparams\n\n\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nArcTransactionDataResult\nHash", 
            "title": "SchemeWrapper"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#interface-schemewrapper", 
            "text": "", 
            "title": "Interface: SchemeWrapper"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#implemented-by", 
            "text": "ContributionRewardWrapper  GenesisProtocolWrapper  GlobalConstraintRegistrarWrapper  SchemeRegistrarWrapper  UpgradeSchemeWrapper  VestingSchemeWrapper  VoteInOrganizationSchemeWrapper", 
            "title": "Implemented by"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#getdefaultpermissions", 
            "text": "\u25ba  getDefaultPermissions ():  SchemePermissions  Defined in  iContractWrapperBase.ts:185  Returns:   SchemePermissions", 
            "title": "getDefaultPermissions"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#getparameters", 
            "text": "\u25ba  getParameters (paramsHash:  Hash ):  Promise . any  Defined in  iContractWrapperBase.ts:182  Parameters:     Param  Type  Description      paramsHash  Hash  -     Returns:   Promise . any", 
            "title": "getParameters"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#getschemeparameters", 
            "text": "\u25ba  getSchemeParameters (avatarAddress:  Address ):  Promise . any  Defined in  iContractWrapperBase.ts:184  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . any", 
            "title": "getSchemeParameters"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#getschemepermissions", 
            "text": "\u25ba  getSchemePermissions (avatarAddress:  Address ):  Promise . SchemePermissions  Defined in  iContractWrapperBase.ts:186  Parameters:     Param  Type  Description      avatarAddress  Address  -     Returns:   Promise . SchemePermissions", 
            "title": "getSchemePermissions"
        }, 
        {
            "location": "/api/interfaces/SchemeWrapper/#setparameters", 
            "text": "\u25ba  setParameters (params:  any ):  Promise . ArcTransactionDataResult Hash  Defined in  iContractWrapperBase.ts:183  Parameters:     Param  Type  Description      params  any  -     Returns:   Promise . ArcTransactionDataResult Hash", 
            "title": "setParameters"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/", 
            "text": "API Reference\n \n \nSetSchemesConfig\n\n\nInterface: SetSchemesConfig\n\n\nHierarchy\n\n\nSchemesConfig\n\n\nTxGeneratingFunctionOptions\n\n\n\u21b3 SetSchemesConfig\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/daoCreator.ts:513\n\n\navatar address\n\n\n\n\n\n\n\u00abOptional\u00bb schemes\n\n\n\u25cf  schemes\n:  \nArray\n.\nSchemeConfig\n \n\n\nInherited from \nSchemesConfig\n.\nschemes\n\n\nDefined in \nwrappers/daoCreator.ts:506\n\n\nAny Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.\n\n\n\n\n\n\n\u00abOptional\u00bb txEventContext\n\n\n\u25cf  txEventContext\n:  \nTxEventContext\n \n\n\nInherited from TxGeneratingFunctionOptions.txEventContext\n\n\nDefined in \ntransactionService.ts:665\n\n\n\n\n\n\n\u00abOptional\u00bb votingMachineParams\n\n\n\u25cf  votingMachineParams\n:  \nNewDaoVotingMachineConfig\n \n\n\nInherited from \nSchemesConfig\n.\nvotingMachineParams\n\n\nDefined in \nwrappers/daoCreator.ts:500\n\n\nDefault votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters.\n\n\nNew schemes will be created these parameters.\n\n\n!!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.\n\n\nDefaults are described in \nNewDaoVotingMachineConfig\n.", 
            "title": "SetSchemesConfig"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/#interface-setschemesconfig", 
            "text": "", 
            "title": "Interface: SetSchemesConfig"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/#hierarchy", 
            "text": "SchemesConfig  TxGeneratingFunctionOptions  \u21b3 SetSchemesConfig", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/daoCreator.ts:513  avatar address", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/#optional-schemes", 
            "text": "\u25cf  schemes :   Array . SchemeConfig    Inherited from  SchemesConfig . schemes  Defined in  wrappers/daoCreator.ts:506  Any Arc schemes you would like to automatically register with the new DAO. Non-Arc schemes are not allowed here. You may add them later in your application's workflow using SchemeRegistrar.", 
            "title": "\u00abOptional\u00bb schemes"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/#optional-txeventcontext", 
            "text": "\u25cf  txEventContext :   TxEventContext    Inherited from TxGeneratingFunctionOptions.txEventContext  Defined in  transactionService.ts:665", 
            "title": "\u00abOptional\u00bb txEventContext"
        }, 
        {
            "location": "/api/interfaces/SetSchemesConfig/#optional-votingmachineparams", 
            "text": "\u25cf  votingMachineParams :   NewDaoVotingMachineConfig    Inherited from  SchemesConfig . votingMachineParams  Defined in  wrappers/daoCreator.ts:500  Default votingMachine parameters if you have not configured a scheme that you want to register with the new DAO with its own voting parameters.  New schemes will be created these parameters.  !!! note This is only relevant to schemes that can create proposals upon which there can be a vote. Other schemes will ignore these parameters.  Defaults are described in  NewDaoVotingMachineConfig .", 
            "title": "\u00abOptional\u00bb votingMachineParams"
        }, 
        {
            "location": "/api/interfaces/ShouldBoostConfig/", 
            "text": "API Reference\n \n \nShouldBoostConfig\n\n\nInterface: ShouldBoostConfig\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1173\n\n\nunique hash of proposal index", 
            "title": "ShouldBoostConfig"
        }, 
        {
            "location": "/api/interfaces/ShouldBoostConfig/#interface-shouldboostconfig", 
            "text": "", 
            "title": "Interface: ShouldBoostConfig"
        }, 
        {
            "location": "/api/interfaces/ShouldBoostConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/ShouldBoostConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1173  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/SignToCancelAgreementEventResult/", 
            "text": "API Reference\n \n \nSignToCancelAgreementEventResult\n\n\nInterface: SignToCancelAgreementEventResult\n\n\nProperties\n\n\n\n\n_agreementId\n\n\n\u25cf  _agreementId\n:  \nBigNumber.BigNumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:478\n\n\nindexed\n\n\n\n\n\n\n_signer\n\n\n\u25cf  _signer\n:  \nAddress\n \n\n\nDefined in \nwrappers/vestingScheme.ts:482\n\n\nindexed", 
            "title": "SignToCancelAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/SignToCancelAgreementEventResult/#interface-signtocancelagreementeventresult", 
            "text": "", 
            "title": "Interface: SignToCancelAgreementEventResult"
        }, 
        {
            "location": "/api/interfaces/SignToCancelAgreementEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SignToCancelAgreementEventResult/#_agreementid", 
            "text": "\u25cf  _agreementId :   BigNumber.BigNumber    Defined in  wrappers/vestingScheme.ts:478  indexed", 
            "title": "_agreementId"
        }, 
        {
            "location": "/api/interfaces/SignToCancelAgreementEventResult/#_signer", 
            "text": "\u25cf  _signer :   Address    Defined in  wrappers/vestingScheme.ts:482  indexed", 
            "title": "_signer"
        }, 
        {
            "location": "/api/interfaces/SignToCancelVestingAgreementConfig/", 
            "text": "API Reference\n \n \nSignToCancelVestingAgreementConfig\n\n\nInterface: SignToCancelVestingAgreementConfig\n\n\nProperties\n\n\n\n\nagreementId\n\n\n\u25cf  agreementId\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:579\n\n\nthe agreementId", 
            "title": "SignToCancelVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/SignToCancelVestingAgreementConfig/#interface-signtocancelvestingagreementconfig", 
            "text": "", 
            "title": "Interface: SignToCancelVestingAgreementConfig"
        }, 
        {
            "location": "/api/interfaces/SignToCancelVestingAgreementConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/SignToCancelVestingAgreementConfig/#agreementid", 
            "text": "\u25cf  agreementId :   number    Defined in  wrappers/vestingScheme.ts:579  the agreementId", 
            "title": "agreementId"
        }, 
        {
            "location": "/api/interfaces/StakeConfig/", 
            "text": "API Reference\n \n \nStakeConfig\n\n\nInterface: StakeConfig\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1147\n\n\ntoken amount to stake on the outcome resulting in this vote, in Wei\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1151\n\n\nunique hash of proposal index\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:1155\n\n\nthe choice of vote. Can be 1 (YES) or 2 (NO).", 
            "title": "StakeConfig"
        }, 
        {
            "location": "/api/interfaces/StakeConfig/#interface-stakeconfig", 
            "text": "", 
            "title": "Interface: StakeConfig"
        }, 
        {
            "location": "/api/interfaces/StakeConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StakeConfig/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/genesisProtocol.ts:1147  token amount to stake on the outcome resulting in this vote, in Wei", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/StakeConfig/#proposalid", 
            "text": "\u25cf  proposalId :   string    Defined in  wrappers/genesisProtocol.ts:1151  unique hash of proposal index", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/StakeConfig/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/genesisProtocol.ts:1155  the choice of vote. Can be 1 (YES) or 2 (NO).", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/", 
            "text": "API Reference\n \n \nStakeEventResult\n\n\nInterface: StakeEventResult\n\n\nProperties\n\n\n\n\n_amount\n\n\n\u25cf  _amount\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:966\n\n\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:970\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:974\n\n\nindexed\n\n\n\n\n\n\n_staker\n\n\n\u25cf  _staker\n:  \nAddress\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:979\n\n\nindexed\n\n\n\n\n\n\n_vote\n\n\n\u25cf  _vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/genesisProtocol.ts:975", 
            "title": "StakeEventResult"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/#interface-stakeeventresult", 
            "text": "", 
            "title": "Interface: StakeEventResult"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/#_amount", 
            "text": "\u25cf  _amount :   BigNumber    Defined in  wrappers/genesisProtocol.ts:966", 
            "title": "_amount"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/genesisProtocol.ts:970  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/genesisProtocol.ts:974  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/#_staker", 
            "text": "\u25cf  _staker :   Address    Defined in  wrappers/genesisProtocol.ts:979  indexed", 
            "title": "_staker"
        }, 
        {
            "location": "/api/interfaces/StakeEventResult/#_vote", 
            "text": "\u25cf  _vote :   number    Defined in  wrappers/genesisProtocol.ts:975", 
            "title": "_vote"
        }, 
        {
            "location": "/api/interfaces/StandardSchemeParams/", 
            "text": "API Reference\n \n \nStandardSchemeParams\n\n\nInterface: StandardSchemeParams\n\n\nCommon scheme parameters for schemes that are able to create proposals.\n\n\nHierarchy\n\n\nStandardSchemeParams\n\n\n\u21b3  \nContributionRewardParams\n\n\n\u21b3  \nContributionRewardParamsReturn\n\n\n\u21b3  \nSchemeRegistrarParams\n\n\nProperties\n\n\n\n\nvoteParametersHash\n\n\n\u25cf  voteParametersHash\n:  \nHash\n \n\n\nDefined in \niContractWrapperBase.ts:174\n\n\nHash of the voting machine parameters to use when voting on a proposal.\n\n\n\n\n\n\nvotingMachineAddress\n\n\n\u25cf  votingMachineAddress\n:  \nAddress\n \n\n\nDefined in \niContractWrapperBase.ts:178\n\n\nAddress of the voting machine to use when voting on a proposal.", 
            "title": "StandardSchemeParams"
        }, 
        {
            "location": "/api/interfaces/StandardSchemeParams/#interface-standardschemeparams", 
            "text": "Common scheme parameters for schemes that are able to create proposals.", 
            "title": "Interface: StandardSchemeParams"
        }, 
        {
            "location": "/api/interfaces/StandardSchemeParams/#hierarchy", 
            "text": "StandardSchemeParams  \u21b3   ContributionRewardParams  \u21b3   ContributionRewardParamsReturn  \u21b3   SchemeRegistrarParams", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/StandardSchemeParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StandardSchemeParams/#voteparametershash", 
            "text": "\u25cf  voteParametersHash :   Hash    Defined in  iContractWrapperBase.ts:174  Hash of the voting machine parameters to use when voting on a proposal.", 
            "title": "voteParametersHash"
        }, 
        {
            "location": "/api/interfaces/StandardSchemeParams/#votingmachineaddress", 
            "text": "\u25cf  votingMachineAddress :   Address    Defined in  iContractWrapperBase.ts:178  Address of the voting machine to use when voting on a proposal.", 
            "title": "votingMachineAddress"
        }, 
        {
            "location": "/api/interfaces/StandardTokenAllowanceOptions/", 
            "text": "API Reference\n \n \nStandardTokenAllowanceOptions\n\n\nInterface: StandardTokenAllowanceOptions\n\n\nProperties\n\n\n\n\nowner\n\n\n\u25cf  owner\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:299\n\n\nThe account that has the tokens to spend.\n\n\n\n\n\n\nspender\n\n\n\u25cf  spender\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:304\n\n\nThe account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "StandardTokenAllowanceOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenAllowanceOptions/#interface-standardtokenallowanceoptions", 
            "text": "", 
            "title": "Interface: StandardTokenAllowanceOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenAllowanceOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StandardTokenAllowanceOptions/#owner", 
            "text": "\u25cf  owner :   Address    Defined in  wrappers/standardToken.ts:299  The account that has the tokens to spend.", 
            "title": "owner"
        }, 
        {
            "location": "/api/interfaces/StandardTokenAllowanceOptions/#spender", 
            "text": "\u25cf  spender :   Address    Defined in  wrappers/standardToken.ts:304  The account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "spender"
        }, 
        {
            "location": "/api/interfaces/StandardTokenApproveOptions/", 
            "text": "API Reference\n \n \nStandardTokenApproveOptions\n\n\nInterface: StandardTokenApproveOptions\n\n\nHierarchy\n\n\nStandardTokenApproveOptions\n\n\n\u21b3  \nApproveAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/standardToken.ts:237\n\n\nAmount to approve to transfer.\n\n\n\n\n\n\n\u00abOptional\u00bb owner\n\n\n\u25cf  owner\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:242\n\n\nThe account that has the tokens to spend. Default is msg.sender.\n\n\n\n\n\n\nspender\n\n\n\u25cf  spender\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:247\n\n\nThe account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "StandardTokenApproveOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenApproveOptions/#interface-standardtokenapproveoptions", 
            "text": "", 
            "title": "Interface: StandardTokenApproveOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenApproveOptions/#hierarchy", 
            "text": "StandardTokenApproveOptions  \u21b3   ApproveAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/StandardTokenApproveOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StandardTokenApproveOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/standardToken.ts:237  Amount to approve to transfer.", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/StandardTokenApproveOptions/#optional-owner", 
            "text": "\u25cf  owner :   Address    Defined in  wrappers/standardToken.ts:242  The account that has the tokens to spend. Default is msg.sender.", 
            "title": "\u00abOptional\u00bb owner"
        }, 
        {
            "location": "/api/interfaces/StandardTokenApproveOptions/#spender", 
            "text": "\u25cf  spender :   Address    Defined in  wrappers/standardToken.ts:247  The account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "spender"
        }, 
        {
            "location": "/api/interfaces/StandardTokenChangeApprovalOptions/", 
            "text": "API Reference\n \n \nStandardTokenChangeApprovalOptions\n\n\nInterface: StandardTokenChangeApprovalOptions\n\n\nHierarchy\n\n\nStandardTokenChangeApprovalOptions\n\n\n\u21b3  \nChangeApprovalAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/standardToken.ts:308\n\n\n\n\n\n\n\u00abOptional\u00bb owner\n\n\n\u25cf  owner\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:313\n\n\nThe account that has the tokens to spend. Default is msg.sender.\n\n\n\n\n\n\nspender\n\n\n\u25cf  spender\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:318\n\n\nThe account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "StandardTokenChangeApprovalOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenChangeApprovalOptions/#interface-standardtokenchangeapprovaloptions", 
            "text": "", 
            "title": "Interface: StandardTokenChangeApprovalOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenChangeApprovalOptions/#hierarchy", 
            "text": "StandardTokenChangeApprovalOptions  \u21b3   ChangeApprovalAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/StandardTokenChangeApprovalOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StandardTokenChangeApprovalOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/standardToken.ts:308", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/StandardTokenChangeApprovalOptions/#optional-owner", 
            "text": "\u25cf  owner :   Address    Defined in  wrappers/standardToken.ts:313  The account that has the tokens to spend. Default is msg.sender.", 
            "title": "\u00abOptional\u00bb owner"
        }, 
        {
            "location": "/api/interfaces/StandardTokenChangeApprovalOptions/#spender", 
            "text": "\u25cf  spender :   Address    Defined in  wrappers/standardToken.ts:318  The account that will initiate the transfer of tokens on behalf of the owner.", 
            "title": "spender"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferFromOptions/", 
            "text": "API Reference\n \n \nStandardTokenTransferFromOptions\n\n\nInterface: StandardTokenTransferFromOptions\n\n\nHierarchy\n\n\nStandardTokenTransferFromOptions\n\n\n\u21b3  \nTransferFromAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/standardToken.ts:290\n\n\n\n\n\n\nfrom\n\n\n\u25cf  from\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:291\n\n\n\n\n\n\nto\n\n\n\u25cf  to\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:292", 
            "title": "StandardTokenTransferFromOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferFromOptions/#interface-standardtokentransferfromoptions", 
            "text": "", 
            "title": "Interface: StandardTokenTransferFromOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferFromOptions/#hierarchy", 
            "text": "StandardTokenTransferFromOptions  \u21b3   TransferFromAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferFromOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferFromOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/standardToken.ts:290", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferFromOptions/#from", 
            "text": "\u25cf  from :   Address    Defined in  wrappers/standardToken.ts:291", 
            "title": "from"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferFromOptions/#to", 
            "text": "\u25cf  to :   Address    Defined in  wrappers/standardToken.ts:292", 
            "title": "to"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferOptions/", 
            "text": "API Reference\n \n \nStandardTokenTransferOptions\n\n\nInterface: StandardTokenTransferOptions\n\n\nHierarchy\n\n\nStandardTokenTransferOptions\n\n\n\u21b3  \nTransferAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/standardToken.ts:285\n\n\n\n\n\n\nto\n\n\n\u25cf  to\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:286", 
            "title": "StandardTokenTransferOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferOptions/#interface-standardtokentransferoptions", 
            "text": "", 
            "title": "Interface: StandardTokenTransferOptions"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferOptions/#hierarchy", 
            "text": "StandardTokenTransferOptions  \u21b3   TransferAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Defined in  wrappers/standardToken.ts:285", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/StandardTokenTransferOptions/#to", 
            "text": "\u25cf  to :   Address    Defined in  wrappers/standardToken.ts:286", 
            "title": "to"
        }, 
        {
            "location": "/api/interfaces/TokenCapGcParams/", 
            "text": "API Reference\n \n \nTokenCapGcParams\n\n\nInterface: TokenCapGcParams\n\n\nProperties\n\n\n\n\ncap\n\n\n\u25cf  cap\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/tokenCapGC.ts:63\n\n\n\n\n\n\ntoken\n\n\n\u25cf  token\n:  \nAddress\n \n\n\nDefined in \nwrappers/tokenCapGC.ts:64", 
            "title": "TokenCapGcParams"
        }, 
        {
            "location": "/api/interfaces/TokenCapGcParams/#interface-tokencapgcparams", 
            "text": "", 
            "title": "Interface: TokenCapGcParams"
        }, 
        {
            "location": "/api/interfaces/TokenCapGcParams/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/TokenCapGcParams/#cap", 
            "text": "\u25cf  cap :   BigNumber \u23ae string    Defined in  wrappers/tokenCapGC.ts:63", 
            "title": "cap"
        }, 
        {
            "location": "/api/interfaces/TokenCapGcParams/#token", 
            "text": "\u25cf  token :   Address    Defined in  wrappers/tokenCapGC.ts:64", 
            "title": "token"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/", 
            "text": "API Reference\n \n \nTransactionReceiptsEventInfo\n\n\nInterface: TransactionReceiptsEventInfo\n\n\nInformation supplied to the event callback when the event is published. Otherwise known as the \"payload\".\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb error\n\n\n\u25cf  error\n:  \nError\n \n\n\nDefined in \ntransactionService.ts:639\n\n\nError when a failure has occured. Supplied by the \".failed\" events.\n\n\n\n\n\n\nfunctionName\n\n\n\u25cf  functionName\n:  \nstring\n \n\n\nDefined in \ntransactionService.ts:616\n\n\nThe name of the function that is generating the transactions and these events.\n\n\n\n\n\n\ninvocationKey\n\n\n\u25cf  invocationKey\n:  \nnumber\n \n\n\nDefined in \ntransactionService.ts:607\n\n\nA value that is unique to the invocation of the function that is generating the transaction. It is useful for grouping events by a single function invocation.\n\n\n\n\n\n\n\u00abOptional\u00bb options\n\n\n\u25cf  options\n:  \nany\n \n\n\nDefined in \ntransactionService.ts:612\n\n\nThe options that were passed to the function that is generating the transaction, if any. In most cases this will have default values filled in.\n\n\n\n\n\n\ntx\n\n\n\u25cf  tx\n:  \nHash\n\u23ae\nnull\n \n\n\nDefined in \ntransactionService.ts:622\n\n\nThe transaction hash id. Note that the transaction may not necessarily have completed successfully in the case of errors or rejection. Will be null in \nkickoff\n events.\n\n\n\n\n\n\ntxCount\n\n\n\u25cf  txCount\n:  \nnumber\n \n\n\nDefined in \ntransactionService.ts:631\n\n\nThe total expected number of transactions.\n\n\n\n\n\n\ntxReceipt\n\n\n\u25cf  txReceipt\n:  \nTransactionReceiptTruffle\n\u23ae\nnull\n \n\n\nDefined in \ntransactionService.ts:627\n\n\nThe \nTransactionReceiptTruffle\n once the transaction has been mined. Will be null in \nkickoff\n and \nsent\n events.\n\n\n\n\n\n\ntxStage\n\n\n\u25cf  txStage\n:  \nTransactionStage\n \n\n\nDefined in \ntransactionService.ts:635\n\n\nStage of the transaction. Can be \nkickoff\n, \nsent\n, \nmined\n or \nconfirmed\n.", 
            "title": "TransactionReceiptsEventInfo"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#interface-transactionreceiptseventinfo", 
            "text": "Information supplied to the event callback when the event is published. Otherwise known as the \"payload\".", 
            "title": "Interface: TransactionReceiptsEventInfo"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#optional-error", 
            "text": "\u25cf  error :   Error    Defined in  transactionService.ts:639  Error when a failure has occured. Supplied by the \".failed\" events.", 
            "title": "\u00abOptional\u00bb error"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#functionname", 
            "text": "\u25cf  functionName :   string    Defined in  transactionService.ts:616  The name of the function that is generating the transactions and these events.", 
            "title": "functionName"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#invocationkey", 
            "text": "\u25cf  invocationKey :   number    Defined in  transactionService.ts:607  A value that is unique to the invocation of the function that is generating the transaction. It is useful for grouping events by a single function invocation.", 
            "title": "invocationKey"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#optional-options", 
            "text": "\u25cf  options :   any    Defined in  transactionService.ts:612  The options that were passed to the function that is generating the transaction, if any. In most cases this will have default values filled in.", 
            "title": "\u00abOptional\u00bb options"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#tx", 
            "text": "\u25cf  tx :   Hash \u23ae null    Defined in  transactionService.ts:622  The transaction hash id. Note that the transaction may not necessarily have completed successfully in the case of errors or rejection. Will be null in  kickoff  events.", 
            "title": "tx"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#txcount", 
            "text": "\u25cf  txCount :   number    Defined in  transactionService.ts:631  The total expected number of transactions.", 
            "title": "txCount"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#txreceipt", 
            "text": "\u25cf  txReceipt :   TransactionReceiptTruffle \u23ae null    Defined in  transactionService.ts:627  The  TransactionReceiptTruffle  once the transaction has been mined. Will be null in  kickoff  and  sent  events.", 
            "title": "txReceipt"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptsEventInfo/#txstage", 
            "text": "\u25cf  txStage :   TransactionStage    Defined in  transactionService.ts:635  Stage of the transaction. Can be  kickoff ,  sent ,  mined  or  confirmed .", 
            "title": "txStage"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptTruffle/", 
            "text": "API Reference\n \n \nTransactionReceiptTruffle\n\n\nInterface: TransactionReceiptTruffle\n\n\nThe bundle of logs, TransactionReceipt and other information as returned by Truffle after invoking a contract function that causes a transaction.\n\n\nProperties\n\n\n\n\nlogs\n\n\n\u25cf  logs\n:  \nArray\n.\nany\n \n\n\nDefined in \ntransactionService.ts:673\n\n\n\n\n\n\nreceipt\n\n\n\u25cf  receipt\n:  \nTransactionReceipt\n \n\n\nDefined in \ntransactionService.ts:674\n\n\n\n\n\n\ntransactionHash\n\n\n\u25cf  transactionHash\n:  \nHash\n \n\n\nDefined in \ntransactionService.ts:675", 
            "title": "TransactionReceiptTruffle"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptTruffle/#interface-transactionreceipttruffle", 
            "text": "The bundle of logs, TransactionReceipt and other information as returned by Truffle after invoking a contract function that causes a transaction.", 
            "title": "Interface: TransactionReceiptTruffle"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptTruffle/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptTruffle/#logs", 
            "text": "\u25cf  logs :   Array . any    Defined in  transactionService.ts:673", 
            "title": "logs"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptTruffle/#receipt", 
            "text": "\u25cf  receipt :   TransactionReceipt    Defined in  transactionService.ts:674", 
            "title": "receipt"
        }, 
        {
            "location": "/api/interfaces/TransactionReceiptTruffle/#transactionhash", 
            "text": "\u25cf  transactionHash :   Hash    Defined in  transactionService.ts:675", 
            "title": "transactionHash"
        }, 
        {
            "location": "/api/interfaces/TransferAndCallOptions/", 
            "text": "API Reference\n \n \nTransferAndCallOptions\n\n\nInterface: TransferAndCallOptions\n\n\nHierarchy\n\n\nStandardTokenTransferOptions\n\n\n\u21b3 TransferAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nInherited from \nStandardTokenTransferOptions\n.\namount\n\n\nDefined in \nwrappers/standardToken.ts:285\n\n\n\n\n\n\ncallData\n\n\n\u25cf  callData\n:  \nstring\n \n\n\nDefined in \nwrappers/iErc827Token.ts:60\n\n\n\n\n\n\nto\n\n\n\u25cf  to\n:  \nAddress\n \n\n\nInherited from \nStandardTokenTransferOptions\n.\nto\n\n\nDefined in \nwrappers/standardToken.ts:286", 
            "title": "TransferAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/TransferAndCallOptions/#interface-transferandcalloptions", 
            "text": "", 
            "title": "Interface: TransferAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/TransferAndCallOptions/#hierarchy", 
            "text": "StandardTokenTransferOptions  \u21b3 TransferAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/TransferAndCallOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/TransferAndCallOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Inherited from  StandardTokenTransferOptions . amount  Defined in  wrappers/standardToken.ts:285", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/TransferAndCallOptions/#calldata", 
            "text": "\u25cf  callData :   string    Defined in  wrappers/iErc827Token.ts:60", 
            "title": "callData"
        }, 
        {
            "location": "/api/interfaces/TransferAndCallOptions/#to", 
            "text": "\u25cf  to :   Address    Inherited from  StandardTokenTransferOptions . to  Defined in  wrappers/standardToken.ts:286", 
            "title": "to"
        }, 
        {
            "location": "/api/interfaces/TransferEventResult/", 
            "text": "API Reference\n \n \nTransferEventResult\n\n\nInterface: TransferEventResult\n\n\nProperties\n\n\n\n\nfrom\n\n\n\u25cf  from\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:275\n\n\nmsg.sender\n for \ntransfer\n, \nfrom\n for \ntransferFrom\n indexed\n\n\n\n\n\n\nto\n\n\n\u25cf  to\n:  \nAddress\n \n\n\nDefined in \nwrappers/standardToken.ts:280\n\n\nthe recipient of the tokens indexed\n\n\n\n\n\n\nvalue\n\n\n\u25cf  value\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/standardToken.ts:281", 
            "title": "TransferEventResult"
        }, 
        {
            "location": "/api/interfaces/TransferEventResult/#interface-transfereventresult", 
            "text": "", 
            "title": "Interface: TransferEventResult"
        }, 
        {
            "location": "/api/interfaces/TransferEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/TransferEventResult/#from", 
            "text": "\u25cf  from :   Address    Defined in  wrappers/standardToken.ts:275  msg.sender  for  transfer ,  from  for  transferFrom  indexed", 
            "title": "from"
        }, 
        {
            "location": "/api/interfaces/TransferEventResult/#to", 
            "text": "\u25cf  to :   Address    Defined in  wrappers/standardToken.ts:280  the recipient of the tokens indexed", 
            "title": "to"
        }, 
        {
            "location": "/api/interfaces/TransferEventResult/#value", 
            "text": "\u25cf  value :   BigNumber    Defined in  wrappers/standardToken.ts:281", 
            "title": "value"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/", 
            "text": "API Reference\n \n \nTransferFromAndCallOptions\n\n\nInterface: TransferFromAndCallOptions\n\n\nHierarchy\n\n\nStandardTokenTransferFromOptions\n\n\n\u21b3 TransferFromAndCallOptions\n\n\nProperties\n\n\n\n\namount\n\n\n\u25cf  amount\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nInherited from \nStandardTokenTransferFromOptions\n.\namount\n\n\nDefined in \nwrappers/standardToken.ts:290\n\n\n\n\n\n\ncallData\n\n\n\u25cf  callData\n:  \nstring\n \n\n\nDefined in \nwrappers/iErc827Token.ts:64\n\n\n\n\n\n\nfrom\n\n\n\u25cf  from\n:  \nAddress\n \n\n\nInherited from \nStandardTokenTransferFromOptions\n.\nfrom\n\n\nDefined in \nwrappers/standardToken.ts:291\n\n\n\n\n\n\nto\n\n\n\u25cf  to\n:  \nAddress\n \n\n\nInherited from \nStandardTokenTransferFromOptions\n.\nto\n\n\nDefined in \nwrappers/standardToken.ts:292", 
            "title": "TransferFromAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/#interface-transferfromandcalloptions", 
            "text": "", 
            "title": "Interface: TransferFromAndCallOptions"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/#hierarchy", 
            "text": "StandardTokenTransferFromOptions  \u21b3 TransferFromAndCallOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/#amount", 
            "text": "\u25cf  amount :   BigNumber \u23ae string    Inherited from  StandardTokenTransferFromOptions . amount  Defined in  wrappers/standardToken.ts:290", 
            "title": "amount"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/#calldata", 
            "text": "\u25cf  callData :   string    Defined in  wrappers/iErc827Token.ts:64", 
            "title": "callData"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/#from", 
            "text": "\u25cf  from :   Address    Inherited from  StandardTokenTransferFromOptions . from  Defined in  wrappers/standardToken.ts:291", 
            "title": "from"
        }, 
        {
            "location": "/api/interfaces/TransferFromAndCallOptions/#to", 
            "text": "\u25cf  to :   Address    Inherited from  StandardTokenTransferFromOptions . to  Defined in  wrappers/standardToken.ts:292", 
            "title": "to"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/", 
            "text": "API Reference\n \n \nTruffleContract\n\n\nInterface: TruffleContract\n\n\nProperties\n\n\n\n\nat\n\n\n\u25cf  at\n:  \nfunction\n \n\n\nDefined in \ncommonTypes.ts:79\n\n\nReturns a promise of an existing instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.\n\n\nType declaration\n\n\n\u25ba(address: \nstring\n): \nPromise\n.\nany\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nstring\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\ndeployed\n\n\n\u25cf  deployed\n:  \nfunction\n \n\n\nDefined in \ncommonTypes.ts:85\n\n\nReturns a promise of the deployed instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.\n\n\nType declaration\n\n\n\u25ba(): \nPromise\n.\nany\n\n\nReturns:\n \nPromise\n.\nany\n\n\n\n\n\n\nnew\n\n\n\u25cf  new\n:  \nfunction\n \n\n\nDefined in \ncommonTypes.ts:73\n\n\nMigrate a new instance of the contract. Returns promise of being migrated. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.\n\n\nType declaration\n\n\n\u25ba(...rest: \nArray\n.\nany\n): \nPromise\n.\nany\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrest\n\n\nArray\n.\nany\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nPromise\n.\nany", 
            "title": "TruffleContract"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#interface-trufflecontract", 
            "text": "", 
            "title": "Interface: TruffleContract"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#at", 
            "text": "\u25cf  at :   function    Defined in  commonTypes.ts:79  Returns a promise of an existing instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.", 
            "title": "at"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#type-declaration", 
            "text": "\u25ba(address:  string ):  Promise . any  Parameters:     Param  Type  Description      address  string  -     Returns:   Promise . any", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#deployed", 
            "text": "\u25cf  deployed :   function    Defined in  commonTypes.ts:85  Returns a promise of the deployed instance of the contract. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.", 
            "title": "deployed"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#type-declaration_1", 
            "text": "\u25ba():  Promise . any  Returns:   Promise . any", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#new", 
            "text": "\u25cf  new :   function    Defined in  commonTypes.ts:73  Migrate a new instance of the contract. Returns promise of being migrated. Note that the so-called promise returned by Truffle only supplies a 'then' function, You have to call 'then' to get the real promise.", 
            "title": "new"
        }, 
        {
            "location": "/api/interfaces/TruffleContract/#type-declaration_2", 
            "text": "\u25ba(...rest:  Array . any ):  Promise . any  Parameters:     Param  Type  Description      rest  Array . any  -     Returns:   Promise . any", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/", 
            "text": "API Reference\n \n \nVestingSchemeSchemeProposalExecuted\n\n\nInterface: VestingSchemeSchemeProposalExecuted\n\n\nHierarchy\n\n\nSchemeProposalExecuted\n\n\n\u21b3 VestingSchemeSchemeProposalExecuted\n\n\nProperties\n\n\n\n\nagreementId\n\n\n\u25cf  agreementId\n:  \nnumber\n \n\n\nDefined in \nwrappers/vestingScheme.ts:632\n\n\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nInherited from \nSchemeProposalExecuted\n.\navatarAddress\n\n\nDefined in \nwrappers/commonEventInterfaces.ts:54\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nInherited from \nSchemeProposalExecuted\n.\nproposalId\n\n\nDefined in \nwrappers/commonEventInterfaces.ts:56\n\n\n\n\n\n\nwinningVote\n\n\n\u25cf  winningVote\n:  \nnumber\n \n\n\nInherited from \nSchemeProposalExecuted\n.\nwinningVote\n\n\nDefined in \nwrappers/commonEventInterfaces.ts:55", 
            "title": "VestingSchemeSchemeProposalExecuted"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/#interface-vestingschemeschemeproposalexecuted", 
            "text": "", 
            "title": "Interface: VestingSchemeSchemeProposalExecuted"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/#hierarchy", 
            "text": "SchemeProposalExecuted  \u21b3 VestingSchemeSchemeProposalExecuted", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/#agreementid", 
            "text": "\u25cf  agreementId :   number    Defined in  wrappers/vestingScheme.ts:632", 
            "title": "agreementId"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Inherited from  SchemeProposalExecuted . avatarAddress  Defined in  wrappers/commonEventInterfaces.ts:54", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Inherited from  SchemeProposalExecuted . proposalId  Defined in  wrappers/commonEventInterfaces.ts:56", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VestingSchemeSchemeProposalExecuted/#winningvote", 
            "text": "\u25cf  winningVote :   number    Inherited from  SchemeProposalExecuted . winningVote  Defined in  wrappers/commonEventInterfaces.ts:55", 
            "title": "winningVote"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/", 
            "text": "API Reference\n \n \nVotableGlobalConstraintProposal\n\n\nInterface: VotableGlobalConstraintProposal\n\n\nProperties\n\n\n\n\nconstraintAddress\n\n\n\u25cf  constraintAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:308\n\n\nAddress of the global constraint\n\n\n\n\n\n\nparamsHash\n\n\n\u25cf  paramsHash\n:  \nHash\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:312\n\n\nThe global constraint's parameters\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:316\n\n\nHash of the proposalId\n\n\n\n\n\n\nproposalType\n\n\n\u25cf  proposalType\n:  \nGlobalConstraintProposalType\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:320\n\n\nAdd or Remove\n\n\n\n\n\n\nvoteToRemoveParamsHash\n\n\n\u25cf  voteToRemoveParamsHash\n:  \nHash\n \n\n\nDefined in \nwrappers/globalConstraintRegistrar.ts:324\n\n\nHash of voting machine parameters to use when removing a global constraint", 
            "title": "VotableGlobalConstraintProposal"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/#interface-votableglobalconstraintproposal", 
            "text": "", 
            "title": "Interface: VotableGlobalConstraintProposal"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/#constraintaddress", 
            "text": "\u25cf  constraintAddress :   Address    Defined in  wrappers/globalConstraintRegistrar.ts:308  Address of the global constraint", 
            "title": "constraintAddress"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/#paramshash", 
            "text": "\u25cf  paramsHash :   Hash    Defined in  wrappers/globalConstraintRegistrar.ts:312  The global constraint's parameters", 
            "title": "paramsHash"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/globalConstraintRegistrar.ts:316  Hash of the proposalId", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/#proposaltype", 
            "text": "\u25cf  proposalType :   GlobalConstraintProposalType    Defined in  wrappers/globalConstraintRegistrar.ts:320  Add or Remove", 
            "title": "proposalType"
        }, 
        {
            "location": "/api/interfaces/VotableGlobalConstraintProposal/#votetoremoveparamshash", 
            "text": "\u25cf  voteToRemoveParamsHash :   Hash    Defined in  wrappers/globalConstraintRegistrar.ts:324  Hash of voting machine parameters to use when removing a global constraint", 
            "title": "voteToRemoveParamsHash"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/", 
            "text": "API Reference\n \n \nVotableProposal\n\n\nInterface: VotableProposal\n\n\nProperties\n\n\n\n\navatarAddress\n\n\n\u25cf  avatarAddress\n:  \nAddress\n \n\n\nDefined in \nproposalService.ts:142\n\n\n\n\n\n\nnumOfChoices\n\n\n\u25cf  numOfChoices\n:  \nnumber\n \n\n\nDefined in \nproposalService.ts:138\n\n\n\n\n\n\nparamsHash\n\n\n\u25cf  paramsHash\n:  \nHash\n \n\n\nDefined in \nproposalService.ts:139\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nproposalService.ts:140\n\n\n\n\n\n\nproposerAddress\n\n\n\u25cf  proposerAddress\n:  \nAddress\n \n\n\nDefined in \nproposalService.ts:141", 
            "title": "VotableProposal"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/#interface-votableproposal", 
            "text": "", 
            "title": "Interface: VotableProposal"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/#avataraddress", 
            "text": "\u25cf  avatarAddress :   Address    Defined in  proposalService.ts:142", 
            "title": "avatarAddress"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/#numofchoices", 
            "text": "\u25cf  numOfChoices :   number    Defined in  proposalService.ts:138", 
            "title": "numOfChoices"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/#paramshash", 
            "text": "\u25cf  paramsHash :   Hash    Defined in  proposalService.ts:139", 
            "title": "paramsHash"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  proposalService.ts:140", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VotableProposal/#proposeraddress", 
            "text": "\u25cf  proposerAddress :   Address    Defined in  proposalService.ts:141", 
            "title": "proposerAddress"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/", 
            "text": "API Reference\n \n \nVotableSchemeRegistrarProposal\n\n\nInterface: VotableSchemeRegistrarProposal\n\n\nProperties\n\n\n\n\nparametersHash\n\n\n\u25cf  parametersHash\n:  \nHash\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:367\n\n\n\n\n\n\npermissions\n\n\n\u25cf  permissions\n:  \nSchemePermissions\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:369\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:370\n\n\n\n\n\n\nproposalType\n\n\n\u25cf  proposalType\n:  \nSchemeRegistrarProposalType\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:368\n\n\n\n\n\n\nschemeAddress\n\n\n\u25cf  schemeAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/schemeRegistrar.ts:366", 
            "title": "VotableSchemeRegistrarProposal"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/#interface-votableschemeregistrarproposal", 
            "text": "", 
            "title": "Interface: VotableSchemeRegistrarProposal"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/#parametershash", 
            "text": "\u25cf  parametersHash :   Hash    Defined in  wrappers/schemeRegistrar.ts:367", 
            "title": "parametersHash"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/#permissions", 
            "text": "\u25cf  permissions :   SchemePermissions    Defined in  wrappers/schemeRegistrar.ts:369", 
            "title": "permissions"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/schemeRegistrar.ts:370", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/#proposaltype", 
            "text": "\u25cf  proposalType :   SchemeRegistrarProposalType    Defined in  wrappers/schemeRegistrar.ts:368", 
            "title": "proposalType"
        }, 
        {
            "location": "/api/interfaces/VotableSchemeRegistrarProposal/#schemeaddress", 
            "text": "\u25cf  schemeAddress :   Address    Defined in  wrappers/schemeRegistrar.ts:366", 
            "title": "schemeAddress"
        }, 
        {
            "location": "/api/interfaces/VotableUpgradeSchemeProposal/", 
            "text": "API Reference\n \n \nVotableUpgradeSchemeProposal\n\n\nInterface: VotableUpgradeSchemeProposal\n\n\nProperties\n\n\n\n\nparamsUpgradingScheme\n\n\n\u25cf  paramsUpgradingScheme\n:  \nHash\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:297\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:299\n\n\n\n\n\n\nproposalType\n\n\n\u25cf  proposalType\n:  \nUpgradeSchemeProposalType\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:298\n\n\n\n\n\n\nupgradeContractAddress\n\n\n\u25cf  upgradeContractAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/upgradeScheme.ts:296\n\n\nEither a controller or an upgrade scheme.", 
            "title": "VotableUpgradeSchemeProposal"
        }, 
        {
            "location": "/api/interfaces/VotableUpgradeSchemeProposal/#interface-votableupgradeschemeproposal", 
            "text": "", 
            "title": "Interface: VotableUpgradeSchemeProposal"
        }, 
        {
            "location": "/api/interfaces/VotableUpgradeSchemeProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VotableUpgradeSchemeProposal/#paramsupgradingscheme", 
            "text": "\u25cf  paramsUpgradingScheme :   Hash    Defined in  wrappers/upgradeScheme.ts:297", 
            "title": "paramsUpgradingScheme"
        }, 
        {
            "location": "/api/interfaces/VotableUpgradeSchemeProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/upgradeScheme.ts:299", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VotableUpgradeSchemeProposal/#proposaltype", 
            "text": "\u25cf  proposalType :   UpgradeSchemeProposalType    Defined in  wrappers/upgradeScheme.ts:298", 
            "title": "proposalType"
        }, 
        {
            "location": "/api/interfaces/VotableUpgradeSchemeProposal/#upgradecontractaddress", 
            "text": "\u25cf  upgradeContractAddress :   Address    Defined in  wrappers/upgradeScheme.ts:296  Either a controller or an upgrade scheme.", 
            "title": "upgradeContractAddress"
        }, 
        {
            "location": "/api/interfaces/VotableVoteInOrganizationProposal/", 
            "text": "API Reference\n \n \nVotableVoteInOrganizationProposal\n\n\nInterface: VotableVoteInOrganizationProposal\n\n\nProperties\n\n\n\n\noriginalNumOfChoices\n\n\n\u25cf  originalNumOfChoices\n:  \nnumber\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:211\n\n\n\n\n\n\noriginalProposalId\n\n\n\u25cf  originalProposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:212\n\n\n\n\n\n\noriginalVotingMachineAddress\n\n\n\u25cf  originalVotingMachineAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:210\n\n\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:213", 
            "title": "VotableVoteInOrganizationProposal"
        }, 
        {
            "location": "/api/interfaces/VotableVoteInOrganizationProposal/#interface-votablevoteinorganizationproposal", 
            "text": "", 
            "title": "Interface: VotableVoteInOrganizationProposal"
        }, 
        {
            "location": "/api/interfaces/VotableVoteInOrganizationProposal/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VotableVoteInOrganizationProposal/#originalnumofchoices", 
            "text": "\u25cf  originalNumOfChoices :   number    Defined in  wrappers/voteInOrganizationScheme.ts:211", 
            "title": "originalNumOfChoices"
        }, 
        {
            "location": "/api/interfaces/VotableVoteInOrganizationProposal/#originalproposalid", 
            "text": "\u25cf  originalProposalId :   Hash    Defined in  wrappers/voteInOrganizationScheme.ts:212", 
            "title": "originalProposalId"
        }, 
        {
            "location": "/api/interfaces/VotableVoteInOrganizationProposal/#originalvotingmachineaddress", 
            "text": "\u25cf  originalVotingMachineAddress :   Address    Defined in  wrappers/voteInOrganizationScheme.ts:210", 
            "title": "originalVotingMachineAddress"
        }, 
        {
            "location": "/api/interfaces/VotableVoteInOrganizationProposal/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Defined in  wrappers/voteInOrganizationScheme.ts:213", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VoteInOrganizationProposeVoteConfig/", 
            "text": "API Reference\n \n \nVoteInOrganizationProposeVoteConfig\n\n\nInterface: VoteInOrganizationProposeVoteConfig\n\n\nProperties\n\n\n\n\navatar\n\n\n\u25cf  avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:197\n\n\nAvatar whose voters are being given the chance to vote on the original proposal.\n\n\n\n\n\n\noriginalProposalId\n\n\n\u25cf  originalProposalId\n:  \nstring\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:206\n\n\nAddress of the \"original\" proposal for which the DAO's vote will cast.\n\n\n\n\n\n\noriginalVotingMachineAddress\n\n\n\u25cf  originalVotingMachineAddress\n:  \nAddress\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:202\n\n\nAddress of the voting machine used by the original proposal. The voting machine must implement IntVoteInterface (as defined in Arc).", 
            "title": "VoteInOrganizationProposeVoteConfig"
        }, 
        {
            "location": "/api/interfaces/VoteInOrganizationProposeVoteConfig/#interface-voteinorganizationproposevoteconfig", 
            "text": "", 
            "title": "Interface: VoteInOrganizationProposeVoteConfig"
        }, 
        {
            "location": "/api/interfaces/VoteInOrganizationProposeVoteConfig/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VoteInOrganizationProposeVoteConfig/#avatar", 
            "text": "\u25cf  avatar :   Address    Defined in  wrappers/voteInOrganizationScheme.ts:197  Avatar whose voters are being given the chance to vote on the original proposal.", 
            "title": "avatar"
        }, 
        {
            "location": "/api/interfaces/VoteInOrganizationProposeVoteConfig/#originalproposalid", 
            "text": "\u25cf  originalProposalId :   string    Defined in  wrappers/voteInOrganizationScheme.ts:206  Address of the \"original\" proposal for which the DAO's vote will cast.", 
            "title": "originalProposalId"
        }, 
        {
            "location": "/api/interfaces/VoteInOrganizationProposeVoteConfig/#originalvotingmachineaddress", 
            "text": "\u25cf  originalVotingMachineAddress :   Address    Defined in  wrappers/voteInOrganizationScheme.ts:202  Address of the voting machine used by the original proposal. The voting machine must implement IntVoteInterface (as defined in Arc).", 
            "title": "originalVotingMachineAddress"
        }, 
        {
            "location": "/api/interfaces/VoteOnBehalfEventResult/", 
            "text": "API Reference\n \n \nVoteOnBehalfEventResult\n\n\nInterface: VoteOnBehalfEventResult\n\n\nProperties\n\n\n\n\n_params\n\n\n\u25cf  _params\n:  \nArray\n.\nHash\n \n\n\nDefined in \nwrappers/voteInOrganizationScheme.ts:190", 
            "title": "VoteOnBehalfEventResult"
        }, 
        {
            "location": "/api/interfaces/VoteOnBehalfEventResult/#interface-voteonbehalfeventresult", 
            "text": "", 
            "title": "Interface: VoteOnBehalfEventResult"
        }, 
        {
            "location": "/api/interfaces/VoteOnBehalfEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VoteOnBehalfEventResult/#_params", 
            "text": "\u25cf  _params :   Array . Hash    Defined in  wrappers/voteInOrganizationScheme.ts:190", 
            "title": "_params"
        }, 
        {
            "location": "/api/interfaces/VoteOptions/", 
            "text": "API Reference\n \n \nVoteOptions\n\n\nInterface: VoteOptions\n\n\nHierarchy\n\n\nProposalIdOption\n\n\n\u21b3 VoteOptions\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nInherited from \nProposalIdOption\n.\nproposalId\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:60\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:47", 
            "title": "VoteOptions"
        }, 
        {
            "location": "/api/interfaces/VoteOptions/#interface-voteoptions", 
            "text": "", 
            "title": "Interface: VoteOptions"
        }, 
        {
            "location": "/api/interfaces/VoteOptions/#hierarchy", 
            "text": "ProposalIdOption  \u21b3 VoteOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/VoteOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VoteOptions/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Inherited from  ProposalIdOption . proposalId  Defined in  wrappers/iIntVoteInterface.ts:60", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VoteOptions/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/iIntVoteInterface.ts:47", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/", 
            "text": "API Reference\n \n \nVoteProposalEventResult\n\n\nInterface: VoteProposalEventResult\n\n\nProperties\n\n\n\n\n_avatar\n\n\n\u25cf  _avatar\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:129\n\n\nindexed\n\n\n\n\n\n\n_proposalId\n\n\n\u25cf  _proposalId\n:  \nHash\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:133\n\n\nindexed\n\n\n\n\n\n\n_reputation\n\n\n\u25cf  _reputation\n:  \nBigNumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:134\n\n\n\n\n\n\n_vote\n\n\n\u25cf  _vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:138\n\n\nThe choice of vote\n\n\n\n\n\n\n_voter\n\n\n\u25cf  _voter\n:  \nAddress\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:142\n\n\nindexed", 
            "title": "VoteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/#interface-voteproposaleventresult", 
            "text": "", 
            "title": "Interface: VoteProposalEventResult"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/#_avatar", 
            "text": "\u25cf  _avatar :   Address    Defined in  wrappers/iIntVoteInterface.ts:129  indexed", 
            "title": "_avatar"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/#_proposalid", 
            "text": "\u25cf  _proposalId :   Hash    Defined in  wrappers/iIntVoteInterface.ts:133  indexed", 
            "title": "_proposalId"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/#_reputation", 
            "text": "\u25cf  _reputation :   BigNumber    Defined in  wrappers/iIntVoteInterface.ts:134", 
            "title": "_reputation"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/#_vote", 
            "text": "\u25cf  _vote :   number    Defined in  wrappers/iIntVoteInterface.ts:138  The choice of vote", 
            "title": "_vote"
        }, 
        {
            "location": "/api/interfaces/VoteProposalEventResult/#_voter", 
            "text": "\u25cf  _voter :   Address    Defined in  wrappers/iIntVoteInterface.ts:142  indexed", 
            "title": "_voter"
        }, 
        {
            "location": "/api/interfaces/VoteStatusOptions/", 
            "text": "API Reference\n \n \nVoteStatusOptions\n\n\nInterface: VoteStatusOptions\n\n\nHierarchy\n\n\nProposalIdOption\n\n\n\u21b3 VoteStatusOptions\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nInherited from \nProposalIdOption\n.\nproposalId\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:60\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:56", 
            "title": "VoteStatusOptions"
        }, 
        {
            "location": "/api/interfaces/VoteStatusOptions/#interface-votestatusoptions", 
            "text": "", 
            "title": "Interface: VoteStatusOptions"
        }, 
        {
            "location": "/api/interfaces/VoteStatusOptions/#hierarchy", 
            "text": "ProposalIdOption  \u21b3 VoteStatusOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/VoteStatusOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VoteStatusOptions/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Inherited from  ProposalIdOption . proposalId  Defined in  wrappers/iIntVoteInterface.ts:60", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VoteStatusOptions/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/iIntVoteInterface.ts:56", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/VoteWithSpecifiedAmountsOptions/", 
            "text": "API Reference\n \n \nVoteWithSpecifiedAmountsOptions\n\n\nInterface: VoteWithSpecifiedAmountsOptions\n\n\nHierarchy\n\n\nProposalIdOption\n\n\n\u21b3 VoteWithSpecifiedAmountsOptions\n\n\nProperties\n\n\n\n\nproposalId\n\n\n\u25cf  proposalId\n:  \nHash\n \n\n\nInherited from \nProposalIdOption\n.\nproposalId\n\n\nDefined in \nwrappers/iIntVoteInterface.ts:60\n\n\n\n\n\n\nreputation\n\n\n\u25cf  reputation\n:  \nBigNumber\n\u23ae\nstring\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:51\n\n\n\n\n\n\nvote\n\n\n\u25cf  vote\n:  \nnumber\n \n\n\nDefined in \nwrappers/iIntVoteInterface.ts:52", 
            "title": "VoteWithSpecifiedAmountsOptions"
        }, 
        {
            "location": "/api/interfaces/VoteWithSpecifiedAmountsOptions/#interface-votewithspecifiedamountsoptions", 
            "text": "", 
            "title": "Interface: VoteWithSpecifiedAmountsOptions"
        }, 
        {
            "location": "/api/interfaces/VoteWithSpecifiedAmountsOptions/#hierarchy", 
            "text": "ProposalIdOption  \u21b3 VoteWithSpecifiedAmountsOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/VoteWithSpecifiedAmountsOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/VoteWithSpecifiedAmountsOptions/#proposalid", 
            "text": "\u25cf  proposalId :   Hash    Inherited from  ProposalIdOption . proposalId  Defined in  wrappers/iIntVoteInterface.ts:60", 
            "title": "proposalId"
        }, 
        {
            "location": "/api/interfaces/VoteWithSpecifiedAmountsOptions/#reputation", 
            "text": "\u25cf  reputation :   BigNumber \u23ae string    Defined in  wrappers/iIntVoteInterface.ts:51", 
            "title": "reputation"
        }, 
        {
            "location": "/api/interfaces/VoteWithSpecifiedAmountsOptions/#vote", 
            "text": "\u25cf  vote :   number    Defined in  wrappers/iIntVoteInterface.ts:52", 
            "title": "vote"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/", 
            "text": "API Reference\n \n \nWeb3EventFetcher\n\n\nInterface: Web3EventFetcher\n\n\nAs implemented by Web3\n\n\nProperties\n\n\n\n\nget\n\n\n\u25cf  get\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:559\n\n\nType declaration\n\n\n\u25ba(callback: \nfunction\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nfunction\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nwatch\n\n\n\u25cf  watch\n:  \nfunction\n \n\n\nDefined in \nweb3EventService.ts:560\n\n\nType declaration\n\n\n\u25ba(callback: \nfunction\n): \nvoid\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nfunction\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\nMethods\n\n\n\n\nstopWatching\n\n\n\u25ba \nstopWatching\n(callback?: \nfnVoid\n): \nvoid\n\n\nDefined in \nweb3EventService.ts:561\n\n\nParameters:\n\n\n\n\n\n\n\n\nParam\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nfnVoid\n\n\n-\n\n\n\n\n\n\n\n\nReturns:\n \nvoid\n\n\n\n\n\n\nstopWatchingAsync\n\n\n\u25ba \nstopWatchingAsync\n(): \nPromise\n.\nvoid\n\n\nDefined in \nweb3EventService.ts:562\n\n\nReturns:\n \nPromise\n.\nvoid", 
            "title": "Web3EventFetcher"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#interface-web3eventfetcher", 
            "text": "As implemented by Web3", 
            "title": "Interface: Web3EventFetcher"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#get", 
            "text": "\u25cf  get :   function    Defined in  web3EventService.ts:559", 
            "title": "get"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#type-declaration", 
            "text": "\u25ba(callback:  function ):  void  Parameters:     Param  Type  Description      callback  function  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#watch", 
            "text": "\u25cf  watch :   function    Defined in  web3EventService.ts:560", 
            "title": "watch"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#type-declaration_1", 
            "text": "\u25ba(callback:  function ):  void  Parameters:     Param  Type  Description      callback  function  -     Returns:   void", 
            "title": "Type declaration"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#stopwatching", 
            "text": "\u25ba  stopWatching (callback?:  fnVoid ):  void  Defined in  web3EventService.ts:561  Parameters:     Param  Type  Description      callback  fnVoid  -     Returns:   void", 
            "title": "stopWatching"
        }, 
        {
            "location": "/api/interfaces/Web3EventFetcher/#stopwatchingasync", 
            "text": "\u25ba  stopWatchingAsync ():  Promise . void  Defined in  web3EventService.ts:562  Returns:   Promise . void", 
            "title": "stopWatchingAsync"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/", 
            "text": "API Reference\n \n \nWrapperFilter\n\n\nInterface: WrapperFilter\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb AbsoluteVote\n\n\n\u25cf  AbsoluteVote\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:353\n\n\n\n\n\n\n\u00abOptional\u00bb ContributionReward\n\n\n\u25cf  ContributionReward\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:354\n\n\n\n\n\n\n\u00abOptional\u00bb DaoCreator\n\n\n\u25cf  DaoCreator\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:355\n\n\n\n\n\n\n\u00abOptional\u00bb GenesisProtocol\n\n\n\u25cf  GenesisProtocol\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:356\n\n\n\n\n\n\n\u00abOptional\u00bb GlobalConstraintRegistrar\n\n\n\u25cf  GlobalConstraintRegistrar\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:357\n\n\n\n\n\n\n\u00abOptional\u00bb Redeemer\n\n\n\u25cf  Redeemer\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:358\n\n\n\n\n\n\n\u00abOptional\u00bb SchemeRegistrar\n\n\n\u25cf  SchemeRegistrar\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:359\n\n\n\n\n\n\n\u00abOptional\u00bb TokenCapGC\n\n\n\u25cf  TokenCapGC\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:360\n\n\n\n\n\n\n\u00abOptional\u00bb UpgradeScheme\n\n\n\u25cf  UpgradeScheme\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:361\n\n\n\n\n\n\n\u00abOptional\u00bb VestingScheme\n\n\n\u25cf  VestingScheme\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:362\n\n\n\n\n\n\n\u00abOptional\u00bb VoteInOrganizationScheme\n\n\n\u25cf  VoteInOrganizationScheme\n:  \nboolean\n \n\n\nDefined in \nwrapperService.ts:363", 
            "title": "WrapperFilter"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#interface-wrapperfilter", 
            "text": "", 
            "title": "Interface: WrapperFilter"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-absolutevote", 
            "text": "\u25cf  AbsoluteVote :   boolean    Defined in  wrapperService.ts:353", 
            "title": "\u00abOptional\u00bb AbsoluteVote"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-contributionreward", 
            "text": "\u25cf  ContributionReward :   boolean    Defined in  wrapperService.ts:354", 
            "title": "\u00abOptional\u00bb ContributionReward"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-daocreator", 
            "text": "\u25cf  DaoCreator :   boolean    Defined in  wrapperService.ts:355", 
            "title": "\u00abOptional\u00bb DaoCreator"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-genesisprotocol", 
            "text": "\u25cf  GenesisProtocol :   boolean    Defined in  wrapperService.ts:356", 
            "title": "\u00abOptional\u00bb GenesisProtocol"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-globalconstraintregistrar", 
            "text": "\u25cf  GlobalConstraintRegistrar :   boolean    Defined in  wrapperService.ts:357", 
            "title": "\u00abOptional\u00bb GlobalConstraintRegistrar"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-redeemer", 
            "text": "\u25cf  Redeemer :   boolean    Defined in  wrapperService.ts:358", 
            "title": "\u00abOptional\u00bb Redeemer"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-schemeregistrar", 
            "text": "\u25cf  SchemeRegistrar :   boolean    Defined in  wrapperService.ts:359", 
            "title": "\u00abOptional\u00bb SchemeRegistrar"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-tokencapgc", 
            "text": "\u25cf  TokenCapGC :   boolean    Defined in  wrapperService.ts:360", 
            "title": "\u00abOptional\u00bb TokenCapGC"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-upgradescheme", 
            "text": "\u25cf  UpgradeScheme :   boolean    Defined in  wrapperService.ts:361", 
            "title": "\u00abOptional\u00bb UpgradeScheme"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-vestingscheme", 
            "text": "\u25cf  VestingScheme :   boolean    Defined in  wrapperService.ts:362", 
            "title": "\u00abOptional\u00bb VestingScheme"
        }, 
        {
            "location": "/api/interfaces/WrapperFilter/#optional-voteinorganizationscheme", 
            "text": "\u25cf  VoteInOrganizationScheme :   boolean    Defined in  wrapperService.ts:363", 
            "title": "\u00abOptional\u00bb VoteInOrganizationScheme"
        }, 
        {
            "location": "/api/interfaces/WrapperServiceInitializeOptions/", 
            "text": "API Reference\n \n \nWrapperServiceInitializeOptions\n\n\nInterface: WrapperServiceInitializeOptions\n\n\nHierarchy\n\n\nWrapperServiceInitializeOptions\n\n\n\u21b3  \nInitializeArcOptions\n\n\nProperties\n\n\n\n\n\u00abOptional\u00bb filter\n\n\n\u25cf  filter\n:  \nWrapperFilter\n \n\n\nDefined in \nwrapperService.ts:374\n\n\nOption filter to only initialize the contracts whose name is set to true. Any that are omitted or set to false here will appear as \nnull\n in WrapperService.wrappers and WrapperService.wrappersByType, and will not be available in WrapperService.wrappersByAddress. But their factories will still be available in WrapperService.factories.", 
            "title": "WrapperServiceInitializeOptions"
        }, 
        {
            "location": "/api/interfaces/WrapperServiceInitializeOptions/#interface-wrapperserviceinitializeoptions", 
            "text": "", 
            "title": "Interface: WrapperServiceInitializeOptions"
        }, 
        {
            "location": "/api/interfaces/WrapperServiceInitializeOptions/#hierarchy", 
            "text": "WrapperServiceInitializeOptions  \u21b3   InitializeArcOptions", 
            "title": "Hierarchy"
        }, 
        {
            "location": "/api/interfaces/WrapperServiceInitializeOptions/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/api/interfaces/WrapperServiceInitializeOptions/#optional-filter", 
            "text": "\u25cf  filter :   WrapperFilter    Defined in  wrapperService.ts:374  Option filter to only initialize the contracts whose name is set to true. Any that are omitted or set to false here will appear as  null  in WrapperService.wrappers and WrapperService.wrappersByType, and will not be available in WrapperService.wrappersByAddress. But their factories will still be available in WrapperService.factories.", 
            "title": "\u00abOptional\u00bb filter"
        }
    ]
}